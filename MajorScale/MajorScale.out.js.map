{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","Samples/MajorScale/MajorScale.ts","MajorScale.out.js","node_modules/lodash/index.js","scripts/Raphael.js","scripts/eve.js","src/Browser.ts","src/Guitar.ts","src/GuitarString.ts","src/GuitarStrum.ts","src/Index.ts","src/MusicNote.ts","src/Scale.ts","src/Strum.ts","src/TabDocument.ts","src/UI/BaseUI.ts","src/UI/ChordView.ts","src/UI/GuitarNeck.ts","src/UI/TabEditor.ts","src/UI/TabView.ts","src/UI/Tab/TabCell.ts","src/UI/Tab/TabColumn.ts","src/UI/UI.ts","src/Util/Array.ts","src/Util/Collections.ts","src/Util/Decorators.ts","src/Util/KeyManager.ts","src/Util/SimpleEvent.ts","src/WellKnownChords.ts"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","buildChord","name","console","time","G","noteMath","getNoteNameAsString","chordResults","scale","getFretInfo","log","div","document","createElement","body","appendChild","header","innerText","style","border","padding","paddingLeft","margin","neck","GuitarNeck","myGuitar","major","forEach","x","addStrumMarker","attr","p4","p7","strums","getStrumList","filter","rate","util","orderBy","skipCount","chordViewSize","ChordView","DefaultSize","scaleSize","strum","strumDiv","classList","add","span","toString","div2","chord","showLetters","addEventListener","clearStrum","drawStrum","clearFix","timeEnd","Guitar","GetNormalGuitar","MajorScale","window","MusicNoteName","D","A","E","C","F","B","profile","profileEnd","../../src/Browser","../../src/Index",2,"global","baseCompareAscending","value","other","valIsNull","valIsUndef","undefined","valIsReflexive","othIsNull","othIsUndef","othIsReflexive","baseFindIndex","array","predicate","fromRight","index","baseIndexOf","fromIndex","indexOfNaN","baseIsFunction","baseToString","charsLeftIndex","string","chars","indexOf","charAt","charsRightIndex","compareAscending","object","criteria","compareMultiple","orders","objCriteria","othCriteria","ordersLength","result","deburrLetter","letter","deburredLetters","escapeHtmlChar","chr","htmlEscapes","escapeStringChar","stringEscapes","isObjectLike","isSpace","charCode","replaceHolders","placeholder","resIndex","PLACEHOLDER","sortedUniq","iteratee","seen","computed","trimmedLeftIndex","charCodeAt","trimmedRightIndex","unescapeHtmlChar","htmlUnescapes","runInContext","context","lodash","isArray","LazyWrapper","LodashWrapper","hasOwnProperty","wrapperClone","baseLodash","chainAll","actions","this","__wrapped__","__actions__","__chain__","__dir__","__dropCount__","__filtered__","__iteratees__","__takeCount__","POSITIVE_INFINITY","__views__","lazyClone","iteratees","views","arrayCopy","lazyReverse","clone","lazyValue","baseWrapperValue","dir","isRight","view","getView","start","end","takeCount","nativeMin","iterLength","outer","iterIndex","data","type","LAZY_DROP_WHILE_FLAG","done","count","limit","LAZY_MAP_FLAG","LAZY_FILTER_FLAG","MapCache","__data__","mapDelete","key","has","mapGet","mapHas","mapSet","SetCache","values","hash","nativeCreate","set","Set","push","cacheIndexOf","cache","isObject","cachePush","source","Array","arrayEach","arrayEachRight","arrayEvery","arrayExtremum","comparator","exValue","current","arrayFilter","arrayMap","arrayReduce","accumulator","initFromArray","arrayReduceRight","arraySome","arraySum","assignDefaults","objectValue","sourceValue","assignOwnDefaults","assignWith","customizer","props","keys","baseAssign","baseCopy","baseAt","collection","isNil","isArr","isArrayLike","propsLength","isIndex","baseCallback","func","thisArg","argCount","bindCallback","identity","baseMatches","property","baseMatchesProperty","baseClone","isDeep","stackA","stackB","initCloneArray","tag","objToString","isFunc","funcTag","objectTag","argsTag","cloneableTags","initCloneByTag","initCloneObject","baseForOwn","subValue","baseDelay","wait","args","TypeError","FUNC_ERROR_TEXT","setTimeout","apply","baseDifference","getIndexOf","isCommon","createCache","valuesLength","valuesIndex","baseEvery","baseEach","baseExtremum","baseFill","baseFilter","baseFind","eachFunc","retKey","baseFlatten","isStrict","isArguments","valIndex","valLength","baseForIn","baseFor","keysIn","baseForOwnRight","baseForRight","baseFunctions","isFunction","baseGet","path","pathKey","toObject","baseIsEqual","isLoose","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","arrayTag","othTag","isTypedArray","objIsObj","othIsObj","isSameTag","equalByTag","objIsWrapped","othIsWrapped","equalArrays","equalObjects","pop","baseIsMatch","matchData","noCustomizer","objValue","srcValue","baseMap","getMatchData","isKey","isStrictComparable","toPath","baseSlice","last","baseMerge","isSrcArr","baseMergeDeep","mergeFunc","isPlainObject","toPlainObject","baseProperty","basePropertyDeep","basePullAt","indexes","previous","splice","baseRandom","min","max","floor","nativeRandom","baseReduce","initFromCollection","baseSome","baseSortBy","comparer","sort","baseSortByOrder","callback","getCallback","baseSum","baseUniq","isLarge","seenIndex","baseValues","baseWhile","isDrop","action","binaryIndex","retHighest","low","high","HALF_MAX_ARRAY_LENGTH","mid","binaryIndexBy","valIsNaN","isDef","isReflexive","setLow","MAX_ARRAY_INDEX","arguments","bufferClone","buffer","bufferSlice","composeArgs","partials","holders","holdersLength","argsIndex","argsLength","nativeMax","leftIndex","leftLength","composeArgsRight","holdersIndex","rightIndex","rightLength","offset","createAggregator","setter","initializer","createAssigner","assigner","restParam","sources","guard","isIterateeCall","createBaseEach","getLength","isLength","iterable","createBaseFor","keysFunc","createBindWrapper","wrapper","fn","root","Ctor","createCtorWrapper","createCompounder","words","deburr","thisBinding","baseCreate","prototype","createCurry","flag","curryFunc","arity","createWrapper","createExtremum","toIterable","createFind","createFindIndex","createFindKey","objectFunc","createFlow","funcs","thru","getFuncName","funcName","getData","isLaziable","ARY_FLAG","CURRY_FLAG","PARTIAL_FLAG","REARG_FLAG","plant","createForEach","arrayFunc","createForIn","createForOwn","createObjectMapper","isMapKeys","mapped","createPadDir","createPadding","createPartial","partialFunc","createReduce","createHybridWrapper","bitmask","partialsRight","holdersRight","argPos","ary","isCurry","isCurryRight","argsHolders","newArgPos","newArity","newsHolders","newHoldersRight","newPartials","newPartialsRight","PARTIAL_RIGHT_FLAG","isCurryBound","BIND_FLAG","BIND_KEY_FLAG","newData","setData","isBind","isBindKey","reorder","isAry","CURRY_BOUND_FLAG","CURRY_RIGHT_FLAG","strLength","nativeIsFinite","padLength","repeat","ceil","slice","createPartialWrapper","createSortedIndex","mergeData","baseSetData","arrLength","othLength","arrValue","othValue","boolTag","dateTag","errorTag","message","numberTag","regexpTag","stringTag","objProps","objLength","othProps","skipCtor","objCtor","constructor","othCtor","realNames","otherFunc","target","pairs","getNative","isNative","transforms","size","input","Object","arrayBufferTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","byteOffset","reFlags","exec","lastIndex","invokePath","reIsUint","test","MAX_SAFE_INTEGER","reIsPlainProp","reIsDeepProp","srcBitmask","newBitmask","isCombo","pickByArray","pickByCallback","oldArray","shimIsPlainObject","support","shimKeys","allowIndexes","replace","rePropName","match","number","quote","reEscapeChar","chunk","compact","drop","dropRight","dropRightWhile","dropWhile","fill","first","flatten","flattenDeep","initial","lastIndexOf","pull","remove","rest","take","takeRight","takeRightWhile","takeWhile","uniq","isSorted","unzip","group","unzipWith","xor","concat","zipObject","chain","tap","interceptor","wrapperChain","wrapperCommit","wrapperPlant","parent","wrapperReverse","reverse","wrapperToString","wrapperValue","every","findWhere","find","includes","isString","map","pluck","reject","sample","toArray","rand","shuffle","some","sortBy","sortByOrder","where","after","temp","before","debounce","options","cancel","timeoutId","clearTimeout","maxTimeoutId","trailingCall","delayed","remaining","now","stamp","isCalled","lastCalled","maxDelayed","trailing","maxWait","debounced","leading","leadingCall","memoize","resolver","memoized","get","Cache","negate","once","otherArgs","spread","throttle","debounceOptions","wrap","cloneDeep","gt","gte","isBoolean","isDate","isElement","nodeType","isEmpty","isEqual","isError","isMatch","isNaN","isNumber","reIsNative","fnToString","reIsHostCtor","isNull","isRegExp","typedArrayTags","isUndefined","lt","lte","create","properties","functions","defaultValue","invert","multiValue","isProto","skipIndexes","nested","transform","valuesIn","inRange","random","floating","noMin","noMax","parseFloat","capitalize","toUpperCase","reLatin1","reComboMark","endsWith","position","escape","reHasUnescapedHtml","reUnescapedHtml","escapeRegExp","reHasRegExpChars","reRegExpChars","pad","parseInt","radix","nativeParseInt","startsWith","template","otherOptions","settings","templateSettings","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reNoMatch","reDelimiters","RegExp","reInterpolate","reEsTemplate","evaluate","sourceURL","templateCounter","escapeValue","interpolateValue","esTemplateValue","evaluateValue","reUnescapedString","variable","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","attempt","Function","trim","trimLeft","trimRight","trunc","DEFAULT_TRUNC_LENGTH","omission","DEFAULT_TRUNC_OMISSION","separator","search","newEnd","substring","unescape","reHasEscapedHtml","reEscapedHtml","pattern","reWords","matches","constant","matchesProperty","mixin","isObj","methodNames","methodName","noConflict","_","oldDash","noop","propertyOf","range","step","times","MAX_ARRAY_LENGTH","uniqueId","prefix","id","idCounter","augend","addend","sum","noIteratee","defaults","pick","contextProps","Date","Math","Number","String","arrayProto","objectProto","stringProto","ArrayBuffer","getPrototypeOf","Uint8Array","WeakMap","Float64Array","nativeIsArray","isFinite","nativeKeys","nativeNow","nativeNumIsFinite","NEGATIVE_INFINITY","FLOAT64_BYTES_PER_ELEMENT","BYTES_PER_ELEMENT","metaMap","valueOf","y","dom","createDocumentFragment","reEscape","reEvaluate","baseEachRight","byteLength","floatLength","HOT_SPAN","HOT_COUNT","difference","findIndex","findLastIndex","intersection","arrays","othIndex","caches","pullAt","sortedIndex","sortedLastIndex","union","without","zip","zipWith","at","countBy","findLast","forEachRight","groupBy","indexBy","invoke","isProp","partition","reduce","reduceRight","sortByAll","getTime","bind","bindAll","bindKey","curry","curryRight","defer","delay","flow","flowRight","partial","partialRight","rearg","objProto","assign","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","mapKeys","mapValues","merge","omit","camelCase","word","toLowerCase","kebabCase","padLeft","padRight","whitespace","reHasHexPrefix","snakeCase","startCase","method","methodOf","backflow","collect","compose","each","eachRight","extend","methods","select","tail","unique","all","any","contains","eq","detect","foldl","foldr","head","include","inject","VERSION","isFilter","isDropWhile","filtered","whileName","takeName","dropName","operationName","createCallback","lodashFunc","checkIteratee","retUnwrapped","isHybrid","isLazy","useLazy","onlyLazy","chainName","names","commit","run","toJSON","mapTag","setTag","weakMapTag","upper","lower","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","&","<",">","\"","'","`","&amp;","&lt;","&gt;","&quot;","&#39;","&#96;","objectTypes","function","\\","\n","\r"," "," ","freeExports","freeModule","freeGlobal","freeSelf","self","freeWindow","moduleExports","define","amd",3,"glob","current_event","stop","version","wildcard","fun","numsort","b","events","eve","scope","oldstop","listeners","z","indexed","queue","out","ce","ii","zIndex","_events","item","items","k","j","jj","nes","split","es","on","event","attrs","nt","subname","nts","off","unbind","cur","f2","factory","R","is","loaded","_engine","nu","obj","res","repush","cacher","postprocessor","newf","arg","join","shift","clrToString","hex","catmullRom2bezier","crp","d","iLen","p","base3","p1","p2","p3","t1","t2","bezlen","x1","y1","x2","y2","x3","y3","x4","y4","z2","Tvalues","Cvalues","ct","xbase","ybase","comb","math","sqrt","getTatLen","ll","abs","intersect","mmax","mmin","nx","ny","denominator","px","py","px2","toFixed","py2","interHelper","bez1","bez2","justCount","bbox1","bezierBBox","bbox2","isBBoxIntersect","l1","l2","n1","n2","dots1","dots2","xy","findDotsAtSegment","di","di1","dj","dj1","ci","cj","interPathHelper","path1","path2","_path2curve","x1m","y1m","x2m","y2m","pi","pj","intr","kk","segment1","segment2","Matrix","c","x_y_w_h","S","width","height","CubicBezierAtTime","p1x","p1y","p2x","p2y","duration","sampleCurveX","ax","bx","cx","solve","epsilon","solveCurveX","ay","by","cy","t0","d2","Animation","anim","ms","percents","newAnim","toFloat","sortByNumber","top","runAnimation","element","percent","status","totalOrigin","params","isInAnim","isInAnimSet","next","prev","timestamp","from","to","diff","animationElements","el","initstatus","availableAnimAttrs","paper","customAttributes","availableAttrs","getRGB","toColour","g","pathes","path2curve","equaliseTransform","real","m","matrix","to2","getBBox","extractTransform","Str","from2","easing","easyeasy","easing_formulas","bezierrg","curve","pipe","del","origin","animation","requestAnimFrame","stopAnimation","paperproto","elements","circle","rect","ellipse","text","image","formatrg","doc","win","oldRaphael","was","Raphael","Paper","ca","supportsTouch","DocumentTouch","touchMap","mousedown","mousemove","mouseup","lowerCase","pow","PI","objectToString","colourRegExp","_ISURL","isnan","NaN","Infinity","-Infinity","round","toInt","upperCase","_availableAttrs","arrow-end","arrow-start","blur","clip-rect","cursor","fill-opacity","font","font-family","font-size","font-style","font-weight","gradient","href","letter-spacing","opacity","rx","ry","src","stroke","stroke-dasharray","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-anchor","title","_availableAnimAttrs","commaSpaces","hsrg","hs","rg","p2s","pathCommand","tCommand","pathValues","eldata","_radial_gradient","rectPath","_rectPath","w","h","ellipsePath","getPath","_getPath","bbox","_getBBox","mapPath","pathi","_g","SVGAngle","implementation","hasFeature","innerHTML","firstChild","behavior","adj","svg","vml","_Paper","_id","_oid","angle","atan2","rad","deg","snapTo","tolerance","rem","createUUID","uuidRegEx","uuidReplacer","v","setWindow","newwin","initWin","toHex","color","bod","docum","ActiveXObject","write","close","createPopup","createTextRange","queryCommandValue","display","defaultView","getComputedStyle","getPropertyValue","hsbtoString","hsltoString","rgbtoString","prepareRGB","clr","packageRGB","rgb","hsb2rgb","hsl2rgb","rgb2hsl","rgb2hsb","X","H","V","L","M","_path2string","_preload","img","cssText","onload","removeChild","onerror","colour","error","red","green","blue","hsb","hsl","getColor","reset","parsePathString","pathString","pth","paths","arr","pathClone","paramCounts","q","parseTransformString","TString","ps","sleep","c1x","c1y","c2x","c2y","t13","t12","t3","mx","my","alpha","curveDim","isPointInsideBBox","pathIntersection","pathIntersectionNumber","isPointInsidePath","pathBBox","_removedFactory","methodname","pathDimensions","Y","dim","xmin","ymin","xmax","ymax","bb","pathArray","pathToRelative","_pathToRelative","rel","pa","len","pathToAbsolute","_pathToAbsolute","crz","dots","l2c","q2c","_13","_23","a2c","large_arc_flag","sweep_flag","recursive","_120","rotate","cos","sin","f1","rx2","ry2","asin","df","f2old","x2old","y2old","c1","s1","c2","s2","tan","hx","hy","m1","m2","m3","m4","newres","findDotAtSegment","dot","qx","qy","attrs2","processPath","pcom","tq","T","Q","fixArc","pp","pcoms1","pcoms2","fixM","a1","a2","pfirst","seg","seg2","seglen","seg2len","tear","_parseDots","par","_tear","bottom","toMatrix","_tofront","_toback","_insertafter","el2","_insertbefore","transformPath","_extractTransform","tstr","tdata","dx","dy","sx","sy","tlen","command","absolute","inver","translate","dirtyT","getEmpty","_equaliseTransform","tt1","tt2","maxlength","_getContainer","container","getElementById","tagName","pixelWidth","offsetWidth","pixelHeight","offsetHeight","matrixproto","norm","normalize","mag","me","fromCharCode","toFilter","row","scalex","shear","scaley","acos","isSimple","isSuperSimple","noRotation","toTransformString","shorter","preventDefault","returnValue","preventTouch","originalEvent","stopPropagation","cancelBubble","stopTouch","getEventPosition","scrollY","documentElement","scrollTop","scrollX","scrollLeft","clientX","clientY","addEvent","pos","_f","olde","targetTouches","removeEventListener","attachEvent","detacher","detachEvent","drag","dragMove","dragi","touches","touch","identifier","_drag","node","nextSibling","parentNode","opera","getElementByPoint","insertBefore","move_scope","dragUp","unmousemove","unmouseup","end_scope","start_scope","elproto","eventName","shape","removeData","hover","f_in","f_out","scope_in","scope_out","mouseover","mouseout","unhover","unmouseover","unmouseout","draggable","onmove","onstart","onend","onDragOver","undrag","unmousedown","__set__","format","itemsArray","setStart","setFinish","getSize","canvas","setSize","setViewBox","fit","raphael","getOffset","elem","box","getBoundingClientRect","ownerDocument","docElem","clientTop","clientLeft","pageYOffset","left","pageXOffset","elementFromPoint","so","sr","createSVGRect","hits","getIntersectionList","getById","raphaelid","getElementsByBBox","bot","getElementsByPoint","isPointInside","rp","realPath","isWithoutTransform","removed","dirty","bboxwt","glow","offsetx","offsety","getPointAtSegmentLength","getLengthFactory","istotal","subpath","onlystart","point","sp","subpaths","getTotalLength","getPointAtLength","getSubpathsAtLength","getSubpath","ef","linear","<>","backIn","backOut","elastic","bounce","easeIn","easeOut","easeInOut","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","Now","paused","that","init","upto255","animateWith","onAnimation","json",100,"lastKey","animate","setTime","pause","resume","setproto","clear","insertion","todel","arglen","exclude","collector","insertAfter","glowConfig","ret","shape2","index2","registerFont","face","fonts","fontcopy","glyphs","family","prop","glyph","getFont","weight","stretch","normal","bold","lighter","bolder","fontName","thefont","print","letter_spacing","line_spacing","letters","notfirst","lineHeight","shifty","descent","curr","token","str","fullfill","tokenRegex","objNotationRegex","replacer","quotedName","ninja","st","isLoaded","readyState","xlink","markers","block","classic","diamond","open","oval","markerCounter","$","setAttributeNS","setAttribute","createElementNS","webkitTapHighlightColor","addGradientFill","fx","fy","SVG","_fx","_fy","vector","defs","gradientTransform","stop-color","location","fillOpacity","updatePosition","patternTransform","addArrow","isEnd","refX","se","arrows","endPath","endMarker","startPath","startMarker","pathId","markerId","use","marker","getElementsByTagName","markerHeight","markerWidth","orient","refY","xlink:href","delta","startdx","enddx","dasharray","-",".","-.","-..",". ","- ","--","- .","--.","--..","addDashes","butt","square","dashes","setFillAndStroke","vis","visibility","att","nodeValue","val","createTextNode","pn","hl","clip","rc","clip-path","getAttribute","startString","endString","isURL","ig","patternUnits","stops","stop-opacity","cssrule","tuneText","fontSize","tspan","texts","tspans","dif","getRealNode","Element","sw","hide","show","containerStyle","canvasHidden","parentElement","clientWidth","clientHeight","def","subkey","toFront","toBack","afterNode","beforeNode","fltr","stdDeviation","_blur","removeAttribute","preserveAspectRatio","_viewBox","con","isFloating","cnvs","css","xmlns","xmlns:xlink","_left","_top","renderfix","vb","paperSize","aspectRatio","_vbSize","viewBox","getScreenCTM","createSVGMatrix","desc","fillString","Z","bites","blurregexp","cssDot","zoom","pathTypes","ovalTypes","path2vml","total","vals","isMove","compensation","setCoords","fillpos","flip","kx","ky","coordsize","rotation","coordorigin","fillsize","newpath","isOval","clipRect","dstyle","textpath","textpathStyle","fontFamily","fontWeight","fontStyle","newfill","createNode","newstroke","strokeColor","joinstyle","miterlimit","endcap","dashstyle","brect","W","right","dirtyattrs","dd","bbx","fxfy","color2","clrs","colors","focus","focussize","focusposition","oldt","vbs","_viewBoxShift","vbt","skew","isGrad","isPatt","bbt","auxGetBBox","runtimeStyle","Path","textpathok","cs","styleSheets","createStyleSheet","addRule","namespaces","rvml",4,"comaseparator","firstDefined","lastDefined","objtos","ar","sep","exist",5,"./Index",6,"__decorate","decorators","Reflect","decorate","GuitarString_1","Decorators_1","GuitarStrum_1","strings","frets","defineProperty","enumerable","configurable","getFretsWithNote","noteName","_this","results","getStrum","positions","stringCount","GuitarStrum","fromObject","GuitarString","getGuitarStrings","hasFromObject","./GuitarString","./GuitarStrum","./Util/Decorators",7,"idx","_i","note","MusicNote_1","MusicNotes","fullName","_index","_note","frequencyAtFret","fret","getNote","frequency","noteAtFret","fretCount","nameId","stringIndex","fretIndex","./MusicNote",8,"__extends","__","Strum_1","_super","guitar","_gutiar","getFullNames","_a","getNames","Strum","./Strum",9,"__export","./Guitar","./Scale","./TabDocument","./UI/UI","./Util/Array","./WellKnownChords",10,"stringNoteNames","getFrequencyOfNoteA4","getNoteNameFromID","getNoteDiff","octive","getOctiveFromId","noteID","nn","sname",11,"Array_1","Scale","findStrings","info","majors","findAllPossibleCombos","p7Combos","majorFic","StrumBuilder","addArray","fic","getChord","list","isValid","fi",12,"getAverage","arry","previousValue","currentValue","_positions","maxFret","minFret","average","firstUsedStringIndex","lastUsedStringIndex","maxFretDistence","stringsUsed","New","fretPositions",13,"Guitar_1","Collections_1","TabPartType","TabDocument","parts","LinkedList","addStrum","ts","TabStrum","addPart","part","gutar","td","./Util/Collections",14,"lx","ly","BaseUI","ele","appendTo",15,"BaseUI_1","_showLetters","_size","draw","_drawParts","stringSeperation","fretSeperation","circleRadius","_drawStrings","_drawFrets","_drawFingerPositions","_drawLetters","_resize","lastStringX","lastFretY","stringX","line","fretY","strIdx","fretIdx","fretYMiddle","./BaseUI",16,"firstStringHeight","startStringLine","opacityToggleTime","fingerPositionRadius","_maxFrets","_strumElements","_noteLetters","_noteLettersSet","noteLettersDrawn","drawParts","getStringY","getLastStringY","getFretX","getLastFretX","getStringLength","getPointOfStringFret","getFretHorizontalCenter","drawDoubleFretLine","drawStrings","drawFrets","drawFretBubbles","drawNoteLetters","resize","stringLength","lastString","applyStyles","single","double","hideAllNoteLetters","nls","showAllNoteLetters","sIdx","NoteLetterElement","added","removeBar","barFret","setMaxFrets","GuitarStringMath","getFretLengths","bg","click","../Strum",17,"KeyManager_1","SimpleEvent_1","TabView_1","TabEditor","_onChange","SimpleEvent","KeyManager","bindKeys","_allowSelect","selectUp","selectDown","selectedCell","setText","appendText","up","down","setUpEvents","TabView","../Util/KeyManager","../Util/SimpleEvent","./TabView",18,"lpad","substr","TabColumn_1","TabDocument_1","noteSpeperation","_columnAdded","columns","_document","onclick","_drawAllParts","hasSelectedCell","cells","isSelected","getStringStartX","_drawStringLines","_drawStringLetters","_drawStringVertLines","_buildTabColumns","_calculateSize","OpenNoteName","_addColumn","trigger","ns","partCount","colIndex","column","TabColumn","elementAtIndex","cell","defineCell","topCell","rightX","unselectAll","col","getText","lines","longest","lines2","../TabDocument","./Tab/TabColumn",19,"TabCell","textElement","backgroundElement","clickElement","selectElement","createElements","tabView","createClickElement","createSelectElement","_bindEvents","allowSelect","onClick","diffNote","diffString","recalcBackground","unselect","getLeft","getRight","../BaseUI",20,"TabCell_1","tv","tc","./TabCell",21,"./ChordView","./GuitarNeck","./TabEditor",22,"lodash_1","got",23,"defaultCompare","defaultEquals","defaultToString","makeString","toret","reverseCompareFunction","compareFunction","compareToEquals","_hasOwnProperty","equalsFunction","equals","freq","array1","array2","copy","swap","lenght","firstNode","lastNode","nElements","newNode","nodeAtIndex","equalsF","currentNode","eqF","equalsAux","removeElementAtIndex","Dictionary","toStrFunction","table","toStr","getValue","pair","setValue","previousElement","containsKey","LinkedDictionaryPair","unlink","LinkedDictionary","appendToTail","entry","getLinkedDictionaryPair","oldPair","newPair","existingPair","crawlNode","MultiDictionary","valuesEqualsFunction","allowDuplicateValues","dict","allowDuplicate","Heap","compare","leftChildIndex","nodeIndex","rightChildIndex","parentIndex","minIndex","leftChild","rightChild","siftUp","siftDown","peek","removeRoot","equF","Stack","Queue","enqueue","dequeue","PriorityQueue","heap","toStringFunction","dictionary","otherSet","isSubsetOf","isSub","Bag","toStrF","nCopies","copies","vl","toSet","BSTree","insertNode","searchNode","removeNode","inorderTraversal","inorderTraversalAux","preorderTraversal","preorderTraversalAux","postorderTraversal","postorderTraversalAux","levelTraversal","levelTraversalAux","minimum","minimumAux","maximum","maximumAux","heightAux","cmp","leftCh","rightCh","transplant","signal",24,25,"_addEvent","_characterFromEvent","character","which","shiftKey","_MAP","_KEYCODE_MAP","_modifiersMatch","modifiers1","modifiers2","_eventModifiers","modifiers","altKey","ctrlKey","metaKey","_preventDefault","_stopPropagation","_isModifier","_getReverseMap","_REVERSE_MAP","_pickBestAction","_keysFromString","combination","_getKeyInfo","_SPECIAL_ALIASES","_SHIFT_MAP","_belongsTo","ancestor",27,32,33,34,35,36,37,38,39,40,45,46,91,93,224,106,107,109,110,111,186,187,188,189,190,191,192,219,220,221,222,"~","!","@","#","%","^","*","(",")","+",":","?","|","option","return","plus","mod","navigator","platform","_callbacks","_directMap","_sequenceLevels","_ignoreNextKeyup","_ignoreNextKeypress","_nextExpectedAction","_globalCallbacks","tabIndex","_handleKeyEvent","_resetSequences","doNotReset","activeSequences","_getMatches","sequenceName","level","seq","deleteCombo","combo","deleteSequence","_fireCallback","sequence","stopCallback","srcElement","_handleKey","callbacks","maxLevel","processedSequenceCallback","ignoreThisKeypress","keyCode","handleKey","_resetSequenceTimer","_resetTimer","_bindSequence","_increaseSequence","nextAction","_callbackAndReset","isFinal","wrappedCallback","_bindSingle","_bindMultiple","combinations","className","isContentEditable","bindGlobal","dispose","unpause",26,"_idx","_key","subscribers","onError","_b","WellKnownChords","standardGuitar"],"mappings":"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","file":"MajorScale.out.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/// <reference path=\"../../typings/raphael/raphael.d.ts\"/>\r\n\r\nimport * as G from '../../src/Index';\r\nimport '../../src/Browser';\r\n\r\n\r\n\r\nvar myGuitar = G.Guitar.GetNormalGuitar();\r\n\r\nvar scale = new G.MajorScale(myGuitar);\r\n\r\n\r\nwindow['scale'] = scale;\r\nconsole.log(scale);\r\n\r\n\r\nfunction buildChord(name: G.MusicNoteName) {\r\n\r\n    console.time(G.noteMath.getNoteNameAsString(name));\r\n    let chordResults = scale.getFretInfo(name);\r\n    console.log(chordResults);\r\n\r\n    let div = document.createElement('div');\r\n    document.body.appendChild(div);\r\n\r\n    let header = document.createElement('h1');\r\n    header.innerText = G.noteMath.getNoteNameAsString(name);\r\n    div.style.border = 'solid 1px';\r\n    div.appendChild(header);\r\n\r\n    header.style.padding = '0px';\r\n    header.style.paddingLeft = '30px';\r\n    header.style.margin = '0px';\r\n\r\n    var neck = new G.GuitarNeck(myGuitar, div);\r\n    chordResults.major.forEach(x=> neck.addStrumMarker(x).attr('opacity', .8));\r\n    chordResults.p4.forEach(x=> neck.addStrumMarker(x).attr('fill', 'blue').attr('opacity', .60));\r\n    chordResults.p7.forEach(x=> neck.addStrumMarker(x).attr('fill', 'green').attr('opacity', .33));\r\n\r\n    let strums = scale.getStrumList(name);\r\n\r\n    strums = strums.filter(x=> x.rate() > 0);\r\n    strums = G.util.orderBy(strums, x=> 0 - x.rate());\r\n\r\n    //Comment out below to include chords that skip string.\r\n    strums = strums.filter(x=> x.skipCount == 0);\r\n\r\n\r\n\r\n    let chordViewSize = G.ChordView.DefaultSize;\r\n    chordViewSize = G.ChordView.scaleSize(1.4);\r\n\r\n    strums.forEach(strum=> {\r\n        let strumDiv = document.createElement('div');\r\n        strumDiv.classList.add('strumDiv');\r\n        let span = document.createElement('span');\r\n        span.innerText = strum.rate().toString();\r\n        div.appendChild(strumDiv);\r\n\r\n        let div2 = document.createElement('div');\r\n        strumDiv.appendChild(div2);\r\n        let chord = new G.ChordView(strum, div2,chordViewSize);\r\n\r\n        chord.showLetters();\r\n        strumDiv.addEventListener('click', () => {\r\n            neck.clearStrum();\r\n            neck.drawStrum(strum);\r\n        });\r\n\r\n        strumDiv.appendChild(span);\r\n\r\n    });\r\n\r\n    var clearFix = document.createElement('div');\r\n    clearFix.classList.add('clearfix');\r\n    div.appendChild(clearFix);\r\n    console.timeEnd(G.noteMath.getNoteNameAsString(name));\r\n}\r\n\r\nconsole.log('buildChord');\r\n\r\nbuildChord(G.MusicNoteName.D);\r\nbuildChord(G.MusicNoteName.A);\r\nbuildChord(G.MusicNoteName.G);\r\nbuildChord(G.MusicNoteName.E);\r\n\r\nbuildChord(G.MusicNoteName.C);\r\nbuildChord(G.MusicNoteName.F);\r\nbuildChord(G.MusicNoteName.B);\r\n\r\nwindow['buildChord'] = buildChord;\r\nwindow['buildChordTest'] = () => {\r\n    console.profile();\r\n    buildChord(G.MusicNoteName.D);\r\n    console.profileEnd();\r\n}\r\n\r\n\r\n//\r\n",null,"/**\n * @license\n * lodash 3.9.3 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern -d -o ./index.js`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '3.9.3';\n\n  /** Used to compose bitmasks for wrapper metadata. */\n  var BIND_FLAG = 1,\n      BIND_KEY_FLAG = 2,\n      CURRY_BOUND_FLAG = 4,\n      CURRY_FLAG = 8,\n      CURRY_RIGHT_FLAG = 16,\n      PARTIAL_FLAG = 32,\n      PARTIAL_RIGHT_FLAG = 64,\n      ARY_FLAG = 128,\n      REARG_FLAG = 256;\n\n  /** Used as default options for `_.trunc`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect when a function becomes hot. */\n  var HOT_COUNT = 150,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_DROP_WHILE_FLAG = 0,\n      LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2;\n\n  /** Used as the `TypeError` message for \"Functions\" methods. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      weakMapTag = '[object WeakMap]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n      reUnescapedHtml = /[&<>\"'`]/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;\n\n  /**\n   * Used to match `RegExp` [special characters](http://www.regular-expressions.info/characters.html#special).\n   * In addition to special characters the forward slash is escaped to allow for\n   * easier `eval` use and `Function` compilation.\n   */\n  var reRegExpChars = /[.*+?^${}()|[\\]\\/\\\\]/g,\n      reHasRegExpChars = RegExp(reRegExpChars.source);\n\n  /** Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks). */\n  var reComboMark = /[\\u0300-\\u036f\\ufe20-\\ufe23]/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /** Used to match [ES template delimiters](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-template-literal-lexical-components). */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect hexadecimal string values. */\n  var reHasHexPrefix = /^0[xX]/;\n\n  /** Used to detect host constructors (Safari > 5). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^\\d+$/;\n\n  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to match words to create compound words. */\n  var reWords = (function() {\n    var upper = '[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]',\n        lower = '[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+';\n\n    return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');\n  }());\n\n  /** Used to detect and test for whitespace. */\n  var whitespace = (\n    // Basic whitespace characters.\n    ' \\t\\x0b\\f\\xa0\\ufeff' +\n\n    // Line terminators.\n    '\\n\\r\\u2028\\u2029' +\n\n    // Unicode category \"Zs\" space separators.\n    '\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000'\n  );\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'ArrayBuffer', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Math', 'Number',\n    'Object', 'RegExp', 'Set', 'String', '_', 'clearTimeout', 'document',\n    'isFinite', 'parseFloat', 'parseInt', 'setTimeout', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap', 'window'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dateTag] = typedArrayTags[errorTag] =\n  typedArrayTags[funcTag] = typedArrayTags[mapTag] =\n  typedArrayTags[numberTag] = typedArrayTags[objectTag] =\n  typedArrayTags[regexpTag] = typedArrayTags[setTag] =\n  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\n  cloneableTags[dateTag] = cloneableTags[float32Tag] =\n  cloneableTags[float64Tag] = cloneableTags[int8Tag] =\n  cloneableTags[int16Tag] = cloneableTags[int32Tag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[stringTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[mapTag] = cloneableTags[setTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used as an internal `_.debounce` options object by `_.throttle`. */\n  var debounceOptions = {\n    'leading': false,\n    'maxWait': 0,\n    'trailing': false\n  };\n\n  /** Used to map latin-1 supplementary letters to basic latin letters. */\n  var deburredLetters = {\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '`': '&#96;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\",\n    '&#96;': '`'\n  };\n\n  /** Used to determine if values are of the language type `Object`. */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Detect free variable `exports`. */\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global && global.Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = objectTypes[typeof self] && self && self.Object && self;\n\n  /** Detect free variable `window`. */\n  var freeWindow = objectTypes[typeof window] && window && window.Object && window;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  /**\n   * Used as a reference to the global object.\n   *\n   * The `this` value is used if it's the global object to avoid Greasemonkey's\n   * restricted `window` object, otherwise the `window` object is used.\n   */\n  var root = freeGlobal || ((freeWindow !== (this && this.window)) && freeWindow) || freeSelf || this;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The base implementation of `compareAscending` which compares values and\n   * sorts them in ascending order without guaranteeing a stable sort.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {number} Returns the sort order indicator for `value`.\n   */\n  function baseCompareAscending(value, other) {\n    if (value !== other) {\n      var valIsNull = value === null,\n          valIsUndef = value === undefined,\n          valIsReflexive = value === value;\n\n      var othIsNull = other === null,\n          othIsUndef = other === undefined,\n          othIsReflexive = other === other;\n\n      if ((value > other && !othIsNull) || !valIsReflexive ||\n          (valIsNull && !othIsUndef && othIsReflexive) ||\n          (valIsUndef && othIsReflexive)) {\n        return 1;\n      }\n      if ((value < other && !valIsNull) || !othIsReflexive ||\n          (othIsNull && !valIsUndef && valIsReflexive) ||\n          (othIsUndef && valIsReflexive)) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromRight) {\n    var length = array.length,\n        index = fromRight ? length : -1;\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without support for binary searches.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    if (value !== value) {\n      return indexOfNaN(array, fromIndex);\n    }\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isFunction` without support for environments\n   * with incorrect `typeof` results.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n   */\n  function baseIsFunction(value) {\n    // Avoid a Chakra JIT bug in compatibility modes of IE 11.\n    // See https://github.com/jashkenas/underscore/issues/1621 for more details.\n    return typeof value == 'function' || false;\n  }\n\n  /**\n   * Converts `value` to a string if it's not one. An empty string is returned\n   * for `null` or `undefined` values.\n   *\n   * @private\n   * @param {*} value The value to process.\n   * @returns {string} Returns the string.\n   */\n  function baseToString(value) {\n    if (typeof value == 'string') {\n      return value;\n    }\n    return value == null ? '' : (value + '');\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the first character not found in `chars`.\n   */\n  function charsLeftIndex(string, chars) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the last character not found in `chars`.\n   */\n  function charsRightIndex(string, chars) {\n    var index = string.length;\n\n    while (index-- && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.sortBy` to compare transformed elements of a collection and stable\n   * sort them in ascending order.\n   *\n   * @private\n   * @param {Object} object The object to compare to `other`.\n   * @param {Object} other The object to compare to `object`.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareAscending(object, other) {\n    return baseCompareAscending(object.criteria, other.criteria) || (object.index - other.index);\n  }\n\n  /**\n   * Used by `_.sortByOrder` to compare multiple properties of each element\n   * in a collection and stable sort them in the following order:\n   *\n   * If `orders` is unspecified, sort in ascending order for all properties.\n   * Otherwise, for each property, sort in ascending order if its corresponding value in\n   * orders is true, and descending order if false.\n   *\n   * @private\n   * @param {Object} object The object to compare to `other`.\n   * @param {Object} other The object to compare to `object`.\n   * @param {boolean[]} orders The order to sort by for each property.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareMultiple(object, other, orders) {\n    var index = -1,\n        objCriteria = object.criteria,\n        othCriteria = other.criteria,\n        length = objCriteria.length,\n        ordersLength = orders.length;\n\n    while (++index < length) {\n      var result = baseCompareAscending(objCriteria[index], othCriteria[index]);\n      if (result) {\n        if (index >= ordersLength) {\n          return result;\n        }\n        return result * (orders[index] ? 1 : -1);\n      }\n    }\n    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n    // that causes it, under certain circumstances, to provide the same value for\n    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n    // for more details.\n    //\n    // This also ensures a stable sort in V8 and other engines.\n    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n    return object.index - other.index;\n  }\n\n  /**\n   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  function deburrLetter(letter) {\n    return deburredLetters[letter];\n  }\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeHtmlChar(chr) {\n    return htmlEscapes[chr];\n  }\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled\n   * string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n   */\n  function indexOfNaN(array, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 0 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var other = array[index];\n      if (other !== other) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Checks if `value` is object-like.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   */\n  function isObjectLike(value) {\n    return !!value && typeof value == 'object';\n  }\n\n  /**\n   * Used by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a\n   * character code is whitespace.\n   *\n   * @private\n   * @param {number} charCode The character code to inspect.\n   * @returns {boolean} Returns `true` if `charCode` is whitespace, else `false`.\n   */\n  function isSpace(charCode) {\n    return ((charCode <= 160 && (charCode >= 9 && charCode <= 13) || charCode == 32 || charCode == 160) || charCode == 5760 || charCode == 6158 ||\n      (charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279)));\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      if (array[index] === placeholder) {\n        array[index] = PLACEHOLDER;\n        result[++resIndex] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * An implementation of `_.uniq` optimized for sorted arrays without support\n   * for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} [iteratee] The function invoked per iteration.\n   * @returns {Array} Returns the new duplicate-value-free array.\n   */\n  function sortedUniq(array, iteratee) {\n    var seen,\n        index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index],\n          computed = iteratee ? iteratee(value, index, array) : value;\n\n      if (!index || seen !== computed) {\n        seen = computed;\n        result[++resIndex] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the first non-whitespace character.\n   */\n  function trimmedLeftIndex(string) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n  function trimmedRightIndex(string) {\n    var index = string.length;\n\n    while (index-- && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  function unescapeHtmlChar(chr) {\n    return htmlUnescapes[chr];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the given `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Utility\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // using `context` to mock `Date#getTime` use in `_.now`\n   * var mock = _.runInContext({\n   *   'Date': function() {\n   *     return { 'getTime': getTimeMock };\n   *   }\n   * });\n   *\n   * // or creating a suped-up `defer` in Node.js\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  function runInContext(context) {\n    // Avoid issues with some ES3 environments that attempt to use values, named\n    // after built-in constructors like `Object`, for the creation of literals.\n    // ES5 clears this up by stating that literals must use built-in constructors.\n    // See https://es5.github.io/#x11.1.5 for more details.\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\n    /** Native constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Number = context.Number,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for native method references. */\n    var arrayProto = Array.prototype,\n        objectProto = Object.prototype,\n        stringProto = String.prototype;\n\n    /** Used to detect DOM support. */\n    var document = (document = context.window) ? document.document : null;\n\n    /** Used to resolve the decompiled source of functions. */\n    var fnToString = Function.prototype.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /**\n     * Used to resolve the [`toStringTag`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n     * of values.\n     */\n    var objToString = objectProto.toString;\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = context._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      escapeRegExp(fnToString.call(hasOwnProperty))\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Native method references. */\n    var ArrayBuffer = getNative(context, 'ArrayBuffer'),\n        bufferSlice = getNative(ArrayBuffer && new ArrayBuffer(0), 'slice'),\n        ceil = Math.ceil,\n        clearTimeout = context.clearTimeout,\n        floor = Math.floor,\n        getPrototypeOf = getNative(Object, 'getPrototypeOf'),\n        parseFloat = context.parseFloat,\n        push = arrayProto.push,\n        Set = getNative(context, 'Set'),\n        setTimeout = context.setTimeout,\n        splice = arrayProto.splice,\n        Uint8Array = getNative(context, 'Uint8Array'),\n        WeakMap = getNative(context, 'WeakMap');\n\n    /** Used to clone array buffers. */\n    var Float64Array = (function() {\n      // Safari 5 errors when using an array buffer to initialize a typed array\n      // where the array buffer's `byteLength` is not a multiple of the typed\n      // array's `BYTES_PER_ELEMENT`.\n      try {\n        var func = getNative(context, 'Float64Array'),\n            result = new func(new ArrayBuffer(10), 0, 1) && func;\n      } catch(e) {}\n      return result || null;\n    }());\n\n    /* Native method references for those with the same name as other `lodash` methods. */\n    var nativeCreate = getNative(Object, 'create'),\n        nativeIsArray = getNative(Array, 'isArray'),\n        nativeIsFinite = context.isFinite,\n        nativeKeys = getNative(Object, 'keys'),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = getNative(Date, 'now'),\n        nativeNumIsFinite = getNative(Number, 'isFinite'),\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random;\n\n    /** Used as references for `-Infinity` and `Infinity`. */\n    var NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY,\n        POSITIVE_INFINITY = Number.POSITIVE_INFINITY;\n\n    /** Used as references for the maximum length and index of an array. */\n    var MAX_ARRAY_LENGTH = 4294967295,\n        MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n    /** Used as the size, in bytes, of each `Float64Array` element. */\n    var FLOAT64_BYTES_PER_ELEMENT = Float64Array ? Float64Array.BYTES_PER_ELEMENT : 0;\n\n    /**\n     * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n     * of an array-like value.\n     */\n    var MAX_SAFE_INTEGER = 9007199254740991;\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit chaining.\n     * Methods that operate on and return arrays, collections, and functions can\n     * be chained together. Methods that return a boolean or single value will\n     * automatically end the chain returning the unwrapped value. Explicit chaining\n     * may be enabled using `_.chain`. The execution of chained methods is lazy,\n     * that is, execution is deferred until `_#value` is implicitly or explicitly\n     * called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n     * fusion is an optimization that merges iteratees to avoid creating intermediate\n     * arrays and reduce the number of iteratee executions.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`,\n     * `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`,\n     * `first`, `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`,\n     * `slice`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `toArray`,\n     * and `where`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n     * `callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, `constant`,\n     * `countBy`, `create`, `curry`, `debounce`, `defaults`, `defer`, `delay`,\n     * `difference`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `fill`,\n     * `filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`, `forEach`,\n     * `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `functions`,\n     * `groupBy`, `indexBy`, `initial`, `intersection`, `invert`, `invoke`, `keys`,\n     * `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `method`, `methodOf`, `mixin`, `negate`, `omit`, `once`,\n     * `pairs`, `partial`, `partialRight`, `partition`, `pick`, `plant`, `pluck`,\n     * `property`, `propertyOf`, `pull`, `pullAt`, `push`, `range`, `rearg`,\n     * `reject`, `remove`, `rest`, `restParam`, `reverse`, `set`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `sortByAll`, `sortByOrder`, `splice`, `spread`,\n     * `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `tap`, `throttle`,\n     * `thru`, `times`, `toArray`, `toPlainObject`, `transform`, `union`, `uniq`,\n     * `unshift`, `unzip`, `unzipWith`, `values`, `valuesIn`, `where`, `without`,\n     * `wrap`, `xor`, `zip`, `zipObject`, `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `clone`, `cloneDeep`, `deburr`,\n     * `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`,\n     * `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`, `get`,\n     * `gt`, `gte`, `has`, `identity`, `includes`, `indexOf`, `inRange`, `isArguments`,\n     * `isArray`, `isBoolean`, `isDate`, `isElement`, `isEmpty`, `isEqual`, `isError`,\n     * `isFinite` `isFunction`, `isMatch`, `isNative`, `isNaN`, `isNull`, `isNumber`,\n     * `isObject`, `isPlainObject`, `isRegExp`, `isString`, `isUndefined`,\n     * `isTypedArray`, `join`, `kebabCase`, `last`, `lastIndexOf`, `lt`, `lte`,\n     * `max`, `min`, `noConflict`, `noop`, `now`, `pad`, `padLeft`, `padRight`,\n     * `parseInt`, `pop`, `random`, `reduce`, `reduceRight`, `repeat`, `result`,\n     * `runInContext`, `shift`, `size`, `snakeCase`, `some`, `sortedIndex`,\n     * `sortedLastIndex`, `startCase`, `startsWith`, `sum`, `template`, `trim`,\n     * `trimLeft`, `trimRight`, `trunc`, `unescape`, `uniqueId`, `value`, and `words`\n     *\n     * The wrapper method `sample` will return a wrapped value when `n` is provided,\n     * otherwise an unwrapped value is returned.\n     *\n     * @name _\n     * @constructor\n     * @category Chain\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // returns an unwrapped value\n     * wrapped.reduce(function(total, n) {\n     *   return total + n;\n     * });\n     * // => 6\n     *\n     * // returns a wrapped value\n     * var squares = wrapped.map(function(n) {\n     *   return n * n;\n     * });\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__chain__') && hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The function whose prototype all chaining wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n     * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.\n     */\n    function LodashWrapper(value, chainAll, actions) {\n      this.__wrapped__ = value;\n      this.__actions__ = actions || [];\n      this.__chain__ = !!chainAll;\n    }\n\n    /**\n     * An object environment feature flags.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    var support = lodash.support = {};\n\n    (function(x) {\n      var Ctor = function() { this.x = x; },\n          object = { '0': x, 'length': x },\n          props = [];\n\n      Ctor.prototype = { 'valueOf': x, 'y': x };\n      for (var key in new Ctor) { props.push(key); }\n\n      /**\n       * Detect if the DOM is supported.\n       *\n       * @memberOf _.support\n       * @type boolean\n       */\n      try {\n        support.dom = document.createDocumentFragment().nodeType === 11;\n      } catch(e) {\n        support.dom = false;\n      }\n    }(1, 0));\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type string\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type Object\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type Function\n         */\n        '_': lodash\n      }\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = null;\n      this.__dir__ = 1;\n      this.__dropCount__ = 0;\n      this.__filtered__ = false;\n      this.__iteratees__ = null;\n      this.__takeCount__ = POSITIVE_INFINITY;\n      this.__views__ = null;\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var actions = this.__actions__,\n          iteratees = this.__iteratees__,\n          views = this.__views__,\n          result = new LazyWrapper(this.__wrapped__);\n\n      result.__actions__ = actions ? arrayCopy(actions) : null;\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = iteratees ? arrayCopy(iteratees) : null;\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = views ? arrayCopy(views) : null;\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value();\n      if (!isArray(array)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var dir = this.__dir__,\n          isRight = dir < 0,\n          view = getView(0, array.length, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          takeCount = nativeMin(length, this.__takeCount__),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees ? iteratees.length : 0,\n          resIndex = 0,\n          result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type;\n\n          if (type == LAZY_DROP_WHILE_FLAG) {\n            if (data.done && (isRight ? (index > data.index) : (index < data.index))) {\n              data.count = 0;\n              data.done = false;\n            }\n            data.index = index;\n            if (!data.done) {\n              var limit = data.limit;\n              if (!(data.done = limit > -1 ? (data.count++ >= limit) : !iteratee(value))) {\n                continue outer;\n              }\n            }\n          } else {\n            var computed = iteratee(value);\n            if (type == LAZY_MAP_FLAG) {\n              value = computed;\n            } else if (!computed) {\n              if (type == LAZY_FILTER_FLAG) {\n                continue outer;\n              } else {\n                break outer;\n              }\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a cache object to store key/value pairs.\n     *\n     * @private\n     * @static\n     * @name Cache\n     * @memberOf _.memoize\n     */\n    function MapCache() {\n      this.__data__ = {};\n    }\n\n    /**\n     * Removes `key` and its value from the cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed successfully, else `false`.\n     */\n    function mapDelete(key) {\n      return this.has(key) && delete this.__data__[key];\n    }\n\n    /**\n     * Gets the cached value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the cached value.\n     */\n    function mapGet(key) {\n      return key == '__proto__' ? undefined : this.__data__[key];\n    }\n\n    /**\n     * Checks if a cached value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapHas(key) {\n      return key != '__proto__' && hasOwnProperty.call(this.__data__, key);\n    }\n\n    /**\n     * Sets `value` to `key` of the cache.\n     *\n     * @private\n     * @name set\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to cache.\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache object.\n     */\n    function mapSet(key, value) {\n      if (key != '__proto__') {\n        this.__data__[key] = value;\n      }\n      return this;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates a cache object to store unique values.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var length = values ? values.length : 0;\n\n      this.data = { 'hash': nativeCreate(null), 'set': new Set };\n      while (length--) {\n        this.push(values[length]);\n      }\n    }\n\n    /**\n     * Checks if `value` is in `cache` mimicking the return signature of\n     * `_.indexOf` by returning `0` if the value is found, else `-1`.\n     *\n     * @private\n     * @param {Object} cache The cache to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `0` if `value` is found, else `-1`.\n     */\n    function cacheIndexOf(cache, value) {\n      var data = cache.data,\n          result = (typeof value == 'string' || isObject(value)) ? data.set.has(value) : data.hash[value];\n\n      return result ? 0 : -1;\n    }\n\n    /**\n     * Adds `value` to the cache.\n     *\n     * @private\n     * @name push\n     * @memberOf SetCache\n     * @param {*} value The value to cache.\n     */\n    function cachePush(value) {\n      var data = this.data;\n      if (typeof value == 'string' || isObject(value)) {\n        data.set.add(value);\n      } else {\n        data.hash[value] = true;\n      }\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayCopy(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEach` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEach(array, iteratee) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (iteratee(array[index], index, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEachRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEachRight(array, iteratee) {\n      var length = array.length;\n\n      while (length--) {\n        if (iteratee(array[length], length, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.every` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     */\n    function arrayEvery(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (!predicate(array[index], index, array)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `baseExtremum` for arrays which invokes `iteratee`\n     * with one argument: (value).\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function arrayExtremum(array, iteratee, comparator, exValue) {\n      var index = -1,\n          length = array.length,\n          computed = exValue,\n          result = computed;\n\n      while (++index < length) {\n        var value = array[index],\n            current = +iteratee(value);\n\n        if (comparator(current, computed)) {\n          computed = current;\n          result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.filter` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function arrayFilter(array, predicate) {\n      var index = -1,\n          length = array.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.map` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function arrayMap(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = iteratee(array[index], index, array);\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.reduce` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the first element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduce(array, iteratee, accumulator, initFromArray) {\n      var index = -1,\n          length = array.length;\n\n      if (initFromArray && length) {\n        accumulator = array[++index];\n      }\n      while (++index < length) {\n        accumulator = iteratee(accumulator, array[index], index, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.reduceRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the last element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduceRight(array, iteratee, accumulator, initFromArray) {\n      var length = array.length;\n      if (initFromArray && length) {\n        accumulator = array[--length];\n      }\n      while (length--) {\n        accumulator = iteratee(accumulator, array[length], length, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.some` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function arraySome(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (predicate(array[index], index, array)) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `_.sum` for arrays without support for iteratees.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     */\n    function arraySum(array) {\n      var length = array.length,\n          result = 0;\n\n      while (length--) {\n        result += +array[length] || 0;\n      }\n      return result;\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assign` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : objectValue;\n    }\n\n    /**\n     * Used by `_.template` to customize its `_.assign` use.\n     *\n     * **Note:** This function is like `assignDefaults` except that it ignores\n     * inherited property values when checking if a property is `undefined`.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @param {string} key The key associated with the object and source values.\n     * @param {Object} object The destination object.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignOwnDefaults(objectValue, sourceValue, key, object) {\n      return (objectValue === undefined || !hasOwnProperty.call(object, key))\n        ? sourceValue\n        : objectValue;\n    }\n\n    /**\n     * A specialized version of `_.assign` for customizing assigned values without\n     * support for argument juggling, multiple sources, and `this` binding `customizer`\n     * functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     */\n    function assignWith(object, source, customizer) {\n      var index = -1,\n          props = keys(source),\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key],\n            result = customizer(value, source[key], key, object, source);\n\n        if ((result === result ? (result !== value) : (value === value)) ||\n            (value === undefined && !(key in object))) {\n          object[key] = result;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for argument juggling,\n     * multiple sources, and `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return source == null\n        ? object\n        : baseCopy(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.at` without support for string collections\n     * and individual key arguments.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {number[]|string[]} props The property names or indexes of elements to pick.\n     * @returns {Array} Returns the new array of picked elements.\n     */\n    function baseAt(collection, props) {\n      var index = -1,\n          isNil = collection == null,\n          isArr = !isNil && isArrayLike(collection),\n          length = isArr ? collection.length : 0,\n          propsLength = props.length,\n          result = Array(propsLength);\n\n      while(++index < propsLength) {\n        var key = props[index];\n        if (isArr) {\n          result[index] = isIndex(key, length) ? collection[key] : undefined;\n        } else {\n          result[index] = isNil ? undefined : collection[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property names to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @returns {Object} Returns `object`.\n     */\n    function baseCopy(source, props, object) {\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n        object[key] = source[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.callback` which supports specifying the\n     * number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function baseCallback(func, thisArg, argCount) {\n      var type = typeof func;\n      if (type == 'function') {\n        return thisArg === undefined\n          ? func\n          : bindCallback(func, thisArg, argCount);\n      }\n      if (func == null) {\n        return identity;\n      }\n      if (type == 'object') {\n        return baseMatches(func);\n      }\n      return thisArg === undefined\n        ? property(func)\n        : baseMatchesProperty(func, thisArg);\n    }\n\n    /**\n     * The base implementation of `_.clone` without support for argument juggling\n     * and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The object `value` belongs to.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n      var result;\n      if (customizer) {\n        result = object ? customizer(value, key, object) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return arrayCopy(value, result);\n        }\n      } else {\n        var tag = objToString.call(value),\n            isFunc = tag == funcTag;\n\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = initCloneObject(isFunc ? {} : value);\n          if (!isDeep) {\n            return baseAssign(result, value);\n          }\n        } else {\n          return cloneableTags[tag]\n            ? initCloneByTag(value, tag, isDeep)\n            : (object ? value : {});\n        }\n      }\n      // Check for circular references and return corresponding clone.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == value) {\n          return stackB[length];\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate it with its clone.\n      stackA.push(value);\n      stackB.push(result);\n\n      // Recursively populate clone (susceptible to call stack limits).\n      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n        result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(prototype) {\n        if (isObject(prototype)) {\n          object.prototype = prototype;\n          var result = new object;\n          object.prototype = null;\n        }\n        return result || {};\n      };\n    }());\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts an index\n     * of where to slice the arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Object} args The arguments provide to `func`.\n     * @returns {number} Returns the timer id.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of `_.difference` which accepts a single array\n     * of values to exclude.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values) {\n      var length = array ? array.length : 0,\n          result = [];\n\n      if (!length) {\n        return result;\n      }\n      var index = -1,\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          cache = (isCommon && values.length >= 200) ? createCache(values) : null,\n          valuesLength = values.length;\n\n      if (cache) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n        values = cache;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index];\n\n        if (isCommon && value === value) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === value) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (indexOf(values, value, 0) < 0) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * Gets the extremum value of `collection` invoking `iteratee` for each value\n     * in `collection` to generate the criterion by which the value is ranked.\n     * The `iteratee` is invoked with three arguments: (value, index|key, collection).\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(collection, iteratee, comparator, exValue) {\n      var computed = exValue,\n          result = computed;\n\n      baseEach(collection, function(value, index, collection) {\n        var current = +iteratee(value, index, collection);\n        if (comparator(current, computed) || (current === exValue && current === result)) {\n          computed = current;\n          result = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : (end >>> 0);\n      start >>>= 0;\n\n      while (start < length) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n     * without support for callback shorthands and `this` binding, which iterates\n     * over `collection` using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @param {boolean} [retKey] Specify returning the key of the found element\n     *  instead of the element itself.\n     * @returns {*} Returns the found element or its key, else `undefined`.\n     */\n    function baseFind(collection, predicate, eachFunc, retKey) {\n      var result;\n      eachFunc(collection, function(value, key, collection) {\n        if (predicate(value, key, collection)) {\n          result = retKey ? key : value;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with added support for restricting\n     * flattening and specifying the start index.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, isDeep, isStrict) {\n      var index = -1,\n          length = array.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (isObjectLike(value) && isArrayLike(value) &&\n            (isStrict || isArray(value) || isArguments(value))) {\n          if (isDeep) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            value = baseFlatten(value, isDeep, isStrict);\n          }\n          var valIndex = -1,\n              valLength = value.length;\n\n          while (++valIndex < valLength) {\n            result[++resIndex] = value[valIndex];\n          }\n        } else if (!isStrict) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n     * each property. Iteratee functions may exit iteration early by explicitly\n     * returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forIn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForIn(object, iteratee) {\n      return baseFor(object, iteratee, keysIn);\n    }\n\n    /**\n     * The base implementation of `_.forOwn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from those provided.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the new array of filtered property names.\n     */\n    function baseFunctions(object, props) {\n      var index = -1,\n          length = props.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var key = props[index];\n        if (isFunction(object[key])) {\n          result[++resIndex] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `get` without support for string paths\n     * and default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path of the property to get.\n     * @param {string} [pathKey] The key representation of path.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path, pathKey) {\n      if (object == null) {\n        return;\n      }\n      if (pathKey !== undefined && pathKey in toObject(object)) {\n        path = [pathKey];\n      }\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[path[index++]];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` without support for `this` binding\n     * `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n     * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = objToString.call(object);\n        if (objTag == argsTag) {\n          objTag = objectTag;\n        } else if (objTag != objectTag) {\n          objIsArr = isTypedArray(object);\n        }\n      }\n      if (!othIsArr) {\n        othTag = objToString.call(other);\n        if (othTag == argsTag) {\n          othTag = objectTag;\n        } else if (othTag != objectTag) {\n          othIsArr = isTypedArray(other);\n        }\n      }\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && !(objIsArr || objIsObj)) {\n        return equalByTag(object, other, objTag);\n      }\n      if (!isLoose) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      // For more information on detecting circular references see https://es5.github.io/#JO.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == object) {\n          return stackB[length] == other;\n        }\n      }\n      // Add `object` and `other` to the stack of traversed objects.\n      stackA.push(object);\n      stackB.push(other);\n\n      var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);\n\n      stackA.pop();\n      stackB.pop();\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} matchData The propery names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = toObject(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var result = customizer ? customizer(objValue, srcValue, key) : undefined;\n          if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which does not clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        var key = matchData[0][0],\n            value = matchData[0][1];\n\n        return function(object) {\n          if (object == null) {\n            return false;\n          }\n          return object[key] === value && (value !== undefined || (key in toObject(object)));\n        };\n      }\n      return function(object) {\n        return baseIsMatch(object, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which does not clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to compare.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      var isArr = isArray(path),\n          isCommon = isKey(path) && isStrictComparable(srcValue),\n          pathKey = (path + '');\n\n      path = toPath(path);\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        var key = pathKey;\n        object = toObject(object);\n        if ((isArr || !isCommon) && !(key in object)) {\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          if (object == null) {\n            return false;\n          }\n          key = last(path);\n          object = toObject(object);\n        }\n        return object[key] === srcValue\n          ? (srcValue !== undefined || (key in object))\n          : baseIsEqual(srcValue, object[key], undefined, true);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for argument juggling,\n     * multiple sources, and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} [customizer] The function to customize merging properties.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {Object} Returns `object`.\n     */\n    function baseMerge(object, source, customizer, stackA, stackB) {\n      if (!isObject(object)) {\n        return object;\n      }\n      var isSrcArr = isArrayLike(source) && (isArray(source) || isTypedArray(source)),\n          props = isSrcArr ? null : keys(source);\n\n      arrayEach(props || source, function(srcValue, key) {\n        if (props) {\n          key = srcValue;\n          srcValue = source[key];\n        }\n        if (isObjectLike(srcValue)) {\n          stackA || (stackA = []);\n          stackB || (stackB = []);\n          baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n        }\n        else {\n          var value = object[key],\n              result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n              isCommon = result === undefined;\n\n          if (isCommon) {\n            result = srcValue;\n          }\n          if ((result !== undefined || (isSrcArr && !(key in object))) &&\n              (isCommon || (result === result ? (result !== value) : (value === value)))) {\n            object[key] = result;\n          }\n        }\n      });\n      return object;\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize merging properties.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n      var length = stackA.length,\n          srcValue = source[key];\n\n      while (length--) {\n        if (stackA[length] == srcValue) {\n          object[key] = stackB[length];\n          return;\n        }\n      }\n      var value = object[key],\n          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n          isCommon = result === undefined;\n\n      if (isCommon) {\n        result = srcValue;\n        if (isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))) {\n          result = isArray(value)\n            ? value\n            : (isArrayLike(value) ? arrayCopy(value) : []);\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          result = isArguments(value)\n            ? toPlainObject(value)\n            : (isPlainObject(value) ? value : {});\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate\n      // it with its merged value.\n      stackA.push(srcValue);\n      stackB.push(result);\n\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n      } else if (result === result ? (result !== value) : (value === value)) {\n        object[key] = result;\n      }\n    }\n\n    /**\n     * The base implementation of `_.property` without support for deep paths.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function baseProperty(key) {\n      return function(object) {\n        return object == null ? undefined : object[key];\n      };\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function basePropertyDeep(path) {\n      var pathKey = (path + '');\n      path = toPath(path);\n      return function(object) {\n        return baseGet(object, path, pathKey);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * index arguments and capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0;\n      while (length--) {\n        var index = indexes[length];\n        if (index != previous && isIndex(index)) {\n          var previous = index;\n          splice.call(array, index, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for argument juggling\n     * and returning floating-point numbers.\n     *\n     * @private\n     * @param {number} min The minimum possible value.\n     * @param {number} max The maximum possible value.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(min, max) {\n      return min + floor(nativeRandom() * (max - min + 1));\n    }\n\n    /**\n     * The base implementation of `_.reduce` and `_.reduceRight` without support\n     * for callback shorthands and `this` binding, which iterates over `collection`\n     * using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} accumulator The initial value.\n     * @param {boolean} initFromCollection Specify using the first or last element\n     *  of `collection` as the initial value.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @returns {*} Returns the accumulated value.\n     */\n    function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {\n      eachFunc(collection, function(value, index, collection) {\n        accumulator = initFromCollection\n          ? (initFromCollection = false, value)\n          : iteratee(accumulator, value, index, collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop detection.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortBy` which uses `comparer` to define\n     * the sort order of `array` and replaces criteria objects with their\n     * corresponding values.\n     *\n     * @private\n     * @param {Array} array The array to sort.\n     * @param {Function} comparer The function to define sort order.\n     * @returns {Array} Returns `array`.\n     */\n    function baseSortBy(array, comparer) {\n      var length = array.length;\n\n      array.sort(comparer);\n      while (length--) {\n        array[length] = array[length].value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.sortByOrder` without param guards.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseSortByOrder(collection, iteratees, orders) {\n      var callback = getCallback(),\n          index = -1;\n\n      iteratees = arrayMap(iteratees, function(iteratee) { return callback(iteratee); });\n\n      var result = baseMap(collection, function(value) {\n        var criteria = arrayMap(iteratees, function(iteratee) { return iteratee(value); });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.sum` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n    function baseSum(collection, iteratee) {\n      var result = 0;\n      baseEach(collection, function(value, index, collection) {\n        result += +iteratee(value, index, collection) || 0;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.uniq` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The function invoked per iteration.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     */\n    function baseUniq(array, iteratee) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = array.length,\n          isCommon = indexOf == baseIndexOf,\n          isLarge = isCommon && length >= 200,\n          seen = isLarge ? createCache() : null,\n          result = [];\n\n      if (seen) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n      } else {\n        isLarge = false;\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value, index, array) : value;\n\n        if (isCommon && value === value) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (indexOf(seen, computed, 0) < 0) {\n          if (iteratee || isLarge) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.values` and `_.valuesIn` which creates an\n     * array of `object` property values corresponding to the property names\n     * of `props`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} props The property names to get values for.\n     * @returns {Object} Returns the array of property values.\n     */\n    function baseValues(object, props) {\n      var index = -1,\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = object[props[index]];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.dropRightWhile`, `_.dropWhile`, `_.takeRightWhile`,\n     * and `_.takeWhile` without support for callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to peform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      var index = -1,\n          length = actions.length;\n\n      while (++index < length) {\n        var args = [result],\n            action = actions[index];\n\n        push.apply(args, action.args);\n        result = action.func.apply(action.thisArg, args);\n      }\n      return result;\n    }\n\n    /**\n     * Performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndex(array, value, retHighest) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if ((retHighest ? (computed <= value) : (computed < value)) && computed !== null) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return binaryIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * This function is like `binaryIndex` except that it invokes `iteratee` for\n     * `value` and each element of `array` to compute their sort ranking. The\n     * iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array ? array.length : 0,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsUndef = value === undefined;\n\n      while (low < high) {\n        var mid = floor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            isDef = computed !== undefined,\n            isReflexive = computed === computed;\n\n        if (valIsNaN) {\n          var setLow = isReflexive || retHighest;\n        } else if (valIsNull) {\n          setLow = isReflexive && isDef && (retHighest || computed != null);\n        } else if (valIsUndef) {\n          setLow = isReflexive && (retHighest || isDef);\n        } else if (computed == null) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * A specialized version of `baseCallback` which only supports `this` binding\n     * and specifying the number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function bindCallback(func, thisArg, argCount) {\n      if (typeof func != 'function') {\n        return identity;\n      }\n      if (thisArg === undefined) {\n        return func;\n      }\n      switch (argCount) {\n        case 1: return function(value) {\n          return func.call(thisArg, value);\n        };\n        case 3: return function(value, index, collection) {\n          return func.call(thisArg, value, index, collection);\n        };\n        case 4: return function(accumulator, value, index, collection) {\n          return func.call(thisArg, accumulator, value, index, collection);\n        };\n        case 5: return function(value, other, key, object, source) {\n          return func.call(thisArg, value, other, key, object, source);\n        };\n      }\n      return function() {\n        return func.apply(thisArg, arguments);\n      };\n    }\n\n    /**\n     * Creates a clone of the given array buffer.\n     *\n     * @private\n     * @param {ArrayBuffer} buffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function bufferClone(buffer) {\n      return bufferSlice.call(buffer, 0);\n    }\n    if (!bufferSlice) {\n      // PhantomJS has `ArrayBuffer` and `Uint8Array` but not `Float64Array`.\n      bufferClone = !(ArrayBuffer && Uint8Array) ? constant(null) : function(buffer) {\n        var byteLength = buffer.byteLength,\n            floatLength = Float64Array ? floor(byteLength / FLOAT64_BYTES_PER_ELEMENT) : 0,\n            offset = floatLength * FLOAT64_BYTES_PER_ELEMENT,\n            result = new ArrayBuffer(byteLength);\n\n        if (floatLength) {\n          var view = new Float64Array(result, 0, floatLength);\n          view.set(new Float64Array(buffer, 0, floatLength));\n        }\n        if (byteLength != offset) {\n          view = new Uint8Array(result, offset);\n          view.set(new Uint8Array(buffer, offset));\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders) {\n      var holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          leftIndex = -1,\n          leftLength = partials.length,\n          result = Array(argsLength + leftLength);\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        result[holders[argsIndex]] = args[argsIndex];\n      }\n      while (argsLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders) {\n      var holdersIndex = -1,\n          holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          rightIndex = -1,\n          rightLength = partials.length,\n          result = Array(argsLength + rightLength);\n\n      while (++argsIndex < argsLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        result[offset + holders[holdersIndex]] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * Creates a function that aggregates a collection, creating an accumulator\n     * object composed from the results of running each element in the collection\n     * through an iteratee.\n     *\n     * **Note:** This function is used to create `_.countBy`, `_.groupBy`, `_.indexBy`,\n     * and `_.partition`.\n     *\n     * @private\n     * @param {Function} setter The function to set keys and values of the accumulator object.\n     * @param {Function} [initializer] The function to initialize the accumulator object.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee, thisArg) {\n        var result = initializer ? initializer() : {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        if (isArray(collection)) {\n          var index = -1,\n              length = collection.length;\n\n          while (++index < length) {\n            var value = collection[index];\n            setter(result, value, iteratee(value, index, collection), collection);\n          }\n        } else {\n          baseEach(collection, function(value, key, collection) {\n            setter(result, value, iteratee(value, key, collection), collection);\n          });\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that assigns properties of source object(s) to a given\n     * destination object.\n     *\n     * **Note:** This function is used to create `_.assign`, `_.defaults`, and `_.merge`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return restParam(function(object, sources) {\n        var index = -1,\n            length = object == null ? 0 : sources.length,\n            customizer = length > 2 ? sources[length - 2] : undefined,\n            guard = length > 2 ? sources[2] : undefined,\n            thisArg = length > 1 ? sources[length - 1] : undefined;\n\n        if (typeof customizer == 'function') {\n          customizer = bindCallback(customizer, thisArg, 5);\n          length -= 2;\n        } else {\n          customizer = typeof thisArg == 'function' ? thisArg : undefined;\n          length -= (customizer ? 1 : 0);\n        }\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        var length = collection ? getLength(collection) : 0;\n        if (!isLength(length)) {\n          return eachFunc(collection, iteratee);\n        }\n        var index = fromRight ? length : -1,\n            iterable = toObject(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var iterable = toObject(object),\n            props = keysFunc(object),\n            length = props.length,\n            index = fromRight ? length : -1;\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var key = props[index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createBindWrapper(func, thisArg) {\n      var Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(thisArg, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `Set` cache object to optimize linear searches of large arrays.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.\n     */\n    var createCache = !(nativeCreate && Set) ? constant(null) : function(values) {\n      return new SetCache(values);\n    };\n\n    /**\n     * Creates a function that produces compound words out of the words in a\n     * given string.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        var index = -1,\n            array = words(deburr(string)),\n            length = array.length,\n            result = '';\n\n        while (++index < length) {\n          result = callback(result, array[index], index);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtorWrapper(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors.\n        // See https://people.mozilla.org/~jorendorff/es6-draft.html#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a `_.curry` or `_.curryRight` function.\n     *\n     * @private\n     * @param {boolean} flag The curry bit flag.\n     * @returns {Function} Returns the new curry function.\n     */\n    function createCurry(flag) {\n      function curryFunc(func, arity, guard) {\n        if (guard && isIterateeCall(func, arity, guard)) {\n          arity = null;\n        }\n        var result = createWrapper(func, flag, null, null, null, null, null, arity);\n        result.placeholder = curryFunc.placeholder;\n        return result;\n      }\n      return curryFunc;\n    }\n\n    /**\n     * Creates a `_.max` or `_.min` function.\n     *\n     * @private\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {Function} Returns the new extremum function.\n     */\n    function createExtremum(comparator, exValue) {\n      return function(collection, iteratee, thisArg) {\n        if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n          iteratee = null;\n        }\n        iteratee = getCallback(iteratee, thisArg, 3);\n        if (iteratee.length == 1) {\n          collection = toIterable(collection);\n          var result = arrayExtremum(collection, iteratee, comparator, exValue);\n          if (!(collection.length && result === exValue)) {\n            return result;\n          }\n        }\n        return baseExtremum(collection, iteratee, comparator, exValue);\n      };\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(eachFunc, fromRight) {\n      return function(collection, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        if (isArray(collection)) {\n          var index = baseFindIndex(collection, predicate, fromRight);\n          return index > -1 ? collection[index] : undefined;\n        }\n        return baseFind(collection, predicate, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a `_.findIndex` or `_.findLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindIndex(fromRight) {\n      return function(array, predicate, thisArg) {\n        if (!(array && array.length)) {\n          return -1;\n        }\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFindIndex(array, predicate, fromRight);\n      };\n    }\n\n    /**\n     * Creates a `_.findKey` or `_.findLastKey` function.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindKey(objectFunc) {\n      return function(object, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFind(object, predicate, objectFunc, true);\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return function() {\n        var wrapper,\n            length = arguments.length,\n            index = fromRight ? length : -1,\n            leftIndex = 0,\n            funcs = Array(length);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var func = funcs[leftIndex++] = arguments[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (!wrapper && LodashWrapper.prototype.thru && getFuncName(func) == 'wrapper') {\n            wrapper = new LodashWrapper([]);\n          }\n        }\n        index = wrapper ? -1 : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : null;\n\n          if (data && isLaziable(data[0]) && data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) && !data[4].length && data[9] == 1) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments;\n          if (wrapper && args.length == 1 && isArray(args[0])) {\n            return wrapper.plant(args[0]).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : args[0];\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      };\n    }\n\n    /**\n     * Creates a function for `_.forEach` or `_.forEachRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForEach(arrayFunc, eachFunc) {\n      return function(collection, iteratee, thisArg) {\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee)\n          : eachFunc(collection, bindCallback(iteratee, thisArg, 3));\n      };\n    }\n\n    /**\n     * Creates a function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForIn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee, keysIn);\n      };\n    }\n\n    /**\n     * Creates a function for `_.forOwn` or `_.forOwnRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForOwn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee);\n      };\n    }\n\n    /**\n     * Creates a function for `_.mapKeys` or `_.mapValues`.\n     *\n     * @private\n     * @param {boolean} [isMapKeys] Specify mapping keys instead of values.\n     * @returns {Function} Returns the new map function.\n     */\n    function createObjectMapper(isMapKeys) {\n      return function(object, iteratee, thisArg) {\n        var result = {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        baseForOwn(object, function(value, key, object) {\n          var mapped = iteratee(value, key, object);\n          key = isMapKeys ? mapped : key;\n          value = isMapKeys ? value : mapped;\n          result[key] = value;\n        });\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function for `_.padLeft` or `_.padRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify padding from the right.\n     * @returns {Function} Returns the new pad function.\n     */\n    function createPadDir(fromRight) {\n      return function(string, length, chars) {\n        string = baseToString(string);\n        return (fromRight ? string : '') + createPadding(string, length, chars) + (fromRight ? '' : string);\n      };\n    }\n\n    /**\n     * Creates a `_.partial` or `_.partialRight` function.\n     *\n     * @private\n     * @param {boolean} flag The partial bit flag.\n     * @returns {Function} Returns the new partial function.\n     */\n    function createPartial(flag) {\n      var partialFunc = restParam(function(func, partials) {\n        var holders = replaceHolders(partials, partialFunc.placeholder);\n        return createWrapper(func, flag, null, partials, holders);\n      });\n      return partialFunc;\n    }\n\n    /**\n     * Creates a function for `_.reduce` or `_.reduceRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createReduce(arrayFunc, eachFunc) {\n      return function(collection, iteratee, accumulator, thisArg) {\n        var initFromArray = arguments.length < 3;\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee, accumulator, initFromArray)\n          : baseReduce(collection, getCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with optional `this`\n     * binding of, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & ARY_FLAG,\n          isBind = bitmask & BIND_FLAG,\n          isBindKey = bitmask & BIND_KEY_FLAG,\n          isCurry = bitmask & CURRY_FLAG,\n          isCurryBound = bitmask & CURRY_BOUND_FLAG,\n          isCurryRight = bitmask & CURRY_RIGHT_FLAG,\n          Ctor = isBindKey ? null : createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it to other functions.\n        var length = arguments.length,\n            index = length,\n            args = Array(length);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight);\n        }\n        if (isCurry || isCurryRight) {\n          var placeholder = wrapper.placeholder,\n              argsHolders = replaceHolders(args, placeholder);\n\n          length -= argsHolders.length;\n          if (length < arity) {\n            var newArgPos = argPos ? arrayCopy(argPos) : null,\n                newArity = nativeMax(arity - length, 0),\n                newsHolders = isCurry ? argsHolders : null,\n                newHoldersRight = isCurry ? null : argsHolders,\n                newPartials = isCurry ? args : null,\n                newPartialsRight = isCurry ? null : args;\n\n            bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n            bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n            if (!isCurryBound) {\n              bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n            }\n            var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity],\n                result = createHybridWrapper.apply(undefined, newData);\n\n            if (isLaziable(func)) {\n              setData(result, newData);\n            }\n            result.placeholder = placeholder;\n            return result;\n          }\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        if (argPos) {\n          args = reorder(args, argPos);\n        }\n        if (isAry && ary < args.length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtorWrapper(func);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates the padding required for `string` based on the given `length`.\n     * The `chars` string is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {string} string The string to create padding for.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the pad for `string`.\n     */\n    function createPadding(string, length, chars) {\n      var strLength = string.length;\n      length = +length;\n\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return '';\n      }\n      var padLength = length - strLength;\n      chars = chars == null ? ' ' : (chars + '');\n      return repeat(chars, ceil(padLength / chars.length)).slice(0, padLength);\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the optional `this`\n     * binding of `thisArg` and the `partials` prepended to those provided to\n     * the wrapper.\n     *\n     * @private\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to the new function.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createPartialWrapper(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it `func`.\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(argsLength + leftLength);\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.sortedIndex` or `_.sortedLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {Function} Returns the new index function.\n     */\n    function createSortedIndex(retHighest) {\n      return function(array, value, iteratee, thisArg) {\n        var callback = getCallback(iteratee);\n        return (iteratee == null && callback === baseCallback)\n          ? binaryIndex(array, value, retHighest)\n          : binaryIndexBy(array, value, callback(iteratee, thisArg, 1), retHighest);\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - `_.bind`\n     *     2 - `_.bindKey`\n     *     4 - `_.curry` or `_.curryRight` of a bound function\n     *     8 - `_.curry`\n     *    16 - `_.curryRight`\n     *    32 - `_.partial`\n     *    64 - `_.partialRight`\n     *   128 - `_.rearg`\n     *   256 - `_.ary`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n        partials = holders = null;\n      }\n      length -= (holders ? holders.length : 0);\n      if (bitmask & PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = null;\n      }\n      var data = isBindKey ? null : getData(func),\n          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];\n\n      if (data) {\n        mergeData(newData, data);\n        bitmask = newData[1];\n        arity = newData[9];\n      }\n      newData[9] = arity == null\n        ? (isBindKey ? 0 : func.length)\n        : (nativeMax(arity - length, 0) || 0);\n\n      if (bitmask == BIND_FLAG) {\n        var result = createBindWrapper(newData[0], newData[2]);\n      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {\n        result = createPartialWrapper.apply(undefined, newData);\n      } else {\n        result = createHybridWrapper.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setter(result, newData);\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing arrays.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var index = -1,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isLoose && othLength > arrLength)) {\n        return false;\n      }\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index],\n            result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;\n\n        if (result !== undefined) {\n          if (result) {\n            continue;\n          }\n          return false;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (isLoose) {\n          if (!arraySome(other, function(othValue) {\n                return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n              })) {\n            return false;\n          }\n        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} value The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag) {\n      switch (tag) {\n        case boolTag:\n        case dateTag:\n          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n          return +object == +other;\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case numberTag:\n          // Treat `NaN` vs. `NaN` as equal.\n          return (object != +object)\n            ? other != +other\n            : object == +other;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings primitives and string\n          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n          return object == (other + '');\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isLoose) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      var skipCtor = isLoose;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key],\n            result = customizer ? customizer(isLoose ? othValue : objValue, isLoose? objValue : othValue, key) : undefined;\n\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {\n          return false;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (!skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Gets the appropriate \"callback\" function. If the `_.callback` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseCallback` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getCallback(func, thisArg, argCount) {\n      var result = lodash.callback || callback;\n      result = result === callback ? baseCallback : result;\n      return argCount ? result(func, thisArg, argCount) : result;\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = func.name,\n          array = realNames[result],\n          length = array ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseIndexOf` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function|number} Returns the chosen function or its result.\n     */\n    function getIndexOf(collection, target, fromIndex) {\n      var result = lodash.indexOf || indexOf;\n      result = result === indexOf ? baseIndexOf : result;\n      return collection ? result(collection, target, fromIndex) : result;\n    }\n\n    /**\n     * Gets the \"length\" property value of `object`.\n     *\n     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n     * that affects Safari on at least iOS 8.1-8.3 ARM64.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {*} Returns the \"length\" value.\n     */\n    var getLength = baseProperty('length');\n\n    /**\n     * Gets the propery names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = pairs(object),\n          length = result.length;\n\n      while (length--) {\n        result[length][2] = isStrictComparable(result[length][1]);\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = object == null ? undefined : object[key];\n      return isNative(value) ? value : undefined;\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} [transforms] The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms ? transforms.length : 0;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add array properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      var Ctor = object.constructor;\n      if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n        Ctor = Object;\n      }\n      return new Ctor;\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return bufferClone(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          var buffer = object.buffer;\n          return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          var result = new Ctor(object.source, reFlags.exec(object));\n          result.lastIndex = object.lastIndex;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the method at `path` on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function invokePath(object, path, args) {\n      if (object != null && !isKey(path, object)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        path = last(path);\n      }\n      var func = object == null ? object : object[path];\n      return func == null ? undefined : func.apply(object, args);\n    }\n\n    /**\n     * Checks if `value` is array-like.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(getLength(value));\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return value > -1 && value % 1 == 0 && value < length;\n    }\n\n    /**\n     * Checks if the provided arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n          ? (isArrayLike(object) && isIndex(index, object.length))\n          : (type == 'string' && index in object)) {\n        var other = object[index];\n        return value === value ? (value === other) : (other !== other);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      var type = typeof value;\n      if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {\n        return true;\n      }\n      if (isArray(value)) {\n        return false;\n      }\n      var result = !reIsDeepProp.test(value);\n      return result || (object != null && value in toObject(object));\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func);\n      if (!(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      var other = lodash[funcName];\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     */\n    function isLength(value) {\n      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers required to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n     * augment function arguments, making the order in which they are executed important,\n     * preventing the merging of metadata. However, we make an exception for a safe\n     * common case where curried functions have `_.ary` and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < ARY_FLAG;\n\n      var isCombo =\n        (srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG) ||\n        (srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8]) ||\n        (srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG);\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = arrayCopy(value);\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * A specialized version of `_.pick` which picks `object` properties specified\n     * by `props`.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property names to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByArray(object, props) {\n      object = toObject(object);\n\n      var index = -1,\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index];\n        if (key in object) {\n          result[key] = object[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.pick` which picks `object` properties `predicate`\n     * returns truthy for.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByCallback(object, predicate) {\n      var result = {};\n      baseForIn(object, function(value, key, object) {\n        if (predicate(value, key, object)) {\n          result[key] = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = arrayCopy(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity function\n     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = (function() {\n      var count = 0,\n          lastCalled = 0;\n\n      return function(key, value) {\n        var stamp = now(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return key;\n          }\n        } else {\n          count = 0;\n        }\n        return baseSetData(key, value);\n      };\n    }());\n\n    /**\n     * A fallback implementation of `_.isPlainObject` which checks if `value`\n     * is an object created by the `Object` constructor or has a `[[Prototype]]`\n     * of `null`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     */\n    function shimIsPlainObject(value) {\n      var Ctor,\n          support = lodash.support;\n\n      // Exit early for non `Object` objects.\n      if (!(isObjectLike(value) && objToString.call(value) == objectTag) ||\n          (!hasOwnProperty.call(value, 'constructor') &&\n            (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n        return false;\n      }\n      // IE < 9 iterates inherited properties before own properties. If the first\n      // iterated property is an object's own property then there are no inherited\n      // enumerable properties.\n      var result;\n      // In most environments an object's own properties are iterated before\n      // its inherited properties. If the last iterated property is an object's\n      // own property then there are no inherited enumerable properties.\n      baseForIn(value, function(subValue, key) {\n        result = key;\n      });\n      return result === undefined || hasOwnProperty.call(value, result);\n    }\n\n    /**\n     * A fallback implementation of `Object.keys` which creates an array of the\n     * own enumerable property names of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function shimKeys(object) {\n      var props = keysIn(object),\n          propsLength = props.length,\n          length = propsLength && object.length;\n\n      var allowIndexes = !!length && isLength(length) &&\n        (isArray(object) || isArguments(object));\n\n      var index = -1,\n          result = [];\n\n      while (++index < propsLength) {\n        var key = props[index];\n        if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to an array-like object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array|Object} Returns the array-like object.\n     */\n    function toIterable(value) {\n      if (value == null) {\n        return [];\n      }\n      if (!isArrayLike(value)) {\n        return values(value);\n      }\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to an object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Object} Returns the object.\n     */\n    function toObject(value) {\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to property path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array} Returns the property path array.\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return value;\n      }\n      var result = [];\n      baseToString(value).replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      return wrapper instanceof LazyWrapper\n        ? wrapper.clone()\n        : new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__, arrayCopy(wrapper.__actions__));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `collection` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new array containing chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if (guard ? isIterateeCall(array, size, guard) : size == null) {\n        size = 1;\n      } else {\n        size = nativeMax(+size || 1, 1);\n      }\n      var index = 0,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = Array(ceil(length / size));\n\n      while (index < length) {\n        result[++resIndex] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of unique `array` values not included in the other\n     * provided arrays using [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The arrays of values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.difference([1, 2, 3], [4, 2]);\n     * // => [1, 3]\n     */\n    var difference = restParam(function(array, values) {\n      return isArrayLike(array)\n        ? baseDifference(array, baseFlatten(values, false, true))\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that match the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [1]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active', false), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active', false), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8], '*', 1, 2);\n     * // => [4, '*', 8]\n     */\n    function fill(array, value, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(chr) {\n     *   return chr.user == 'barney';\n     * });\n     * // => 0\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findIndex(users, 'active', false);\n     * // => 0\n     *\n     * // using the `_.property` callback shorthand\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    var findIndex = createFindIndex();\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(chr) {\n     *   return chr.user == 'pebbles';\n     * });\n     * // => 2\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastIndex(users, 'active', false);\n     * // => 2\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    var findLastIndex = createFindIndex(true);\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias head\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.first([1, 2, 3]);\n     * // => 1\n     *\n     * _.first([]);\n     * // => undefined\n     */\n    function first(array) {\n      return array ? array[0] : undefined;\n    }\n\n    /**\n     * Flattens a nested array. If `isDeep` is `true` the array is recursively\n     * flattened, otherwise it is only flattened a single level.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, [4]]\n     *\n     * // using `isDeep`\n     * _.flatten([1, [2, 3, [4]]], true);\n     * // => [1, 2, 3, 4]\n     */\n    function flatten(array, isDeep, guard) {\n      var length = array ? array.length : 0;\n      if (guard && isIterateeCall(array, isDeep, guard)) {\n        isDeep = false;\n      }\n      return length ? baseFlatten(array, isDeep) : [];\n    }\n\n    /**\n     * Recursively flattens a nested array.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to recursively flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, 4]\n     */\n    function flattenDeep(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, true) : [];\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `array`. If `array` is sorted providing `true` for `fromIndex`\n     * performs a faster binary search.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n     *  to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // using `fromIndex`\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     *\n     * // performing a binary search\n     * _.indexOf([1, 1, 2, 2], 2, true);\n     * // => 2\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      if (typeof fromIndex == 'number') {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n      } else if (fromIndex) {\n        var index = binaryIndex(array, value),\n            other = array[index];\n\n        if (value === value ? (value === other) : (other !== other)) {\n          return index;\n        }\n        return -1;\n      }\n      return baseIndexOf(array, value, fromIndex || 0);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      return dropRight(array, 1);\n    }\n\n    /**\n     * Creates an array of unique values that are included in all of the provided\n     * arrays using [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of shared values.\n     * @example\n     * _.intersection([1, 2], [4, 2], [2, 1]);\n     * // => [2]\n     */\n    var intersection = restParam(function(arrays) {\n      var othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(length),\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          result = [];\n\n      while (othIndex--) {\n        var value = arrays[othIndex] = isArrayLike(value = arrays[othIndex]) ? value : [];\n        caches[othIndex] = (isCommon && value.length >= 120) ? createCache(othIndex && value) : null;\n      }\n      var array = arrays[0],\n          index = -1,\n          length = array ? array.length : 0,\n          seen = caches[0];\n\n      outer:\n      while (++index < length) {\n        value = array[index];\n        if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value, 0)) < 0) {\n          var othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if ((cache ? cacheIndexOf(cache, value) : indexOf(arrays[othIndex], value, 0)) < 0) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(value);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    });\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array ? array.length : 0;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=array.length-1] The index to search from\n     *  or `true` to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // using `fromIndex`\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     *\n     * // performing a binary search\n     * _.lastIndexOf([1, 1, 2, 2], 2, true);\n     * // => 3\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (typeof fromIndex == 'number') {\n        index = (fromIndex < 0 ? nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - 1)) + 1;\n      } else if (fromIndex) {\n        index = binaryIndex(array, value, true) - 1;\n        var other = array[index];\n        if (value === value ? (value === other) : (other !== other)) {\n          return index;\n        }\n        return -1;\n      }\n      if (value !== value) {\n        return indexOfNaN(array, index, true);\n      }\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Removes all provided values from `array` using\n     * [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3, 1, 2, 3];\n     *\n     * _.pull(array, 2, 3);\n     * console.log(array);\n     * // => [1, 1]\n     */\n    function pull() {\n      var args = arguments,\n          array = args[0];\n\n      if (!(array && array.length)) {\n        return array;\n      }\n      var index = 0,\n          indexOf = getIndexOf(),\n          length = args.length;\n\n      while (++index < length) {\n        var fromIndex = 0,\n            value = args[index];\n\n        while ((fromIndex = indexOf(array, value, fromIndex)) > -1) {\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to the given indexes and returns\n     * an array of the removed elements. Indexes may be specified as an array of\n     * indexes or as individual arguments.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [5, 10, 15, 20];\n     * var evens = _.pullAt(array, 1, 3);\n     *\n     * console.log(array);\n     * // => [5, 15]\n     *\n     * console.log(evens);\n     * // => [10, 20]\n     */\n    var pullAt = restParam(function(array, indexes) {\n      indexes = baseFlatten(indexes);\n\n      var result = baseAt(array, indexes);\n      basePullAt(array, indexes.sort(baseCompareAscending));\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate, thisArg) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getCallback(predicate, thisArg, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias tail\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.rest([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function rest(array) {\n      return drop(array, 1);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of `Array#slice` to support node\n     * lists in IE < 9 and to ensure dense arrays are returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value` should\n     * be inserted into `array` in order to maintain its sort order. If an iteratee\n     * function is provided it is invoked for `value` and each element of `array`\n     * to compute their sort ranking. The iteratee is bound to `thisArg` and\n     * invoked with one argument; (value).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     *\n     * _.sortedIndex([4, 4, 5, 5], 5);\n     * // => 2\n     *\n     * var dict = { 'data': { 'thirty': 30, 'forty': 40, 'fifty': 50 } };\n     *\n     * // using an iteratee function\n     * _.sortedIndex(['thirty', 'fifty'], 'forty', function(word) {\n     *   return this.data[word];\n     * }, dict);\n     * // => 1\n     *\n     * // using the `_.property` callback shorthand\n     * _.sortedIndex([{ 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n     * // => 1\n     */\n    var sortedIndex = createSortedIndex();\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 4, 5, 5], 5);\n     * // => 4\n     */\n    var sortedLastIndex = createSortedIndex(true);\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is bound to `thisArg`\n     * and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [2, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active', false), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [1, 2]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active', false), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all of the provided arrays\n     * using [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([1, 2], [4, 2], [2, 1]);\n     * // => [1, 2, 4]\n     */\n    var union = restParam(function(arrays) {\n      return baseUniq(baseFlatten(arrays, false, true));\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurence of each element\n     * is kept. Providing `true` for `isSorted` performs a faster search algorithm\n     * for sorted arrays. If an iteratee function is provided it is invoked for\n     * each element in the array to generate the criterion by which uniqueness\n     * is computed. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, array).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias unique\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {boolean} [isSorted] Specify the array is sorted.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     *\n     * // using `isSorted`\n     * _.uniq([1, 1, 2], true);\n     * // => [1, 2]\n     *\n     * // using an iteratee function\n     * _.uniq([1, 2.5, 1.5, 2], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => [1, 2.5]\n     *\n     * // using the `_.property` callback shorthand\n     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniq(array, isSorted, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (isSorted != null && typeof isSorted != 'boolean') {\n        thisArg = iteratee;\n        iteratee = isIterateeCall(array, isSorted, thisArg) ? null : isSorted;\n        isSorted = false;\n      }\n      var callback = getCallback();\n      if (!(iteratee == null && callback === baseCallback)) {\n        iteratee = callback(iteratee, thisArg, 3);\n      }\n      return (isSorted && getIndexOf() == baseIndexOf)\n        ? sortedUniq(array, iteratee)\n        : baseUniq(array, iteratee);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['fred', 'barney'], [30, 40], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var index = -1,\n          length = 0;\n\n      array = arrayFilter(array, function(group) {\n        if (isArrayLike(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = arrayMap(array, baseProperty(index));\n      }\n      return result;\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts an iteratee to specify\n     * how regrouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee] The function to combine regrouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      iteratee = bindCallback(iteratee, thisArg, 4);\n      return arrayMap(result, function(group) {\n        return arrayReduce(group, iteratee, undefined, true);\n      });\n    }\n\n    /**\n     * Creates an array excluding all provided values using\n     * [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to filter.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.without([1, 2, 1, 3], 1, 2);\n     * // => [3]\n     */\n    var without = restParam(function(array, values) {\n      return isArrayLike(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the provided arrays.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of values.\n     * @example\n     *\n     * _.xor([1, 2], [4, 2]);\n     * // => [1, 4]\n     */\n    function xor() {\n      var index = -1,\n          length = arguments.length;\n\n      while (++index < length) {\n        var array = arguments[index];\n        if (isArrayLike(array)) {\n          var result = result\n            ? baseDifference(result, array).concat(baseDifference(array, result))\n            : array;\n        }\n      }\n      return result ? baseUniq(result) : [];\n    }\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the first\n     * elements of the given arrays, the second of which contains the second elements\n     * of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     */\n    var zip = restParam(unzip);\n\n    /**\n     * The inverse of `_.pairs`; this method returns an object composed from arrays\n     * of property names and values. Provide either a single two dimensional array,\n     * e.g. `[[key1, value1], [key2, value2]]` or two arrays, one of property names\n     * and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @alias object\n     * @category Array\n     * @param {Array} props The property names.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject([['fred', 30], ['barney', 40]]);\n     * // => { 'fred': 30, 'barney': 40 }\n     *\n     * _.zipObject(['fred', 'barney'], [30, 40]);\n     * // => { 'fred': 30, 'barney': 40 }\n     */\n    function zipObject(props, values) {\n      var index = -1,\n          length = props ? props.length : 0,\n          result = {};\n\n      if (length && !values && !isArray(props[0])) {\n        values = [];\n      }\n      while (++index < length) {\n        var key = props[index];\n        if (values) {\n          result[key] = values[index];\n        } else if (key) {\n          result[key[0]] = key[1];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an iteratee to specify\n     * how grouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee] The function to combine grouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], _.add);\n     * // => [111, 222]\n     */\n    var zipWith = restParam(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 2 ? arrays[length - 2] : undefined,\n          thisArg = length > 1 ? arrays[length - 1] : undefined;\n\n      if (length > 2 && typeof iteratee == 'function') {\n        length -= 2;\n      } else {\n        iteratee = (length > 1 && typeof thisArg == 'function') ? (--length, thisArg) : undefined;\n        thisArg = undefined;\n      }\n      arrays.length = length;\n      return unzipWith(arrays, iteratee, thisArg);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object that wraps `value` with explicit method\n     * chaining enabled.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _.chain(users)\n     *   .sortBy('age')\n     *   .map(function(chr) {\n     *     return chr.user + ' is ' + chr.age;\n     *   })\n     *   .first()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor is\n     * bound to `thisArg` and invoked with one argument; (value). The purpose of\n     * this method is to \"tap into\" a method chain in order to perform operations\n     * on intermediate results within the chain.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor, thisArg) {\n      interceptor.call(thisArg, value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor, thisArg) {\n      return interceptor.call(thisArg, value);\n    }\n\n    /**\n     * Enables explicit method chaining on the wrapper object.\n     *\n     * @name chain\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // without explicit chaining\n     * _(users).first();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // with explicit chaining\n     * _(users).chain()\n     *   .first()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chained sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapper = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapper = wrapper.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapper.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Creates a clone of the chained sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapper = _(array).map(function(value) {\n     *   return Math.pow(value, 2);\n     * });\n     *\n     * var other = [3, 4];\n     * var otherWrapper = wrapper.plant(other);\n     *\n     * otherWrapper.value();\n     * // => [9, 16]\n     *\n     * wrapper.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * Reverses the wrapped array so the first element becomes the last, the\n     * second element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new reversed `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        if (this.__actions__.length) {\n          value = new LazyWrapper(this);\n        }\n        return new LodashWrapper(value.reverse(), this.__chain__);\n      }\n      return this.thru(function(value) {\n        return value.reverse();\n      });\n    }\n\n    /**\n     * Produces the result of coercing the unwrapped value to a string.\n     *\n     * @name toString\n     * @memberOf _\n     * @category Chain\n     * @returns {string} Returns the coerced string value.\n     * @example\n     *\n     * _([1, 2, 3]).toString();\n     * // => '1,2,3'\n     */\n    function wrapperToString() {\n      return (this.value() + '');\n    }\n\n    /**\n     * Executes the chained sequence to extract the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @alias run, toJSON, valueOf\n     * @category Chain\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements corresponding to the given keys, or indexes,\n     * of `collection`. Keys may be specified as individual arguments or as arrays\n     * of keys.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(number|number[]|string|string[])} [props] The property names\n     *  or indexes of elements to pick, specified individually or in arrays.\n     * @returns {Array} Returns the new array of picked elements.\n     * @example\n     *\n     * _.at(['a', 'b', 'c'], [0, 2]);\n     * // => ['a', 'c']\n     *\n     * _.at(['barney', 'fred', 'pebbles'], 0, 2);\n     * // => ['barney', 'pebbles']\n     */\n    var at = restParam(function(collection, props) {\n      return baseAt(collection, baseFlatten(props));\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the number of times the key was returned by `iteratee`.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * The predicate is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias all\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': false },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.every(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = null;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias select\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.filter([4, 5, 6], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 6]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.filter(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.filter(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function filter(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias detect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.result(_.find(users, function(chr) {\n     *   return chr.age < 40;\n     * }), 'user');\n     * // => 'barney'\n     *\n     * // using the `_.matches` callback shorthand\n     * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.result(_.find(users, 'active', false), 'user');\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.result(_.find(users, 'active'), 'user');\n     * // => 'barney'\n     */\n    var find = createFind(baseEach);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(baseEachRight, true);\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning the first element that has equivalent property\n     * values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.result(_.findWhere(users, { 'age': 36, 'active': true }), 'user');\n     * // => 'barney'\n     *\n     * _.result(_.findWhere(users, { 'age': 40, 'active': false }), 'user');\n     * // => 'fred'\n     */\n    function findWhere(collection, source) {\n      return find(collection, baseMatches(source));\n    }\n\n    /**\n     * Iterates over elements of `collection` invoking `iteratee` for each element.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection). Iteratee functions may exit iteration early\n     * by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n     * may be used for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @alias each\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEach(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from left to right and returns the array\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {\n     *   console.log(n, key);\n     * });\n     * // => logs each value-key pair and returns the object (iteration order is not guaranteed)\n     */\n    var forEach = createForEach(arrayEach, baseEach);\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEachRight(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from right to left and returns the array\n     */\n    var forEachRight = createForEach(arrayEachRight, baseEachRight);\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is an array of the elements responsible for generating the key.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * // using the `_.property` callback shorthand\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        result[key] = [value];\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection` using\n     * [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @alias contains, include\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {*} target The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {boolean} Returns `true` if a matching element is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n     * // => true\n     *\n     * _.includes('pebbles', 'eb');\n     * // => true\n     */\n    function includes(collection, target, fromIndex, guard) {\n      var length = collection ? getLength(collection) : 0;\n      if (!isLength(length)) {\n        collection = values(collection);\n        length = collection.length;\n      }\n      if (!length) {\n        return false;\n      }\n      if (typeof fromIndex != 'number' || (guard && isIterateeCall(target, fromIndex, guard))) {\n        fromIndex = 0;\n      } else {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);\n      }\n      return (typeof collection == 'string' || !isArray(collection) && isString(collection))\n        ? (fromIndex < length && collection.indexOf(target, fromIndex) > -1)\n        : (getIndexOf(collection, target, fromIndex) > -1);\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the last element responsible for generating the key. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var keyData = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.indexBy(keyData, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return String.fromCharCode(object.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return this.fromCharCode(object.code);\n     * }, String);\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     */\n    var indexBy = createAggregator(function(result, value, key) {\n      result[key] = value;\n    });\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `methodName` is a function it is\n     * invoked for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invoke([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invoke = restParam(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          isProp = isKey(path),\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        var func = isFunc ? path : ((isProp && value != null) ? value[path] : null);\n        result[++index] = func ? func.apply(value, args) : invokePath(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` through\n     * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`,\n     * `drop`, `dropRight`, `every`, `fill`, `flatten`, `invert`, `max`, `min`,\n     * `parseInt`, `slice`, `sortBy`, `take`, `takeRight`, `template`, `trim`,\n     * `trimLeft`, `trimRight`, `trunc`, `random`, `range`, `sample`, `some`,\n     * `sum`, `uniq`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @alias collect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function timesThree(n) {\n     *   return n * 3;\n     * }\n     *\n     * _.map([1, 2], timesThree);\n     * // => [3, 6]\n     *\n     * _.map({ 'a': 1, 'b': 2 }, timesThree);\n     * // => [3, 6] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee, thisArg) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return func(collection, iteratee);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, while the second of which\n     * contains elements `predicate` returns falsey for. The predicate is bound\n     * to `thisArg` and invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * _.partition([1, 2, 3], function(n) {\n     *   return n % 2;\n     * });\n     * // => [[1, 3], [2]]\n     *\n     * _.partition([1.2, 2.3, 3.4], function(n) {\n     *   return this.floor(n) % 2;\n     * }, Math);\n     * // => [[1.2, 3.4], [2.3]]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * var mapper = function(array) {\n     *   return _.pluck(array, 'user');\n     * };\n     *\n     * // using the `_.matches` callback shorthand\n     * _.map(_.partition(users, { 'age': 1, 'active': false }), mapper);\n     * // => [['pebbles'], ['barney', 'fred']]\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.map(_.partition(users, 'active', false), mapper);\n     * // => [['barney', 'pebbles'], ['fred']]\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(_.partition(users, 'active'), mapper);\n     * // => [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Gets the property value of `path` from all elements in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|string} path The path of the property to pluck.\n     * @returns {Array} Returns the property values.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.pluck(users, 'user');\n     * // => ['barney', 'fred']\n     *\n     * var userIndex = _.indexBy(users, 'user');\n     * _.pluck(userIndex, 'age');\n     * // => [36, 40] (iteration order is not guaranteed)\n     */\n    function pluck(collection, path) {\n      return map(collection, property(path));\n    }\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` through `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not provided the first element of `collection` is used as the initial\n     * value. The `iteratee` is bound to `thisArg` and invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `includes`, `merge`, `sortByAll`, and `sortByOrder`\n     *\n     * @static\n     * @memberOf _\n     * @alias foldl, inject\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.reduce([1, 2], function(total, n) {\n     *   return total + n;\n     * });\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     *   return result;\n     * }, {});\n     * // => { 'a': 3, 'b': 6 } (iteration order is not guaranteed)\n     */\n    var reduce = createReduce(arrayReduce, baseEach);\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias foldr\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    var reduceRight = createReduce(arrayReduceRight, baseEachRight);\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.reject([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [1, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.reject(users, { 'age': 40, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.reject(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.reject(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function reject(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, function(value, index, collection) {\n        return !predicate(value, index, collection);\n      });\n    }\n\n    /**\n     * Gets a random element or `n` random elements from a collection.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to sample.\n     * @param {number} [n] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {*} Returns the random sample(s).\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     *\n     * _.sample([1, 2, 3, 4], 2);\n     * // => [3, 1]\n     */\n    function sample(collection, n, guard) {\n      if (guard ? isIterateeCall(collection, n, guard) : n == null) {\n        collection = toIterable(collection);\n        var length = collection.length;\n        return length > 0 ? collection[baseRandom(0, length - 1)] : undefined;\n      }\n      var index = -1,\n          result = toArray(collection),\n          length = result.length,\n          lastIndex = length - 1;\n\n      n = nativeMin(n < 0 ? 0 : (+n || 0), length);\n      while (++index < n) {\n        var rand = baseRandom(index, lastIndex),\n            value = result[rand];\n\n        result[rand] = result[index];\n        result[index] = value;\n      }\n      result.length = n;\n      return result;\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      return sample(collection, POSITIVE_INFINITY);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the size of `collection`.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      var length = collection ? getLength(collection) : 0;\n      return isLength(length) ? length : keys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * The function returns as soon as it finds a passing value and does not iterate\n     * over the entire collection. The predicate is bound to `thisArg` and invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias any\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.some(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = null;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection through `iteratee`. This method performs\n     * a stable sort, that is, it preserves the original sort order of equal elements.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return Math.sin(n);\n     * });\n     * // => [3, 1, 2]\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return this.sin(n);\n     * }, Math);\n     * // => [3, 1, 2]\n     *\n     * var users = [\n     *   { 'user': 'fred' },\n     *   { 'user': 'pebbles' },\n     *   { 'user': 'barney' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.sortBy(users, 'user'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function sortBy(collection, iteratee, thisArg) {\n      if (collection == null) {\n        return [];\n      }\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = null;\n      }\n      var index = -1;\n      iteratee = getCallback(iteratee, thisArg, 3);\n\n      var result = baseMap(collection, function(value, key, collection) {\n        return { 'criteria': iteratee(value, key, collection), 'index': ++index, 'value': value };\n      });\n      return baseSortBy(result, compareAscending);\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it can sort by multiple iteratees\n     * or property names.\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(Function|Function[]|Object|Object[]|string|string[])} iteratees\n     *  The iteratees to sort by, specified as individual values or arrays of values.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.map(_.sortByAll(users, ['user', 'age']), _.values);\n     * // => [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\n     *\n     * _.map(_.sortByAll(users, 'user', function(chr) {\n     *   return Math.floor(chr.age / 10);\n     * }), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    var sortByAll = restParam(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var guard = iteratees[2];\n      if (guard && isIterateeCall(iteratees[0], iteratees[1], guard)) {\n        iteratees.length = 1;\n      }\n      return baseSortByOrder(collection, baseFlatten(iteratees), []);\n    });\n\n    /**\n     * This method is like `_.sortByAll` except that it allows specifying the\n     * sort orders of the iteratees to sort by. A truthy value in `orders` will\n     * sort the corresponding property name in ascending order while a falsey\n     * value will sort it in descending order.\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} orders The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // sort by `user` in ascending order and by `age` in descending order\n     * _.map(_.sortByOrder(users, ['user', 'age'], [true, false]), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    function sortByOrder(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (guard && isIterateeCall(iteratees, orders, guard)) {\n        orders = null;\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseSortByOrder(collection, iteratees, orders);\n    }\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning an array of all elements that have equivalent\n     * property values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false, 'pets': ['hoppy'] },\n     *   { 'user': 'fred',   'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }\n     * ];\n     *\n     * _.pluck(_.where(users, { 'age': 36, 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\n     * // => ['fred']\n     */\n    function where(collection, source) {\n      return filter(collection, baseMatches(source));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the number of milliseconds that have elapsed since the Unix epoch\n     * (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @category Date\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => logs the number of milliseconds it took for the deferred function to be invoked\n     */\n    var now = nativeNow || function() {\n      return new Date().getTime();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it is called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => logs 'done saving!' after the two async saves have completed\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      n = nativeIsFinite(n = +n) ? n : 0;\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that accepts up to `n` arguments ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      if (guard && isIterateeCall(func, n, guard)) {\n        n = null;\n      }\n      n = (func && n == null) ? func.length : nativeMax(+n || 0, 0);\n      return createWrapper(func, ARY_FLAG, null, null, null, null, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it is called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery('#add').on('click', _.before(5, addContactToList));\n     * // => allows adding up to 4 contacts to the list\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = null;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and prepends any additional `_.bind` arguments to those provided to the\n     * bound function.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind` this method does not set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var greet = function(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * };\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // using placeholders\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = restParam(function(func, thisArg, partials) {\n      var bitmask = BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bind.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method. Method names may be specified as individual arguments or as arrays\n     * of method names. If no method names are provided all enumerable function\n     * properties, own and inherited, of `object` are bound.\n     *\n     * **Note:** This method does not set the \"length\" property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} [methodNames] The object method names to bind,\n     *  specified as individual method names or arrays of method names.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'onClick': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view);\n     * jQuery('#docs').on('click', view.onClick);\n     * // => logs 'clicked docs' when the element is clicked\n     */\n    var bindAll = restParam(function(object, methodNames) {\n      methodNames = methodNames.length ? baseFlatten(methodNames) : functions(object);\n\n      var index = -1,\n          length = methodNames.length;\n\n      while (++index < length) {\n        var key = methodNames[index];\n        object[key] = createWrapper(object[key], BIND_FLAG, object);\n      }\n      return object;\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` and prepends\n     * any additional `_.bindKey` arguments to those provided to the bound function.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist.\n     * See [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object the method belongs to.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // using placeholders\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = restParam(function(object, key, partials) {\n      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bindKey.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts one or more arguments of `func` that when\n     * called either invokes `func` returning its result, if all `func` arguments\n     * have been provided, or returns a function that accepts one or more of the\n     * remaining `func` arguments, and so on. The arity of `func` may be specified\n     * if `func.length` is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    var curry = createCurry(CURRY_FLAG);\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    var curryRight = createCurry(CURRY_RIGHT_FLAG);\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed invocations. Provide an options object to indicate that `func`\n     * should be invoked on the leading and/or trailing edge of the `wait` timeout.\n     * Subsequent calls to the debounced function return the result of the last\n     * `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the debounced function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=false] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n     *  delayed before it is invoked.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // avoid costly calculations while the window size is in flux\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // invoke `sendMail` when the click event is fired, debouncing subsequent calls\n     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // ensure `batchLog` is invoked once after 1 second of debounced calls\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', _.debounce(batchLog, 250, {\n     *   'maxWait': 1000\n     * }));\n     *\n     * // cancel a debounced call\n     * var todoChanges = _.debounce(batchLog, 1000);\n     * Object.observe(models.todo, todoChanges);\n     *\n     * Object.observe(models, function(changes) {\n     *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n     *     todoChanges.cancel();\n     *   }\n     * }, ['delete']);\n     *\n     * // ...at some point `models.todo` is changed\n     * models.todo.completed = true;\n     *\n     * // ...before 1 second has passed `models.todo` is deleted\n     * // which cancels the debounced `todoChanges` call\n     * delete models.todo;\n     */\n    function debounce(func, wait, options) {\n      var args,\n          maxTimeoutId,\n          result,\n          stamp,\n          thisArg,\n          timeoutId,\n          trailingCall,\n          lastCalled = 0,\n          maxWait = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = wait < 0 ? 0 : (+wait || 0);\n      if (options === true) {\n        var leading = true;\n        trailing = false;\n      } else if (isObject(options)) {\n        leading = options.leading;\n        maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);\n        trailing = 'trailing' in options ? options.trailing : trailing;\n      }\n\n      function cancel() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        if (maxTimeoutId) {\n          clearTimeout(maxTimeoutId);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n      }\n\n      function delayed() {\n        var remaining = wait - (now() - stamp);\n        if (remaining <= 0 || remaining > wait) {\n          if (maxTimeoutId) {\n            clearTimeout(maxTimeoutId);\n          }\n          var isCalled = trailingCall;\n          maxTimeoutId = timeoutId = trailingCall = undefined;\n          if (isCalled) {\n            lastCalled = now();\n            result = func.apply(thisArg, args);\n            if (!timeoutId && !maxTimeoutId) {\n              args = thisArg = null;\n            }\n          }\n        } else {\n          timeoutId = setTimeout(delayed, remaining);\n        }\n      }\n\n      function maxDelayed() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n        if (trailing || (maxWait !== wait)) {\n          lastCalled = now();\n          result = func.apply(thisArg, args);\n          if (!timeoutId && !maxTimeoutId) {\n            args = thisArg = null;\n          }\n        }\n      }\n\n      function debounced() {\n        args = arguments;\n        stamp = now();\n        thisArg = this;\n        trailingCall = trailing && (timeoutId || !leading);\n\n        if (maxWait === false) {\n          var leadingCall = leading && !timeoutId;\n        } else {\n          if (!maxTimeoutId && !leading) {\n            lastCalled = stamp;\n          }\n          var remaining = maxWait - (stamp - lastCalled),\n              isCalled = remaining <= 0 || remaining > maxWait;\n\n          if (isCalled) {\n            if (maxTimeoutId) {\n              maxTimeoutId = clearTimeout(maxTimeoutId);\n            }\n            lastCalled = stamp;\n            result = func.apply(thisArg, args);\n          }\n          else if (!maxTimeoutId) {\n            maxTimeoutId = setTimeout(maxDelayed, remaining);\n          }\n        }\n        if (isCalled && timeoutId) {\n          timeoutId = clearTimeout(timeoutId);\n        }\n        else if (!timeoutId && wait !== maxWait) {\n          timeoutId = setTimeout(delayed, wait);\n        }\n        if (leadingCall) {\n          isCalled = true;\n          result = func.apply(thisArg, args);\n        }\n        if (isCalled && !timeoutId && !maxTimeoutId) {\n          args = thisArg = null;\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // logs 'deferred' after one or more milliseconds\n     */\n    var defer = restParam(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => logs 'later' after one second\n     */\n    var delay = restParam(function(func, wait, args) {\n      return baseDelay(func, wait, args);\n    });\n\n    /**\n     * Creates a function that returns the result of invoking the provided\n     * functions with the `this` binding of the created function, where each\n     * successive invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow(_.add, square);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the provided functions from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias backflow, compose\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight(square, _.add);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is coerced to a string and used as the\n     * cache key. The `func` is invoked with the `this` binding of the memoized\n     * function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the [`Map`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-properties-of-the-map-prototype-object)\n     * method interface of `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoizing function.\n     * @example\n     *\n     * var upperCase = _.memoize(function(string) {\n     *   return string.toUpperCase();\n     * });\n     *\n     * upperCase('fred');\n     * // => 'FRED'\n     *\n     * // modifying the result cache\n     * upperCase.cache.set('fred', 'BARNEY');\n     * upperCase('fred');\n     * // => 'BARNEY'\n     *\n     * // replacing `_.memoize.Cache`\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'barney' };\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'fred' }\n     *\n     * _.memoize.Cache = WeakMap;\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'barney' }\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result);\n        return result;\n      };\n      memoized.cache = new memoize.Cache;\n      return memoized;\n    }\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        return !predicate.apply(this, arguments);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first call. The `func` is invoked\n     * with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // `initialize` invokes `createApplication` once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with `partial` arguments prepended\n     * to those provided to the new function. This method is like `_.bind` except\n     * it does **not** alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // using placeholders\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = createPartial(PARTIAL_FLAG);\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to those provided to the new function.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // using placeholders\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = createPartial(PARTIAL_RIGHT_FLAG);\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified indexes where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, 2, 0, 1);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     *\n     * var map = _.rearg(_.map, [1, 0]);\n     * map(function(n) {\n     *   return n * 3;\n     * }, [1, 2, 3]);\n     * // => [3, 6, 9]\n     */\n    var rearg = restParam(function(func, indexes) {\n      return createWrapper(func, REARG_FLAG, null, null, null, baseFlatten(indexes));\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as an array.\n     *\n     * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.restParam(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function restParam(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            rest = Array(length);\n\n        while (++index < length) {\n          rest[index] = args[start + index];\n        }\n        switch (start) {\n          case 0: return func.call(this, rest);\n          case 1: return func.call(this, args[0], rest);\n          case 2: return func.call(this, args[0], args[1], rest);\n        }\n        var otherArgs = Array(start + 1);\n        index = -1;\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = rest;\n        return func.apply(this, otherArgs);\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the created\n     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n     *\n     * **Note:** This method is based on the [spread operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * // with a Promise\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function(array) {\n        return func.apply(this, array);\n      };\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed invocations. Provide an options object to indicate\n     * that `func` should be invoked on the leading and/or trailing edge of the\n     * `wait` timeout. Subsequent calls to the throttled function return the\n     * result of the last `func` call.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the throttled function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=true] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // avoid excessively updating the position while scrolling\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes\n     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n     *   'trailing': false\n     * }));\n     *\n     * // cancel a trailing throttled call\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (options === false) {\n        leading = false;\n      } else if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      debounceOptions.leading = leading;\n      debounceOptions.maxWait = +wait;\n      debounceOptions.trailing = trailing;\n      return debounce(func, wait, debounceOptions);\n    }\n\n    /**\n     * Creates a function that provides `value` to the wrapper function as its\n     * first argument. Any additional arguments provided to the function are\n     * appended to those provided to the wrapper function. The wrapper is invoked\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      wrapper = wrapper == null ? identity : wrapper;\n      return createWrapper(wrapper, PARTIAL_FLAG, null, [value], []);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n     * otherwise they are assigned by reference. If `customizer` is provided it is\n     * invoked to produce the cloned values. If `customizer` returns `undefined`\n     * cloning is handled by the method instead. The `customizer` is bound to\n     * `thisArg` and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var shallow = _.clone(users);\n     * shallow[0] === users[0];\n     * // => true\n     *\n     * var deep = _.clone(users, true);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.clone(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 0\n     */\n    function clone(value, isDeep, customizer, thisArg) {\n      if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\n        isDeep = false;\n      }\n      else if (typeof isDeep == 'function') {\n        thisArg = customizer;\n        customizer = isDeep;\n        isDeep = false;\n      }\n      return typeof customizer == 'function'\n        ? baseClone(value, isDeep, bindCallback(customizer, thisArg, 1))\n        : baseClone(value, isDeep);\n    }\n\n    /**\n     * Creates a deep clone of `value`. If `customizer` is provided it is invoked\n     * to produce the cloned values. If `customizer` returns `undefined` cloning\n     * is handled by the method instead. The `customizer` is bound to `thisArg`\n     * and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the deep cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var deep = _.cloneDeep(users);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.cloneDeep(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 20\n     */\n    function cloneDeep(value, customizer, thisArg) {\n      return typeof customizer == 'function'\n        ? baseClone(value, true, bindCallback(customizer, thisArg, 1))\n        : baseClone(value, true);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`, else `false`.\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    function gt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    function gte(value, other) {\n      return value >= other;\n    }\n\n    /**\n     * Checks if `value` is classified as an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      return isObjectLike(value) && isArrayLike(value) && objToString.call(value) == argsTag;\n    }\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(function() { return arguments; }());\n     * // => false\n     */\n    var isArray = nativeIsArray || function(value) {\n      return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n    };\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false || (isObjectLike(value) && objToString.call(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    function isDate(value) {\n      return isObjectLike(value) && objToString.call(value) == dateTag;\n    }\n\n    /**\n     * Checks if `value` is a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return !!value && value.nodeType === 1 && isObjectLike(value) &&\n        (objToString.call(value).indexOf('Element') > -1);\n    }\n    // Fallback for environments without DOM support.\n    if (!support.dom) {\n      isElement = function(value) {\n        return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n      };\n    }\n\n    /**\n     * Checks if `value` is empty. A value is considered empty unless it is an\n     * `arguments` object, array, string, or jQuery-like collection with a length\n     * greater than `0` or an object with own enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Array|Object|string} value The value to inspect.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) && (isArray(value) || isString(value) || isArguments(value) ||\n          (isObjectLike(value) && isFunction(value.splice)))) {\n        return !value.length;\n      }\n      return !keys(value).length;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent. If `customizer` is provided it is invoked to compare values.\n     * If `customizer` returns `undefined` comparisons are handled by the method\n     * instead. The `customizer` is bound to `thisArg` and invoked with three\n     * arguments: (value, other [, index|key]).\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. Functions and DOM nodes\n     * are **not** supported. Provide a customizer function to extend support\n     * for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @alias eq\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'fred' };\n     *\n     * object == other;\n     * // => false\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * // using a customizer callback\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqual(array, other, function(value, other) {\n     *   if (_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/)) {\n     *     return true;\n     *   }\n     * });\n     * // => true\n     */\n    function isEqual(value, other, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return  result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      return isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag;\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on [`Number.isFinite`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.isfinite).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(10);\n     * // => true\n     *\n     * _.isFinite('10');\n     * // => false\n     *\n     * _.isFinite(true);\n     * // => false\n     *\n     * _.isFinite(Object(10));\n     * // => false\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     */\n    var isFinite = nativeNumIsFinite || function(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    };\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    var isFunction = !(baseIsFunction(/x/) || (Uint8Array && !baseIsFunction(Uint8Array))) ? baseIsFunction : function(value) {\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in older versions of Chrome and Safari which return 'function' for regexes\n      // and Safari 8 equivalents which return 'object' for typed array constructors.\n      return objToString.call(value) == funcTag;\n    };\n\n    /**\n     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(1);\n     * // => false\n     */\n    function isObject(value) {\n      // Avoid a V8 JIT bug in Chrome 19-20.\n      // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n      var type = typeof value;\n      return !!value && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Performs a deep comparison between `object` and `source` to determine if\n     * `object` contains equivalent property values. If `customizer` is provided\n     * it is invoked to compare values. If `customizer` returns `undefined`\n     * comparisons are handled by the method instead. The `customizer` is bound\n     * to `thisArg` and invoked with three arguments: (value, other, index|key).\n     *\n     * **Note:** This method supports comparing properties of arrays, booleans,\n     * `Date` objects, numbers, `Object` objects, regexes, and strings. Functions\n     * and DOM nodes are **not** supported. Provide a customizer function to extend\n     * support for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.isMatch(object, { 'age': 40 });\n     * // => true\n     *\n     * _.isMatch(object, { 'age': 36 });\n     * // => false\n     *\n     * // using a customizer callback\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatch(object, source, function(value, other) {\n     *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n     * });\n     * // => true\n     */\n    function isMatch(object, source, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      return baseIsMatch(object, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\n     * which returns `true` for `undefined` and other non-numeric values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some host objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a native function.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (value == null) {\n        return false;\n      }\n      if (objToString.call(value) == funcTag) {\n        return reIsNative.test(fnToString.call(value));\n      }\n      return isObjectLike(value) && reIsHostCtor.test(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n     * as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isNumber(8.4);\n     * // => true\n     *\n     * _.isNumber(NaN);\n     * // => true\n     *\n     * _.isNumber('8.4');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' || (isObjectLike(value) && objToString.call(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * **Note:** This method assumes objects created by the `Object` constructor\n     * have no inherited enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    var isPlainObject = !getPrototypeOf ? shimIsPlainObject : function(value) {\n      if (!(value && objToString.call(value) == objectTag)) {\n        return false;\n      }\n      var valueOf = getNative(value, 'valueOf'),\n          objProto = valueOf && (objProto = getPrototypeOf(valueOf)) && getPrototypeOf(objProto);\n\n      return objProto\n        ? (value == objProto || getPrototypeOf(value) == objProto)\n        : shimIsPlainObject(value);\n    };\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    function isRegExp(value) {\n      return isObjectLike(value) && objToString.call(value) == regexpTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    function isTypedArray(value) {\n      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n    }\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`, else `false`.\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    function lt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    function lte(value, other) {\n      return value <= other;\n    }\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * (function() {\n     *   return _.toArray(arguments).slice(1);\n     * }(1, 2, 3));\n     * // => [2, 3]\n     */\n    function toArray(value) {\n      var length = value ? getLength(value) : 0;\n      if (!isLength(length)) {\n        return values(value);\n      }\n      if (!length) {\n        return [];\n      }\n      return arrayCopy(value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable\n     * properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return baseCopy(value, keysIn(value));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object. Subsequent sources overwrite property assignments of previous sources.\n     * If `customizer` is provided it is invoked to produce the assigned values.\n     * The `customizer` is bound to `thisArg` and invoked with five arguments:\n     * (objectValue, sourceValue, key, object, source).\n     *\n     * **Note:** This method mutates `object` and is based on\n     * [`Object.assign`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign).\n     *\n     * @static\n     * @memberOf _\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using a customizer callback\n     * var defaults = _.partialRight(_.assign, function(value, other) {\n     *   return _.isUndefined(value) ? other : value;\n     * });\n     *\n     * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var assign = createAssigner(function(object, source, customizer) {\n      return customizer\n        ? assignWith(object, source, customizer)\n        : baseAssign(object, source);\n    });\n\n    /**\n     * Creates an object that inherits from the given `prototype` object. If a\n     * `properties` object is provided its own enumerable properties are assigned\n     * to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties, guard) {\n      var result = baseCreate(prototype);\n      if (guard && isIterateeCall(prototype, properties, guard)) {\n        properties = null;\n      }\n      return properties ? baseAssign(result, properties) : result;\n    }\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object for all destination properties that resolve to `undefined`. Once a\n     * property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var defaults = restParam(function(args) {\n      var object = args[0];\n      if (object == null) {\n        return object;\n      }\n      args.push(assignDefaults);\n      return assign.apply(undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    var findKey = createFindKey(baseForOwn);\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => returns `pebbles` assuming `_.findKey` returns `barney`\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    var findLastKey = createFindKey(baseForOwnRight);\n\n    /**\n     * Iterates over own and inherited enumerable properties of an object invoking\n     * `iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a', 'b', and 'c' (iteration order is not guaranteed)\n     */\n    var forIn = createForIn(baseFor);\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'\n     */\n    var forInRight = createForIn(baseForRight);\n\n    /**\n     * Iterates over own enumerable properties of an object invoking `iteratee`\n     * for each property. The `iteratee` is bound to `thisArg` and invoked with\n     * three arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a' and 'b' (iteration order is not guaranteed)\n     */\n    var forOwn = createForOwn(baseForOwn);\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'b' and 'a' assuming `_.forOwn` logs 'a' and 'b'\n     */\n    var forOwnRight = createForOwn(baseForOwnRight);\n\n    /**\n     * Creates an array of function property names from all enumerable properties,\n     * own and inherited, of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @alias methods\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the new array of property names.\n     * @example\n     *\n     * _.functions(_);\n     * // => ['after', 'ary', 'assign', ...]\n     */\n    function functions(object) {\n      return baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the property value at `path` of `object`. If the resolved value is\n     * `undefined` the `defaultValue` is used in its place.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, toPath(path), path + '');\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` is a direct property, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': { 'c': 3 } } };\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b.c');\n     * // => true\n     *\n     * _.has(object, ['a', 'b', 'c']);\n     * // => true\n     */\n    function has(object, path) {\n      if (object == null) {\n        return false;\n      }\n      var result = hasOwnProperty.call(object, path);\n      if (!result && !isKey(path)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        if (object == null) {\n          return false;\n        }\n        path = last(path);\n        result = hasOwnProperty.call(object, path);\n      }\n      return result || (isLength(object.length) && isIndex(path, object.length) &&\n        (isArray(object) || isArguments(object)));\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite property\n     * assignments of previous values unless `multiValue` is `true`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {boolean} [multiValue] Allow multiple values per key.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     *\n     * // with `multiValue`\n     * _.invert(object, true);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function invert(object, multiValue, guard) {\n      if (guard && isIterateeCall(object, multiValue, guard)) {\n        multiValue = null;\n      }\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key];\n\n        if (multiValue) {\n          if (hasOwnProperty.call(result, value)) {\n            result[value].push(key);\n          } else {\n            result[value] = [key];\n          }\n        }\n        else {\n          result[value] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    var keys = !nativeKeys ? shimKeys : function(object) {\n      var Ctor = object == null ? null : object.constructor;\n      if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n          (typeof object != 'function' && isArrayLike(object))) {\n        return shimKeys(object);\n      }\n      return isObject(object) ? nativeKeys(object) : [];\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      if (object == null) {\n        return [];\n      }\n      if (!isObject(object)) {\n        object = Object(object);\n      }\n      var length = object.length;\n      length = (length && isLength(length) &&\n        (isArray(object) || isArguments(object)) && length) || 0;\n\n      var Ctor = object.constructor,\n          index = -1,\n          isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n          result = Array(length),\n          skipIndexes = length > 0;\n\n      while (++index < length) {\n        result[index] = (index + '');\n      }\n      for (var key in object) {\n        if (!(skipIndexes && isIndex(key, length)) &&\n            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * property of `object` through `iteratee`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    var mapKeys = createObjectMapper(true);\n\n    /**\n     * Creates an object with the same keys as `object` and values generated by\n     * running each own enumerable property of `object` through `iteratee`. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, key, object).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapValues({ 'a': 1, 'b': 2 }, function(n) {\n     *   return n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * // using the `_.property` callback shorthand\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    var mapValues = createObjectMapper();\n\n    /**\n     * Recursively merges own enumerable properties of the source object(s), that\n     * don't resolve to `undefined` into the destination object. Subsequent sources\n     * overwrite property assignments of previous sources. If `customizer` is\n     * provided it is invoked to produce the merged values of the destination and\n     * source properties. If `customizer` returns `undefined` merging is handled\n     * by the method instead. The `customizer` is bound to `thisArg` and invoked\n     * with five arguments: (objectValue, sourceValue, key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var users = {\n     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n     * };\n     *\n     * var ages = {\n     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n     * };\n     *\n     * _.merge(users, ages);\n     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n     *\n     * // using a customizer callback\n     * var object = {\n     *   'fruits': ['apple'],\n     *   'vegetables': ['beet']\n     * };\n     *\n     * var other = {\n     *   'fruits': ['banana'],\n     *   'vegetables': ['carrot']\n     * };\n     *\n     * _.merge(object, other, function(a, b) {\n     *   if (_.isArray(a)) {\n     *     return a.concat(b);\n     *   }\n     * });\n     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n     */\n    var merge = createAssigner(baseMerge);\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable properties of `object` that are not omitted.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to omit, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.omit(object, 'age');\n     * // => { 'user': 'fred' }\n     *\n     * _.omit(object, _.isNumber);\n     * // => { 'user': 'fred' }\n     */\n    var omit = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      if (typeof props[0] != 'function') {\n        var props = arrayMap(baseFlatten(props), String);\n        return pickByArray(object, baseDifference(keysIn(object), props));\n      }\n      var predicate = bindCallback(props[0], props[1], 3);\n      return pickByCallback(object, function(value, key, object) {\n        return !predicate(value, key, object);\n      });\n    });\n\n    /**\n     * Creates a two dimensional array of the key-value pairs for `object`,\n     * e.g. `[[key1, value1], [key2, value2]]`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the new array of key-value pairs.\n     * @example\n     *\n     * _.pairs({ 'barney': 36, 'fred': 40 });\n     * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n     */\n    function pairs(object) {\n      object = toObject(object);\n\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        var key = props[index];\n        result[index] = [key, object[key]];\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties. Property\n     * names may be specified as individual arguments or as arrays of property\n     * names. If `predicate` is provided it is invoked for each property of `object`\n     * picking the properties `predicate` returns truthy for. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to pick, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.pick(object, 'user');\n     * // => { 'user': 'fred' }\n     *\n     * _.pick(object, _.isString);\n     * // => { 'user': 'fred' }\n     */\n    var pick = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      return typeof props[0] == 'function'\n        ? pickByCallback(object, bindCallback(props[0], props[1], 3))\n        : pickByArray(object, baseFlatten(props));\n    });\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a function\n     * it is invoked with the `this` binding of its parent object and its result\n     * is returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a.b.c', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a.b.c', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      var result = object == null ? undefined : object[path];\n      if (result === undefined) {\n        if (object != null && !isKey(path, object)) {\n          path = toPath(path);\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          result = object == null ? undefined : object[last(path)];\n        }\n        result = result === undefined ? defaultValue : result;\n      }\n      return isFunction(result) ? result.call(object) : result;\n    }\n\n    /**\n     * Sets the property value of `path` on `object`. If a portion of `path`\n     * does not exist it is created.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to augment.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, 'x[0].y.z', 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      if (object == null) {\n        return object;\n      }\n      var pathKey = (path + '');\n      path = (object[pathKey] != null || isKey(path, object)) ? [pathKey] : toPath(path);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = path[index];\n        if (isObject(nested)) {\n          if (index == lastIndex) {\n            nested[key] = value;\n          } else if (nested[key] == null) {\n            nested[key] = isIndex(path[index + 1]) ? [] : {};\n          }\n        }\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own enumerable\n     * properties through `iteratee`, with each invocation potentially mutating\n     * the `accumulator` object. The `iteratee` is bound to `thisArg` and invoked\n     * with four arguments: (accumulator, value, key, object). Iteratee functions\n     * may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Array|Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     */\n    function transform(object, iteratee, accumulator, thisArg) {\n      var isArr = isArray(object) || isTypedArray(object);\n      iteratee = getCallback(iteratee, thisArg, 4);\n\n      if (accumulator == null) {\n        if (isArr || isObject(object)) {\n          var Ctor = object.constructor;\n          if (isArr) {\n            accumulator = isArray(object) ? new Ctor : [];\n          } else {\n            accumulator = baseCreate(isFunction(Ctor) ? Ctor.prototype : null);\n          }\n        } else {\n          accumulator = {};\n        }\n      }\n      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Creates an array of the own enumerable property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property values\n     * of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Checks if `n` is between `start` and up to but not including, `end`. If\n     * `end` is not specified it is set to `start` with `start` then set to `0`.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} n The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `n` is in the range, else `false`.\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     */\n    function inRange(value, start, end) {\n      start = +start || 0;\n      if (typeof end === 'undefined') {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      return value >= nativeMin(start, end) && value < nativeMax(start, end);\n    }\n\n    /**\n     * Produces a random number between `min` and `max` (inclusive). If only one\n     * argument is provided a number between `0` and the given number is returned.\n     * If `floating` is `true`, or either `min` or `max` are floats, a floating-point\n     * number is returned instead of an integer.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} [min=0] The minimum possible value.\n     * @param {number} [max=1] The maximum possible value.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(min, max, floating) {\n      if (floating && isIterateeCall(min, max, floating)) {\n        max = floating = null;\n      }\n      var noMin = min == null,\n          noMax = max == null;\n\n      if (floating == null) {\n        if (noMax && typeof min == 'boolean') {\n          floating = min;\n          min = 1;\n        }\n        else if (typeof max == 'boolean') {\n          floating = max;\n          noMax = true;\n        }\n      }\n      if (noMin && noMax) {\n        max = 1;\n        noMax = false;\n      }\n      min = +min || 0;\n      if (noMax) {\n        max = min;\n        min = 0;\n      } else {\n        max = +max || 0;\n      }\n      if (floating || min % 1 || max % 1) {\n        var rand = nativeRandom();\n        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1)))), max);\n      }\n      return baseRandom(min, max);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__foo_bar__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? (word.charAt(0).toUpperCase() + word.slice(1)) : word);\n    });\n\n    /**\n     * Capitalizes the first character of `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('fred');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      string = baseToString(string);\n      return string && (string.charAt(0).toUpperCase() + string.slice(1));\n    }\n\n    /**\n     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = baseToString(string);\n      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search from.\n     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = baseToString(string);\n      target = (target + '');\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : nativeMin(position < 0 ? 0 : (+position || 0), length);\n\n      position -= target.length;\n      return position >= 0 && string.indexOf(target, position) == position;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\", in `string` to\n     * their corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional characters\n     * use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value.\n     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * Backticks are escaped because in Internet Explorer < 9, they can break out\n     * of attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n     * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)\n     * for more details.\n     *\n     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)\n     * to reduce XSS vectors.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      // Reset `lastIndex` because in IE < 9 `String#replace` does not.\n      string = baseToString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n     * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n     */\n    function escapeRegExp(string) {\n      string = baseToString(string);\n      return (string && reHasRegExpChars.test(string))\n        ? string.replace(reRegExpChars, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__foo_bar__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = baseToString(string);\n      length = +length;\n\n      var strLength = string.length;\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return string;\n      }\n      var mid = (length - strLength) / 2,\n          leftLength = floor(mid),\n          rightLength = ceil(mid);\n\n      chars = createPadding('', rightLength, chars);\n      return chars.slice(0, leftLength) + string + chars;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padLeft('abc', 6);\n     * // => '   abc'\n     *\n     * _.padLeft('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padLeft('abc', 3);\n     * // => 'abc'\n     */\n    var padLeft = createPadDir();\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padRight('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padRight('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padRight('abc', 3);\n     * // => 'abc'\n     */\n    var padRight = createPadDir(true);\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n     * in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#E)\n     * of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard && isIterateeCall(string, radix, guard)) {\n        radix = 0;\n      }\n      return nativeParseInt(string, radix);\n    }\n    // Fallback for environments with pre-ES5 implementations.\n    if (nativeParseInt(whitespace + '08') != 8) {\n      parseInt = function(string, radix, guard) {\n        // Firefox < 21 and Opera < 15 follow ES3 for `parseInt`.\n        // Chrome fails to trim leading <BOM> whitespace characters.\n        // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n        if (guard ? isIterateeCall(string, radix, guard) : radix == null) {\n          radix = 0;\n        } else if (radix) {\n          radix = +radix;\n        }\n        string = trim(string);\n        return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n      };\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=0] The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n) {\n      var result = '';\n      string = baseToString(string);\n      n = +n;\n      if (n < 1 || !string || !nativeIsFinite(n)) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = floor(n / 2);\n        string += string;\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--foo-bar');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__foo_bar__');\n     * // => 'Foo Bar'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + (word.charAt(0).toUpperCase() + word.slice(1));\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = baseToString(string);\n      position = position == null\n        ? 0\n        : nativeMin(position < 0 ? 0 : (+position || 0), string.length);\n\n      return string.lastIndexOf(target, position) == position;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is provided it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options] The options object.\n     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n     * @param {Object} [options.imports] An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n     * @param {string} [options.variable] The data object variable name.\n     * @param- {Object} [otherOptions] Enables the legacy `options` param signature.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // using the \"interpolate\" delimiter to create a compiled template\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // using the HTML \"escape\" delimiter to escape data property values\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // using the \"evaluate\" delimiter to execute JavaScript and generate HTML\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the internal `print` function in \"evaluate\" delimiters\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // using the ES delimiter as an alternative to the default \"interpolate\" delimiter\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // using custom template delimiters\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // using backslashes to treat delimiters as plain text\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // using the `imports` option to import `jQuery` as `jq`\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the `sourceURL` option to specify a custom sourceURL for the template\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n     *\n     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // using the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and a stack trace\n     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, otherOptions) {\n      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (otherOptions && isIterateeCall(string, options, otherOptions)) {\n        options = otherOptions = null;\n      }\n      string = baseToString(string);\n      options = assignWith(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);\n\n      var imports = assignWith(baseAssign({}, options.imports), settings.imports, assignOwnDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products requires returning the `match`\n        // string in order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + 1);\n      }\n      chars = (chars + '');\n      return string.slice(charsLeftIndex(string, chars), charsRightIndex(string, chars) + 1);\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimLeft('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimLeft('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimLeft(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string));\n      }\n      return string.slice(charsLeftIndex(string, (chars + '')));\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimRight('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimRight('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimRight(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(0, trimmedRightIndex(string) + 1);\n      }\n      return string.slice(0, charsRightIndex(string, (chars + '')) + 1);\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object|number} [options] The options object or maximum string length.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.trunc('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', 24);\n     * // => 'hi-diddly-ho there, n...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function trunc(string, options, guard) {\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = null;\n      }\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (options != null) {\n        if (isObject(options)) {\n          var separator = 'separator' in options ? options.separator : separator;\n          length = 'length' in options ? (+options.length || 0) : length;\n          omission = 'omission' in options ? baseToString(options.omission) : omission;\n        } else {\n          length = +options || 0;\n        }\n      }\n      string = baseToString(string);\n      if (length >= string.length) {\n        return string;\n      }\n      var end = length - omission.length;\n      if (end < 1) {\n        return omission;\n      }\n      var result = string.slice(0, end);\n      if (separator == null) {\n        return result + omission;\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              newEnd,\n              substring = string.slice(0, end);\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, (reFlags.exec(separator) || '') + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            newEnd = match.index;\n          }\n          result = result.slice(0, newEnd == null ? end : newEnd);\n        }\n      } else if (string.indexOf(separator, end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n     * corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n     * entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = baseToString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      if (guard && isIterateeCall(string, pattern, guard)) {\n        pattern = null;\n      }\n      string = baseToString(string);\n      return string.match(pattern || reWords) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function} func The function to attempt.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // avoid throwing errors for invalid selectors\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = restParam(function(func, args) {\n      try {\n        return func.apply(undefined, args);\n      } catch(e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and arguments of the created function. If `func` is a property name the\n     * created callback returns the property value for a given element. If `func`\n     * is an object the created callback returns `true` for elements that contain\n     * the equivalent object properties, otherwise it returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias iteratee\n     * @category Utility\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // wrap to create custom callback shorthands\n     * _.callback = _.wrap(_.callback, function(callback, func, thisArg) {\n     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(func);\n     *   if (!match) {\n     *     return callback(func, thisArg);\n     *   }\n     *   return function(object) {\n     *     return match[2] == 'gt'\n     *       ? object[match[1]] > match[3]\n     *       : object[match[1]] < match[3];\n     *   };\n     * });\n     *\n     * _.filter(users, 'age__gt36');\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     */\n    function callback(func, thisArg, guard) {\n      if (guard && isIterateeCall(func, thisArg, guard)) {\n        thisArg = null;\n      }\n      return isObjectLike(func)\n        ? matches(func)\n        : baseCallback(func, thisArg);\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var getter = _.constant(object);\n     *\n     * getter() === object;\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * This method returns the first argument provided to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.identity(object) === object;\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that performs a deep comparison between a given object\n     * and `source`, returning `true` if the given object has equivalent property\n     * values, else `false`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that compares the property value of `path` on a given\n     * object to `value`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * _.find(users, _.matchesProperty('user', 'fred'));\n     * // => { 'user': 'fred' }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, true));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` on a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': _.constant(2) } } },\n     *   { 'a': { 'b': { 'c': _.constant(1) } } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.invoke(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    var method = restParam(function(path, args) {\n      return function(object) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path on `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = restParam(function(object, args) {\n      return function(path) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable function properties of a source object to the\n     * destination object. If `object` is a function then methods are added to\n     * its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.chain=true] Specify whether the functions added\n     *  are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      if (options == null) {\n        var isObj = isObject(source),\n            props = isObj ? keys(source) : null,\n            methodNames = (props && props.length) ? baseFunctions(source, props) : null;\n\n        if (!(methodNames ? methodNames.length : isObj)) {\n          methodNames = false;\n          options = source;\n          source = object;\n          object = this;\n        }\n      }\n      if (!methodNames) {\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = true,\n          index = -1,\n          isFunc = isFunction(object),\n          length = methodNames.length;\n\n      if (options === false) {\n        chain = false;\n      } else if (isObject(options) && 'chain' in options) {\n        chain = options.chain;\n      }\n      while (++index < length) {\n        var methodName = methodNames[index],\n            func = source[methodName];\n\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = (function(func) {\n            return function() {\n              var chainAll = this.__chain__;\n              if (chain || chainAll) {\n                var result = object(this.__wrapped__),\n                    actions = result.__actions__ = arrayCopy(this.__actions__);\n\n                actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n                result.__chain__ = chainAll;\n                return result;\n              }\n              var args = [this.value()];\n              push.apply(args, arguments);\n              return func.apply(object, args);\n            };\n          }(func));\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      context._ = oldDash;\n      return this;\n    }\n\n    /**\n     * A no-operation function that returns `undefined` regardless of the\n     * arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.noop(object) === undefined;\n     * // => true\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that returns the property value at `path` on a\n     * given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': 2 } } },\n     *   { 'a': { 'b': { 'c': 1 } } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the property value at a given path on `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return baseGet(object, toPath(path), path + '');\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. If `end` is not specified it is\n     * set to `start` with `start` then set to `0`. If `end` is less than `start`\n     * a zero-length range is created unless a negative `step` is specified.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the new array of numbers.\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    function range(start, end, step) {\n      if (step && isIterateeCall(start, end, step)) {\n        end = step = null;\n      }\n      start = +start || 0;\n      step = step == null ? 1 : (+step || 0);\n\n      if (end == null) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      // Use `Array(length)` so engines like Chakra and V8 avoid slower modes.\n      // See https://youtu.be/XAqIpGU8ZZk#t=17m25s for more details.\n      var index = -1,\n          length = nativeMax(ceil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the iteratee function `n` times, returning an array of the results\n     * of each invocation. The `iteratee` is bound to `thisArg` and invoked with\n     * one argument; (index).\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * var diceRolls = _.times(3, _.partial(_.random, 1, 6, false));\n     * // => [3, 6, 4]\n     *\n     * _.times(3, function(n) {\n     *   mage.castSpell(n);\n     * });\n     * // => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2`\n     *\n     * _.times(3, function(n) {\n     *   this.cast(n);\n     * }, mage);\n     * // => also invokes `mage.castSpell(n)` three times\n     */\n    function times(n, iteratee, thisArg) {\n      n = floor(n);\n\n      // Exit early to avoid a JSC JIT bug in Safari 8\n      // where `Array(0)` is treated as `Array(1)`.\n      if (n < 1 || !nativeIsFinite(n)) {\n        return [];\n      }\n      var index = -1,\n          result = Array(nativeMin(n, MAX_ARRAY_LENGTH));\n\n      iteratee = bindCallback(iteratee, thisArg, 1);\n      while (++index < n) {\n        if (index < MAX_ARRAY_LENGTH) {\n          result[index] = iteratee(index);\n        } else {\n          iteratee(index);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is provided the ID is appended to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {string} [prefix] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return baseToString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} augend The first number to add.\n     * @param {number} addend The second number to add.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    function add(augend, addend) {\n      return (+augend || 0) + (+addend || 0);\n    }\n\n    /**\n     * Gets the maximum value of `collection`. If `collection` is empty or falsey\n     * `-Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => -Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.max(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.max(users, 'age');\n     * // => { 'user': 'fred', 'age': 40 }\n     */\n    var max = createExtremum(gt, NEGATIVE_INFINITY);\n\n    /**\n     * Gets the minimum value of `collection`. If `collection` is empty or falsey\n     * `Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.min(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.min(users, 'age');\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var min = createExtremum(lt, POSITIVE_INFINITY);\n\n    /**\n     * Gets the sum of the values in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 6]);\n     * // => 10\n     *\n     * _.sum({ 'a': 4, 'b': 6 });\n     * // => 10\n     *\n     * var objects = [\n     *   { 'n': 4 },\n     *   { 'n': 6 }\n     * ];\n     *\n     * _.sum(objects, function(object) {\n     *   return object.n;\n     * });\n     * // => 10\n     *\n     * // using the `_.property` callback shorthand\n     * _.sum(objects, 'n');\n     * // => 10\n     */\n    function sum(collection, iteratee, thisArg) {\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = null;\n      }\n      var callback = getCallback(),\n          noIteratee = iteratee == null;\n\n      if (!(noIteratee && callback === baseCallback)) {\n        noIteratee = false;\n        iteratee = callback(iteratee, thisArg, 3);\n      }\n      return noIteratee\n        ? arraySum(isArray(collection) ? collection : toIterable(collection))\n        : baseSum(collection, iteratee);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    // Add functions to the `Map` cache.\n    MapCache.prototype['delete'] = mapDelete;\n    MapCache.prototype.get = mapGet;\n    MapCache.prototype.has = mapHas;\n    MapCache.prototype.set = mapSet;\n\n    // Add functions to the `Set` cache.\n    SetCache.prototype.push = cachePush;\n\n    // Assign cache to `_.memoize`.\n    memoize.Cache = MapCache;\n\n    // Add functions that return wrapped values when chaining.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.callback = callback;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.functions = functions;\n    lodash.groupBy = groupBy;\n    lodash.indexBy = indexBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.invert = invert;\n    lodash.invoke = invoke;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.omit = omit;\n    lodash.once = once;\n    lodash.pairs = pairs;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pluck = pluck;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.restParam = restParam;\n    lodash.set = set;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortByAll = sortByAll;\n    lodash.sortByOrder = sortByOrder;\n    lodash.spread = spread;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.times = times;\n    lodash.toArray = toArray;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.union = union;\n    lodash.uniq = uniq;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.where = where;\n    lodash.without = without;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.backflow = flowRight;\n    lodash.collect = map;\n    lodash.compose = flowRight;\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.extend = assign;\n    lodash.iteratee = callback;\n    lodash.methods = functions;\n    lodash.object = zipObject;\n    lodash.select = filter;\n    lodash.tail = rest;\n    lodash.unique = uniq;\n\n    // Add functions to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions that return unwrapped values when chaining.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.deburr = deburr;\n    lodash.endsWith = endsWith;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.findWhere = findWhere;\n    lodash.first = first;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isBoolean = isBoolean;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isMatch = isMatch;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isString = isString;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.min = min;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padLeft = padLeft;\n    lodash.padRight = padRight;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.result = result;\n    lodash.runInContext = runInContext;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.sum = sum;\n    lodash.template = template;\n    lodash.trim = trim;\n    lodash.trimLeft = trimLeft;\n    lodash.trimRight = trimRight;\n    lodash.trunc = trunc;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.words = words;\n\n    // Add aliases.\n    lodash.all = every;\n    lodash.any = some;\n    lodash.contains = includes;\n    lodash.eq = isEqual;\n    lodash.detect = find;\n    lodash.foldl = reduce;\n    lodash.foldr = reduceRight;\n    lodash.head = first;\n    lodash.include = includes;\n    lodash.inject = reduce;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!lodash.prototype[methodName]) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), false);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions capable of returning wrapped and unwrapped values when chaining.\n    lodash.sample = sample;\n\n    lodash.prototype.sample = function(n) {\n      if (!this.__chain__ && n == null) {\n        return sample(this.value());\n      }\n      return this.thru(function(value) {\n        return sample(value, n);\n      });\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type string\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['dropWhile', 'filter', 'map', 'takeWhile'], function(methodName, type) {\n      var isFilter = type != LAZY_MAP_FLAG,\n          isDropWhile = type == LAZY_DROP_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee, thisArg) {\n        var filtered = this.__filtered__,\n            result = (filtered && isDropWhile) ? new LazyWrapper(this) : this.clone(),\n            iteratees = result.__iteratees__ || (result.__iteratees__ = []);\n\n        iteratees.push({\n          'done': false,\n          'count': 0,\n          'index': 0,\n          'iteratee': getCallback(iteratee, thisArg, 1),\n          'limit': -1,\n          'type': type\n        });\n\n        result.__filtered__ = filtered || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      var whileName = methodName + 'While';\n\n      LazyWrapper.prototype[methodName] = function(n) {\n        var filtered = this.__filtered__,\n            result = (filtered && !index) ? this.dropWhile() : this.clone();\n\n        n = n == null ? 1 : nativeMax(floor(n) || 0, 0);\n        if (filtered) {\n          if (index) {\n            result.__takeCount__ = nativeMin(result.__takeCount__, n);\n          } else {\n            last(result.__iteratees__).limit = n;\n          }\n        } else {\n          var views = result.__views__ || (result.__views__ = []);\n          views.push({ 'size': n, 'type': methodName + (result.__dir__ < 0 ? 'Right' : '') });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n\n      LazyWrapper.prototype[methodName + 'RightWhile'] = function(predicate, thisArg) {\n        return this.reverse()[whileName](predicate, thisArg).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.first` and `_.last`.\n    arrayEach(['first', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.rest`.\n    arrayEach(['initial', 'rest'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[dropName](1);\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.pluck` and `_.where`.\n    arrayEach(['pluck', 'where'], function(methodName, index) {\n      var operationName = index ? 'filter' : 'map',\n          createCallback = index ? baseMatches : property;\n\n      LazyWrapper.prototype[methodName] = function(value) {\n        return this[operationName](createCallback(value));\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.reject = function(predicate, thisArg) {\n      predicate = getCallback(predicate, thisArg, 1);\n      return this.filter(function(value) {\n        return !predicate(value);\n      });\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = start == null ? 0 : (+start || 0);\n\n      var result = this;\n      if (start < 0) {\n        result = this.takeRight(-start);\n      } else if (start) {\n        result = this.drop(start);\n      }\n      if (end !== undefined) {\n        end = (+end || 0);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.drop(0);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (!lodashFunc) {\n        return;\n      }\n      var checkIteratee = /^(?:filter|map|reject)|While$/.test(methodName),\n          retUnwrapped = /^(?:first|last)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments,\n            chainAll = this.__chain__,\n            value = this.__wrapped__,\n            isHybrid = !!this.__actions__.length,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // avoid lazy use if the iteratee has a \"length\" value other than `1`\n          isLazy = useLazy = false;\n        }\n        var onlyLazy = isLazy && !isHybrid;\n        if (retUnwrapped && !chainAll) {\n          return onlyLazy\n            ? func.call(value)\n            : lodashFunc.call(lodash, this.value());\n        }\n        var interceptor = function(value) {\n          var otherArgs = [value];\n          push.apply(otherArgs, args);\n          return lodashFunc.apply(lodash, otherArgs);\n        };\n        if (useLazy) {\n          var wrapper = onlyLazy ? value : new LazyWrapper(this),\n              result = func.apply(wrapper, args);\n\n          if (!retUnwrapped && (isHybrid || result.__actions__)) {\n            var actions = result.__actions__ || (result.__actions__ = []);\n            actions.push({ 'func': thru, 'args': [interceptor], 'thisArg': lodash });\n          }\n          return new LodashWrapper(result, chainAll);\n        }\n        return this.thru(interceptor);\n      };\n    });\n\n    // Add `Array` and `String` methods to `lodash.prototype`.\n    arrayEach(['concat', 'join', 'pop', 'push', 'replace', 'shift', 'sort', 'splice', 'split', 'unshift'], function(methodName) {\n      var func = (/^(?:replace|split)$/.test(methodName) ? stringProto : arrayProto)[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:join|pop|replace|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          return func.apply(this.value(), args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(value, args);\n        });\n      };\n    });\n\n    // Map minified function names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name,\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybridWrapper(null, BIND_KEY_FLAG).name] = [{ 'name': 'wrapper', 'func': null }];\n\n    // Add functions to the lazy wrapper.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chaining functions to the `lodash` wrapper.\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toString = wrapperToString;\n    lodash.prototype.run = lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add function aliases to the `lodash` wrapper.\n    lodash.prototype.collect = lodash.prototype.map;\n    lodash.prototype.head = lodash.prototype.first;\n    lodash.prototype.select = lodash.prototype.filter;\n    lodash.prototype.tail = lodash.prototype.rest;\n\n    return lodash;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers like r.js check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose lodash to the global object when an AMD loader is present to avoid\n    // errors in cases where lodash is loaded by a script tag and not intended\n    // as an AMD module. See http://requirejs.org/docs/errors.html#mismatch for\n    // more details.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeExports && freeModule) {\n    // Export for Node.js or RingoJS.\n    if (moduleExports) {\n      (freeModule.exports = _)._ = _;\n    }\n    // Export for Rhino with CommonJS support.\n    else {\n      freeExports._ = _;\n    }\n  }\n  else {\n    // Export for a browser or Rhino.\n    root._ = _;\n  }\n}.call(this));\n","// ┌────────────────────────────────────────────────────────────────────┐ \\\\\r\n// │ Raphaël 2.1.4 - JavaScript Vector Library                          │ \\\\\r\n// ├────────────────────────────────────────────────────────────────────┤ \\\\\r\n// │ Copyright © 2008-2012 Dmitry Baranovskiy (http://raphaeljs.com)    │ \\\\\r\n// │ Copyright © 2008-2012 Sencha Labs (http://sencha.com)              │ \\\\\r\n// ├────────────────────────────────────────────────────────────────────┤ \\\\\r\n// │ Licensed under the MIT (http://raphaeljs.com/license.html) license.│ \\\\\r\n// └────────────────────────────────────────────────────────────────────┘ \\\\\r\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\r\n// \r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n// \r\n// http://www.apache.org/licenses/LICENSE-2.0\r\n// \r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// ┌────────────────────────────────────────────────────────────┐ \\\\\r\n// │ Eve 0.4.2 - JavaScript Events Library                      │ \\\\\r\n// ├────────────────────────────────────────────────────────────┤ \\\\\r\n// │ Author Dmitry Baranovskiy (http://dmitry.baranovskiy.com/) │ \\\\\r\n// └────────────────────────────────────────────────────────────┘ \\\\\r\n\r\n(function (glob) {\r\n    var version = \"0.4.2\",\r\n        has = \"hasOwnProperty\",\r\n        separator = /[\\.\\/]/,\r\n        wildcard = \"*\",\r\n        fun = function () {},\r\n        numsort = function (a, b) {\r\n            return a - b;\r\n        },\r\n        current_event,\r\n        stop,\r\n        events = {n: {}},\r\n    /*\\\r\n     * eve\r\n     [ method ]\r\n\r\n     * Fires event with given `name`, given scope and other parameters.\r\n\r\n     > Arguments\r\n\r\n     - name (string) name of the *event*, dot (`.`) or slash (`/`) separated\r\n     - scope (object) context for the event handlers\r\n     - varargs (...) the rest of arguments will be sent to event handlers\r\n\r\n     = (object) array of returned values from the listeners\r\n    \\*/\r\n        eve = function (name, scope) {\r\n\t\t\tname = String(name);\r\n            var e = events,\r\n                oldstop = stop,\r\n                args = Array.prototype.slice.call(arguments, 2),\r\n                listeners = eve.listeners(name),\r\n                z = 0,\r\n                f = false,\r\n                l,\r\n                indexed = [],\r\n                queue = {},\r\n                out = [],\r\n                ce = current_event,\r\n                errors = [];\r\n            current_event = name;\r\n            stop = 0;\r\n            for (var i = 0, ii = listeners.length; i < ii; i++) if (\"zIndex\" in listeners[i]) {\r\n                indexed.push(listeners[i].zIndex);\r\n                if (listeners[i].zIndex < 0) {\r\n                    queue[listeners[i].zIndex] = listeners[i];\r\n                }\r\n            }\r\n            indexed.sort(numsort);\r\n            while (indexed[z] < 0) {\r\n                l = queue[indexed[z++]];\r\n                out.push(l.apply(scope, args));\r\n                if (stop) {\r\n                    stop = oldstop;\r\n                    return out;\r\n                }\r\n            }\r\n            for (i = 0; i < ii; i++) {\r\n                l = listeners[i];\r\n                if (\"zIndex\" in l) {\r\n                    if (l.zIndex == indexed[z]) {\r\n                        out.push(l.apply(scope, args));\r\n                        if (stop) {\r\n                            break;\r\n                        }\r\n                        do {\r\n                            z++;\r\n                            l = queue[indexed[z]];\r\n                            l && out.push(l.apply(scope, args));\r\n                            if (stop) {\r\n                                break;\r\n                            }\r\n                        } while (l)\r\n                    } else {\r\n                        queue[l.zIndex] = l;\r\n                    }\r\n                } else {\r\n                    out.push(l.apply(scope, args));\r\n                    if (stop) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            stop = oldstop;\r\n            current_event = ce;\r\n            return out.length ? out : null;\r\n        };\r\n\t\t// Undocumented. Debug only.\r\n\t\teve._events = events;\r\n    /*\\\r\n     * eve.listeners\r\n     [ method ]\r\n\r\n     * Internal method which gives you array of all event handlers that will be triggered by the given `name`.\r\n\r\n     > Arguments\r\n\r\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated\r\n\r\n     = (array) array of event handlers\r\n    \\*/\r\n    eve.listeners = function (name) {\r\n        var names = name.split(separator),\r\n            e = events,\r\n            item,\r\n            items,\r\n            k,\r\n            i,\r\n            ii,\r\n            j,\r\n            jj,\r\n            nes,\r\n            es = [e],\r\n            out = [];\r\n        for (i = 0, ii = names.length; i < ii; i++) {\r\n            nes = [];\r\n            for (j = 0, jj = es.length; j < jj; j++) {\r\n                e = es[j].n;\r\n                items = [e[names[i]], e[wildcard]];\r\n                k = 2;\r\n                while (k--) {\r\n                    item = items[k];\r\n                    if (item) {\r\n                        nes.push(item);\r\n                        out = out.concat(item.f || []);\r\n                    }\r\n                }\r\n            }\r\n            es = nes;\r\n        }\r\n        return out;\r\n    };\r\n    \r\n    /*\\\r\n     * eve.on\r\n     [ method ]\r\n     **\r\n     * Binds given event handler with a given name. You can use wildcards “`*`” for the names:\r\n     | eve.on(\"*.under.*\", f);\r\n     | eve(\"mouse.under.floor\"); // triggers f\r\n     * Use @eve to trigger the listener.\r\n     **\r\n     > Arguments\r\n     **\r\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\r\n     - f (function) event handler function\r\n     **\r\n     = (function) returned function accepts a single numeric parameter that represents z-index of the handler. It is an optional feature and only used when you need to ensure that some subset of handlers will be invoked in a given order, despite of the order of assignment. \r\n     > Example:\r\n     | eve.on(\"mouse\", eatIt)(2);\r\n     | eve.on(\"mouse\", scream);\r\n     | eve.on(\"mouse\", catchIt)(1);\r\n     * This will ensure that `catchIt()` function will be called before `eatIt()`.\r\n\t *\r\n     * If you want to put your handler before non-indexed handlers, specify a negative value.\r\n     * Note: I assume most of the time you don’t need to worry about z-index, but it’s nice to have this feature “just in case”.\r\n    \\*/\r\n    eve.on = function (name, f) {\r\n\t\tname = String(name);\r\n\t\tif (typeof f != \"function\") {\r\n\t\t\treturn function () {};\r\n\t\t}\r\n        var names = name.split(separator),\r\n            e = events;\r\n        for (var i = 0, ii = names.length; i < ii; i++) {\r\n            e = e.n;\r\n            e = e.hasOwnProperty(names[i]) && e[names[i]] || (e[names[i]] = {n: {}});\r\n        }\r\n        e.f = e.f || [];\r\n        for (i = 0, ii = e.f.length; i < ii; i++) if (e.f[i] == f) {\r\n            return fun;\r\n        }\r\n        e.f.push(f);\r\n        return function (zIndex) {\r\n            if (+zIndex == +zIndex) {\r\n                f.zIndex = +zIndex;\r\n            }\r\n        };\r\n    };\r\n    /*\\\r\n     * eve.f\r\n     [ method ]\r\n     **\r\n     * Returns function that will fire given event with optional arguments.\r\n\t * Arguments that will be passed to the result function will be also\r\n\t * concated to the list of final arguments.\r\n \t | el.onclick = eve.f(\"click\", 1, 2);\r\n \t | eve.on(\"click\", function (a, b, c) {\r\n \t |     console.log(a, b, c); // 1, 2, [event object]\r\n \t | });\r\n     > Arguments\r\n\t - event (string) event name\r\n\t - varargs (…) and any other arguments\r\n\t = (function) possible event handler function\r\n    \\*/\r\n\teve.f = function (event) {\r\n\t\tvar attrs = [].slice.call(arguments, 1);\r\n\t\treturn function () {\r\n\t\t\teve.apply(null, [event, null].concat(attrs).concat([].slice.call(arguments, 0)));\r\n\t\t};\r\n\t};\r\n    /*\\\r\n     * eve.stop\r\n     [ method ]\r\n     **\r\n     * Is used inside an event handler to stop the event, preventing any subsequent listeners from firing.\r\n    \\*/\r\n    eve.stop = function () {\r\n        stop = 1;\r\n    };\r\n    /*\\\r\n     * eve.nt\r\n     [ method ]\r\n     **\r\n     * Could be used inside event handler to figure out actual name of the event.\r\n     **\r\n     > Arguments\r\n     **\r\n     - subname (string) #optional subname of the event\r\n     **\r\n     = (string) name of the event, if `subname` is not specified\r\n     * or\r\n     = (boolean) `true`, if current event’s name contains `subname`\r\n    \\*/\r\n    eve.nt = function (subname) {\r\n        if (subname) {\r\n            return new RegExp(\"(?:\\\\.|\\\\/|^)\" + subname + \"(?:\\\\.|\\\\/|$)\").test(current_event);\r\n        }\r\n        return current_event;\r\n    };\r\n    /*\\\r\n     * eve.nts\r\n     [ method ]\r\n     **\r\n     * Could be used inside event handler to figure out actual name of the event.\r\n     **\r\n     **\r\n     = (array) names of the event\r\n    \\*/\r\n    eve.nts = function () {\r\n        return current_event.split(separator);\r\n    };\r\n    /*\\\r\n     * eve.off\r\n     [ method ]\r\n     **\r\n     * Removes given function from the list of event listeners assigned to given name.\r\n\t * If no arguments specified all the events will be cleared.\r\n     **\r\n     > Arguments\r\n     **\r\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\r\n     - f (function) event handler function\r\n    \\*/\r\n    /*\\\r\n     * eve.unbind\r\n     [ method ]\r\n     **\r\n     * See @eve.off\r\n    \\*/\r\n    eve.off = eve.unbind = function (name, f) {\r\n\t\tif (!name) {\r\n\t\t    eve._events = events = {n: {}};\r\n\t\t\treturn;\r\n\t\t}\r\n        var names = name.split(separator),\r\n            e,\r\n            key,\r\n            splice,\r\n            i, ii, j, jj,\r\n            cur = [events];\r\n        for (i = 0, ii = names.length; i < ii; i++) {\r\n            for (j = 0; j < cur.length; j += splice.length - 2) {\r\n                splice = [j, 1];\r\n                e = cur[j].n;\r\n                if (names[i] != wildcard) {\r\n                    if (e[names[i]]) {\r\n                        splice.push(e[names[i]]);\r\n                    }\r\n                } else {\r\n                    for (key in e) if (e[has](key)) {\r\n                        splice.push(e[key]);\r\n                    }\r\n                }\r\n                cur.splice.apply(cur, splice);\r\n            }\r\n        }\r\n        for (i = 0, ii = cur.length; i < ii; i++) {\r\n            e = cur[i];\r\n            while (e.n) {\r\n                if (f) {\r\n                    if (e.f) {\r\n                        for (j = 0, jj = e.f.length; j < jj; j++) if (e.f[j] == f) {\r\n                            e.f.splice(j, 1);\r\n                            break;\r\n                        }\r\n                        !e.f.length && delete e.f;\r\n                    }\r\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\r\n                        var funcs = e.n[key].f;\r\n                        for (j = 0, jj = funcs.length; j < jj; j++) if (funcs[j] == f) {\r\n                            funcs.splice(j, 1);\r\n                            break;\r\n                        }\r\n                        !funcs.length && delete e.n[key].f;\r\n                    }\r\n                } else {\r\n                    delete e.f;\r\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\r\n                        delete e.n[key].f;\r\n                    }\r\n                }\r\n                e = e.n;\r\n            }\r\n        }\r\n    };\r\n    /*\\\r\n     * eve.once\r\n     [ method ]\r\n     **\r\n     * Binds given event handler with a given name to only run once then unbind itself.\r\n     | eve.once(\"login\", f);\r\n     | eve(\"login\"); // triggers f\r\n     | eve(\"login\"); // no listeners\r\n     * Use @eve to trigger the listener.\r\n     **\r\n     > Arguments\r\n     **\r\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\r\n     - f (function) event handler function\r\n     **\r\n     = (function) same return function as @eve.on\r\n    \\*/\r\n    eve.once = function (name, f) {\r\n        var f2 = function () {\r\n            eve.unbind(name, f2);\r\n            return f.apply(this, arguments);\r\n        };\r\n        return eve.on(name, f2);\r\n    };\r\n    /*\\\r\n     * eve.version\r\n     [ property (string) ]\r\n     **\r\n     * Current version of the library.\r\n    \\*/\r\n    eve.version = version;\r\n    eve.toString = function () {\r\n        return \"You are running Eve \" + version;\r\n    };\r\n    (typeof module != \"undefined\" && module.exports) ? (module.exports = eve) : (typeof define != \"undefined\" ? (define(\"eve\", [], function() { return eve; })) : (glob.eve = eve));\r\n})(this);\r\n// ┌─────────────────────────────────────────────────────────────────────┐ \\\\\r\n// │ \"Raphaël 2.1.2\" - JavaScript Vector Library                         │ \\\\\r\n// ├─────────────────────────────────────────────────────────────────────┤ \\\\\r\n// │ Copyright (c) 2008-2011 Dmitry Baranovskiy (http://raphaeljs.com)   │ \\\\\r\n// │ Copyright (c) 2008-2011 Sencha Labs (http://sencha.com)             │ \\\\\r\n// │ Licensed under the MIT (http://raphaeljs.com/license.html) license. │ \\\\\r\n// └─────────────────────────────────────────────────────────────────────┘ \\\\\r\n\r\n(function (glob, factory) {\r\n    // AMD support\r\n    if (typeof define === \"function\" && define.amd) {\r\n        // Define as an anonymous module\r\n        define([\"eve\"], function( eve ) {\r\n            return factory(glob, eve);\r\n        });\r\n    } else {\r\n        // Browser globals (glob is window)\r\n        // Raphael adds itself to window\r\n        factory(glob, glob.eve || (typeof require == \"function\" && require('eve')) );\r\n    }\r\n}(this, function (window, eve) {\r\n    /*\\\r\n     * Raphael\r\n     [ method ]\r\n     **\r\n     * Creates a canvas object on which to draw.\r\n     * You must do this first, as all future calls to drawing methods\r\n     * from this instance will be bound to this canvas.\r\n     > Parameters\r\n     **\r\n     - container (HTMLElement|string) DOM element or its ID which is going to be a parent for drawing surface\r\n     - width (number)\r\n     - height (number)\r\n     - callback (function) #optional callback function which is going to be executed in the context of newly created paper\r\n     * or\r\n     - x (number)\r\n     - y (number)\r\n     - width (number)\r\n     - height (number)\r\n     - callback (function) #optional callback function which is going to be executed in the context of newly created paper\r\n     * or\r\n     - all (array) (first 3 or 4 elements in the array are equal to [containerID, width, height] or [x, y, width, height]. The rest are element descriptions in format {type: type, <attributes>}). See @Paper.add.\r\n     - callback (function) #optional callback function which is going to be executed in the context of newly created paper\r\n     * or\r\n     - onReadyCallback (function) function that is going to be called on DOM ready event. You can also subscribe to this event via Eve’s “DOMLoad” event. In this case method returns `undefined`.\r\n     = (object) @Paper\r\n     > Usage\r\n     | // Each of the following examples create a canvas\r\n     | // that is 320px wide by 200px high.\r\n     | // Canvas is created at the viewport’s 10,50 coordinate.\r\n     | var paper = Raphael(10, 50, 320, 200);\r\n     | // Canvas is created at the top left corner of the #notepad element\r\n     | // (or its top right corner in dir=\"rtl\" elements)\r\n     | var paper = Raphael(document.getElementById(\"notepad\"), 320, 200);\r\n     | // Same as above\r\n     | var paper = Raphael(\"notepad\", 320, 200);\r\n     | // Image dump\r\n     | var set = Raphael([\"notepad\", 320, 200, {\r\n     |     type: \"rect\",\r\n     |     x: 10,\r\n     |     y: 10,\r\n     |     width: 25,\r\n     |     height: 25,\r\n     |     stroke: \"#f00\"\r\n     | }, {\r\n     |     type: \"text\",\r\n     |     x: 30,\r\n     |     y: 40,\r\n     |     text: \"Dump\"\r\n     | }]);\r\n    \\*/\r\n    function R(first) {\r\n        if (R.is(first, \"function\")) {\r\n            return loaded ? first() : eve.on(\"raphael.DOMload\", first);\r\n        } else if (R.is(first, array)) {\r\n            return R._engine.create[apply](R, first.splice(0, 3 + R.is(first[0], nu))).add(first);\r\n        } else {\r\n            var args = Array.prototype.slice.call(arguments, 0);\r\n            if (R.is(args[args.length - 1], \"function\")) {\r\n                var f = args.pop();\r\n                return loaded ? f.call(R._engine.create[apply](R, args)) : eve.on(\"raphael.DOMload\", function () {\r\n                    f.call(R._engine.create[apply](R, args));\r\n                });\r\n            } else {\r\n                return R._engine.create[apply](R, arguments);\r\n            }\r\n        }\r\n    }\r\n    R.version = \"2.1.2\";\r\n    R.eve = eve;\r\n    var loaded,\r\n        separator = /[, ]+/,\r\n        elements = {circle: 1, rect: 1, path: 1, ellipse: 1, text: 1, image: 1},\r\n        formatrg = /\\{(\\d+)\\}/g,\r\n        proto = \"prototype\",\r\n        has = \"hasOwnProperty\",\r\n        g = {\r\n            doc: document,\r\n            win: window\r\n        },\r\n        oldRaphael = {\r\n            was: Object.prototype[has].call(g.win, \"Raphael\"),\r\n            is: g.win.Raphael\r\n        },\r\n        Paper = function () {\r\n            /*\\\r\n             * Paper.ca\r\n             [ property (object) ]\r\n             **\r\n             * Shortcut for @Paper.customAttributes\r\n            \\*/\r\n            /*\\\r\n             * Paper.customAttributes\r\n             [ property (object) ]\r\n             **\r\n             * If you have a set of attributes that you would like to represent\r\n             * as a function of some number you can do it easily with custom attributes:\r\n             > Usage\r\n             | paper.customAttributes.hue = function (num) {\r\n             |     num = num % 1;\r\n             |     return {fill: \"hsb(\" + num + \", 0.75, 1)\"};\r\n             | };\r\n             | // Custom attribute “hue” will change fill\r\n             | // to be given hue with fixed saturation and brightness.\r\n             | // Now you can use it like this:\r\n             | var c = paper.circle(10, 10, 10).attr({hue: .45});\r\n             | // or even like this:\r\n             | c.animate({hue: 1}, 1e3);\r\n             |\r\n             | // You could also create custom attribute\r\n             | // with multiple parameters:\r\n             | paper.customAttributes.hsb = function (h, s, b) {\r\n             |     return {fill: \"hsb(\" + [h, s, b].join(\",\") + \")\"};\r\n             | };\r\n             | c.attr({hsb: \"0.5 .8 1\"});\r\n             | c.animate({hsb: [1, 0, 0.5]}, 1e3);\r\n            \\*/\r\n            this.ca = this.customAttributes = {};\r\n        },\r\n        paperproto,\r\n        appendChild = \"appendChild\",\r\n        apply = \"apply\",\r\n        concat = \"concat\",\r\n        supportsTouch = ('ontouchstart' in g.win) || g.win.DocumentTouch && g.doc instanceof DocumentTouch, //taken from Modernizr touch test\r\n        E = \"\",\r\n        S = \" \",\r\n        Str = String,\r\n        split = \"split\",\r\n        events = \"click dblclick mousedown mousemove mouseout mouseover mouseup touchstart touchmove touchend touchcancel\"[split](S),\r\n        touchMap = {\r\n            mousedown: \"touchstart\",\r\n            mousemove: \"touchmove\",\r\n            mouseup: \"touchend\"\r\n        },\r\n        lowerCase = Str.prototype.toLowerCase,\r\n        math = Math,\r\n        mmax = math.max,\r\n        mmin = math.min,\r\n        abs = math.abs,\r\n        pow = math.pow,\r\n        PI = math.PI,\r\n        nu = \"number\",\r\n        string = \"string\",\r\n        array = \"array\",\r\n        toString = \"toString\",\r\n        fillString = \"fill\",\r\n        objectToString = Object.prototype.toString,\r\n        paper = {},\r\n        push = \"push\",\r\n        ISURL = R._ISURL = /^url\\(['\"]?(.+?)['\"]?\\)$/i,\r\n        colourRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?)%?\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?)%?\\s*\\))\\s*$/i,\r\n        isnan = {\"NaN\": 1, \"Infinity\": 1, \"-Infinity\": 1},\r\n        bezierrg = /^(?:cubic-)?bezier\\(([^,]+),([^,]+),([^,]+),([^\\)]+)\\)/,\r\n        round = math.round,\r\n        setAttribute = \"setAttribute\",\r\n        toFloat = parseFloat,\r\n        toInt = parseInt,\r\n        upperCase = Str.prototype.toUpperCase,\r\n        availableAttrs = R._availableAttrs = {\r\n            \"arrow-end\": \"none\",\r\n            \"arrow-start\": \"none\",\r\n            blur: 0,\r\n            \"clip-rect\": \"0 0 1e9 1e9\",\r\n            cursor: \"default\",\r\n            cx: 0,\r\n            cy: 0,\r\n            fill: \"#fff\",\r\n            \"fill-opacity\": 1,\r\n            font: '10px \"Arial\"',\r\n            \"font-family\": '\"Arial\"',\r\n            \"font-size\": \"10\",\r\n            \"font-style\": \"normal\",\r\n            \"font-weight\": 400,\r\n            gradient: 0,\r\n            height: 0,\r\n            href: \"http://raphaeljs.com/\",\r\n            \"letter-spacing\": 0,\r\n            opacity: 1,\r\n            path: \"M0,0\",\r\n            r: 0,\r\n            rx: 0,\r\n            ry: 0,\r\n            src: \"\",\r\n            stroke: \"#000\",\r\n            \"stroke-dasharray\": \"\",\r\n            \"stroke-linecap\": \"butt\",\r\n            \"stroke-linejoin\": \"butt\",\r\n            \"stroke-miterlimit\": 0,\r\n            \"stroke-opacity\": 1,\r\n            \"stroke-width\": 1,\r\n            target: \"_blank\",\r\n            \"text-anchor\": \"middle\",\r\n            title: \"Raphael\",\r\n            transform: \"\",\r\n            width: 0,\r\n            x: 0,\r\n            y: 0\r\n        },\r\n        availableAnimAttrs = R._availableAnimAttrs = {\r\n            blur: nu,\r\n            \"clip-rect\": \"csv\",\r\n            cx: nu,\r\n            cy: nu,\r\n            fill: \"colour\",\r\n            \"fill-opacity\": nu,\r\n            \"font-size\": nu,\r\n            height: nu,\r\n            opacity: nu,\r\n            path: \"path\",\r\n            r: nu,\r\n            rx: nu,\r\n            ry: nu,\r\n            stroke: \"colour\",\r\n            \"stroke-opacity\": nu,\r\n            \"stroke-width\": nu,\r\n            transform: \"transform\",\r\n            width: nu,\r\n            x: nu,\r\n            y: nu\r\n        },\r\n        whitespace = /[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]/g,\r\n        commaSpaces = /[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*/,\r\n        hsrg = {hs: 1, rg: 1},\r\n        p2s = /,?([achlmqrstvxz]),?/gi,\r\n        pathCommand = /([achlmrqstvz])[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)/ig,\r\n        tCommand = /([rstm])[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)/ig,\r\n        pathValues = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*/ig,\r\n        radial_gradient = R._radial_gradient = /^r(?:\\(([^,]+?)[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*([^\\)]+?)\\))?/,\r\n        eldata = {},\r\n        sortByKey = function (a, b) {\r\n            return a.key - b.key;\r\n        },\r\n        sortByNumber = function (a, b) {\r\n            return toFloat(a) - toFloat(b);\r\n        },\r\n        fun = function () {},\r\n        pipe = function (x) {\r\n            return x;\r\n        },\r\n        rectPath = R._rectPath = function (x, y, w, h, r) {\r\n            if (r) {\r\n                return [[\"M\", x + r, y], [\"l\", w - r * 2, 0], [\"a\", r, r, 0, 0, 1, r, r], [\"l\", 0, h - r * 2], [\"a\", r, r, 0, 0, 1, -r, r], [\"l\", r * 2 - w, 0], [\"a\", r, r, 0, 0, 1, -r, -r], [\"l\", 0, r * 2 - h], [\"a\", r, r, 0, 0, 1, r, -r], [\"z\"]];\r\n            }\r\n            return [[\"M\", x, y], [\"l\", w, 0], [\"l\", 0, h], [\"l\", -w, 0], [\"z\"]];\r\n        },\r\n        ellipsePath = function (x, y, rx, ry) {\r\n            if (ry == null) {\r\n                ry = rx;\r\n            }\r\n            return [[\"M\", x, y], [\"m\", 0, -ry], [\"a\", rx, ry, 0, 1, 1, 0, 2 * ry], [\"a\", rx, ry, 0, 1, 1, 0, -2 * ry], [\"z\"]];\r\n        },\r\n        getPath = R._getPath = {\r\n            path: function (el) {\r\n                return el.attr(\"path\");\r\n            },\r\n            circle: function (el) {\r\n                var a = el.attrs;\r\n                return ellipsePath(a.cx, a.cy, a.r);\r\n            },\r\n            ellipse: function (el) {\r\n                var a = el.attrs;\r\n                return ellipsePath(a.cx, a.cy, a.rx, a.ry);\r\n            },\r\n            rect: function (el) {\r\n                var a = el.attrs;\r\n                return rectPath(a.x, a.y, a.width, a.height, a.r);\r\n            },\r\n            image: function (el) {\r\n                var a = el.attrs;\r\n                return rectPath(a.x, a.y, a.width, a.height);\r\n            },\r\n            text: function (el) {\r\n                var bbox = el._getBBox();\r\n                return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\r\n            },\r\n            set : function(el) {\r\n                var bbox = el._getBBox();\r\n                return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\r\n            }\r\n        },\r\n        /*\\\r\n         * Raphael.mapPath\r\n         [ method ]\r\n         **\r\n         * Transform the path string with given matrix.\r\n         > Parameters\r\n         - path (string) path string\r\n         - matrix (object) see @Matrix\r\n         = (string) transformed path string\r\n        \\*/\r\n        mapPath = R.mapPath = function (path, matrix) {\r\n            if (!matrix) {\r\n                return path;\r\n            }\r\n            var x, y, i, j, ii, jj, pathi;\r\n            path = path2curve(path);\r\n            for (i = 0, ii = path.length; i < ii; i++) {\r\n                pathi = path[i];\r\n                for (j = 1, jj = pathi.length; j < jj; j += 2) {\r\n                    x = matrix.x(pathi[j], pathi[j + 1]);\r\n                    y = matrix.y(pathi[j], pathi[j + 1]);\r\n                    pathi[j] = x;\r\n                    pathi[j + 1] = y;\r\n                }\r\n            }\r\n            return path;\r\n        };\r\n\r\n    R._g = g;\r\n    /*\\\r\n     * Raphael.type\r\n     [ property (string) ]\r\n     **\r\n     * Can be “SVG”, “VML” or empty, depending on browser support.\r\n    \\*/\r\n    R.type = (g.win.SVGAngle || g.doc.implementation.hasFeature(\"http://www.w3.org/TR/SVG11/feature#BasicStructure\", \"1.1\") ? \"SVG\" : \"VML\");\r\n    if (R.type == \"VML\") {\r\n        var d = g.doc.createElement(\"div\"),\r\n            b;\r\n        d.innerHTML = '<v:shape adj=\"1\"/>';\r\n        b = d.firstChild;\r\n        b.style.behavior = \"url(#default#VML)\";\r\n        if (!(b && typeof b.adj == \"object\")) {\r\n            return (R.type = E);\r\n        }\r\n        d = null;\r\n    }\r\n    /*\\\r\n     * Raphael.svg\r\n     [ property (boolean) ]\r\n     **\r\n     * `true` if browser supports SVG.\r\n    \\*/\r\n    /*\\\r\n     * Raphael.vml\r\n     [ property (boolean) ]\r\n     **\r\n     * `true` if browser supports VML.\r\n    \\*/\r\n    R.svg = !(R.vml = R.type == \"VML\");\r\n    R._Paper = Paper;\r\n    /*\\\r\n     * Raphael.fn\r\n     [ property (object) ]\r\n     **\r\n     * You can add your own method to the canvas. For example if you want to draw a pie chart,\r\n     * you can create your own pie chart function and ship it as a Raphaël plugin. To do this\r\n     * you need to extend the `Raphael.fn` object. You should modify the `fn` object before a\r\n     * Raphaël instance is created, otherwise it will take no effect. Please note that the\r\n     * ability for namespaced plugins was removed in Raphael 2.0. It is up to the plugin to\r\n     * ensure any namespacing ensures proper context.\r\n     > Usage\r\n     | Raphael.fn.arrow = function (x1, y1, x2, y2, size) {\r\n     |     return this.path( ... );\r\n     | };\r\n     | // or create namespace\r\n     | Raphael.fn.mystuff = {\r\n     |     arrow: function () {…},\r\n     |     star: function () {…},\r\n     |     // etc…\r\n     | };\r\n     | var paper = Raphael(10, 10, 630, 480);\r\n     | // then use it\r\n     | paper.arrow(10, 10, 30, 30, 5).attr({fill: \"#f00\"});\r\n     | paper.mystuff.arrow();\r\n     | paper.mystuff.star();\r\n    \\*/\r\n    R.fn = paperproto = Paper.prototype = R.prototype;\r\n    R._id = 0;\r\n    R._oid = 0;\r\n    /*\\\r\n     * Raphael.is\r\n     [ method ]\r\n     **\r\n     * Handful of replacements for `typeof` operator.\r\n     > Parameters\r\n     - o (…) any object or primitive\r\n     - type (string) name of the type, i.e. “string”, “function”, “number”, etc.\r\n     = (boolean) is given value is of given type\r\n    \\*/\r\n    R.is = function (o, type) {\r\n        type = lowerCase.call(type);\r\n        if (type == \"finite\") {\r\n            return !isnan[has](+o);\r\n        }\r\n        if (type == \"array\") {\r\n            return o instanceof Array;\r\n        }\r\n        return  (type == \"null\" && o === null) ||\r\n                (type == typeof o && o !== null) ||\r\n                (type == \"object\" && o === Object(o)) ||\r\n                (type == \"array\" && Array.isArray && Array.isArray(o)) ||\r\n                objectToString.call(o).slice(8, -1).toLowerCase() == type;\r\n    };\r\n\r\n    function clone(obj) {\r\n        if (typeof obj == \"function\" || Object(obj) !== obj) {\r\n            return obj;\r\n        }\r\n        var res = new obj.constructor;\r\n        for (var key in obj) if (obj[has](key)) {\r\n            res[key] = clone(obj[key]);\r\n        }\r\n        return res;\r\n    }\r\n\r\n    /*\\\r\n     * Raphael.angle\r\n     [ method ]\r\n     **\r\n     * Returns angle between two or three points\r\n     > Parameters\r\n     - x1 (number) x coord of first point\r\n     - y1 (number) y coord of first point\r\n     - x2 (number) x coord of second point\r\n     - y2 (number) y coord of second point\r\n     - x3 (number) #optional x coord of third point\r\n     - y3 (number) #optional y coord of third point\r\n     = (number) angle in degrees.\r\n    \\*/\r\n    R.angle = function (x1, y1, x2, y2, x3, y3) {\r\n        if (x3 == null) {\r\n            var x = x1 - x2,\r\n                y = y1 - y2;\r\n            if (!x && !y) {\r\n                return 0;\r\n            }\r\n            return (180 + math.atan2(-y, -x) * 180 / PI + 360) % 360;\r\n        } else {\r\n            return R.angle(x1, y1, x3, y3) - R.angle(x2, y2, x3, y3);\r\n        }\r\n    };\r\n    /*\\\r\n     * Raphael.rad\r\n     [ method ]\r\n     **\r\n     * Transform angle to radians\r\n     > Parameters\r\n     - deg (number) angle in degrees\r\n     = (number) angle in radians.\r\n    \\*/\r\n    R.rad = function (deg) {\r\n        return deg % 360 * PI / 180;\r\n    };\r\n    /*\\\r\n     * Raphael.deg\r\n     [ method ]\r\n     **\r\n     * Transform angle to degrees\r\n     > Parameters\r\n     - rad (number) angle in radians\r\n     = (number) angle in degrees.\r\n    \\*/\r\n    R.deg = function (rad) {\r\n        return Math.round ((rad * 180 / PI% 360)* 1000) / 1000;\r\n    };\r\n    /*\\\r\n     * Raphael.snapTo\r\n     [ method ]\r\n     **\r\n     * Snaps given value to given grid.\r\n     > Parameters\r\n     - values (array|number) given array of values or step of the grid\r\n     - value (number) value to adjust\r\n     - tolerance (number) #optional tolerance for snapping. Default is `10`.\r\n     = (number) adjusted value.\r\n    \\*/\r\n    R.snapTo = function (values, value, tolerance) {\r\n        tolerance = R.is(tolerance, \"finite\") ? tolerance : 10;\r\n        if (R.is(values, array)) {\r\n            var i = values.length;\r\n            while (i--) if (abs(values[i] - value) <= tolerance) {\r\n                return values[i];\r\n            }\r\n        } else {\r\n            values = +values;\r\n            var rem = value % values;\r\n            if (rem < tolerance) {\r\n                return value - rem;\r\n            }\r\n            if (rem > values - tolerance) {\r\n                return value - rem + values;\r\n            }\r\n        }\r\n        return value;\r\n    };\r\n\r\n    /*\\\r\n     * Raphael.createUUID\r\n     [ method ]\r\n     **\r\n     * Returns RFC4122, version 4 ID\r\n    \\*/\r\n    var createUUID = R.createUUID = (function (uuidRegEx, uuidReplacer) {\r\n        return function () {\r\n            return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(uuidRegEx, uuidReplacer).toUpperCase();\r\n        };\r\n    })(/[xy]/g, function (c) {\r\n        var r = math.random() * 16 | 0,\r\n            v = c == \"x\" ? r : (r & 3 | 8);\r\n        return v.toString(16);\r\n    });\r\n\r\n    /*\\\r\n     * Raphael.setWindow\r\n     [ method ]\r\n     **\r\n     * Used when you need to draw in `&lt;iframe>`. Switched window to the iframe one.\r\n     > Parameters\r\n     - newwin (window) new window object\r\n    \\*/\r\n    R.setWindow = function (newwin) {\r\n        eve(\"raphael.setWindow\", R, g.win, newwin);\r\n        g.win = newwin;\r\n        g.doc = g.win.document;\r\n        if (R._engine.initWin) {\r\n            R._engine.initWin(g.win);\r\n        }\r\n    };\r\n    var toHex = function (color) {\r\n        if (R.vml) {\r\n            // http://dean.edwards.name/weblog/2009/10/convert-any-colour-value-to-hex-in-msie/\r\n            var trim = /^\\s+|\\s+$/g;\r\n            var bod;\r\n            try {\r\n                var docum = new ActiveXObject(\"htmlfile\");\r\n                docum.write(\"<body>\");\r\n                docum.close();\r\n                bod = docum.body;\r\n            } catch(e) {\r\n                bod = createPopup().document.body;\r\n            }\r\n            var range = bod.createTextRange();\r\n            toHex = cacher(function (color) {\r\n                try {\r\n                    bod.style.color = Str(color).replace(trim, E);\r\n                    var value = range.queryCommandValue(\"ForeColor\");\r\n                    value = ((value & 255) << 16) | (value & 65280) | ((value & 16711680) >>> 16);\r\n                    return \"#\" + (\"000000\" + value.toString(16)).slice(-6);\r\n                } catch(e) {\r\n                    return \"none\";\r\n                }\r\n            });\r\n        } else {\r\n            var i = g.doc.createElement(\"i\");\r\n            i.title = \"Rapha\\xebl Colour Picker\";\r\n            i.style.display = \"none\";\r\n            g.doc.body.appendChild(i);\r\n            toHex = cacher(function (color) {\r\n                i.style.color = color;\r\n                return g.doc.defaultView.getComputedStyle(i, E).getPropertyValue(\"color\");\r\n            });\r\n        }\r\n        return toHex(color);\r\n    },\r\n    hsbtoString = function () {\r\n        return \"hsb(\" + [this.h, this.s, this.b] + \")\";\r\n    },\r\n    hsltoString = function () {\r\n        return \"hsl(\" + [this.h, this.s, this.l] + \")\";\r\n    },\r\n    rgbtoString = function () {\r\n        return this.hex;\r\n    },\r\n    prepareRGB = function (r, g, b) {\r\n        if (g == null && R.is(r, \"object\") && \"r\" in r && \"g\" in r && \"b\" in r) {\r\n            b = r.b;\r\n            g = r.g;\r\n            r = r.r;\r\n        }\r\n        if (g == null && R.is(r, string)) {\r\n            var clr = R.getRGB(r);\r\n            r = clr.r;\r\n            g = clr.g;\r\n            b = clr.b;\r\n        }\r\n        if (r > 1 || g > 1 || b > 1) {\r\n            r /= 255;\r\n            g /= 255;\r\n            b /= 255;\r\n        }\r\n\r\n        return [r, g, b];\r\n    },\r\n    packageRGB = function (r, g, b, o) {\r\n        r *= 255;\r\n        g *= 255;\r\n        b *= 255;\r\n        var rgb = {\r\n            r: r,\r\n            g: g,\r\n            b: b,\r\n            hex: R.rgb(r, g, b),\r\n            toString: rgbtoString\r\n        };\r\n        R.is(o, \"finite\") && (rgb.opacity = o);\r\n        return rgb;\r\n    };\r\n\r\n    /*\\\r\n     * Raphael.color\r\n     [ method ]\r\n     **\r\n     * Parses the color string and returns object with all values for the given color.\r\n     > Parameters\r\n     - clr (string) color string in one of the supported formats (see @Raphael.getRGB)\r\n     = (object) Combined RGB & HSB object in format:\r\n     o {\r\n     o     r (number) red,\r\n     o     g (number) green,\r\n     o     b (number) blue,\r\n     o     hex (string) color in HTML/CSS format: #••••••,\r\n     o     error (boolean) `true` if string can’t be parsed,\r\n     o     h (number) hue,\r\n     o     s (number) saturation,\r\n     o     v (number) value (brightness),\r\n     o     l (number) lightness\r\n     o }\r\n    \\*/\r\n    R.color = function (clr) {\r\n        var rgb;\r\n        if (R.is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"b\" in clr) {\r\n            rgb = R.hsb2rgb(clr);\r\n            clr.r = rgb.r;\r\n            clr.g = rgb.g;\r\n            clr.b = rgb.b;\r\n            clr.hex = rgb.hex;\r\n        } else if (R.is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"l\" in clr) {\r\n            rgb = R.hsl2rgb(clr);\r\n            clr.r = rgb.r;\r\n            clr.g = rgb.g;\r\n            clr.b = rgb.b;\r\n            clr.hex = rgb.hex;\r\n        } else {\r\n            if (R.is(clr, \"string\")) {\r\n                clr = R.getRGB(clr);\r\n            }\r\n            if (R.is(clr, \"object\") && \"r\" in clr && \"g\" in clr && \"b\" in clr) {\r\n                rgb = R.rgb2hsl(clr);\r\n                clr.h = rgb.h;\r\n                clr.s = rgb.s;\r\n                clr.l = rgb.l;\r\n                rgb = R.rgb2hsb(clr);\r\n                clr.v = rgb.b;\r\n            } else {\r\n                clr = {hex: \"none\"};\r\n                clr.r = clr.g = clr.b = clr.h = clr.s = clr.v = clr.l = -1;\r\n            }\r\n        }\r\n        clr.toString = rgbtoString;\r\n        return clr;\r\n    };\r\n    /*\\\r\n     * Raphael.hsb2rgb\r\n     [ method ]\r\n     **\r\n     * Converts HSB values to RGB object.\r\n     > Parameters\r\n     - h (number) hue\r\n     - s (number) saturation\r\n     - v (number) value or brightness\r\n     = (object) RGB object in format:\r\n     o {\r\n     o     r (number) red,\r\n     o     g (number) green,\r\n     o     b (number) blue,\r\n     o     hex (string) color in HTML/CSS format: #••••••\r\n     o }\r\n    \\*/\r\n    R.hsb2rgb = function (h, s, v, o) {\r\n        if (this.is(h, \"object\") && \"h\" in h && \"s\" in h && \"b\" in h) {\r\n            v = h.b;\r\n            s = h.s;\r\n            o = h.o;\r\n            h = h.h;\r\n        }\r\n        h *= 360;\r\n        var R, G, B, X, C;\r\n        h = (h % 360) / 60;\r\n        C = v * s;\r\n        X = C * (1 - abs(h % 2 - 1));\r\n        R = G = B = v - C;\r\n\r\n        h = ~~h;\r\n        R += [C, X, 0, 0, X, C][h];\r\n        G += [X, C, C, X, 0, 0][h];\r\n        B += [0, 0, X, C, C, X][h];\r\n        return packageRGB(R, G, B, o);\r\n    };\r\n    /*\\\r\n     * Raphael.hsl2rgb\r\n     [ method ]\r\n     **\r\n     * Converts HSL values to RGB object.\r\n     > Parameters\r\n     - h (number) hue\r\n     - s (number) saturation\r\n     - l (number) luminosity\r\n     = (object) RGB object in format:\r\n     o {\r\n     o     r (number) red,\r\n     o     g (number) green,\r\n     o     b (number) blue,\r\n     o     hex (string) color in HTML/CSS format: #••••••\r\n     o }\r\n    \\*/\r\n    R.hsl2rgb = function (h, s, l, o) {\r\n        if (this.is(h, \"object\") && \"h\" in h && \"s\" in h && \"l\" in h) {\r\n            l = h.l;\r\n            s = h.s;\r\n            h = h.h;\r\n        }\r\n        if (h > 1 || s > 1 || l > 1) {\r\n            h /= 360;\r\n            s /= 100;\r\n            l /= 100;\r\n        }\r\n        h *= 360;\r\n        var R, G, B, X, C;\r\n        h = (h % 360) / 60;\r\n        C = 2 * s * (l < .5 ? l : 1 - l);\r\n        X = C * (1 - abs(h % 2 - 1));\r\n        R = G = B = l - C / 2;\r\n\r\n        h = ~~h;\r\n        R += [C, X, 0, 0, X, C][h];\r\n        G += [X, C, C, X, 0, 0][h];\r\n        B += [0, 0, X, C, C, X][h];\r\n        return packageRGB(R, G, B, o);\r\n    };\r\n    /*\\\r\n     * Raphael.rgb2hsb\r\n     [ method ]\r\n     **\r\n     * Converts RGB values to HSB object.\r\n     > Parameters\r\n     - r (number) red\r\n     - g (number) green\r\n     - b (number) blue\r\n     = (object) HSB object in format:\r\n     o {\r\n     o     h (number) hue\r\n     o     s (number) saturation\r\n     o     b (number) brightness\r\n     o }\r\n    \\*/\r\n    R.rgb2hsb = function (r, g, b) {\r\n        b = prepareRGB(r, g, b);\r\n        r = b[0];\r\n        g = b[1];\r\n        b = b[2];\r\n\r\n        var H, S, V, C;\r\n        V = mmax(r, g, b);\r\n        C = V - mmin(r, g, b);\r\n        H = (C == 0 ? null :\r\n             V == r ? (g - b) / C :\r\n             V == g ? (b - r) / C + 2 :\r\n                      (r - g) / C + 4\r\n            );\r\n        H = ((H + 360) % 6) * 60 / 360;\r\n        S = C == 0 ? 0 : C / V;\r\n        return {h: H, s: S, b: V, toString: hsbtoString};\r\n    };\r\n    /*\\\r\n     * Raphael.rgb2hsl\r\n     [ method ]\r\n     **\r\n     * Converts RGB values to HSL object.\r\n     > Parameters\r\n     - r (number) red\r\n     - g (number) green\r\n     - b (number) blue\r\n     = (object) HSL object in format:\r\n     o {\r\n     o     h (number) hue\r\n     o     s (number) saturation\r\n     o     l (number) luminosity\r\n     o }\r\n    \\*/\r\n    R.rgb2hsl = function (r, g, b) {\r\n        b = prepareRGB(r, g, b);\r\n        r = b[0];\r\n        g = b[1];\r\n        b = b[2];\r\n\r\n        var H, S, L, M, m, C;\r\n        M = mmax(r, g, b);\r\n        m = mmin(r, g, b);\r\n        C = M - m;\r\n        H = (C == 0 ? null :\r\n             M == r ? (g - b) / C :\r\n             M == g ? (b - r) / C + 2 :\r\n                      (r - g) / C + 4);\r\n        H = ((H + 360) % 6) * 60 / 360;\r\n        L = (M + m) / 2;\r\n        S = (C == 0 ? 0 :\r\n             L < .5 ? C / (2 * L) :\r\n                      C / (2 - 2 * L));\r\n        return {h: H, s: S, l: L, toString: hsltoString};\r\n    };\r\n    R._path2string = function () {\r\n        return this.join(\",\").replace(p2s, \"$1\");\r\n    };\r\n    function repush(array, item) {\r\n        for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\r\n            return array.push(array.splice(i, 1)[0]);\r\n        }\r\n    }\r\n    function cacher(f, scope, postprocessor) {\r\n        function newf() {\r\n            var arg = Array.prototype.slice.call(arguments, 0),\r\n                args = arg.join(\"\\u2400\"),\r\n                cache = newf.cache = newf.cache || {},\r\n                count = newf.count = newf.count || [];\r\n            if (cache[has](args)) {\r\n                repush(count, args);\r\n                return postprocessor ? postprocessor(cache[args]) : cache[args];\r\n            }\r\n            count.length >= 1e3 && delete cache[count.shift()];\r\n            count.push(args);\r\n            cache[args] = f[apply](scope, arg);\r\n            return postprocessor ? postprocessor(cache[args]) : cache[args];\r\n        }\r\n        return newf;\r\n    }\r\n\r\n    var preload = R._preload = function (src, f) {\r\n        var img = g.doc.createElement(\"img\");\r\n        img.style.cssText = \"position:absolute;left:-9999em;top:-9999em\";\r\n        img.onload = function () {\r\n            f.call(this);\r\n            this.onload = null;\r\n            g.doc.body.removeChild(this);\r\n        };\r\n        img.onerror = function () {\r\n            g.doc.body.removeChild(this);\r\n        };\r\n        g.doc.body.appendChild(img);\r\n        img.src = src;\r\n    };\r\n\r\n    function clrToString() {\r\n        return this.hex;\r\n    }\r\n\r\n    /*\\\r\n     * Raphael.getRGB\r\n     [ method ]\r\n     **\r\n     * Parses colour string as RGB object\r\n     > Parameters\r\n     - colour (string) colour string in one of formats:\r\n     # <ul>\r\n     #     <li>Colour name (“<code>red</code>”, “<code>green</code>”, “<code>cornflowerblue</code>”, etc)</li>\r\n     #     <li>#••• — shortened HTML colour: (“<code>#000</code>”, “<code>#fc0</code>”, etc)</li>\r\n     #     <li>#•••••• — full length HTML colour: (“<code>#000000</code>”, “<code>#bd2300</code>”)</li>\r\n     #     <li>rgb(•••, •••, •••) — red, green and blue channels’ values: (“<code>rgb(200,&nbsp;100,&nbsp;0)</code>”)</li>\r\n     #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (“<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>”)</li>\r\n     #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (“<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>”)</li>\r\n     #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\r\n     #     <li>hsl(•••, •••, •••) — same as hsb</li>\r\n     #     <li>hsl(•••%, •••%, •••%) — same as hsb</li>\r\n     # </ul>\r\n     = (object) RGB object in format:\r\n     o {\r\n     o     r (number) red,\r\n     o     g (number) green,\r\n     o     b (number) blue\r\n     o     hex (string) color in HTML/CSS format: #••••••,\r\n     o     error (boolean) true if string can’t be parsed\r\n     o }\r\n    \\*/\r\n    R.getRGB = cacher(function (colour) {\r\n        if (!colour || !!((colour = Str(colour)).indexOf(\"-\") + 1)) {\r\n            return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: clrToString};\r\n        }\r\n        if (colour == \"none\") {\r\n            return {r: -1, g: -1, b: -1, hex: \"none\", toString: clrToString};\r\n        }\r\n        !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \"#\") && (colour = toHex(colour));\r\n        var res,\r\n            red,\r\n            green,\r\n            blue,\r\n            opacity,\r\n            t,\r\n            values,\r\n            rgb = colour.match(colourRegExp);\r\n        if (rgb) {\r\n            if (rgb[2]) {\r\n                blue = toInt(rgb[2].substring(5), 16);\r\n                green = toInt(rgb[2].substring(3, 5), 16);\r\n                red = toInt(rgb[2].substring(1, 3), 16);\r\n            }\r\n            if (rgb[3]) {\r\n                blue = toInt((t = rgb[3].charAt(3)) + t, 16);\r\n                green = toInt((t = rgb[3].charAt(2)) + t, 16);\r\n                red = toInt((t = rgb[3].charAt(1)) + t, 16);\r\n            }\r\n            if (rgb[4]) {\r\n                values = rgb[4][split](commaSpaces);\r\n                red = toFloat(values[0]);\r\n                values[0].slice(-1) == \"%\" && (red *= 2.55);\r\n                green = toFloat(values[1]);\r\n                values[1].slice(-1) == \"%\" && (green *= 2.55);\r\n                blue = toFloat(values[2]);\r\n                values[2].slice(-1) == \"%\" && (blue *= 2.55);\r\n                rgb[1].toLowerCase().slice(0, 4) == \"rgba\" && (opacity = toFloat(values[3]));\r\n                values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\r\n            }\r\n            if (rgb[5]) {\r\n                values = rgb[5][split](commaSpaces);\r\n                red = toFloat(values[0]);\r\n                values[0].slice(-1) == \"%\" && (red *= 2.55);\r\n                green = toFloat(values[1]);\r\n                values[1].slice(-1) == \"%\" && (green *= 2.55);\r\n                blue = toFloat(values[2]);\r\n                values[2].slice(-1) == \"%\" && (blue *= 2.55);\r\n                (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\r\n                rgb[1].toLowerCase().slice(0, 4) == \"hsba\" && (opacity = toFloat(values[3]));\r\n                values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\r\n                return R.hsb2rgb(red, green, blue, opacity);\r\n            }\r\n            if (rgb[6]) {\r\n                values = rgb[6][split](commaSpaces);\r\n                red = toFloat(values[0]);\r\n                values[0].slice(-1) == \"%\" && (red *= 2.55);\r\n                green = toFloat(values[1]);\r\n                values[1].slice(-1) == \"%\" && (green *= 2.55);\r\n                blue = toFloat(values[2]);\r\n                values[2].slice(-1) == \"%\" && (blue *= 2.55);\r\n                (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\r\n                rgb[1].toLowerCase().slice(0, 4) == \"hsla\" && (opacity = toFloat(values[3]));\r\n                values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\r\n                return R.hsl2rgb(red, green, blue, opacity);\r\n            }\r\n            rgb = {r: red, g: green, b: blue, toString: clrToString};\r\n            rgb.hex = \"#\" + (16777216 | blue | (green << 8) | (red << 16)).toString(16).slice(1);\r\n            R.is(opacity, \"finite\") && (rgb.opacity = opacity);\r\n            return rgb;\r\n        }\r\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: clrToString};\r\n    }, R);\r\n    /*\\\r\n     * Raphael.hsb\r\n     [ method ]\r\n     **\r\n     * Converts HSB values to hex representation of the colour.\r\n     > Parameters\r\n     - h (number) hue\r\n     - s (number) saturation\r\n     - b (number) value or brightness\r\n     = (string) hex representation of the colour.\r\n    \\*/\r\n    R.hsb = cacher(function (h, s, b) {\r\n        return R.hsb2rgb(h, s, b).hex;\r\n    });\r\n    /*\\\r\n     * Raphael.hsl\r\n     [ method ]\r\n     **\r\n     * Converts HSL values to hex representation of the colour.\r\n     > Parameters\r\n     - h (number) hue\r\n     - s (number) saturation\r\n     - l (number) luminosity\r\n     = (string) hex representation of the colour.\r\n    \\*/\r\n    R.hsl = cacher(function (h, s, l) {\r\n        return R.hsl2rgb(h, s, l).hex;\r\n    });\r\n    /*\\\r\n     * Raphael.rgb\r\n     [ method ]\r\n     **\r\n     * Converts RGB values to hex representation of the colour.\r\n     > Parameters\r\n     - r (number) red\r\n     - g (number) green\r\n     - b (number) blue\r\n     = (string) hex representation of the colour.\r\n    \\*/\r\n    R.rgb = cacher(function (r, g, b) {\r\n        return \"#\" + (16777216 | b | (g << 8) | (r << 16)).toString(16).slice(1);\r\n    });\r\n    /*\\\r\n     * Raphael.getColor\r\n     [ method ]\r\n     **\r\n     * On each call returns next colour in the spectrum. To reset it back to red call @Raphael.getColor.reset\r\n     > Parameters\r\n     - value (number) #optional brightness, default is `0.75`\r\n     = (string) hex representation of the colour.\r\n    \\*/\r\n    R.getColor = function (value) {\r\n        var start = this.getColor.start = this.getColor.start || {h: 0, s: 1, b: value || .75},\r\n            rgb = this.hsb2rgb(start.h, start.s, start.b);\r\n        start.h += .075;\r\n        if (start.h > 1) {\r\n            start.h = 0;\r\n            start.s -= .2;\r\n            start.s <= 0 && (this.getColor.start = {h: 0, s: 1, b: start.b});\r\n        }\r\n        return rgb.hex;\r\n    };\r\n    /*\\\r\n     * Raphael.getColor.reset\r\n     [ method ]\r\n     **\r\n     * Resets spectrum position for @Raphael.getColor back to red.\r\n    \\*/\r\n    R.getColor.reset = function () {\r\n        delete this.start;\r\n    };\r\n\r\n    // http://schepers.cc/getting-to-the-point\r\n    function catmullRom2bezier(crp, z) {\r\n        var d = [];\r\n        for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\r\n            var p = [\r\n                        {x: +crp[i - 2], y: +crp[i - 1]},\r\n                        {x: +crp[i],     y: +crp[i + 1]},\r\n                        {x: +crp[i + 2], y: +crp[i + 3]},\r\n                        {x: +crp[i + 4], y: +crp[i + 5]}\r\n                    ];\r\n            if (z) {\r\n                if (!i) {\r\n                    p[0] = {x: +crp[iLen - 2], y: +crp[iLen - 1]};\r\n                } else if (iLen - 4 == i) {\r\n                    p[3] = {x: +crp[0], y: +crp[1]};\r\n                } else if (iLen - 2 == i) {\r\n                    p[2] = {x: +crp[0], y: +crp[1]};\r\n                    p[3] = {x: +crp[2], y: +crp[3]};\r\n                }\r\n            } else {\r\n                if (iLen - 4 == i) {\r\n                    p[3] = p[2];\r\n                } else if (!i) {\r\n                    p[0] = {x: +crp[i], y: +crp[i + 1]};\r\n                }\r\n            }\r\n            d.push([\"C\",\r\n                  (-p[0].x + 6 * p[1].x + p[2].x) / 6,\r\n                  (-p[0].y + 6 * p[1].y + p[2].y) / 6,\r\n                  (p[1].x + 6 * p[2].x - p[3].x) / 6,\r\n                  (p[1].y + 6*p[2].y - p[3].y) / 6,\r\n                  p[2].x,\r\n                  p[2].y\r\n            ]);\r\n        }\r\n\r\n        return d;\r\n    }\r\n    /*\\\r\n     * Raphael.parsePathString\r\n     [ method ]\r\n     **\r\n     * Utility method\r\n     **\r\n     * Parses given path string into an array of arrays of path segments.\r\n     > Parameters\r\n     - pathString (string|array) path string or array of segments (in the last case it will be returned straight away)\r\n     = (array) array of segments.\r\n    \\*/\r\n    R.parsePathString = function (pathString) {\r\n        if (!pathString) {\r\n            return null;\r\n        }\r\n        var pth = paths(pathString);\r\n        if (pth.arr) {\r\n            return pathClone(pth.arr);\r\n        }\r\n\r\n        var paramCounts = {a: 7, c: 6, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, z: 0},\r\n            data = [];\r\n        if (R.is(pathString, array) && R.is(pathString[0], array)) { // rough assumption\r\n            data = pathClone(pathString);\r\n        }\r\n        if (!data.length) {\r\n            Str(pathString).replace(pathCommand, function (a, b, c) {\r\n                var params = [],\r\n                    name = b.toLowerCase();\r\n                c.replace(pathValues, function (a, b) {\r\n                    b && params.push(+b);\r\n                });\r\n                if (name == \"m\" && params.length > 2) {\r\n                    data.push([b][concat](params.splice(0, 2)));\r\n                    name = \"l\";\r\n                    b = b == \"m\" ? \"l\" : \"L\";\r\n                }\r\n                if (name == \"r\") {\r\n                    data.push([b][concat](params));\r\n                } else while (params.length >= paramCounts[name]) {\r\n                    data.push([b][concat](params.splice(0, paramCounts[name])));\r\n                    if (!paramCounts[name]) {\r\n                        break;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        data.toString = R._path2string;\r\n        pth.arr = pathClone(data);\r\n        return data;\r\n    };\r\n    /*\\\r\n     * Raphael.parseTransformString\r\n     [ method ]\r\n     **\r\n     * Utility method\r\n     **\r\n     * Parses given path string into an array of transformations.\r\n     > Parameters\r\n     - TString (string|array) transform string or array of transformations (in the last case it will be returned straight away)\r\n     = (array) array of transformations.\r\n    \\*/\r\n    R.parseTransformString = cacher(function (TString) {\r\n        if (!TString) {\r\n            return null;\r\n        }\r\n        var paramCounts = {r: 3, s: 4, t: 2, m: 6},\r\n            data = [];\r\n        if (R.is(TString, array) && R.is(TString[0], array)) { // rough assumption\r\n            data = pathClone(TString);\r\n        }\r\n        if (!data.length) {\r\n            Str(TString).replace(tCommand, function (a, b, c) {\r\n                var params = [],\r\n                    name = lowerCase.call(b);\r\n                c.replace(pathValues, function (a, b) {\r\n                    b && params.push(+b);\r\n                });\r\n                data.push([b][concat](params));\r\n            });\r\n        }\r\n        data.toString = R._path2string;\r\n        return data;\r\n    });\r\n    // PATHS\r\n    var paths = function (ps) {\r\n        var p = paths.ps = paths.ps || {};\r\n        if (p[ps]) {\r\n            p[ps].sleep = 100;\r\n        } else {\r\n            p[ps] = {\r\n                sleep: 100\r\n            };\r\n        }\r\n        setTimeout(function () {\r\n            for (var key in p) if (p[has](key) && key != ps) {\r\n                p[key].sleep--;\r\n                !p[key].sleep && delete p[key];\r\n            }\r\n        });\r\n        return p[ps];\r\n    };\r\n    /*\\\r\n     * Raphael.findDotsAtSegment\r\n     [ method ]\r\n     **\r\n     * Utility method\r\n     **\r\n     * Find dot coordinates on the given cubic bezier curve at the given t.\r\n     > Parameters\r\n     - p1x (number) x of the first point of the curve\r\n     - p1y (number) y of the first point of the curve\r\n     - c1x (number) x of the first anchor of the curve\r\n     - c1y (number) y of the first anchor of the curve\r\n     - c2x (number) x of the second anchor of the curve\r\n     - c2y (number) y of the second anchor of the curve\r\n     - p2x (number) x of the second point of the curve\r\n     - p2y (number) y of the second point of the curve\r\n     - t (number) position on the curve (0..1)\r\n     = (object) point information in format:\r\n     o {\r\n     o     x: (number) x coordinate of the point\r\n     o     y: (number) y coordinate of the point\r\n     o     m: {\r\n     o         x: (number) x coordinate of the left anchor\r\n     o         y: (number) y coordinate of the left anchor\r\n     o     }\r\n     o     n: {\r\n     o         x: (number) x coordinate of the right anchor\r\n     o         y: (number) y coordinate of the right anchor\r\n     o     }\r\n     o     start: {\r\n     o         x: (number) x coordinate of the start of the curve\r\n     o         y: (number) y coordinate of the start of the curve\r\n     o     }\r\n     o     end: {\r\n     o         x: (number) x coordinate of the end of the curve\r\n     o         y: (number) y coordinate of the end of the curve\r\n     o     }\r\n     o     alpha: (number) angle of the curve derivative at the point\r\n     o }\r\n    \\*/\r\n    R.findDotsAtSegment = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\r\n        var t1 = 1 - t,\r\n            t13 = pow(t1, 3),\r\n            t12 = pow(t1, 2),\r\n            t2 = t * t,\r\n            t3 = t2 * t,\r\n            x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\r\n            y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\r\n            mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\r\n            my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\r\n            nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\r\n            ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\r\n            ax = t1 * p1x + t * c1x,\r\n            ay = t1 * p1y + t * c1y,\r\n            cx = t1 * c2x + t * p2x,\r\n            cy = t1 * c2y + t * p2y,\r\n            alpha = (90 - math.atan2(mx - nx, my - ny) * 180 / PI);\r\n        (mx > nx || my < ny) && (alpha += 180);\r\n        return {\r\n            x: x,\r\n            y: y,\r\n            m: {x: mx, y: my},\r\n            n: {x: nx, y: ny},\r\n            start: {x: ax, y: ay},\r\n            end: {x: cx, y: cy},\r\n            alpha: alpha\r\n        };\r\n    };\r\n    /*\\\r\n     * Raphael.bezierBBox\r\n     [ method ]\r\n     **\r\n     * Utility method\r\n     **\r\n     * Return bounding box of a given cubic bezier curve\r\n     > Parameters\r\n     - p1x (number) x of the first point of the curve\r\n     - p1y (number) y of the first point of the curve\r\n     - c1x (number) x of the first anchor of the curve\r\n     - c1y (number) y of the first anchor of the curve\r\n     - c2x (number) x of the second anchor of the curve\r\n     - c2y (number) y of the second anchor of the curve\r\n     - p2x (number) x of the second point of the curve\r\n     - p2y (number) y of the second point of the curve\r\n     * or\r\n     - bez (array) array of six points for bezier curve\r\n     = (object) point information in format:\r\n     o {\r\n     o     min: {\r\n     o         x: (number) x coordinate of the left point\r\n     o         y: (number) y coordinate of the top point\r\n     o     }\r\n     o     max: {\r\n     o         x: (number) x coordinate of the right point\r\n     o         y: (number) y coordinate of the bottom point\r\n     o     }\r\n     o }\r\n    \\*/\r\n    R.bezierBBox = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\r\n        if (!R.is(p1x, \"array\")) {\r\n            p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\r\n        }\r\n        var bbox = curveDim.apply(null, p1x);\r\n        return {\r\n            x: bbox.min.x,\r\n            y: bbox.min.y,\r\n            x2: bbox.max.x,\r\n            y2: bbox.max.y,\r\n            width: bbox.max.x - bbox.min.x,\r\n            height: bbox.max.y - bbox.min.y\r\n        };\r\n    };\r\n    /*\\\r\n     * Raphael.isPointInsideBBox\r\n     [ method ]\r\n     **\r\n     * Utility method\r\n     **\r\n     * Returns `true` if given point is inside bounding boxes.\r\n     > Parameters\r\n     - bbox (string) bounding box\r\n     - x (string) x coordinate of the point\r\n     - y (string) y coordinate of the point\r\n     = (boolean) `true` if point inside\r\n    \\*/\r\n    R.isPointInsideBBox = function (bbox, x, y) {\r\n        return x >= bbox.x && x <= bbox.x2 && y >= bbox.y && y <= bbox.y2;\r\n    };\r\n    /*\\\r\n     * Raphael.isBBoxIntersect\r\n     [ method ]\r\n     **\r\n     * Utility method\r\n     **\r\n     * Returns `true` if two bounding boxes intersect\r\n     > Parameters\r\n     - bbox1 (string) first bounding box\r\n     - bbox2 (string) second bounding box\r\n     = (boolean) `true` if they intersect\r\n    \\*/\r\n    R.isBBoxIntersect = function (bbox1, bbox2) {\r\n        var i = R.isPointInsideBBox;\r\n        return i(bbox2, bbox1.x, bbox1.y)\r\n            || i(bbox2, bbox1.x2, bbox1.y)\r\n            || i(bbox2, bbox1.x, bbox1.y2)\r\n            || i(bbox2, bbox1.x2, bbox1.y2)\r\n            || i(bbox1, bbox2.x, bbox2.y)\r\n            || i(bbox1, bbox2.x2, bbox2.y)\r\n            || i(bbox1, bbox2.x, bbox2.y2)\r\n            || i(bbox1, bbox2.x2, bbox2.y2)\r\n            || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x)\r\n            && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\r\n    };\r\n    function base3(t, p1, p2, p3, p4) {\r\n        var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\r\n            t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\r\n        return t * t2 - 3 * p1 + 3 * p2;\r\n    }\r\n    function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\r\n        if (z == null) {\r\n            z = 1;\r\n        }\r\n        z = z > 1 ? 1 : z < 0 ? 0 : z;\r\n        var z2 = z / 2,\r\n            n = 12,\r\n            Tvalues = [-0.1252,0.1252,-0.3678,0.3678,-0.5873,0.5873,-0.7699,0.7699,-0.9041,0.9041,-0.9816,0.9816],\r\n            Cvalues = [0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],\r\n            sum = 0;\r\n        for (var i = 0; i < n; i++) {\r\n            var ct = z2 * Tvalues[i] + z2,\r\n                xbase = base3(ct, x1, x2, x3, x4),\r\n                ybase = base3(ct, y1, y2, y3, y4),\r\n                comb = xbase * xbase + ybase * ybase;\r\n            sum += Cvalues[i] * math.sqrt(comb);\r\n        }\r\n        return z2 * sum;\r\n    }\r\n    function getTatLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {\r\n        if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {\r\n            return;\r\n        }\r\n        var t = 1,\r\n            step = t / 2,\r\n            t2 = t - step,\r\n            l,\r\n            e = .01;\r\n        l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\r\n        while (abs(l - ll) > e) {\r\n            step /= 2;\r\n            t2 += (l < ll ? 1 : -1) * step;\r\n            l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\r\n        }\r\n        return t2;\r\n    }\r\n    function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\r\n        if (\r\n            mmax(x1, x2) < mmin(x3, x4) ||\r\n            mmin(x1, x2) > mmax(x3, x4) ||\r\n            mmax(y1, y2) < mmin(y3, y4) ||\r\n            mmin(y1, y2) > mmax(y3, y4)\r\n        ) {\r\n            return;\r\n        }\r\n        var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\r\n            ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\r\n            denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\r\n\r\n        if (!denominator) {\r\n            return;\r\n        }\r\n        var px = nx / denominator,\r\n            py = ny / denominator,\r\n            px2 = +px.toFixed(2),\r\n            py2 = +py.toFixed(2);\r\n        if (\r\n            px2 < +mmin(x1, x2).toFixed(2) ||\r\n            px2 > +mmax(x1, x2).toFixed(2) ||\r\n            px2 < +mmin(x3, x4).toFixed(2) ||\r\n            px2 > +mmax(x3, x4).toFixed(2) ||\r\n            py2 < +mmin(y1, y2).toFixed(2) ||\r\n            py2 > +mmax(y1, y2).toFixed(2) ||\r\n            py2 < +mmin(y3, y4).toFixed(2) ||\r\n            py2 > +mmax(y3, y4).toFixed(2)\r\n        ) {\r\n            return;\r\n        }\r\n        return {x: px, y: py};\r\n    }\r\n    function inter(bez1, bez2) {\r\n        return interHelper(bez1, bez2);\r\n    }\r\n    function interCount(bez1, bez2) {\r\n        return interHelper(bez1, bez2, 1);\r\n    }\r\n    function interHelper(bez1, bez2, justCount) {\r\n        var bbox1 = R.bezierBBox(bez1),\r\n            bbox2 = R.bezierBBox(bez2);\r\n        if (!R.isBBoxIntersect(bbox1, bbox2)) {\r\n            return justCount ? 0 : [];\r\n        }\r\n        var l1 = bezlen.apply(0, bez1),\r\n            l2 = bezlen.apply(0, bez2),\r\n            n1 = mmax(~~(l1 / 5), 1),\r\n            n2 = mmax(~~(l2 / 5), 1),\r\n            dots1 = [],\r\n            dots2 = [],\r\n            xy = {},\r\n            res = justCount ? 0 : [];\r\n        for (var i = 0; i < n1 + 1; i++) {\r\n            var p = R.findDotsAtSegment.apply(R, bez1.concat(i / n1));\r\n            dots1.push({x: p.x, y: p.y, t: i / n1});\r\n        }\r\n        for (i = 0; i < n2 + 1; i++) {\r\n            p = R.findDotsAtSegment.apply(R, bez2.concat(i / n2));\r\n            dots2.push({x: p.x, y: p.y, t: i / n2});\r\n        }\r\n        for (i = 0; i < n1; i++) {\r\n            for (var j = 0; j < n2; j++) {\r\n                var di = dots1[i],\r\n                    di1 = dots1[i + 1],\r\n                    dj = dots2[j],\r\n                    dj1 = dots2[j + 1],\r\n                    ci = abs(di1.x - di.x) < .001 ? \"y\" : \"x\",\r\n                    cj = abs(dj1.x - dj.x) < .001 ? \"y\" : \"x\",\r\n                    is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\r\n                if (is) {\r\n                    if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\r\n                        continue;\r\n                    }\r\n                    xy[is.x.toFixed(4)] = is.y.toFixed(4);\r\n                    var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\r\n                        t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\r\n                    if (t1 >= 0 && t1 <= 1.001 && t2 >= 0 && t2 <= 1.001) {\r\n                        if (justCount) {\r\n                            res++;\r\n                        } else {\r\n                            res.push({\r\n                                x: is.x,\r\n                                y: is.y,\r\n                                t1: mmin(t1, 1),\r\n                                t2: mmin(t2, 1)\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    /*\\\r\n     * Raphael.pathIntersection\r\n     [ method ]\r\n     **\r\n     * Utility method\r\n     **\r\n     * Finds intersections of two paths\r\n     > Parameters\r\n     - path1 (string) path string\r\n     - path2 (string) path string\r\n     = (array) dots of intersection\r\n     o [\r\n     o     {\r\n     o         x: (number) x coordinate of the point\r\n     o         y: (number) y coordinate of the point\r\n     o         t1: (number) t value for segment of path1\r\n     o         t2: (number) t value for segment of path2\r\n     o         segment1: (number) order number for segment of path1\r\n     o         segment2: (number) order number for segment of path2\r\n     o         bez1: (array) eight coordinates representing beziér curve for the segment of path1\r\n     o         bez2: (array) eight coordinates representing beziér curve for the segment of path2\r\n     o     }\r\n     o ]\r\n    \\*/\r\n    R.pathIntersection = function (path1, path2) {\r\n        return interPathHelper(path1, path2);\r\n    };\r\n    R.pathIntersectionNumber = function (path1, path2) {\r\n        return interPathHelper(path1, path2, 1);\r\n    };\r\n    function interPathHelper(path1, path2, justCount) {\r\n        path1 = R._path2curve(path1);\r\n        path2 = R._path2curve(path2);\r\n        var x1, y1, x2, y2, x1m, y1m, x2m, y2m, bez1, bez2,\r\n            res = justCount ? 0 : [];\r\n        for (var i = 0, ii = path1.length; i < ii; i++) {\r\n            var pi = path1[i];\r\n            if (pi[0] == \"M\") {\r\n                x1 = x1m = pi[1];\r\n                y1 = y1m = pi[2];\r\n            } else {\r\n                if (pi[0] == \"C\") {\r\n                    bez1 = [x1, y1].concat(pi.slice(1));\r\n                    x1 = bez1[6];\r\n                    y1 = bez1[7];\r\n                } else {\r\n                    bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\r\n                    x1 = x1m;\r\n                    y1 = y1m;\r\n                }\r\n                for (var j = 0, jj = path2.length; j < jj; j++) {\r\n                    var pj = path2[j];\r\n                    if (pj[0] == \"M\") {\r\n                        x2 = x2m = pj[1];\r\n                        y2 = y2m = pj[2];\r\n                    } else {\r\n                        if (pj[0] == \"C\") {\r\n                            bez2 = [x2, y2].concat(pj.slice(1));\r\n                            x2 = bez2[6];\r\n                            y2 = bez2[7];\r\n                        } else {\r\n                            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\r\n                            x2 = x2m;\r\n                            y2 = y2m;\r\n                        }\r\n                        var intr = interHelper(bez1, bez2, justCount);\r\n                        if (justCount) {\r\n                            res += intr;\r\n                        } else {\r\n                            for (var k = 0, kk = intr.length; k < kk; k++) {\r\n                                intr[k].segment1 = i;\r\n                                intr[k].segment2 = j;\r\n                                intr[k].bez1 = bez1;\r\n                                intr[k].bez2 = bez2;\r\n                            }\r\n                            res = res.concat(intr);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    /*\\\r\n     * Raphael.isPointInsidePath\r\n     [ method ]\r\n     **\r\n     * Utility method\r\n     **\r\n     * Returns `true` if given point is inside a given closed path.\r\n     > Parameters\r\n     - path (string) path string\r\n     - x (number) x of the point\r\n     - y (number) y of the point\r\n     = (boolean) true, if point is inside the path\r\n    \\*/\r\n    R.isPointInsidePath = function (path, x, y) {\r\n        var bbox = R.pathBBox(path);\r\n        return R.isPointInsideBBox(bbox, x, y) &&\r\n               interPathHelper(path, [[\"M\", x, y], [\"H\", bbox.x2 + 10]], 1) % 2 == 1;\r\n    };\r\n    R._removedFactory = function (methodname) {\r\n        return function () {\r\n            eve(\"raphael.log\", null, \"Rapha\\xebl: you are calling to method \\u201c\" + methodname + \"\\u201d of removed object\", methodname);\r\n        };\r\n    };\r\n    /*\\\r\n     * Raphael.pathBBox\r\n     [ method ]\r\n     **\r\n     * Utility method\r\n     **\r\n     * Return bounding box of a given path\r\n     > Parameters\r\n     - path (string) path string\r\n     = (object) bounding box\r\n     o {\r\n     o     x: (number) x coordinate of the left top point of the box\r\n     o     y: (number) y coordinate of the left top point of the box\r\n     o     x2: (number) x coordinate of the right bottom point of the box\r\n     o     y2: (number) y coordinate of the right bottom point of the box\r\n     o     width: (number) width of the box\r\n     o     height: (number) height of the box\r\n     o     cx: (number) x coordinate of the center of the box\r\n     o     cy: (number) y coordinate of the center of the box\r\n     o }\r\n    \\*/\r\n    var pathDimensions = R.pathBBox = function (path) {\r\n        var pth = paths(path);\r\n        if (pth.bbox) {\r\n            return clone(pth.bbox);\r\n        }\r\n        if (!path) {\r\n            return {x: 0, y: 0, width: 0, height: 0, x2: 0, y2: 0};\r\n        }\r\n        path = path2curve(path);\r\n        var x = 0,\r\n            y = 0,\r\n            X = [],\r\n            Y = [],\r\n            p;\r\n        for (var i = 0, ii = path.length; i < ii; i++) {\r\n            p = path[i];\r\n            if (p[0] == \"M\") {\r\n                x = p[1];\r\n                y = p[2];\r\n                X.push(x);\r\n                Y.push(y);\r\n            } else {\r\n                var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\r\n                X = X[concat](dim.min.x, dim.max.x);\r\n                Y = Y[concat](dim.min.y, dim.max.y);\r\n                x = p[5];\r\n                y = p[6];\r\n            }\r\n        }\r\n        var xmin = mmin[apply](0, X),\r\n            ymin = mmin[apply](0, Y),\r\n            xmax = mmax[apply](0, X),\r\n            ymax = mmax[apply](0, Y),\r\n            width = xmax - xmin,\r\n            height = ymax - ymin,\r\n                bb = {\r\n                x: xmin,\r\n                y: ymin,\r\n                x2: xmax,\r\n                y2: ymax,\r\n                width: width,\r\n                height: height,\r\n                cx: xmin + width / 2,\r\n                cy: ymin + height / 2\r\n            };\r\n        pth.bbox = clone(bb);\r\n        return bb;\r\n    },\r\n        pathClone = function (pathArray) {\r\n            var res = clone(pathArray);\r\n            res.toString = R._path2string;\r\n            return res;\r\n        },\r\n        pathToRelative = R._pathToRelative = function (pathArray) {\r\n            var pth = paths(pathArray);\r\n            if (pth.rel) {\r\n                return pathClone(pth.rel);\r\n            }\r\n            if (!R.is(pathArray, array) || !R.is(pathArray && pathArray[0], array)) { // rough assumption\r\n                pathArray = R.parsePathString(pathArray);\r\n            }\r\n            var res = [],\r\n                x = 0,\r\n                y = 0,\r\n                mx = 0,\r\n                my = 0,\r\n                start = 0;\r\n            if (pathArray[0][0] == \"M\") {\r\n                x = pathArray[0][1];\r\n                y = pathArray[0][2];\r\n                mx = x;\r\n                my = y;\r\n                start++;\r\n                res.push([\"M\", x, y]);\r\n            }\r\n            for (var i = start, ii = pathArray.length; i < ii; i++) {\r\n                var r = res[i] = [],\r\n                    pa = pathArray[i];\r\n                if (pa[0] != lowerCase.call(pa[0])) {\r\n                    r[0] = lowerCase.call(pa[0]);\r\n                    switch (r[0]) {\r\n                        case \"a\":\r\n                            r[1] = pa[1];\r\n                            r[2] = pa[2];\r\n                            r[3] = pa[3];\r\n                            r[4] = pa[4];\r\n                            r[5] = pa[5];\r\n                            r[6] = +(pa[6] - x).toFixed(3);\r\n                            r[7] = +(pa[7] - y).toFixed(3);\r\n                            break;\r\n                        case \"v\":\r\n                            r[1] = +(pa[1] - y).toFixed(3);\r\n                            break;\r\n                        case \"m\":\r\n                            mx = pa[1];\r\n                            my = pa[2];\r\n                        default:\r\n                            for (var j = 1, jj = pa.length; j < jj; j++) {\r\n                                r[j] = +(pa[j] - ((j % 2) ? x : y)).toFixed(3);\r\n                            }\r\n                    }\r\n                } else {\r\n                    r = res[i] = [];\r\n                    if (pa[0] == \"m\") {\r\n                        mx = pa[1] + x;\r\n                        my = pa[2] + y;\r\n                    }\r\n                    for (var k = 0, kk = pa.length; k < kk; k++) {\r\n                        res[i][k] = pa[k];\r\n                    }\r\n                }\r\n                var len = res[i].length;\r\n                switch (res[i][0]) {\r\n                    case \"z\":\r\n                        x = mx;\r\n                        y = my;\r\n                        break;\r\n                    case \"h\":\r\n                        x += +res[i][len - 1];\r\n                        break;\r\n                    case \"v\":\r\n                        y += +res[i][len - 1];\r\n                        break;\r\n                    default:\r\n                        x += +res[i][len - 2];\r\n                        y += +res[i][len - 1];\r\n                }\r\n            }\r\n            res.toString = R._path2string;\r\n            pth.rel = pathClone(res);\r\n            return res;\r\n        },\r\n        pathToAbsolute = R._pathToAbsolute = function (pathArray) {\r\n            var pth = paths(pathArray);\r\n            if (pth.abs) {\r\n                return pathClone(pth.abs);\r\n            }\r\n            if (!R.is(pathArray, array) || !R.is(pathArray && pathArray[0], array)) { // rough assumption\r\n                pathArray = R.parsePathString(pathArray);\r\n            }\r\n            if (!pathArray || !pathArray.length) {\r\n                return [[\"M\", 0, 0]];\r\n            }\r\n            var res = [],\r\n                x = 0,\r\n                y = 0,\r\n                mx = 0,\r\n                my = 0,\r\n                start = 0;\r\n            if (pathArray[0][0] == \"M\") {\r\n                x = +pathArray[0][1];\r\n                y = +pathArray[0][2];\r\n                mx = x;\r\n                my = y;\r\n                start++;\r\n                res[0] = [\"M\", x, y];\r\n            }\r\n            var crz = pathArray.length == 3 && pathArray[0][0] == \"M\" && pathArray[1][0].toUpperCase() == \"R\" && pathArray[2][0].toUpperCase() == \"Z\";\r\n            for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\r\n                res.push(r = []);\r\n                pa = pathArray[i];\r\n                if (pa[0] != upperCase.call(pa[0])) {\r\n                    r[0] = upperCase.call(pa[0]);\r\n                    switch (r[0]) {\r\n                        case \"A\":\r\n                            r[1] = pa[1];\r\n                            r[2] = pa[2];\r\n                            r[3] = pa[3];\r\n                            r[4] = pa[4];\r\n                            r[5] = pa[5];\r\n                            r[6] = +(pa[6] + x);\r\n                            r[7] = +(pa[7] + y);\r\n                            break;\r\n                        case \"V\":\r\n                            r[1] = +pa[1] + y;\r\n                            break;\r\n                        case \"H\":\r\n                            r[1] = +pa[1] + x;\r\n                            break;\r\n                        case \"R\":\r\n                            var dots = [x, y][concat](pa.slice(1));\r\n                            for (var j = 2, jj = dots.length; j < jj; j++) {\r\n                                dots[j] = +dots[j] + x;\r\n                                dots[++j] = +dots[j] + y;\r\n                            }\r\n                            res.pop();\r\n                            res = res[concat](catmullRom2bezier(dots, crz));\r\n                            break;\r\n                        case \"M\":\r\n                            mx = +pa[1] + x;\r\n                            my = +pa[2] + y;\r\n                        default:\r\n                            for (j = 1, jj = pa.length; j < jj; j++) {\r\n                                r[j] = +pa[j] + ((j % 2) ? x : y);\r\n                            }\r\n                    }\r\n                } else if (pa[0] == \"R\") {\r\n                    dots = [x, y][concat](pa.slice(1));\r\n                    res.pop();\r\n                    res = res[concat](catmullRom2bezier(dots, crz));\r\n                    r = [\"R\"][concat](pa.slice(-2));\r\n                } else {\r\n                    for (var k = 0, kk = pa.length; k < kk; k++) {\r\n                        r[k] = pa[k];\r\n                    }\r\n                }\r\n                switch (r[0]) {\r\n                    case \"Z\":\r\n                        x = mx;\r\n                        y = my;\r\n                        break;\r\n                    case \"H\":\r\n                        x = r[1];\r\n                        break;\r\n                    case \"V\":\r\n                        y = r[1];\r\n                        break;\r\n                    case \"M\":\r\n                        mx = r[r.length - 2];\r\n                        my = r[r.length - 1];\r\n                    default:\r\n                        x = r[r.length - 2];\r\n                        y = r[r.length - 1];\r\n                }\r\n            }\r\n            res.toString = R._path2string;\r\n            pth.abs = pathClone(res);\r\n            return res;\r\n        },\r\n        l2c = function (x1, y1, x2, y2) {\r\n            return [x1, y1, x2, y2, x2, y2];\r\n        },\r\n        q2c = function (x1, y1, ax, ay, x2, y2) {\r\n            var _13 = 1 / 3,\r\n                _23 = 2 / 3;\r\n            return [\r\n                    _13 * x1 + _23 * ax,\r\n                    _13 * y1 + _23 * ay,\r\n                    _13 * x2 + _23 * ax,\r\n                    _13 * y2 + _23 * ay,\r\n                    x2,\r\n                    y2\r\n                ];\r\n        },\r\n        a2c = function (x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\r\n            // for more information of where this math came from visit:\r\n            // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\r\n            var _120 = PI * 120 / 180,\r\n                rad = PI / 180 * (+angle || 0),\r\n                res = [],\r\n                xy,\r\n                rotate = cacher(function (x, y, rad) {\r\n                    var X = x * math.cos(rad) - y * math.sin(rad),\r\n                        Y = x * math.sin(rad) + y * math.cos(rad);\r\n                    return {x: X, y: Y};\r\n                });\r\n            if (!recursive) {\r\n                xy = rotate(x1, y1, -rad);\r\n                x1 = xy.x;\r\n                y1 = xy.y;\r\n                xy = rotate(x2, y2, -rad);\r\n                x2 = xy.x;\r\n                y2 = xy.y;\r\n                var cos = math.cos(PI / 180 * angle),\r\n                    sin = math.sin(PI / 180 * angle),\r\n                    x = (x1 - x2) / 2,\r\n                    y = (y1 - y2) / 2;\r\n                var h = (x * x) / (rx * rx) + (y * y) / (ry * ry);\r\n                if (h > 1) {\r\n                    h = math.sqrt(h);\r\n                    rx = h * rx;\r\n                    ry = h * ry;\r\n                }\r\n                var rx2 = rx * rx,\r\n                    ry2 = ry * ry,\r\n                    k = (large_arc_flag == sweep_flag ? -1 : 1) *\r\n                        math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\r\n                    cx = k * rx * y / ry + (x1 + x2) / 2,\r\n                    cy = k * -ry * x / rx + (y1 + y2) / 2,\r\n                    f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\r\n                    f2 = math.asin(((y2 - cy) / ry).toFixed(9));\r\n\r\n                f1 = x1 < cx ? PI - f1 : f1;\r\n                f2 = x2 < cx ? PI - f2 : f2;\r\n                f1 < 0 && (f1 = PI * 2 + f1);\r\n                f2 < 0 && (f2 = PI * 2 + f2);\r\n                if (sweep_flag && f1 > f2) {\r\n                    f1 = f1 - PI * 2;\r\n                }\r\n                if (!sweep_flag && f2 > f1) {\r\n                    f2 = f2 - PI * 2;\r\n                }\r\n            } else {\r\n                f1 = recursive[0];\r\n                f2 = recursive[1];\r\n                cx = recursive[2];\r\n                cy = recursive[3];\r\n            }\r\n            var df = f2 - f1;\r\n            if (abs(df) > _120) {\r\n                var f2old = f2,\r\n                    x2old = x2,\r\n                    y2old = y2;\r\n                f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\r\n                x2 = cx + rx * math.cos(f2);\r\n                y2 = cy + ry * math.sin(f2);\r\n                res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\r\n            }\r\n            df = f2 - f1;\r\n            var c1 = math.cos(f1),\r\n                s1 = math.sin(f1),\r\n                c2 = math.cos(f2),\r\n                s2 = math.sin(f2),\r\n                t = math.tan(df / 4),\r\n                hx = 4 / 3 * rx * t,\r\n                hy = 4 / 3 * ry * t,\r\n                m1 = [x1, y1],\r\n                m2 = [x1 + hx * s1, y1 - hy * c1],\r\n                m3 = [x2 + hx * s2, y2 - hy * c2],\r\n                m4 = [x2, y2];\r\n            m2[0] = 2 * m1[0] - m2[0];\r\n            m2[1] = 2 * m1[1] - m2[1];\r\n            if (recursive) {\r\n                return [m2, m3, m4][concat](res);\r\n            } else {\r\n                res = [m2, m3, m4][concat](res).join()[split](\",\");\r\n                var newres = [];\r\n                for (var i = 0, ii = res.length; i < ii; i++) {\r\n                    newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\r\n                }\r\n                return newres;\r\n            }\r\n        },\r\n        findDotAtSegment = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\r\n            var t1 = 1 - t;\r\n            return {\r\n                x: pow(t1, 3) * p1x + pow(t1, 2) * 3 * t * c1x + t1 * 3 * t * t * c2x + pow(t, 3) * p2x,\r\n                y: pow(t1, 3) * p1y + pow(t1, 2) * 3 * t * c1y + t1 * 3 * t * t * c2y + pow(t, 3) * p2y\r\n            };\r\n        },\r\n        curveDim = cacher(function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\r\n            var a = (c2x - 2 * c1x + p1x) - (p2x - 2 * c2x + c1x),\r\n                b = 2 * (c1x - p1x) - 2 * (c2x - c1x),\r\n                c = p1x - c1x,\r\n                t1 = (-b + math.sqrt(b * b - 4 * a * c)) / 2 / a,\r\n                t2 = (-b - math.sqrt(b * b - 4 * a * c)) / 2 / a,\r\n                y = [p1y, p2y],\r\n                x = [p1x, p2x],\r\n                dot;\r\n            abs(t1) > \"1e12\" && (t1 = .5);\r\n            abs(t2) > \"1e12\" && (t2 = .5);\r\n            if (t1 > 0 && t1 < 1) {\r\n                dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t1);\r\n                x.push(dot.x);\r\n                y.push(dot.y);\r\n            }\r\n            if (t2 > 0 && t2 < 1) {\r\n                dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t2);\r\n                x.push(dot.x);\r\n                y.push(dot.y);\r\n            }\r\n            a = (c2y - 2 * c1y + p1y) - (p2y - 2 * c2y + c1y);\r\n            b = 2 * (c1y - p1y) - 2 * (c2y - c1y);\r\n            c = p1y - c1y;\r\n            t1 = (-b + math.sqrt(b * b - 4 * a * c)) / 2 / a;\r\n            t2 = (-b - math.sqrt(b * b - 4 * a * c)) / 2 / a;\r\n            abs(t1) > \"1e12\" && (t1 = .5);\r\n            abs(t2) > \"1e12\" && (t2 = .5);\r\n            if (t1 > 0 && t1 < 1) {\r\n                dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t1);\r\n                x.push(dot.x);\r\n                y.push(dot.y);\r\n            }\r\n            if (t2 > 0 && t2 < 1) {\r\n                dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t2);\r\n                x.push(dot.x);\r\n                y.push(dot.y);\r\n            }\r\n            return {\r\n                min: {x: mmin[apply](0, x), y: mmin[apply](0, y)},\r\n                max: {x: mmax[apply](0, x), y: mmax[apply](0, y)}\r\n            };\r\n        }),\r\n        path2curve = R._path2curve = cacher(function (path, path2) {\r\n            var pth = !path2 && paths(path);\r\n            if (!path2 && pth.curve) {\r\n                return pathClone(pth.curve);\r\n            }\r\n            var p = pathToAbsolute(path),\r\n                p2 = path2 && pathToAbsolute(path2),\r\n                attrs = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\r\n                attrs2 = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\r\n                processPath = function (path, d, pcom) {\r\n                    var nx, ny, tq = {T:1, Q:1};\r\n                    if (!path) {\r\n                        return [\"C\", d.x, d.y, d.x, d.y, d.x, d.y];\r\n                    }\r\n                    !(path[0] in tq) && (d.qx = d.qy = null);\r\n                    switch (path[0]) {\r\n                        case \"M\":\r\n                            d.X = path[1];\r\n                            d.Y = path[2];\r\n                            break;\r\n                        case \"A\":\r\n                            path = [\"C\"][concat](a2c[apply](0, [d.x, d.y][concat](path.slice(1))));\r\n                            break;\r\n                        case \"S\":\r\n                            if (pcom == \"C\" || pcom == \"S\") { // In \"S\" case we have to take into account, if the previous command is C/S.\r\n                                nx = d.x * 2 - d.bx;          // And reflect the previous\r\n                                ny = d.y * 2 - d.by;          // command's control point relative to the current point.\r\n                            }\r\n                            else {                            // or some else or nothing\r\n                                nx = d.x;\r\n                                ny = d.y;\r\n                            }\r\n                            path = [\"C\", nx, ny][concat](path.slice(1));\r\n                            break;\r\n                        case \"T\":\r\n                            if (pcom == \"Q\" || pcom == \"T\") { // In \"T\" case we have to take into account, if the previous command is Q/T.\r\n                                d.qx = d.x * 2 - d.qx;        // And make a reflection similar\r\n                                d.qy = d.y * 2 - d.qy;        // to case \"S\".\r\n                            }\r\n                            else {                            // or something else or nothing\r\n                                d.qx = d.x;\r\n                                d.qy = d.y;\r\n                            }\r\n                            path = [\"C\"][concat](q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\r\n                            break;\r\n                        case \"Q\":\r\n                            d.qx = path[1];\r\n                            d.qy = path[2];\r\n                            path = [\"C\"][concat](q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\r\n                            break;\r\n                        case \"L\":\r\n                            path = [\"C\"][concat](l2c(d.x, d.y, path[1], path[2]));\r\n                            break;\r\n                        case \"H\":\r\n                            path = [\"C\"][concat](l2c(d.x, d.y, path[1], d.y));\r\n                            break;\r\n                        case \"V\":\r\n                            path = [\"C\"][concat](l2c(d.x, d.y, d.x, path[1]));\r\n                            break;\r\n                        case \"Z\":\r\n                            path = [\"C\"][concat](l2c(d.x, d.y, d.X, d.Y));\r\n                            break;\r\n                    }\r\n                    return path;\r\n                },\r\n                fixArc = function (pp, i) {\r\n                    if (pp[i].length > 7) {\r\n                        pp[i].shift();\r\n                        var pi = pp[i];\r\n                        while (pi.length) {\r\n                            pcoms1[i]=\"A\"; // if created multiple C:s, their original seg is saved\r\n                            p2 && (pcoms2[i]=\"A\"); // the same as above\r\n                            pp.splice(i++, 0, [\"C\"][concat](pi.splice(0, 6)));\r\n                        }\r\n                        pp.splice(i, 1);\r\n                        ii = mmax(p.length, p2 && p2.length || 0);\r\n                    }\r\n                },\r\n                fixM = function (path1, path2, a1, a2, i) {\r\n                    if (path1 && path2 && path1[i][0] == \"M\" && path2[i][0] != \"M\") {\r\n                        path2.splice(i, 0, [\"M\", a2.x, a2.y]);\r\n                        a1.bx = 0;\r\n                        a1.by = 0;\r\n                        a1.x = path1[i][1];\r\n                        a1.y = path1[i][2];\r\n                        ii = mmax(p.length, p2 && p2.length || 0);\r\n                    }\r\n                },\r\n                pcoms1 = [], // path commands of original path p\r\n                pcoms2 = [], // path commands of original path p2\r\n                pfirst = \"\", // temporary holder for original path command\r\n                pcom = \"\"; // holder for previous path command of original path\r\n            for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\r\n                p[i] && (pfirst = p[i][0]); // save current path command\r\n\r\n                if (pfirst != \"C\") // C is not saved yet, because it may be result of conversion\r\n                {\r\n                    pcoms1[i] = pfirst; // Save current path command\r\n                    i && ( pcom = pcoms1[i-1]); // Get previous path command pcom\r\n                }\r\n                p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\r\n\r\n                if (pcoms1[i] != \"A\" && pfirst == \"C\") pcoms1[i] = \"C\"; // A is the only command\r\n                // which may produce multiple C:s\r\n                // so we have to make sure that C is also C in original path\r\n\r\n                fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\r\n\r\n                if (p2) { // the same procedures is done to p2\r\n                    p2[i] && (pfirst = p2[i][0]);\r\n                    if (pfirst != \"C\")\r\n                    {\r\n                        pcoms2[i] = pfirst;\r\n                        i && (pcom = pcoms2[i-1]);\r\n                    }\r\n                    p2[i] = processPath(p2[i], attrs2, pcom);\r\n\r\n                    if (pcoms2[i]!=\"A\" && pfirst==\"C\") pcoms2[i]=\"C\";\r\n\r\n                    fixArc(p2, i);\r\n                }\r\n                fixM(p, p2, attrs, attrs2, i);\r\n                fixM(p2, p, attrs2, attrs, i);\r\n                var seg = p[i],\r\n                    seg2 = p2 && p2[i],\r\n                    seglen = seg.length,\r\n                    seg2len = p2 && seg2.length;\r\n                attrs.x = seg[seglen - 2];\r\n                attrs.y = seg[seglen - 1];\r\n                attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\r\n                attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\r\n                attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\r\n                attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\r\n                attrs2.x = p2 && seg2[seg2len - 2];\r\n                attrs2.y = p2 && seg2[seg2len - 1];\r\n            }\r\n            if (!p2) {\r\n                pth.curve = pathClone(p);\r\n            }\r\n            return p2 ? [p, p2] : p;\r\n        }, null, pathClone),\r\n        parseDots = R._parseDots = cacher(function (gradient) {\r\n            var dots = [];\r\n            for (var i = 0, ii = gradient.length; i < ii; i++) {\r\n                var dot = {},\r\n                    par = gradient[i].match(/^([^:]*):?([\\d\\.]*)/);\r\n                dot.color = R.getRGB(par[1]);\r\n                if (dot.color.error) {\r\n                    return null;\r\n                }\r\n                dot.color = dot.color.hex;\r\n                par[2] && (dot.offset = par[2] + \"%\");\r\n                dots.push(dot);\r\n            }\r\n            for (i = 1, ii = dots.length - 1; i < ii; i++) {\r\n                if (!dots[i].offset) {\r\n                    var start = toFloat(dots[i - 1].offset || 0),\r\n                        end = 0;\r\n                    for (var j = i + 1; j < ii; j++) {\r\n                        if (dots[j].offset) {\r\n                            end = dots[j].offset;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (!end) {\r\n                        end = 100;\r\n                        j = ii;\r\n                    }\r\n                    end = toFloat(end);\r\n                    var d = (end - start) / (j - i + 1);\r\n                    for (; i < j; i++) {\r\n                        start += d;\r\n                        dots[i].offset = start + \"%\";\r\n                    }\r\n                }\r\n            }\r\n            return dots;\r\n        }),\r\n        tear = R._tear = function (el, paper) {\r\n            el == paper.top && (paper.top = el.prev);\r\n            el == paper.bottom && (paper.bottom = el.next);\r\n            el.next && (el.next.prev = el.prev);\r\n            el.prev && (el.prev.next = el.next);\r\n        },\r\n        tofront = R._tofront = function (el, paper) {\r\n            if (paper.top === el) {\r\n                return;\r\n            }\r\n            tear(el, paper);\r\n            el.next = null;\r\n            el.prev = paper.top;\r\n            paper.top.next = el;\r\n            paper.top = el;\r\n        },\r\n        toback = R._toback = function (el, paper) {\r\n            if (paper.bottom === el) {\r\n                return;\r\n            }\r\n            tear(el, paper);\r\n            el.next = paper.bottom;\r\n            el.prev = null;\r\n            paper.bottom.prev = el;\r\n            paper.bottom = el;\r\n        },\r\n        insertafter = R._insertafter = function (el, el2, paper) {\r\n            tear(el, paper);\r\n            el2 == paper.top && (paper.top = el);\r\n            el2.next && (el2.next.prev = el);\r\n            el.next = el2.next;\r\n            el.prev = el2;\r\n            el2.next = el;\r\n        },\r\n        insertbefore = R._insertbefore = function (el, el2, paper) {\r\n            tear(el, paper);\r\n            el2 == paper.bottom && (paper.bottom = el);\r\n            el2.prev && (el2.prev.next = el);\r\n            el.prev = el2.prev;\r\n            el2.prev = el;\r\n            el.next = el2;\r\n        },\r\n        /*\\\r\n         * Raphael.toMatrix\r\n         [ method ]\r\n         **\r\n         * Utility method\r\n         **\r\n         * Returns matrix of transformations applied to a given path\r\n         > Parameters\r\n         - path (string) path string\r\n         - transform (string|array) transformation string\r\n         = (object) @Matrix\r\n        \\*/\r\n        toMatrix = R.toMatrix = function (path, transform) {\r\n            var bb = pathDimensions(path),\r\n                el = {\r\n                    _: {\r\n                        transform: E\r\n                    },\r\n                    getBBox: function () {\r\n                        return bb;\r\n                    }\r\n                };\r\n            extractTransform(el, transform);\r\n            return el.matrix;\r\n        },\r\n        /*\\\r\n         * Raphael.transformPath\r\n         [ method ]\r\n         **\r\n         * Utility method\r\n         **\r\n         * Returns path transformed by a given transformation\r\n         > Parameters\r\n         - path (string) path string\r\n         - transform (string|array) transformation string\r\n         = (string) path\r\n        \\*/\r\n        transformPath = R.transformPath = function (path, transform) {\r\n            return mapPath(path, toMatrix(path, transform));\r\n        },\r\n        extractTransform = R._extractTransform = function (el, tstr) {\r\n            if (tstr == null) {\r\n                return el._.transform;\r\n            }\r\n            tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, el._.transform || E);\r\n            var tdata = R.parseTransformString(tstr),\r\n                deg = 0,\r\n                dx = 0,\r\n                dy = 0,\r\n                sx = 1,\r\n                sy = 1,\r\n                _ = el._,\r\n                m = new Matrix;\r\n            _.transform = tdata || [];\r\n            if (tdata) {\r\n                for (var i = 0, ii = tdata.length; i < ii; i++) {\r\n                    var t = tdata[i],\r\n                        tlen = t.length,\r\n                        command = Str(t[0]).toLowerCase(),\r\n                        absolute = t[0] != command,\r\n                        inver = absolute ? m.invert() : 0,\r\n                        x1,\r\n                        y1,\r\n                        x2,\r\n                        y2,\r\n                        bb;\r\n                    if (command == \"t\" && tlen == 3) {\r\n                        if (absolute) {\r\n                            x1 = inver.x(0, 0);\r\n                            y1 = inver.y(0, 0);\r\n                            x2 = inver.x(t[1], t[2]);\r\n                            y2 = inver.y(t[1], t[2]);\r\n                            m.translate(x2 - x1, y2 - y1);\r\n                        } else {\r\n                            m.translate(t[1], t[2]);\r\n                        }\r\n                    } else if (command == \"r\") {\r\n                        if (tlen == 2) {\r\n                            bb = bb || el.getBBox(1);\r\n                            m.rotate(t[1], bb.x + bb.width / 2, bb.y + bb.height / 2);\r\n                            deg += t[1];\r\n                        } else if (tlen == 4) {\r\n                            if (absolute) {\r\n                                x2 = inver.x(t[2], t[3]);\r\n                                y2 = inver.y(t[2], t[3]);\r\n                                m.rotate(t[1], x2, y2);\r\n                            } else {\r\n                                m.rotate(t[1], t[2], t[3]);\r\n                            }\r\n                            deg += t[1];\r\n                        }\r\n                    } else if (command == \"s\") {\r\n                        if (tlen == 2 || tlen == 3) {\r\n                            bb = bb || el.getBBox(1);\r\n                            m.scale(t[1], t[tlen - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\r\n                            sx *= t[1];\r\n                            sy *= t[tlen - 1];\r\n                        } else if (tlen == 5) {\r\n                            if (absolute) {\r\n                                x2 = inver.x(t[3], t[4]);\r\n                                y2 = inver.y(t[3], t[4]);\r\n                                m.scale(t[1], t[2], x2, y2);\r\n                            } else {\r\n                                m.scale(t[1], t[2], t[3], t[4]);\r\n                            }\r\n                            sx *= t[1];\r\n                            sy *= t[2];\r\n                        }\r\n                    } else if (command == \"m\" && tlen == 7) {\r\n                        m.add(t[1], t[2], t[3], t[4], t[5], t[6]);\r\n                    }\r\n                    _.dirtyT = 1;\r\n                    el.matrix = m;\r\n                }\r\n            }\r\n\r\n            /*\\\r\n             * Element.matrix\r\n             [ property (object) ]\r\n             **\r\n             * Keeps @Matrix object, which represents element transformation\r\n            \\*/\r\n            el.matrix = m;\r\n\r\n            _.sx = sx;\r\n            _.sy = sy;\r\n            _.deg = deg;\r\n            _.dx = dx = m.e;\r\n            _.dy = dy = m.f;\r\n\r\n            if (sx == 1 && sy == 1 && !deg && _.bbox) {\r\n                _.bbox.x += +dx;\r\n                _.bbox.y += +dy;\r\n            } else {\r\n                _.dirtyT = 1;\r\n            }\r\n        },\r\n        getEmpty = function (item) {\r\n            var l = item[0];\r\n            switch (l.toLowerCase()) {\r\n                case \"t\": return [l, 0, 0];\r\n                case \"m\": return [l, 1, 0, 0, 1, 0, 0];\r\n                case \"r\": if (item.length == 4) {\r\n                    return [l, 0, item[2], item[3]];\r\n                } else {\r\n                    return [l, 0];\r\n                }\r\n                case \"s\": if (item.length == 5) {\r\n                    return [l, 1, 1, item[3], item[4]];\r\n                } else if (item.length == 3) {\r\n                    return [l, 1, 1];\r\n                } else {\r\n                    return [l, 1];\r\n                }\r\n            }\r\n        },\r\n        equaliseTransform = R._equaliseTransform = function (t1, t2) {\r\n            t2 = Str(t2).replace(/\\.{3}|\\u2026/g, t1);\r\n            t1 = R.parseTransformString(t1) || [];\r\n            t2 = R.parseTransformString(t2) || [];\r\n            var maxlength = mmax(t1.length, t2.length),\r\n                from = [],\r\n                to = [],\r\n                i = 0, j, jj,\r\n                tt1, tt2;\r\n            for (; i < maxlength; i++) {\r\n                tt1 = t1[i] || getEmpty(t2[i]);\r\n                tt2 = t2[i] || getEmpty(tt1);\r\n                if ((tt1[0] != tt2[0]) ||\r\n                    (tt1[0].toLowerCase() == \"r\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3])) ||\r\n                    (tt1[0].toLowerCase() == \"s\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4]))\r\n                    ) {\r\n                    return;\r\n                }\r\n                from[i] = [];\r\n                to[i] = [];\r\n                for (j = 0, jj = mmax(tt1.length, tt2.length); j < jj; j++) {\r\n                    j in tt1 && (from[i][j] = tt1[j]);\r\n                    j in tt2 && (to[i][j] = tt2[j]);\r\n                }\r\n            }\r\n            return {\r\n                from: from,\r\n                to: to\r\n            };\r\n        };\r\n    R._getContainer = function (x, y, w, h) {\r\n        var container;\r\n        container = h == null && !R.is(x, \"object\") ? g.doc.getElementById(x) : x;\r\n        if (container == null) {\r\n            return;\r\n        }\r\n        if (container.tagName) {\r\n            if (y == null) {\r\n                return {\r\n                    container: container,\r\n                    width: container.style.pixelWidth || container.offsetWidth,\r\n                    height: container.style.pixelHeight || container.offsetHeight\r\n                };\r\n            } else {\r\n                return {\r\n                    container: container,\r\n                    width: y,\r\n                    height: w\r\n                };\r\n            }\r\n        }\r\n        return {\r\n            container: 1,\r\n            x: x,\r\n            y: y,\r\n            width: w,\r\n            height: h\r\n        };\r\n    };\r\n    /*\\\r\n     * Raphael.pathToRelative\r\n     [ method ]\r\n     **\r\n     * Utility method\r\n     **\r\n     * Converts path to relative form\r\n     > Parameters\r\n     - pathString (string|array) path string or array of segments\r\n     = (array) array of segments.\r\n    \\*/\r\n    R.pathToRelative = pathToRelative;\r\n    R._engine = {};\r\n    /*\\\r\n     * Raphael.path2curve\r\n     [ method ]\r\n     **\r\n     * Utility method\r\n     **\r\n     * Converts path to a new path where all segments are cubic bezier curves.\r\n     > Parameters\r\n     - pathString (string|array) path string or array of segments\r\n     = (array) array of segments.\r\n    \\*/\r\n    R.path2curve = path2curve;\r\n    /*\\\r\n     * Raphael.matrix\r\n     [ method ]\r\n     **\r\n     * Utility method\r\n     **\r\n     * Returns matrix based on given parameters.\r\n     > Parameters\r\n     - a (number)\r\n     - b (number)\r\n     - c (number)\r\n     - d (number)\r\n     - e (number)\r\n     - f (number)\r\n     = (object) @Matrix\r\n    \\*/\r\n    R.matrix = function (a, b, c, d, e, f) {\r\n        return new Matrix(a, b, c, d, e, f);\r\n    };\r\n    function Matrix(a, b, c, d, e, f) {\r\n        if (a != null) {\r\n            this.a = +a;\r\n            this.b = +b;\r\n            this.c = +c;\r\n            this.d = +d;\r\n            this.e = +e;\r\n            this.f = +f;\r\n        } else {\r\n            this.a = 1;\r\n            this.b = 0;\r\n            this.c = 0;\r\n            this.d = 1;\r\n            this.e = 0;\r\n            this.f = 0;\r\n        }\r\n    }\r\n    (function (matrixproto) {\r\n        /*\\\r\n         * Matrix.add\r\n         [ method ]\r\n         **\r\n         * Adds given matrix to existing one.\r\n         > Parameters\r\n         - a (number)\r\n         - b (number)\r\n         - c (number)\r\n         - d (number)\r\n         - e (number)\r\n         - f (number)\r\n         or\r\n         - matrix (object) @Matrix\r\n        \\*/\r\n        matrixproto.add = function (a, b, c, d, e, f) {\r\n            var out = [[], [], []],\r\n                m = [[this.a, this.c, this.e], [this.b, this.d, this.f], [0, 0, 1]],\r\n                matrix = [[a, c, e], [b, d, f], [0, 0, 1]],\r\n                x, y, z, res;\r\n\r\n            if (a && a instanceof Matrix) {\r\n                matrix = [[a.a, a.c, a.e], [a.b, a.d, a.f], [0, 0, 1]];\r\n            }\r\n\r\n            for (x = 0; x < 3; x++) {\r\n                for (y = 0; y < 3; y++) {\r\n                    res = 0;\r\n                    for (z = 0; z < 3; z++) {\r\n                        res += m[x][z] * matrix[z][y];\r\n                    }\r\n                    out[x][y] = res;\r\n                }\r\n            }\r\n            this.a = out[0][0];\r\n            this.b = out[1][0];\r\n            this.c = out[0][1];\r\n            this.d = out[1][1];\r\n            this.e = out[0][2];\r\n            this.f = out[1][2];\r\n        };\r\n        /*\\\r\n         * Matrix.invert\r\n         [ method ]\r\n         **\r\n         * Returns inverted version of the matrix\r\n         = (object) @Matrix\r\n        \\*/\r\n        matrixproto.invert = function () {\r\n            var me = this,\r\n                x = me.a * me.d - me.b * me.c;\r\n            return new Matrix(me.d / x, -me.b / x, -me.c / x, me.a / x, (me.c * me.f - me.d * me.e) / x, (me.b * me.e - me.a * me.f) / x);\r\n        };\r\n        /*\\\r\n         * Matrix.clone\r\n         [ method ]\r\n         **\r\n         * Returns copy of the matrix\r\n         = (object) @Matrix\r\n        \\*/\r\n        matrixproto.clone = function () {\r\n            return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f);\r\n        };\r\n        /*\\\r\n         * Matrix.translate\r\n         [ method ]\r\n         **\r\n         * Translate the matrix\r\n         > Parameters\r\n         - x (number)\r\n         - y (number)\r\n        \\*/\r\n        matrixproto.translate = function (x, y) {\r\n            this.add(1, 0, 0, 1, x, y);\r\n        };\r\n        /*\\\r\n         * Matrix.scale\r\n         [ method ]\r\n         **\r\n         * Scales the matrix\r\n         > Parameters\r\n         - x (number)\r\n         - y (number) #optional\r\n         - cx (number) #optional\r\n         - cy (number) #optional\r\n        \\*/\r\n        matrixproto.scale = function (x, y, cx, cy) {\r\n            y == null && (y = x);\r\n            (cx || cy) && this.add(1, 0, 0, 1, cx, cy);\r\n            this.add(x, 0, 0, y, 0, 0);\r\n            (cx || cy) && this.add(1, 0, 0, 1, -cx, -cy);\r\n        };\r\n        /*\\\r\n         * Matrix.rotate\r\n         [ method ]\r\n         **\r\n         * Rotates the matrix\r\n         > Parameters\r\n         - a (number)\r\n         - x (number)\r\n         - y (number)\r\n        \\*/\r\n        matrixproto.rotate = function (a, x, y) {\r\n            a = R.rad(a);\r\n            x = x || 0;\r\n            y = y || 0;\r\n            var cos = +math.cos(a).toFixed(9),\r\n                sin = +math.sin(a).toFixed(9);\r\n            this.add(cos, sin, -sin, cos, x, y);\r\n            this.add(1, 0, 0, 1, -x, -y);\r\n        };\r\n        /*\\\r\n         * Matrix.x\r\n         [ method ]\r\n         **\r\n         * Return x coordinate for given point after transformation described by the matrix. See also @Matrix.y\r\n         > Parameters\r\n         - x (number)\r\n         - y (number)\r\n         = (number) x\r\n        \\*/\r\n        matrixproto.x = function (x, y) {\r\n            return x * this.a + y * this.c + this.e;\r\n        };\r\n        /*\\\r\n         * Matrix.y\r\n         [ method ]\r\n         **\r\n         * Return y coordinate for given point after transformation described by the matrix. See also @Matrix.x\r\n         > Parameters\r\n         - x (number)\r\n         - y (number)\r\n         = (number) y\r\n        \\*/\r\n        matrixproto.y = function (x, y) {\r\n            return x * this.b + y * this.d + this.f;\r\n        };\r\n        matrixproto.get = function (i) {\r\n            return +this[Str.fromCharCode(97 + i)].toFixed(4);\r\n        };\r\n        matrixproto.toString = function () {\r\n            return R.svg ?\r\n                \"matrix(\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + \")\" :\r\n                [this.get(0), this.get(2), this.get(1), this.get(3), 0, 0].join();\r\n        };\r\n        matrixproto.toFilter = function () {\r\n            return \"progid:DXImageTransform.Microsoft.Matrix(M11=\" + this.get(0) +\r\n                \", M12=\" + this.get(2) + \", M21=\" + this.get(1) + \", M22=\" + this.get(3) +\r\n                \", Dx=\" + this.get(4) + \", Dy=\" + this.get(5) + \", sizingmethod='auto expand')\";\r\n        };\r\n        matrixproto.offset = function () {\r\n            return [this.e.toFixed(4), this.f.toFixed(4)];\r\n        };\r\n        function norm(a) {\r\n            return a[0] * a[0] + a[1] * a[1];\r\n        }\r\n        function normalize(a) {\r\n            var mag = math.sqrt(norm(a));\r\n            a[0] && (a[0] /= mag);\r\n            a[1] && (a[1] /= mag);\r\n        }\r\n        /*\\\r\n         * Matrix.split\r\n         [ method ]\r\n         **\r\n         * Splits matrix into primitive transformations\r\n         = (object) in format:\r\n         o dx (number) translation by x\r\n         o dy (number) translation by y\r\n         o scalex (number) scale by x\r\n         o scaley (number) scale by y\r\n         o shear (number) shear\r\n         o rotate (number) rotation in deg\r\n         o isSimple (boolean) could it be represented via simple transformations\r\n        \\*/\r\n        matrixproto.split = function () {\r\n            var out = {};\r\n            // translation\r\n            out.dx = this.e;\r\n            out.dy = this.f;\r\n\r\n            // scale and shear\r\n            var row = [[this.a, this.c], [this.b, this.d]];\r\n            out.scalex = math.sqrt(norm(row[0]));\r\n            normalize(row[0]);\r\n\r\n            out.shear = row[0][0] * row[1][0] + row[0][1] * row[1][1];\r\n            row[1] = [row[1][0] - row[0][0] * out.shear, row[1][1] - row[0][1] * out.shear];\r\n\r\n            out.scaley = math.sqrt(norm(row[1]));\r\n            normalize(row[1]);\r\n            out.shear /= out.scaley;\r\n\r\n            // rotation\r\n            var sin = -row[0][1],\r\n                cos = row[1][1];\r\n            if (cos < 0) {\r\n                out.rotate = R.deg(math.acos(cos));\r\n                if (sin < 0) {\r\n                    out.rotate = 360 - out.rotate;\r\n                }\r\n            } else {\r\n                out.rotate = R.deg(math.asin(sin));\r\n            }\r\n\r\n            out.isSimple = !+out.shear.toFixed(9) && (out.scalex.toFixed(9) == out.scaley.toFixed(9) || !out.rotate);\r\n            out.isSuperSimple = !+out.shear.toFixed(9) && out.scalex.toFixed(9) == out.scaley.toFixed(9) && !out.rotate;\r\n            out.noRotation = !+out.shear.toFixed(9) && !out.rotate;\r\n            return out;\r\n        };\r\n        /*\\\r\n         * Matrix.toTransformString\r\n         [ method ]\r\n         **\r\n         * Return transform string that represents given matrix\r\n         = (string) transform string\r\n        \\*/\r\n        matrixproto.toTransformString = function (shorter) {\r\n            var s = shorter || this[split]();\r\n            if (s.isSimple) {\r\n                s.scalex = +s.scalex.toFixed(4);\r\n                s.scaley = +s.scaley.toFixed(4);\r\n                s.rotate = +s.rotate.toFixed(4);\r\n                return  (s.dx || s.dy ? \"t\" + [s.dx, s.dy] : E) +\r\n                        (s.scalex != 1 || s.scaley != 1 ? \"s\" + [s.scalex, s.scaley, 0, 0] : E) +\r\n                        (s.rotate ? \"r\" + [s.rotate, 0, 0] : E);\r\n            } else {\r\n                return \"m\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)];\r\n            }\r\n        };\r\n    })(Matrix.prototype);\r\n\r\n    var preventDefault = function () {\r\n        this.returnValue = false;\r\n    },\r\n    preventTouch = function () {\r\n        return this.originalEvent.preventDefault();\r\n    },\r\n    stopPropagation = function () {\r\n        this.cancelBubble = true;\r\n    },\r\n    stopTouch = function () {\r\n        return this.originalEvent.stopPropagation();\r\n    },\r\n    getEventPosition = function (e) {\r\n        var scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,\r\n            scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft;\r\n\r\n        return {\r\n            x: e.clientX + scrollX,\r\n            y: e.clientY + scrollY\r\n        };\r\n    },\r\n    addEvent = (function () {\r\n        if (g.doc.addEventListener) {\r\n            return function (obj, type, fn, element) {\r\n                var f = function (e) {\r\n                    var pos = getEventPosition(e);\r\n                    return fn.call(element, e, pos.x, pos.y);\r\n                };\r\n                obj.addEventListener(type, f, false);\r\n\r\n                if (supportsTouch && touchMap[type]) {\r\n                    var _f = function (e) {\r\n                        var pos = getEventPosition(e),\r\n                            olde = e;\r\n\r\n                        for (var i = 0, ii = e.targetTouches && e.targetTouches.length; i < ii; i++) {\r\n                            if (e.targetTouches[i].target == obj) {\r\n                                e = e.targetTouches[i];\r\n                                e.originalEvent = olde;\r\n                                e.preventDefault = preventTouch;\r\n                                e.stopPropagation = stopTouch;\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                        return fn.call(element, e, pos.x, pos.y);\r\n                    };\r\n                    obj.addEventListener(touchMap[type], _f, false);\r\n                }\r\n\r\n                return function () {\r\n                    obj.removeEventListener(type, f, false);\r\n\r\n                    if (supportsTouch && touchMap[type])\r\n                        obj.removeEventListener(touchMap[type], _f, false);\r\n\r\n                    return true;\r\n                };\r\n            };\r\n        } else if (g.doc.attachEvent) {\r\n            return function (obj, type, fn, element) {\r\n                var f = function (e) {\r\n                    e = e || g.win.event;\r\n                    var scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,\r\n                        scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft,\r\n                        x = e.clientX + scrollX,\r\n                        y = e.clientY + scrollY;\r\n                    e.preventDefault = e.preventDefault || preventDefault;\r\n                    e.stopPropagation = e.stopPropagation || stopPropagation;\r\n                    return fn.call(element, e, x, y);\r\n                };\r\n                obj.attachEvent(\"on\" + type, f);\r\n                var detacher = function () {\r\n                    obj.detachEvent(\"on\" + type, f);\r\n                    return true;\r\n                };\r\n                return detacher;\r\n            };\r\n        }\r\n    })(),\r\n    drag = [],\r\n    dragMove = function (e) {\r\n        var x = e.clientX,\r\n            y = e.clientY,\r\n            scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,\r\n            scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft,\r\n            dragi,\r\n            j = drag.length;\r\n        while (j--) {\r\n            dragi = drag[j];\r\n            if (supportsTouch && e.touches) {\r\n                var i = e.touches.length,\r\n                    touch;\r\n                while (i--) {\r\n                    touch = e.touches[i];\r\n                    if (touch.identifier == dragi.el._drag.id) {\r\n                        x = touch.clientX;\r\n                        y = touch.clientY;\r\n                        (e.originalEvent ? e.originalEvent : e).preventDefault();\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                e.preventDefault();\r\n            }\r\n            var node = dragi.el.node,\r\n                o,\r\n                next = node.nextSibling,\r\n                parent = node.parentNode,\r\n                display = node.style.display;\r\n            g.win.opera && parent.removeChild(node);\r\n            node.style.display = \"none\";\r\n            o = dragi.el.paper.getElementByPoint(x, y);\r\n            node.style.display = display;\r\n            g.win.opera && (next ? parent.insertBefore(node, next) : parent.appendChild(node));\r\n            o && eve(\"raphael.drag.over.\" + dragi.el.id, dragi.el, o);\r\n            x += scrollX;\r\n            y += scrollY;\r\n            eve(\"raphael.drag.move.\" + dragi.el.id, dragi.move_scope || dragi.el, x - dragi.el._drag.x, y - dragi.el._drag.y, x, y, e);\r\n        }\r\n    },\r\n    dragUp = function (e) {\r\n        R.unmousemove(dragMove).unmouseup(dragUp);\r\n        var i = drag.length,\r\n            dragi;\r\n        while (i--) {\r\n            dragi = drag[i];\r\n            dragi.el._drag = {};\r\n            eve(\"raphael.drag.end.\" + dragi.el.id, dragi.end_scope || dragi.start_scope || dragi.move_scope || dragi.el, e);\r\n        }\r\n        drag = [];\r\n    },\r\n    /*\\\r\n     * Raphael.el\r\n     [ property (object) ]\r\n     **\r\n     * You can add your own method to elements. This is usefull when you want to hack default functionality or\r\n     * want to wrap some common transformation or attributes in one method. In difference to canvas methods,\r\n     * you can redefine element method at any time. Expending element methods wouldn’t affect set.\r\n     > Usage\r\n     | Raphael.el.red = function () {\r\n     |     this.attr({fill: \"#f00\"});\r\n     | };\r\n     | // then use it\r\n     | paper.circle(100, 100, 20).red();\r\n    \\*/\r\n    elproto = R.el = {};\r\n    /*\\\r\n     * Element.click\r\n     [ method ]\r\n     **\r\n     * Adds event handler for click for the element.\r\n     > Parameters\r\n     - handler (function) handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n    /*\\\r\n     * Element.unclick\r\n     [ method ]\r\n     **\r\n     * Removes event handler for click for the element.\r\n     > Parameters\r\n     - handler (function) #optional handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n\r\n    /*\\\r\n     * Element.dblclick\r\n     [ method ]\r\n     **\r\n     * Adds event handler for double click for the element.\r\n     > Parameters\r\n     - handler (function) handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n    /*\\\r\n     * Element.undblclick\r\n     [ method ]\r\n     **\r\n     * Removes event handler for double click for the element.\r\n     > Parameters\r\n     - handler (function) #optional handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n\r\n    /*\\\r\n     * Element.mousedown\r\n     [ method ]\r\n     **\r\n     * Adds event handler for mousedown for the element.\r\n     > Parameters\r\n     - handler (function) handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n    /*\\\r\n     * Element.unmousedown\r\n     [ method ]\r\n     **\r\n     * Removes event handler for mousedown for the element.\r\n     > Parameters\r\n     - handler (function) #optional handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n\r\n    /*\\\r\n     * Element.mousemove\r\n     [ method ]\r\n     **\r\n     * Adds event handler for mousemove for the element.\r\n     > Parameters\r\n     - handler (function) handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n    /*\\\r\n     * Element.unmousemove\r\n     [ method ]\r\n     **\r\n     * Removes event handler for mousemove for the element.\r\n     > Parameters\r\n     - handler (function) #optional handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n\r\n    /*\\\r\n     * Element.mouseout\r\n     [ method ]\r\n     **\r\n     * Adds event handler for mouseout for the element.\r\n     > Parameters\r\n     - handler (function) handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n    /*\\\r\n     * Element.unmouseout\r\n     [ method ]\r\n     **\r\n     * Removes event handler for mouseout for the element.\r\n     > Parameters\r\n     - handler (function) #optional handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n\r\n    /*\\\r\n     * Element.mouseover\r\n     [ method ]\r\n     **\r\n     * Adds event handler for mouseover for the element.\r\n     > Parameters\r\n     - handler (function) handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n    /*\\\r\n     * Element.unmouseover\r\n     [ method ]\r\n     **\r\n     * Removes event handler for mouseover for the element.\r\n     > Parameters\r\n     - handler (function) #optional handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n\r\n    /*\\\r\n     * Element.mouseup\r\n     [ method ]\r\n     **\r\n     * Adds event handler for mouseup for the element.\r\n     > Parameters\r\n     - handler (function) handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n    /*\\\r\n     * Element.unmouseup\r\n     [ method ]\r\n     **\r\n     * Removes event handler for mouseup for the element.\r\n     > Parameters\r\n     - handler (function) #optional handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n\r\n    /*\\\r\n     * Element.touchstart\r\n     [ method ]\r\n     **\r\n     * Adds event handler for touchstart for the element.\r\n     > Parameters\r\n     - handler (function) handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n    /*\\\r\n     * Element.untouchstart\r\n     [ method ]\r\n     **\r\n     * Removes event handler for touchstart for the element.\r\n     > Parameters\r\n     - handler (function) #optional handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n\r\n    /*\\\r\n     * Element.touchmove\r\n     [ method ]\r\n     **\r\n     * Adds event handler for touchmove for the element.\r\n     > Parameters\r\n     - handler (function) handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n    /*\\\r\n     * Element.untouchmove\r\n     [ method ]\r\n     **\r\n     * Removes event handler for touchmove for the element.\r\n     > Parameters\r\n     - handler (function) #optional handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n\r\n    /*\\\r\n     * Element.touchend\r\n     [ method ]\r\n     **\r\n     * Adds event handler for touchend for the element.\r\n     > Parameters\r\n     - handler (function) handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n    /*\\\r\n     * Element.untouchend\r\n     [ method ]\r\n     **\r\n     * Removes event handler for touchend for the element.\r\n     > Parameters\r\n     - handler (function) #optional handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n\r\n    /*\\\r\n     * Element.touchcancel\r\n     [ method ]\r\n     **\r\n     * Adds event handler for touchcancel for the element.\r\n     > Parameters\r\n     - handler (function) handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n    /*\\\r\n     * Element.untouchcancel\r\n     [ method ]\r\n     **\r\n     * Removes event handler for touchcancel for the element.\r\n     > Parameters\r\n     - handler (function) #optional handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n    for (var i = events.length; i--;) {\r\n        (function (eventName) {\r\n            R[eventName] = elproto[eventName] = function (fn, scope) {\r\n                if (R.is(fn, \"function\")) {\r\n                    this.events = this.events || [];\r\n                    this.events.push({name: eventName, f: fn, unbind: addEvent(this.shape || this.node || g.doc, eventName, fn, scope || this)});\r\n                }\r\n                return this;\r\n            };\r\n            R[\"un\" + eventName] = elproto[\"un\" + eventName] = function (fn) {\r\n                var events = this.events || [],\r\n                    l = events.length;\r\n                while (l--){\r\n                    if (events[l].name == eventName && (R.is(fn, \"undefined\") || events[l].f == fn)) {\r\n                        events[l].unbind();\r\n                        events.splice(l, 1);\r\n                        !events.length && delete this.events;\r\n                    }\r\n                }\r\n                return this;\r\n            };\r\n        })(events[i]);\r\n    }\r\n\r\n    /*\\\r\n     * Element.data\r\n     [ method ]\r\n     **\r\n     * Adds or retrieves given value asociated with given key.\r\n     **\r\n     * See also @Element.removeData\r\n     > Parameters\r\n     - key (string) key to store data\r\n     - value (any) #optional value to store\r\n     = (object) @Element\r\n     * or, if value is not specified:\r\n     = (any) value\r\n     * or, if key and value are not specified:\r\n     = (object) Key/value pairs for all the data associated with the element.\r\n     > Usage\r\n     | for (var i = 0, i < 5, i++) {\r\n     |     paper.circle(10 + 15 * i, 10, 10)\r\n     |          .attr({fill: \"#000\"})\r\n     |          .data(\"i\", i)\r\n     |          .click(function () {\r\n     |             alert(this.data(\"i\"));\r\n     |          });\r\n     | }\r\n    \\*/\r\n    elproto.data = function (key, value) {\r\n        var data = eldata[this.id] = eldata[this.id] || {};\r\n        if (arguments.length == 0) {\r\n            return data;\r\n        }\r\n        if (arguments.length == 1) {\r\n            if (R.is(key, \"object\")) {\r\n                for (var i in key) if (key[has](i)) {\r\n                    this.data(i, key[i]);\r\n                }\r\n                return this;\r\n            }\r\n            eve(\"raphael.data.get.\" + this.id, this, data[key], key);\r\n            return data[key];\r\n        }\r\n        data[key] = value;\r\n        eve(\"raphael.data.set.\" + this.id, this, value, key);\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.removeData\r\n     [ method ]\r\n     **\r\n     * Removes value associated with an element by given key.\r\n     * If key is not provided, removes all the data of the element.\r\n     > Parameters\r\n     - key (string) #optional key\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.removeData = function (key) {\r\n        if (key == null) {\r\n            eldata[this.id] = {};\r\n        } else {\r\n            eldata[this.id] && delete eldata[this.id][key];\r\n        }\r\n        return this;\r\n    };\r\n     /*\\\r\n     * Element.getData\r\n     [ method ]\r\n     **\r\n     * Retrieves the element data\r\n     = (object) data\r\n    \\*/\r\n    elproto.getData = function () {\r\n        return clone(eldata[this.id] || {});\r\n    };\r\n    /*\\\r\n     * Element.hover\r\n     [ method ]\r\n     **\r\n     * Adds event handlers for hover for the element.\r\n     > Parameters\r\n     - f_in (function) handler for hover in\r\n     - f_out (function) handler for hover out\r\n     - icontext (object) #optional context for hover in handler\r\n     - ocontext (object) #optional context for hover out handler\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.hover = function (f_in, f_out, scope_in, scope_out) {\r\n        return this.mouseover(f_in, scope_in).mouseout(f_out, scope_out || scope_in);\r\n    };\r\n    /*\\\r\n     * Element.unhover\r\n     [ method ]\r\n     **\r\n     * Removes event handlers for hover for the element.\r\n     > Parameters\r\n     - f_in (function) handler for hover in\r\n     - f_out (function) handler for hover out\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.unhover = function (f_in, f_out) {\r\n        return this.unmouseover(f_in).unmouseout(f_out);\r\n    };\r\n    var draggable = [];\r\n    /*\\\r\n     * Element.drag\r\n     [ method ]\r\n     **\r\n     * Adds event handlers for drag of the element.\r\n     > Parameters\r\n     - onmove (function) handler for moving\r\n     - onstart (function) handler for drag start\r\n     - onend (function) handler for drag end\r\n     - mcontext (object) #optional context for moving handler\r\n     - scontext (object) #optional context for drag start handler\r\n     - econtext (object) #optional context for drag end handler\r\n     * Additionaly following `drag` events will be triggered: `drag.start.<id>` on start,\r\n     * `drag.end.<id>` on end and `drag.move.<id>` on every move. When element will be dragged over another element\r\n     * `drag.over.<id>` will be fired as well.\r\n     *\r\n     * Start event and start handler will be called in specified context or in context of the element with following parameters:\r\n     o x (number) x position of the mouse\r\n     o y (number) y position of the mouse\r\n     o event (object) DOM event object\r\n     * Move event and move handler will be called in specified context or in context of the element with following parameters:\r\n     o dx (number) shift by x from the start point\r\n     o dy (number) shift by y from the start point\r\n     o x (number) x position of the mouse\r\n     o y (number) y position of the mouse\r\n     o event (object) DOM event object\r\n     * End event and end handler will be called in specified context or in context of the element with following parameters:\r\n     o event (object) DOM event object\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.drag = function (onmove, onstart, onend, move_scope, start_scope, end_scope) {\r\n        function start(e) {\r\n            (e.originalEvent || e).preventDefault();\r\n            var x = e.clientX,\r\n                y = e.clientY,\r\n                scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,\r\n                scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft;\r\n            this._drag.id = e.identifier;\r\n            if (supportsTouch && e.touches) {\r\n                var i = e.touches.length, touch;\r\n                while (i--) {\r\n                    touch = e.touches[i];\r\n                    this._drag.id = touch.identifier;\r\n                    if (touch.identifier == this._drag.id) {\r\n                        x = touch.clientX;\r\n                        y = touch.clientY;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            this._drag.x = x + scrollX;\r\n            this._drag.y = y + scrollY;\r\n            !drag.length && R.mousemove(dragMove).mouseup(dragUp);\r\n            drag.push({el: this, move_scope: move_scope, start_scope: start_scope, end_scope: end_scope});\r\n            onstart && eve.on(\"raphael.drag.start.\" + this.id, onstart);\r\n            onmove && eve.on(\"raphael.drag.move.\" + this.id, onmove);\r\n            onend && eve.on(\"raphael.drag.end.\" + this.id, onend);\r\n            eve(\"raphael.drag.start.\" + this.id, start_scope || move_scope || this, e.clientX + scrollX, e.clientY + scrollY, e);\r\n        }\r\n        this._drag = {};\r\n        draggable.push({el: this, start: start});\r\n        this.mousedown(start);\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.onDragOver\r\n     [ method ]\r\n     **\r\n     * Shortcut for assigning event handler for `drag.over.<id>` event, where id is id of the element (see @Element.id).\r\n     > Parameters\r\n     - f (function) handler for event, first argument would be the element you are dragging over\r\n    \\*/\r\n    elproto.onDragOver = function (f) {\r\n        f ? eve.on(\"raphael.drag.over.\" + this.id, f) : eve.unbind(\"raphael.drag.over.\" + this.id);\r\n    };\r\n    /*\\\r\n     * Element.undrag\r\n     [ method ]\r\n     **\r\n     * Removes all drag event handlers from given element.\r\n    \\*/\r\n    elproto.undrag = function () {\r\n        var i = draggable.length;\r\n        while (i--) if (draggable[i].el == this) {\r\n            this.unmousedown(draggable[i].start);\r\n            draggable.splice(i, 1);\r\n            eve.unbind(\"raphael.drag.*.\" + this.id);\r\n        }\r\n        !draggable.length && R.unmousemove(dragMove).unmouseup(dragUp);\r\n        drag = [];\r\n    };\r\n    /*\\\r\n     * Paper.circle\r\n     [ method ]\r\n     **\r\n     * Draws a circle.\r\n     **\r\n     > Parameters\r\n     **\r\n     - x (number) x coordinate of the centre\r\n     - y (number) y coordinate of the centre\r\n     - r (number) radius\r\n     = (object) Raphaël element object with type “circle”\r\n     **\r\n     > Usage\r\n     | var c = paper.circle(50, 50, 40);\r\n    \\*/\r\n    paperproto.circle = function (x, y, r) {\r\n        var out = R._engine.circle(this, x || 0, y || 0, r || 0);\r\n        this.__set__ && this.__set__.push(out);\r\n        return out;\r\n    };\r\n    /*\\\r\n     * Paper.rect\r\n     [ method ]\r\n     *\r\n     * Draws a rectangle.\r\n     **\r\n     > Parameters\r\n     **\r\n     - x (number) x coordinate of the top left corner\r\n     - y (number) y coordinate of the top left corner\r\n     - width (number) width\r\n     - height (number) height\r\n     - r (number) #optional radius for rounded corners, default is 0\r\n     = (object) Raphaël element object with type “rect”\r\n     **\r\n     > Usage\r\n     | // regular rectangle\r\n     | var c = paper.rect(10, 10, 50, 50);\r\n     | // rectangle with rounded corners\r\n     | var c = paper.rect(40, 40, 50, 50, 10);\r\n    \\*/\r\n    paperproto.rect = function (x, y, w, h, r) {\r\n        var out = R._engine.rect(this, x || 0, y || 0, w || 0, h || 0, r || 0);\r\n        this.__set__ && this.__set__.push(out);\r\n        return out;\r\n    };\r\n    /*\\\r\n     * Paper.ellipse\r\n     [ method ]\r\n     **\r\n     * Draws an ellipse.\r\n     **\r\n     > Parameters\r\n     **\r\n     - x (number) x coordinate of the centre\r\n     - y (number) y coordinate of the centre\r\n     - rx (number) horizontal radius\r\n     - ry (number) vertical radius\r\n     = (object) Raphaël element object with type “ellipse”\r\n     **\r\n     > Usage\r\n     | var c = paper.ellipse(50, 50, 40, 20);\r\n    \\*/\r\n    paperproto.ellipse = function (x, y, rx, ry) {\r\n        var out = R._engine.ellipse(this, x || 0, y || 0, rx || 0, ry || 0);\r\n        this.__set__ && this.__set__.push(out);\r\n        return out;\r\n    };\r\n    /*\\\r\n     * Paper.path\r\n     [ method ]\r\n     **\r\n     * Creates a path element by given path data string.\r\n     > Parameters\r\n     - pathString (string) #optional path string in SVG format.\r\n     * Path string consists of one-letter commands, followed by comma seprarated arguments in numercal form. Example:\r\n     | \"M10,20L30,40\"\r\n     * Here we can see two commands: “M”, with arguments `(10, 20)` and “L” with arguments `(30, 40)`. Upper case letter mean command is absolute, lower case—relative.\r\n     *\r\n     # <p>Here is short list of commands available, for more details see <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path's data attribute's format are described in the SVG specification.\">SVG path string format</a>.</p>\r\n     # <table><thead><tr><th>Command</th><th>Name</th><th>Parameters</th></tr></thead><tbody>\r\n     # <tr><td>M</td><td>moveto</td><td>(x y)+</td></tr>\r\n     # <tr><td>Z</td><td>closepath</td><td>(none)</td></tr>\r\n     # <tr><td>L</td><td>lineto</td><td>(x y)+</td></tr>\r\n     # <tr><td>H</td><td>horizontal lineto</td><td>x+</td></tr>\r\n     # <tr><td>V</td><td>vertical lineto</td><td>y+</td></tr>\r\n     # <tr><td>C</td><td>curveto</td><td>(x1 y1 x2 y2 x y)+</td></tr>\r\n     # <tr><td>S</td><td>smooth curveto</td><td>(x2 y2 x y)+</td></tr>\r\n     # <tr><td>Q</td><td>quadratic Bézier curveto</td><td>(x1 y1 x y)+</td></tr>\r\n     # <tr><td>T</td><td>smooth quadratic Bézier curveto</td><td>(x y)+</td></tr>\r\n     # <tr><td>A</td><td>elliptical arc</td><td>(rx ry x-axis-rotation large-arc-flag sweep-flag x y)+</td></tr>\r\n     # <tr><td>R</td><td><a href=\"http://en.wikipedia.org/wiki/Catmull–Rom_spline#Catmull.E2.80.93Rom_spline\">Catmull-Rom curveto</a>*</td><td>x1 y1 (x y)+</td></tr></tbody></table>\r\n     * * “Catmull-Rom curveto” is a not standard SVG command and added in 2.0 to make life easier.\r\n     * Note: there is a special case when path consist of just three commands: “M10,10R…z”. In this case path will smoothly connects to its beginning.\r\n     > Usage\r\n     | var c = paper.path(\"M10 10L90 90\");\r\n     | // draw a diagonal line:\r\n     | // move to 10,10, line to 90,90\r\n     * For example of path strings, check out these icons: http://raphaeljs.com/icons/\r\n    \\*/\r\n    paperproto.path = function (pathString) {\r\n        pathString && !R.is(pathString, string) && !R.is(pathString[0], array) && (pathString += E);\r\n        var out = R._engine.path(R.format[apply](R, arguments), this);\r\n        this.__set__ && this.__set__.push(out);\r\n        return out;\r\n    };\r\n    /*\\\r\n     * Paper.image\r\n     [ method ]\r\n     **\r\n     * Embeds an image into the surface.\r\n     **\r\n     > Parameters\r\n     **\r\n     - src (string) URI of the source image\r\n     - x (number) x coordinate position\r\n     - y (number) y coordinate position\r\n     - width (number) width of the image\r\n     - height (number) height of the image\r\n     = (object) Raphaël element object with type “image”\r\n     **\r\n     > Usage\r\n     | var c = paper.image(\"apple.png\", 10, 10, 80, 80);\r\n    \\*/\r\n    paperproto.image = function (src, x, y, w, h) {\r\n        var out = R._engine.image(this, src || \"about:blank\", x || 0, y || 0, w || 0, h || 0);\r\n        this.__set__ && this.__set__.push(out);\r\n        return out;\r\n    };\r\n    /*\\\r\n     * Paper.text\r\n     [ method ]\r\n     **\r\n     * Draws a text string. If you need line breaks, put “\\n” in the string.\r\n     **\r\n     > Parameters\r\n     **\r\n     - x (number) x coordinate position\r\n     - y (number) y coordinate position\r\n     - text (string) The text string to draw\r\n     = (object) Raphaël element object with type “text”\r\n     **\r\n     > Usage\r\n     | var t = paper.text(50, 50, \"Raphaël\\nkicks\\nbutt!\");\r\n    \\*/\r\n    paperproto.text = function (x, y, text) {\r\n        var out = R._engine.text(this, x || 0, y || 0, Str(text));\r\n        this.__set__ && this.__set__.push(out);\r\n        return out;\r\n    };\r\n    /*\\\r\n     * Paper.set\r\n     [ method ]\r\n     **\r\n     * Creates array-like object to keep and operate several elements at once.\r\n     * Warning: it doesn’t create any elements for itself in the page, it just groups existing elements.\r\n     * Sets act as pseudo elements — all methods available to an element can be used on a set.\r\n     = (object) array-like object that represents set of elements\r\n     **\r\n     > Usage\r\n     | var st = paper.set();\r\n     | st.push(\r\n     |     paper.circle(10, 10, 5),\r\n     |     paper.circle(30, 10, 5)\r\n     | );\r\n     | st.attr({fill: \"red\"}); // changes the fill of both circles\r\n    \\*/\r\n    paperproto.set = function (itemsArray) {\r\n        !R.is(itemsArray, \"array\") && (itemsArray = Array.prototype.splice.call(arguments, 0, arguments.length));\r\n        var out = new Set(itemsArray);\r\n        this.__set__ && this.__set__.push(out);\r\n        out[\"paper\"] = this;\r\n        out[\"type\"] = \"set\";\r\n        return out;\r\n    };\r\n    /*\\\r\n     * Paper.setStart\r\n     [ method ]\r\n     **\r\n     * Creates @Paper.set. All elements that will be created after calling this method and before calling\r\n     * @Paper.setFinish will be added to the set.\r\n     **\r\n     > Usage\r\n     | paper.setStart();\r\n     | paper.circle(10, 10, 5),\r\n     | paper.circle(30, 10, 5)\r\n     | var st = paper.setFinish();\r\n     | st.attr({fill: \"red\"}); // changes the fill of both circles\r\n    \\*/\r\n    paperproto.setStart = function (set) {\r\n        this.__set__ = set || this.set();\r\n    };\r\n    /*\\\r\n     * Paper.setFinish\r\n     [ method ]\r\n     **\r\n     * See @Paper.setStart. This method finishes catching and returns resulting set.\r\n     **\r\n     = (object) set\r\n    \\*/\r\n    paperproto.setFinish = function (set) {\r\n        var out = this.__set__;\r\n        delete this.__set__;\r\n        return out;\r\n    };\r\n    /*\\\r\n     * Paper.getSize\r\n     [ method ]\r\n     **\r\n     * Obtains current paper actual size.\r\n     **\r\n     = (object)\r\n     \\*/\r\n    paperproto.getSize = function () {\r\n        var container = this.canvas.parentNode;\r\n        return {\r\n            width: container.offsetWidth,\r\n            height: container.offsetHeight\r\n                };\r\n        };\r\n    /*\\\r\n     * Paper.setSize\r\n     [ method ]\r\n     **\r\n     * If you need to change dimensions of the canvas call this method\r\n     **\r\n     > Parameters\r\n     **\r\n     - width (number) new width of the canvas\r\n     - height (number) new height of the canvas\r\n    \\*/\r\n    paperproto.setSize = function (width, height) {\r\n        return R._engine.setSize.call(this, width, height);\r\n    };\r\n    /*\\\r\n     * Paper.setViewBox\r\n     [ method ]\r\n     **\r\n     * Sets the view box of the paper. Practically it gives you ability to zoom and pan whole paper surface by\r\n     * specifying new boundaries.\r\n     **\r\n     > Parameters\r\n     **\r\n     - x (number) new x position, default is `0`\r\n     - y (number) new y position, default is `0`\r\n     - w (number) new width of the canvas\r\n     - h (number) new height of the canvas\r\n     - fit (boolean) `true` if you want graphics to fit into new boundary box\r\n    \\*/\r\n    paperproto.setViewBox = function (x, y, w, h, fit) {\r\n        return R._engine.setViewBox.call(this, x, y, w, h, fit);\r\n    };\r\n    /*\\\r\n     * Paper.top\r\n     [ property ]\r\n     **\r\n     * Points to the topmost element on the paper\r\n    \\*/\r\n    /*\\\r\n     * Paper.bottom\r\n     [ property ]\r\n     **\r\n     * Points to the bottom element on the paper\r\n    \\*/\r\n    paperproto.top = paperproto.bottom = null;\r\n    /*\\\r\n     * Paper.raphael\r\n     [ property ]\r\n     **\r\n     * Points to the @Raphael object/function\r\n    \\*/\r\n    paperproto.raphael = R;\r\n    var getOffset = function (elem) {\r\n        var box = elem.getBoundingClientRect(),\r\n            doc = elem.ownerDocument,\r\n            body = doc.body,\r\n            docElem = doc.documentElement,\r\n            clientTop = docElem.clientTop || body.clientTop || 0, clientLeft = docElem.clientLeft || body.clientLeft || 0,\r\n            top  = box.top  + (g.win.pageYOffset || docElem.scrollTop || body.scrollTop ) - clientTop,\r\n            left = box.left + (g.win.pageXOffset || docElem.scrollLeft || body.scrollLeft) - clientLeft;\r\n        return {\r\n            y: top,\r\n            x: left\r\n        };\r\n    };\r\n    /*\\\r\n     * Paper.getElementByPoint\r\n     [ method ]\r\n     **\r\n     * Returns you topmost element under given point.\r\n     **\r\n     = (object) Raphaël element object\r\n     > Parameters\r\n     **\r\n     - x (number) x coordinate from the top left corner of the window\r\n     - y (number) y coordinate from the top left corner of the window\r\n     > Usage\r\n     | paper.getElementByPoint(mouseX, mouseY).attr({stroke: \"#f00\"});\r\n    \\*/\r\n    paperproto.getElementByPoint = function (x, y) {\r\n        var paper = this,\r\n            svg = paper.canvas,\r\n            target = g.doc.elementFromPoint(x, y);\r\n        if (g.win.opera && target.tagName == \"svg\") {\r\n            var so = getOffset(svg),\r\n                sr = svg.createSVGRect();\r\n            sr.x = x - so.x;\r\n            sr.y = y - so.y;\r\n            sr.width = sr.height = 1;\r\n            var hits = svg.getIntersectionList(sr, null);\r\n            if (hits.length) {\r\n                target = hits[hits.length - 1];\r\n            }\r\n        }\r\n        if (!target) {\r\n            return null;\r\n        }\r\n        while (target.parentNode && target != svg.parentNode && !target.raphael) {\r\n            target = target.parentNode;\r\n        }\r\n        target == paper.canvas.parentNode && (target = svg);\r\n        target = target && target.raphael ? paper.getById(target.raphaelid) : null;\r\n        return target;\r\n    };\r\n\r\n    /*\\\r\n     * Paper.getElementsByBBox\r\n     [ method ]\r\n     **\r\n     * Returns set of elements that have an intersecting bounding box\r\n     **\r\n     > Parameters\r\n     **\r\n     - bbox (object) bbox to check with\r\n     = (object) @Set\r\n     \\*/\r\n    paperproto.getElementsByBBox = function (bbox) {\r\n        var set = this.set();\r\n        this.forEach(function (el) {\r\n            if (R.isBBoxIntersect(el.getBBox(), bbox)) {\r\n                set.push(el);\r\n            }\r\n        });\r\n        return set;\r\n    };\r\n\r\n    /*\\\r\n     * Paper.getById\r\n     [ method ]\r\n     **\r\n     * Returns you element by its internal ID.\r\n     **\r\n     > Parameters\r\n     **\r\n     - id (number) id\r\n     = (object) Raphaël element object\r\n    \\*/\r\n    paperproto.getById = function (id) {\r\n        var bot = this.bottom;\r\n        while (bot) {\r\n            if (bot.id == id) {\r\n                return bot;\r\n            }\r\n            bot = bot.next;\r\n        }\r\n        return null;\r\n    };\r\n    /*\\\r\n     * Paper.forEach\r\n     [ method ]\r\n     **\r\n     * Executes given function for each element on the paper\r\n     *\r\n     * If callback function returns `false` it will stop loop running.\r\n     **\r\n     > Parameters\r\n     **\r\n     - callback (function) function to run\r\n     - thisArg (object) context object for the callback\r\n     = (object) Paper object\r\n     > Usage\r\n     | paper.forEach(function (el) {\r\n     |     el.attr({ stroke: \"blue\" });\r\n     | });\r\n    \\*/\r\n    paperproto.forEach = function (callback, thisArg) {\r\n        var bot = this.bottom;\r\n        while (bot) {\r\n            if (callback.call(thisArg, bot) === false) {\r\n                return this;\r\n            }\r\n            bot = bot.next;\r\n        }\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Paper.getElementsByPoint\r\n     [ method ]\r\n     **\r\n     * Returns set of elements that have common point inside\r\n     **\r\n     > Parameters\r\n     **\r\n     - x (number) x coordinate of the point\r\n     - y (number) y coordinate of the point\r\n     = (object) @Set\r\n    \\*/\r\n    paperproto.getElementsByPoint = function (x, y) {\r\n        var set = this.set();\r\n        this.forEach(function (el) {\r\n            if (el.isPointInside(x, y)) {\r\n                set.push(el);\r\n            }\r\n        });\r\n        return set;\r\n    };\r\n    function x_y() {\r\n        return this.x + S + this.y;\r\n    }\r\n    function x_y_w_h() {\r\n        return this.x + S + this.y + S + this.width + \" \\xd7 \" + this.height;\r\n    }\r\n    /*\\\r\n     * Element.isPointInside\r\n     [ method ]\r\n     **\r\n     * Determine if given point is inside this element’s shape\r\n     **\r\n     > Parameters\r\n     **\r\n     - x (number) x coordinate of the point\r\n     - y (number) y coordinate of the point\r\n     = (boolean) `true` if point inside the shape\r\n    \\*/\r\n    elproto.isPointInside = function (x, y) {\r\n        var rp = this.realPath = getPath[this.type](this);\r\n        if (this.attr('transform') && this.attr('transform').length) {\r\n            rp = R.transformPath(rp, this.attr('transform'));\r\n        }\r\n        return R.isPointInsidePath(rp, x, y);\r\n    };\r\n    /*\\\r\n     * Element.getBBox\r\n     [ method ]\r\n     **\r\n     * Return bounding box for a given element\r\n     **\r\n     > Parameters\r\n     **\r\n     - isWithoutTransform (boolean) flag, `true` if you want to have bounding box before transformations. Default is `false`.\r\n     = (object) Bounding box object:\r\n     o {\r\n     o     x: (number) top left corner x\r\n     o     y: (number) top left corner y\r\n     o     x2: (number) bottom right corner x\r\n     o     y2: (number) bottom right corner y\r\n     o     width: (number) width\r\n     o     height: (number) height\r\n     o }\r\n    \\*/\r\n    elproto.getBBox = function (isWithoutTransform) {\r\n        if (this.removed) {\r\n            return {};\r\n        }\r\n        var _ = this._;\r\n        if (isWithoutTransform) {\r\n            if (_.dirty || !_.bboxwt) {\r\n                this.realPath = getPath[this.type](this);\r\n                _.bboxwt = pathDimensions(this.realPath);\r\n                _.bboxwt.toString = x_y_w_h;\r\n                _.dirty = 0;\r\n            }\r\n            return _.bboxwt;\r\n        }\r\n        if (_.dirty || _.dirtyT || !_.bbox) {\r\n            if (_.dirty || !this.realPath) {\r\n                _.bboxwt = 0;\r\n                this.realPath = getPath[this.type](this);\r\n            }\r\n            _.bbox = pathDimensions(mapPath(this.realPath, this.matrix));\r\n            _.bbox.toString = x_y_w_h;\r\n            _.dirty = _.dirtyT = 0;\r\n        }\r\n        return _.bbox;\r\n    };\r\n    /*\\\r\n     * Element.clone\r\n     [ method ]\r\n     **\r\n     = (object) clone of a given element\r\n     **\r\n    \\*/\r\n    elproto.clone = function () {\r\n        if (this.removed) {\r\n            return null;\r\n        }\r\n        var out = this.paper[this.type]().attr(this.attr());\r\n        this.__set__ && this.__set__.push(out);\r\n        return out;\r\n    };\r\n    /*\\\r\n     * Element.glow\r\n     [ method ]\r\n     **\r\n     * Return set of elements that create glow-like effect around given element. See @Paper.set.\r\n     *\r\n     * Note: Glow is not connected to the element. If you change element attributes it won’t adjust itself.\r\n     **\r\n     > Parameters\r\n     **\r\n     - glow (object) #optional parameters object with all properties optional:\r\n     o {\r\n     o     width (number) size of the glow, default is `10`\r\n     o     fill (boolean) will it be filled, default is `false`\r\n     o     opacity (number) opacity, default is `0.5`\r\n     o     offsetx (number) horizontal offset, default is `0`\r\n     o     offsety (number) vertical offset, default is `0`\r\n     o     color (string) glow colour, default is `black`\r\n     o }\r\n     = (object) @Paper.set of elements that represents glow\r\n    \\*/\r\n    elproto.glow = function (glow) {\r\n        if (this.type == \"text\") {\r\n            return null;\r\n        }\r\n        glow = glow || {};\r\n        var s = {\r\n            width: (glow.width || 10) + (+this.attr(\"stroke-width\") || 1),\r\n            fill: glow.fill || false,\r\n            opacity: glow.opacity || .5,\r\n            offsetx: glow.offsetx || 0,\r\n            offsety: glow.offsety || 0,\r\n            color: glow.color || \"#000\"\r\n        },\r\n            c = s.width / 2,\r\n            r = this.paper,\r\n            out = r.set(),\r\n            path = this.realPath || getPath[this.type](this);\r\n        path = this.matrix ? mapPath(path, this.matrix) : path;\r\n        for (var i = 1; i < c + 1; i++) {\r\n            out.push(r.path(path).attr({\r\n                stroke: s.color,\r\n                fill: s.fill ? s.color : \"none\",\r\n                \"stroke-linejoin\": \"round\",\r\n                \"stroke-linecap\": \"round\",\r\n                \"stroke-width\": +(s.width / c * i).toFixed(3),\r\n                opacity: +(s.opacity / c).toFixed(3)\r\n            }));\r\n        }\r\n        return out.insertBefore(this).translate(s.offsetx, s.offsety);\r\n    };\r\n    var curveslengths = {},\r\n    getPointAtSegmentLength = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length) {\r\n        if (length == null) {\r\n            return bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y);\r\n        } else {\r\n            return R.findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, getTatLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length));\r\n        }\r\n    },\r\n    getLengthFactory = function (istotal, subpath) {\r\n        return function (path, length, onlystart) {\r\n            path = path2curve(path);\r\n            var x, y, p, l, sp = \"\", subpaths = {}, point,\r\n                len = 0;\r\n            for (var i = 0, ii = path.length; i < ii; i++) {\r\n                p = path[i];\r\n                if (p[0] == \"M\") {\r\n                    x = +p[1];\r\n                    y = +p[2];\r\n                } else {\r\n                    l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\r\n                    if (len + l > length) {\r\n                        if (subpath && !subpaths.start) {\r\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\r\n                            sp += [\"C\" + point.start.x, point.start.y, point.m.x, point.m.y, point.x, point.y];\r\n                            if (onlystart) {return sp;}\r\n                            subpaths.start = sp;\r\n                            sp = [\"M\" + point.x, point.y + \"C\" + point.n.x, point.n.y, point.end.x, point.end.y, p[5], p[6]].join();\r\n                            len += l;\r\n                            x = +p[5];\r\n                            y = +p[6];\r\n                            continue;\r\n                        }\r\n                        if (!istotal && !subpath) {\r\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\r\n                            return {x: point.x, y: point.y, alpha: point.alpha};\r\n                        }\r\n                    }\r\n                    len += l;\r\n                    x = +p[5];\r\n                    y = +p[6];\r\n                }\r\n                sp += p.shift() + p;\r\n            }\r\n            subpaths.end = sp;\r\n            point = istotal ? len : subpath ? subpaths : R.findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);\r\n            point.alpha && (point = {x: point.x, y: point.y, alpha: point.alpha});\r\n            return point;\r\n        };\r\n    };\r\n    var getTotalLength = getLengthFactory(1),\r\n        getPointAtLength = getLengthFactory(),\r\n        getSubpathsAtLength = getLengthFactory(0, 1);\r\n    /*\\\r\n     * Raphael.getTotalLength\r\n     [ method ]\r\n     **\r\n     * Returns length of the given path in pixels.\r\n     **\r\n     > Parameters\r\n     **\r\n     - path (string) SVG path string.\r\n     **\r\n     = (number) length.\r\n    \\*/\r\n    R.getTotalLength = getTotalLength;\r\n    /*\\\r\n     * Raphael.getPointAtLength\r\n     [ method ]\r\n     **\r\n     * Return coordinates of the point located at the given length on the given path.\r\n     **\r\n     > Parameters\r\n     **\r\n     - path (string) SVG path string\r\n     - length (number)\r\n     **\r\n     = (object) representation of the point:\r\n     o {\r\n     o     x: (number) x coordinate\r\n     o     y: (number) y coordinate\r\n     o     alpha: (number) angle of derivative\r\n     o }\r\n    \\*/\r\n    R.getPointAtLength = getPointAtLength;\r\n    /*\\\r\n     * Raphael.getSubpath\r\n     [ method ]\r\n     **\r\n     * Return subpath of a given path from given length to given length.\r\n     **\r\n     > Parameters\r\n     **\r\n     - path (string) SVG path string\r\n     - from (number) position of the start of the segment\r\n     - to (number) position of the end of the segment\r\n     **\r\n     = (string) pathstring for the segment\r\n    \\*/\r\n    R.getSubpath = function (path, from, to) {\r\n        if (this.getTotalLength(path) - to < 1e-6) {\r\n            return getSubpathsAtLength(path, from).end;\r\n        }\r\n        var a = getSubpathsAtLength(path, to, 1);\r\n        return from ? getSubpathsAtLength(a, from).end : a;\r\n    };\r\n    /*\\\r\n     * Element.getTotalLength\r\n     [ method ]\r\n     **\r\n     * Returns length of the path in pixels. Only works for element of “path” type.\r\n     = (number) length.\r\n    \\*/\r\n    elproto.getTotalLength = function () {\r\n        var path = this.getPath();\r\n        if (!path) {\r\n            return;\r\n        }\r\n\r\n        if (this.node.getTotalLength) {\r\n            return this.node.getTotalLength();\r\n        }\r\n\r\n        return getTotalLength(path);\r\n    };\r\n    /*\\\r\n     * Element.getPointAtLength\r\n     [ method ]\r\n     **\r\n     * Return coordinates of the point located at the given length on the given path. Only works for element of “path” type.\r\n     **\r\n     > Parameters\r\n     **\r\n     - length (number)\r\n     **\r\n     = (object) representation of the point:\r\n     o {\r\n     o     x: (number) x coordinate\r\n     o     y: (number) y coordinate\r\n     o     alpha: (number) angle of derivative\r\n     o }\r\n    \\*/\r\n    elproto.getPointAtLength = function (length) {\r\n        var path = this.getPath();\r\n        if (!path) {\r\n            return;\r\n        }\r\n\r\n        return getPointAtLength(path, length);\r\n    };\r\n    /*\\\r\n     * Element.getPath\r\n     [ method ]\r\n     **\r\n     * Returns path of the element. Only works for elements of “path” type and simple elements like circle.\r\n     = (object) path\r\n     **\r\n    \\*/\r\n    elproto.getPath = function () {\r\n        var path,\r\n            getPath = R._getPath[this.type];\r\n\r\n        if (this.type == \"text\" || this.type == \"set\") {\r\n            return;\r\n        }\r\n\r\n        if (getPath) {\r\n            path = getPath(this);\r\n        }\r\n\r\n        return path;\r\n    };\r\n    /*\\\r\n     * Element.getSubpath\r\n     [ method ]\r\n     **\r\n     * Return subpath of a given element from given length to given length. Only works for element of “path” type.\r\n     **\r\n     > Parameters\r\n     **\r\n     - from (number) position of the start of the segment\r\n     - to (number) position of the end of the segment\r\n     **\r\n     = (string) pathstring for the segment\r\n    \\*/\r\n    elproto.getSubpath = function (from, to) {\r\n        var path = this.getPath();\r\n        if (!path) {\r\n            return;\r\n        }\r\n\r\n        return R.getSubpath(path, from, to);\r\n    };\r\n    /*\\\r\n     * Raphael.easing_formulas\r\n     [ property ]\r\n     **\r\n     * Object that contains easing formulas for animation. You could extend it with your own. By default it has following list of easing:\r\n     # <ul>\r\n     #     <li>“linear”</li>\r\n     #     <li>“&lt;” or “easeIn” or “ease-in”</li>\r\n     #     <li>“>” or “easeOut” or “ease-out”</li>\r\n     #     <li>“&lt;>” or “easeInOut” or “ease-in-out”</li>\r\n     #     <li>“backIn” or “back-in”</li>\r\n     #     <li>“backOut” or “back-out”</li>\r\n     #     <li>“elastic”</li>\r\n     #     <li>“bounce”</li>\r\n     # </ul>\r\n     # <p>See also <a href=\"http://raphaeljs.com/easing.html\">Easing demo</a>.</p>\r\n    \\*/\r\n    var ef = R.easing_formulas = {\r\n        linear: function (n) {\r\n            return n;\r\n        },\r\n        \"<\": function (n) {\r\n            return pow(n, 1.7);\r\n        },\r\n        \">\": function (n) {\r\n            return pow(n, .48);\r\n        },\r\n        \"<>\": function (n) {\r\n            var q = .48 - n / 1.04,\r\n                Q = math.sqrt(.1734 + q * q),\r\n                x = Q - q,\r\n                X = pow(abs(x), 1 / 3) * (x < 0 ? -1 : 1),\r\n                y = -Q - q,\r\n                Y = pow(abs(y), 1 / 3) * (y < 0 ? -1 : 1),\r\n                t = X + Y + .5;\r\n            return (1 - t) * 3 * t * t + t * t * t;\r\n        },\r\n        backIn: function (n) {\r\n            var s = 1.70158;\r\n            return n * n * ((s + 1) * n - s);\r\n        },\r\n        backOut: function (n) {\r\n            n = n - 1;\r\n            var s = 1.70158;\r\n            return n * n * ((s + 1) * n + s) + 1;\r\n        },\r\n        elastic: function (n) {\r\n            if (n == !!n) {\r\n                return n;\r\n            }\r\n            return pow(2, -10 * n) * math.sin((n - .075) * (2 * PI) / .3) + 1;\r\n        },\r\n        bounce: function (n) {\r\n            var s = 7.5625,\r\n                p = 2.75,\r\n                l;\r\n            if (n < (1 / p)) {\r\n                l = s * n * n;\r\n            } else {\r\n                if (n < (2 / p)) {\r\n                    n -= (1.5 / p);\r\n                    l = s * n * n + .75;\r\n                } else {\r\n                    if (n < (2.5 / p)) {\r\n                        n -= (2.25 / p);\r\n                        l = s * n * n + .9375;\r\n                    } else {\r\n                        n -= (2.625 / p);\r\n                        l = s * n * n + .984375;\r\n                    }\r\n                }\r\n            }\r\n            return l;\r\n        }\r\n    };\r\n    ef.easeIn = ef[\"ease-in\"] = ef[\"<\"];\r\n    ef.easeOut = ef[\"ease-out\"] = ef[\">\"];\r\n    ef.easeInOut = ef[\"ease-in-out\"] = ef[\"<>\"];\r\n    ef[\"back-in\"] = ef.backIn;\r\n    ef[\"back-out\"] = ef.backOut;\r\n\r\n    var animationElements = [],\r\n        requestAnimFrame = window.requestAnimationFrame       ||\r\n                           window.webkitRequestAnimationFrame ||\r\n                           window.mozRequestAnimationFrame    ||\r\n                           window.oRequestAnimationFrame      ||\r\n                           window.msRequestAnimationFrame     ||\r\n                           function (callback) {\r\n                               setTimeout(callback, 16);\r\n                           },\r\n        animation = function () {\r\n            var Now = +new Date,\r\n                l = 0;\r\n            for (; l < animationElements.length; l++) {\r\n                var e = animationElements[l];\r\n                if (e.el.removed || e.paused) {\r\n                    continue;\r\n                }\r\n                var time = Now - e.start,\r\n                    ms = e.ms,\r\n                    easing = e.easing,\r\n                    from = e.from,\r\n                    diff = e.diff,\r\n                    to = e.to,\r\n                    t = e.t,\r\n                    that = e.el,\r\n                    set = {},\r\n                    now,\r\n                    init = {},\r\n                    key;\r\n                if (e.initstatus) {\r\n                    time = (e.initstatus * e.anim.top - e.prev) / (e.percent - e.prev) * ms;\r\n                    e.status = e.initstatus;\r\n                    delete e.initstatus;\r\n                    e.stop && animationElements.splice(l--, 1);\r\n                } else {\r\n                    e.status = (e.prev + (e.percent - e.prev) * (time / ms)) / e.anim.top;\r\n                }\r\n                if (time < 0) {\r\n                    continue;\r\n                }\r\n                if (time < ms) {\r\n                    var pos = easing(time / ms);\r\n                    for (var attr in from) if (from[has](attr)) {\r\n                        switch (availableAnimAttrs[attr]) {\r\n                            case nu:\r\n                                now = +from[attr] + pos * ms * diff[attr];\r\n                                break;\r\n                            case \"colour\":\r\n                                now = \"rgb(\" + [\r\n                                    upto255(round(from[attr].r + pos * ms * diff[attr].r)),\r\n                                    upto255(round(from[attr].g + pos * ms * diff[attr].g)),\r\n                                    upto255(round(from[attr].b + pos * ms * diff[attr].b))\r\n                                ].join(\",\") + \")\";\r\n                                break;\r\n                            case \"path\":\r\n                                now = [];\r\n                                for (var i = 0, ii = from[attr].length; i < ii; i++) {\r\n                                    now[i] = [from[attr][i][0]];\r\n                                    for (var j = 1, jj = from[attr][i].length; j < jj; j++) {\r\n                                        now[i][j] = +from[attr][i][j] + pos * ms * diff[attr][i][j];\r\n                                    }\r\n                                    now[i] = now[i].join(S);\r\n                                }\r\n                                now = now.join(S);\r\n                                break;\r\n                            case \"transform\":\r\n                                if (diff[attr].real) {\r\n                                    now = [];\r\n                                    for (i = 0, ii = from[attr].length; i < ii; i++) {\r\n                                        now[i] = [from[attr][i][0]];\r\n                                        for (j = 1, jj = from[attr][i].length; j < jj; j++) {\r\n                                            now[i][j] = from[attr][i][j] + pos * ms * diff[attr][i][j];\r\n                                        }\r\n                                    }\r\n                                } else {\r\n                                    var get = function (i) {\r\n                                        return +from[attr][i] + pos * ms * diff[attr][i];\r\n                                    };\r\n                                    // now = [[\"r\", get(2), 0, 0], [\"t\", get(3), get(4)], [\"s\", get(0), get(1), 0, 0]];\r\n                                    now = [[\"m\", get(0), get(1), get(2), get(3), get(4), get(5)]];\r\n                                }\r\n                                break;\r\n                            case \"csv\":\r\n                                if (attr == \"clip-rect\") {\r\n                                    now = [];\r\n                                    i = 4;\r\n                                    while (i--) {\r\n                                        now[i] = +from[attr][i] + pos * ms * diff[attr][i];\r\n                                    }\r\n                                }\r\n                                break;\r\n                            default:\r\n                                var from2 = [][concat](from[attr]);\r\n                                now = [];\r\n                                i = that.paper.customAttributes[attr].length;\r\n                                while (i--) {\r\n                                    now[i] = +from2[i] + pos * ms * diff[attr][i];\r\n                                }\r\n                                break;\r\n                        }\r\n                        set[attr] = now;\r\n                    }\r\n                    that.attr(set);\r\n                    (function (id, that, anim) {\r\n                        setTimeout(function () {\r\n                            eve(\"raphael.anim.frame.\" + id, that, anim);\r\n                        });\r\n                    })(that.id, that, e.anim);\r\n                } else {\r\n                    (function(f, el, a) {\r\n                        setTimeout(function() {\r\n                            eve(\"raphael.anim.frame.\" + el.id, el, a);\r\n                            eve(\"raphael.anim.finish.\" + el.id, el, a);\r\n                            R.is(f, \"function\") && f.call(el);\r\n                        });\r\n                    })(e.callback, that, e.anim);\r\n                    that.attr(to);\r\n                    animationElements.splice(l--, 1);\r\n                    if (e.repeat > 1 && !e.next) {\r\n                        for (key in to) if (to[has](key)) {\r\n                            init[key] = e.totalOrigin[key];\r\n                        }\r\n                        e.el.attr(init);\r\n                        runAnimation(e.anim, e.el, e.anim.percents[0], null, e.totalOrigin, e.repeat - 1);\r\n                    }\r\n                    if (e.next && !e.stop) {\r\n                        runAnimation(e.anim, e.el, e.next, null, e.totalOrigin, e.repeat);\r\n                    }\r\n                }\r\n            }\r\n            animationElements.length && requestAnimFrame(animation);\r\n        },\r\n        upto255 = function (color) {\r\n            return color > 255 ? 255 : color < 0 ? 0 : color;\r\n        };\r\n    /*\\\r\n     * Element.animateWith\r\n     [ method ]\r\n     **\r\n     * Acts similar to @Element.animate, but ensure that given animation runs in sync with another given element.\r\n     **\r\n     > Parameters\r\n     **\r\n     - el (object) element to sync with\r\n     - anim (object) animation to sync with\r\n     - params (object) #optional final attributes for the element, see also @Element.attr\r\n     - ms (number) #optional number of milliseconds for animation to run\r\n     - easing (string) #optional easing type. Accept on of @Raphael.easing_formulas or CSS format: `cubic&#x2010;bezier(XX,&#160;XX,&#160;XX,&#160;XX)`\r\n     - callback (function) #optional callback function. Will be called at the end of animation.\r\n     * or\r\n     - element (object) element to sync with\r\n     - anim (object) animation to sync with\r\n     - animation (object) #optional animation object, see @Raphael.animation\r\n     **\r\n     = (object) original element\r\n    \\*/\r\n    elproto.animateWith = function (el, anim, params, ms, easing, callback) {\r\n        var element = this;\r\n        if (element.removed) {\r\n            callback && callback.call(element);\r\n            return element;\r\n        }\r\n        var a = params instanceof Animation ? params : R.animation(params, ms, easing, callback),\r\n            x, y;\r\n        runAnimation(a, element, a.percents[0], null, element.attr());\r\n        for (var i = 0, ii = animationElements.length; i < ii; i++) {\r\n            if (animationElements[i].anim == anim && animationElements[i].el == el) {\r\n                animationElements[ii - 1].start = animationElements[i].start;\r\n                break;\r\n            }\r\n        }\r\n        return element;\r\n        //\r\n        //\r\n        // var a = params ? R.animation(params, ms, easing, callback) : anim,\r\n        //     status = element.status(anim);\r\n        // return this.animate(a).status(a, status * anim.ms / a.ms);\r\n    };\r\n    function CubicBezierAtTime(t, p1x, p1y, p2x, p2y, duration) {\r\n        var cx = 3 * p1x,\r\n            bx = 3 * (p2x - p1x) - cx,\r\n            ax = 1 - cx - bx,\r\n            cy = 3 * p1y,\r\n            by = 3 * (p2y - p1y) - cy,\r\n            ay = 1 - cy - by;\r\n        function sampleCurveX(t) {\r\n            return ((ax * t + bx) * t + cx) * t;\r\n        }\r\n        function solve(x, epsilon) {\r\n            var t = solveCurveX(x, epsilon);\r\n            return ((ay * t + by) * t + cy) * t;\r\n        }\r\n        function solveCurveX(x, epsilon) {\r\n            var t0, t1, t2, x2, d2, i;\r\n            for(t2 = x, i = 0; i < 8; i++) {\r\n                x2 = sampleCurveX(t2) - x;\r\n                if (abs(x2) < epsilon) {\r\n                    return t2;\r\n                }\r\n                d2 = (3 * ax * t2 + 2 * bx) * t2 + cx;\r\n                if (abs(d2) < 1e-6) {\r\n                    break;\r\n                }\r\n                t2 = t2 - x2 / d2;\r\n            }\r\n            t0 = 0;\r\n            t1 = 1;\r\n            t2 = x;\r\n            if (t2 < t0) {\r\n                return t0;\r\n            }\r\n            if (t2 > t1) {\r\n                return t1;\r\n            }\r\n            while (t0 < t1) {\r\n                x2 = sampleCurveX(t2);\r\n                if (abs(x2 - x) < epsilon) {\r\n                    return t2;\r\n                }\r\n                if (x > x2) {\r\n                    t0 = t2;\r\n                } else {\r\n                    t1 = t2;\r\n                }\r\n                t2 = (t1 - t0) / 2 + t0;\r\n            }\r\n            return t2;\r\n        }\r\n        return solve(t, 1 / (200 * duration));\r\n    }\r\n    elproto.onAnimation = function (f) {\r\n        f ? eve.on(\"raphael.anim.frame.\" + this.id, f) : eve.unbind(\"raphael.anim.frame.\" + this.id);\r\n        return this;\r\n    };\r\n    function Animation(anim, ms) {\r\n        var percents = [],\r\n            newAnim = {};\r\n        this.ms = ms;\r\n        this.times = 1;\r\n        if (anim) {\r\n            for (var attr in anim) if (anim[has](attr)) {\r\n                newAnim[toFloat(attr)] = anim[attr];\r\n                percents.push(toFloat(attr));\r\n            }\r\n            percents.sort(sortByNumber);\r\n        }\r\n        this.anim = newAnim;\r\n        this.top = percents[percents.length - 1];\r\n        this.percents = percents;\r\n    }\r\n    /*\\\r\n     * Animation.delay\r\n     [ method ]\r\n     **\r\n     * Creates a copy of existing animation object with given delay.\r\n     **\r\n     > Parameters\r\n     **\r\n     - delay (number) number of ms to pass between animation start and actual animation\r\n     **\r\n     = (object) new altered Animation object\r\n     | var anim = Raphael.animation({cx: 10, cy: 20}, 2e3);\r\n     | circle1.animate(anim); // run the given animation immediately\r\n     | circle2.animate(anim.delay(500)); // run the given animation after 500 ms\r\n    \\*/\r\n    Animation.prototype.delay = function (delay) {\r\n        var a = new Animation(this.anim, this.ms);\r\n        a.times = this.times;\r\n        a.del = +delay || 0;\r\n        return a;\r\n    };\r\n    /*\\\r\n     * Animation.repeat\r\n     [ method ]\r\n     **\r\n     * Creates a copy of existing animation object with given repetition.\r\n     **\r\n     > Parameters\r\n     **\r\n     - repeat (number) number iterations of animation. For infinite animation pass `Infinity`\r\n     **\r\n     = (object) new altered Animation object\r\n    \\*/\r\n    Animation.prototype.repeat = function (times) {\r\n        var a = new Animation(this.anim, this.ms);\r\n        a.del = this.del;\r\n        a.times = math.floor(mmax(times, 0)) || 1;\r\n        return a;\r\n    };\r\n    function runAnimation(anim, element, percent, status, totalOrigin, times) {\r\n        percent = toFloat(percent);\r\n        var params,\r\n            isInAnim,\r\n            isInAnimSet,\r\n            percents = [],\r\n            next,\r\n            prev,\r\n            timestamp,\r\n            ms = anim.ms,\r\n            from = {},\r\n            to = {},\r\n            diff = {};\r\n        if (status) {\r\n            for (i = 0, ii = animationElements.length; i < ii; i++) {\r\n                var e = animationElements[i];\r\n                if (e.el.id == element.id && e.anim == anim) {\r\n                    if (e.percent != percent) {\r\n                        animationElements.splice(i, 1);\r\n                        isInAnimSet = 1;\r\n                    } else {\r\n                        isInAnim = e;\r\n                    }\r\n                    element.attr(e.totalOrigin);\r\n                    break;\r\n                }\r\n            }\r\n        } else {\r\n            status = +to; // NaN\r\n        }\r\n        for (var i = 0, ii = anim.percents.length; i < ii; i++) {\r\n            if (anim.percents[i] == percent || anim.percents[i] > status * anim.top) {\r\n                percent = anim.percents[i];\r\n                prev = anim.percents[i - 1] || 0;\r\n                ms = ms / anim.top * (percent - prev);\r\n                next = anim.percents[i + 1];\r\n                params = anim.anim[percent];\r\n                break;\r\n            } else if (status) {\r\n                element.attr(anim.anim[anim.percents[i]]);\r\n            }\r\n        }\r\n        if (!params) {\r\n            return;\r\n        }\r\n        if (!isInAnim) {\r\n            for (var attr in params) if (params[has](attr)) {\r\n                if (availableAnimAttrs[has](attr) || element.paper.customAttributes[has](attr)) {\r\n                    from[attr] = element.attr(attr);\r\n                    (from[attr] == null) && (from[attr] = availableAttrs[attr]);\r\n                    to[attr] = params[attr];\r\n                    switch (availableAnimAttrs[attr]) {\r\n                        case nu:\r\n                            diff[attr] = (to[attr] - from[attr]) / ms;\r\n                            break;\r\n                        case \"colour\":\r\n                            from[attr] = R.getRGB(from[attr]);\r\n                            var toColour = R.getRGB(to[attr]);\r\n                            diff[attr] = {\r\n                                r: (toColour.r - from[attr].r) / ms,\r\n                                g: (toColour.g - from[attr].g) / ms,\r\n                                b: (toColour.b - from[attr].b) / ms\r\n                            };\r\n                            break;\r\n                        case \"path\":\r\n                            var pathes = path2curve(from[attr], to[attr]),\r\n                                toPath = pathes[1];\r\n                            from[attr] = pathes[0];\r\n                            diff[attr] = [];\r\n                            for (i = 0, ii = from[attr].length; i < ii; i++) {\r\n                                diff[attr][i] = [0];\r\n                                for (var j = 1, jj = from[attr][i].length; j < jj; j++) {\r\n                                    diff[attr][i][j] = (toPath[i][j] - from[attr][i][j]) / ms;\r\n                                }\r\n                            }\r\n                            break;\r\n                        case \"transform\":\r\n                            var _ = element._,\r\n                                eq = equaliseTransform(_[attr], to[attr]);\r\n                            if (eq) {\r\n                                from[attr] = eq.from;\r\n                                to[attr] = eq.to;\r\n                                diff[attr] = [];\r\n                                diff[attr].real = true;\r\n                                for (i = 0, ii = from[attr].length; i < ii; i++) {\r\n                                    diff[attr][i] = [from[attr][i][0]];\r\n                                    for (j = 1, jj = from[attr][i].length; j < jj; j++) {\r\n                                        diff[attr][i][j] = (to[attr][i][j] - from[attr][i][j]) / ms;\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                var m = (element.matrix || new Matrix),\r\n                                    to2 = {\r\n                                        _: {transform: _.transform},\r\n                                        getBBox: function () {\r\n                                            return element.getBBox(1);\r\n                                        }\r\n                                    };\r\n                                from[attr] = [\r\n                                    m.a,\r\n                                    m.b,\r\n                                    m.c,\r\n                                    m.d,\r\n                                    m.e,\r\n                                    m.f\r\n                                ];\r\n                                extractTransform(to2, to[attr]);\r\n                                to[attr] = to2._.transform;\r\n                                diff[attr] = [\r\n                                    (to2.matrix.a - m.a) / ms,\r\n                                    (to2.matrix.b - m.b) / ms,\r\n                                    (to2.matrix.c - m.c) / ms,\r\n                                    (to2.matrix.d - m.d) / ms,\r\n                                    (to2.matrix.e - m.e) / ms,\r\n                                    (to2.matrix.f - m.f) / ms\r\n                                ];\r\n                                // from[attr] = [_.sx, _.sy, _.deg, _.dx, _.dy];\r\n                                // var to2 = {_:{}, getBBox: function () { return element.getBBox(); }};\r\n                                // extractTransform(to2, to[attr]);\r\n                                // diff[attr] = [\r\n                                //     (to2._.sx - _.sx) / ms,\r\n                                //     (to2._.sy - _.sy) / ms,\r\n                                //     (to2._.deg - _.deg) / ms,\r\n                                //     (to2._.dx - _.dx) / ms,\r\n                                //     (to2._.dy - _.dy) / ms\r\n                                // ];\r\n                            }\r\n                            break;\r\n                        case \"csv\":\r\n                            var values = Str(params[attr])[split](separator),\r\n                                from2 = Str(from[attr])[split](separator);\r\n                            if (attr == \"clip-rect\") {\r\n                                from[attr] = from2;\r\n                                diff[attr] = [];\r\n                                i = from2.length;\r\n                                while (i--) {\r\n                                    diff[attr][i] = (values[i] - from[attr][i]) / ms;\r\n                                }\r\n                            }\r\n                            to[attr] = values;\r\n                            break;\r\n                        default:\r\n                            values = [][concat](params[attr]);\r\n                            from2 = [][concat](from[attr]);\r\n                            diff[attr] = [];\r\n                            i = element.paper.customAttributes[attr].length;\r\n                            while (i--) {\r\n                                diff[attr][i] = ((values[i] || 0) - (from2[i] || 0)) / ms;\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            var easing = params.easing,\r\n                easyeasy = R.easing_formulas[easing];\r\n            if (!easyeasy) {\r\n                easyeasy = Str(easing).match(bezierrg);\r\n                if (easyeasy && easyeasy.length == 5) {\r\n                    var curve = easyeasy;\r\n                    easyeasy = function (t) {\r\n                        return CubicBezierAtTime(t, +curve[1], +curve[2], +curve[3], +curve[4], ms);\r\n                    };\r\n                } else {\r\n                    easyeasy = pipe;\r\n                }\r\n            }\r\n            timestamp = params.start || anim.start || +new Date;\r\n            e = {\r\n                anim: anim,\r\n                percent: percent,\r\n                timestamp: timestamp,\r\n                start: timestamp + (anim.del || 0),\r\n                status: 0,\r\n                initstatus: status || 0,\r\n                stop: false,\r\n                ms: ms,\r\n                easing: easyeasy,\r\n                from: from,\r\n                diff: diff,\r\n                to: to,\r\n                el: element,\r\n                callback: params.callback,\r\n                prev: prev,\r\n                next: next,\r\n                repeat: times || anim.times,\r\n                origin: element.attr(),\r\n                totalOrigin: totalOrigin\r\n            };\r\n            animationElements.push(e);\r\n            if (status && !isInAnim && !isInAnimSet) {\r\n                e.stop = true;\r\n                e.start = new Date - ms * status;\r\n                if (animationElements.length == 1) {\r\n                    return animation();\r\n                }\r\n            }\r\n            if (isInAnimSet) {\r\n                e.start = new Date - e.ms * status;\r\n            }\r\n            animationElements.length == 1 && requestAnimFrame(animation);\r\n        } else {\r\n            isInAnim.initstatus = status;\r\n            isInAnim.start = new Date - isInAnim.ms * status;\r\n        }\r\n        eve(\"raphael.anim.start.\" + element.id, element, anim);\r\n    }\r\n    /*\\\r\n     * Raphael.animation\r\n     [ method ]\r\n     **\r\n     * Creates an animation object that can be passed to the @Element.animate or @Element.animateWith methods.\r\n     * See also @Animation.delay and @Animation.repeat methods.\r\n     **\r\n     > Parameters\r\n     **\r\n     - params (object) final attributes for the element, see also @Element.attr\r\n     - ms (number) number of milliseconds for animation to run\r\n     - easing (string) #optional easing type. Accept one of @Raphael.easing_formulas or CSS format: `cubic&#x2010;bezier(XX,&#160;XX,&#160;XX,&#160;XX)`\r\n     - callback (function) #optional callback function. Will be called at the end of animation.\r\n     **\r\n     = (object) @Animation\r\n    \\*/\r\n    R.animation = function (params, ms, easing, callback) {\r\n        if (params instanceof Animation) {\r\n            return params;\r\n        }\r\n        if (R.is(easing, \"function\") || !easing) {\r\n            callback = callback || easing || null;\r\n            easing = null;\r\n        }\r\n        params = Object(params);\r\n        ms = +ms || 0;\r\n        var p = {},\r\n            json,\r\n            attr;\r\n        for (attr in params) if (params[has](attr) && toFloat(attr) != attr && toFloat(attr) + \"%\" != attr) {\r\n            json = true;\r\n            p[attr] = params[attr];\r\n        }\r\n        if (!json) {\r\n            // if percent-like syntax is used and end-of-all animation callback used\r\n            if(callback){\r\n                // find the last one\r\n                var lastKey = 0;\r\n                for(var i in params){\r\n                    var percent = toInt(i);\r\n                    if(params[has](i) && percent > lastKey){\r\n                        lastKey = percent;\r\n                    }\r\n                }\r\n                lastKey += '%';\r\n                // if already defined callback in the last keyframe, skip\r\n                !params[lastKey].callback && (params[lastKey].callback = callback);\r\n            }\r\n          return new Animation(params, ms);\r\n        } else {\r\n            easing && (p.easing = easing);\r\n            callback && (p.callback = callback);\r\n            return new Animation({100: p}, ms);\r\n        }\r\n    };\r\n    /*\\\r\n     * Element.animate\r\n     [ method ]\r\n     **\r\n     * Creates and starts animation for given element.\r\n     **\r\n     > Parameters\r\n     **\r\n     - params (object) final attributes for the element, see also @Element.attr\r\n     - ms (number) number of milliseconds for animation to run\r\n     - easing (string) #optional easing type. Accept one of @Raphael.easing_formulas or CSS format: `cubic&#x2010;bezier(XX,&#160;XX,&#160;XX,&#160;XX)`\r\n     - callback (function) #optional callback function. Will be called at the end of animation.\r\n     * or\r\n     - animation (object) animation object, see @Raphael.animation\r\n     **\r\n     = (object) original element\r\n    \\*/\r\n    elproto.animate = function (params, ms, easing, callback) {\r\n        var element = this;\r\n        if (element.removed) {\r\n            callback && callback.call(element);\r\n            return element;\r\n        }\r\n        var anim = params instanceof Animation ? params : R.animation(params, ms, easing, callback);\r\n        runAnimation(anim, element, anim.percents[0], null, element.attr());\r\n        return element;\r\n    };\r\n    /*\\\r\n     * Element.setTime\r\n     [ method ]\r\n     **\r\n     * Sets the status of animation of the element in milliseconds. Similar to @Element.status method.\r\n     **\r\n     > Parameters\r\n     **\r\n     - anim (object) animation object\r\n     - value (number) number of milliseconds from the beginning of the animation\r\n     **\r\n     = (object) original element if `value` is specified\r\n     * Note, that during animation following events are triggered:\r\n     *\r\n     * On each animation frame event `anim.frame.<id>`, on start `anim.start.<id>` and on end `anim.finish.<id>`.\r\n    \\*/\r\n    elproto.setTime = function (anim, value) {\r\n        if (anim && value != null) {\r\n            this.status(anim, mmin(value, anim.ms) / anim.ms);\r\n        }\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.status\r\n     [ method ]\r\n     **\r\n     * Gets or sets the status of animation of the element.\r\n     **\r\n     > Parameters\r\n     **\r\n     - anim (object) #optional animation object\r\n     - value (number) #optional 0 – 1. If specified, method works like a setter and sets the status of a given animation to the value. This will cause animation to jump to the given position.\r\n     **\r\n     = (number) status\r\n     * or\r\n     = (array) status if `anim` is not specified. Array of objects in format:\r\n     o {\r\n     o     anim: (object) animation object\r\n     o     status: (number) status\r\n     o }\r\n     * or\r\n     = (object) original element if `value` is specified\r\n    \\*/\r\n    elproto.status = function (anim, value) {\r\n        var out = [],\r\n            i = 0,\r\n            len,\r\n            e;\r\n        if (value != null) {\r\n            runAnimation(anim, this, -1, mmin(value, 1));\r\n            return this;\r\n        } else {\r\n            len = animationElements.length;\r\n            for (; i < len; i++) {\r\n                e = animationElements[i];\r\n                if (e.el.id == this.id && (!anim || e.anim == anim)) {\r\n                    if (anim) {\r\n                        return e.status;\r\n                    }\r\n                    out.push({\r\n                        anim: e.anim,\r\n                        status: e.status\r\n                    });\r\n                }\r\n            }\r\n            if (anim) {\r\n                return 0;\r\n            }\r\n            return out;\r\n        }\r\n    };\r\n    /*\\\r\n     * Element.pause\r\n     [ method ]\r\n     **\r\n     * Stops animation of the element with ability to resume it later on.\r\n     **\r\n     > Parameters\r\n     **\r\n     - anim (object) #optional animation object\r\n     **\r\n     = (object) original element\r\n    \\*/\r\n    elproto.pause = function (anim) {\r\n        for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.id == this.id && (!anim || animationElements[i].anim == anim)) {\r\n            if (eve(\"raphael.anim.pause.\" + this.id, this, animationElements[i].anim) !== false) {\r\n                animationElements[i].paused = true;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.resume\r\n     [ method ]\r\n     **\r\n     * Resumes animation if it was paused with @Element.pause method.\r\n     **\r\n     > Parameters\r\n     **\r\n     - anim (object) #optional animation object\r\n     **\r\n     = (object) original element\r\n    \\*/\r\n    elproto.resume = function (anim) {\r\n        for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.id == this.id && (!anim || animationElements[i].anim == anim)) {\r\n            var e = animationElements[i];\r\n            if (eve(\"raphael.anim.resume.\" + this.id, this, e.anim) !== false) {\r\n                delete e.paused;\r\n                this.status(e.anim, e.status);\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.stop\r\n     [ method ]\r\n     **\r\n     * Stops animation of the element.\r\n     **\r\n     > Parameters\r\n     **\r\n     - anim (object) #optional animation object\r\n     **\r\n     = (object) original element\r\n    \\*/\r\n    elproto.stop = function (anim) {\r\n        for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.id == this.id && (!anim || animationElements[i].anim == anim)) {\r\n            if (eve(\"raphael.anim.stop.\" + this.id, this, animationElements[i].anim) !== false) {\r\n                animationElements.splice(i--, 1);\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    function stopAnimation(paper) {\r\n        for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.paper == paper) {\r\n            animationElements.splice(i--, 1);\r\n        }\r\n    }\r\n    eve.on(\"raphael.remove\", stopAnimation);\r\n    eve.on(\"raphael.clear\", stopAnimation);\r\n    elproto.toString = function () {\r\n        return \"Rapha\\xebl\\u2019s object\";\r\n    };\r\n\r\n    // Set\r\n    var Set = function (items) {\r\n        this.items = [];\r\n        this.length = 0;\r\n        this.type = \"set\";\r\n        if (items) {\r\n            for (var i = 0, ii = items.length; i < ii; i++) {\r\n                if (items[i] && (items[i].constructor == elproto.constructor || items[i].constructor == Set)) {\r\n                    this[this.items.length] = this.items[this.items.length] = items[i];\r\n                    this.length++;\r\n                }\r\n            }\r\n        }\r\n    },\r\n    setproto = Set.prototype;\r\n    /*\\\r\n     * Set.push\r\n     [ method ]\r\n     **\r\n     * Adds each argument to the current set.\r\n     = (object) original element\r\n    \\*/\r\n    setproto.push = function () {\r\n        var item,\r\n            len;\r\n        for (var i = 0, ii = arguments.length; i < ii; i++) {\r\n            item = arguments[i];\r\n            if (item && (item.constructor == elproto.constructor || item.constructor == Set)) {\r\n                len = this.items.length;\r\n                this[len] = this.items[len] = item;\r\n                this.length++;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Set.pop\r\n     [ method ]\r\n     **\r\n     * Removes last element and returns it.\r\n     = (object) element\r\n    \\*/\r\n    setproto.pop = function () {\r\n        this.length && delete this[this.length--];\r\n        return this.items.pop();\r\n    };\r\n    /*\\\r\n     * Set.forEach\r\n     [ method ]\r\n     **\r\n     * Executes given function for each element in the set.\r\n     *\r\n     * If function returns `false` it will stop loop running.\r\n     **\r\n     > Parameters\r\n     **\r\n     - callback (function) function to run\r\n     - thisArg (object) context object for the callback\r\n     = (object) Set object\r\n    \\*/\r\n    setproto.forEach = function (callback, thisArg) {\r\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\r\n            if (callback.call(thisArg, this.items[i], i) === false) {\r\n                return this;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    for (var method in elproto) if (elproto[has](method)) {\r\n        setproto[method] = (function (methodname) {\r\n            return function () {\r\n                var arg = arguments;\r\n                return this.forEach(function (el) {\r\n                    el[methodname][apply](el, arg);\r\n                });\r\n            };\r\n        })(method);\r\n    }\r\n    setproto.attr = function (name, value) {\r\n        if (name && R.is(name, array) && R.is(name[0], \"object\")) {\r\n            for (var j = 0, jj = name.length; j < jj; j++) {\r\n                this.items[j].attr(name[j]);\r\n            }\r\n        } else {\r\n            for (var i = 0, ii = this.items.length; i < ii; i++) {\r\n                this.items[i].attr(name, value);\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Set.clear\r\n     [ method ]\r\n     **\r\n     * Removes all elements from the set\r\n    \\*/\r\n    setproto.clear = function () {\r\n        while (this.length) {\r\n            this.pop();\r\n        }\r\n    };\r\n    /*\\\r\n     * Set.splice\r\n     [ method ]\r\n     **\r\n     * Removes given element from the set\r\n     **\r\n     > Parameters\r\n     **\r\n     - index (number) position of the deletion\r\n     - count (number) number of element to remove\r\n     - insertion… (object) #optional elements to insert\r\n     = (object) set elements that were deleted\r\n    \\*/\r\n    setproto.splice = function (index, count, insertion) {\r\n        index = index < 0 ? mmax(this.length + index, 0) : index;\r\n        count = mmax(0, mmin(this.length - index, count));\r\n        var tail = [],\r\n            todel = [],\r\n            args = [],\r\n            i;\r\n        for (i = 2; i < arguments.length; i++) {\r\n            args.push(arguments[i]);\r\n        }\r\n        for (i = 0; i < count; i++) {\r\n            todel.push(this[index + i]);\r\n        }\r\n        for (; i < this.length - index; i++) {\r\n            tail.push(this[index + i]);\r\n        }\r\n        var arglen = args.length;\r\n        for (i = 0; i < arglen + tail.length; i++) {\r\n            this.items[index + i] = this[index + i] = i < arglen ? args[i] : tail[i - arglen];\r\n        }\r\n        i = this.items.length = this.length -= count - arglen;\r\n        while (this[i]) {\r\n            delete this[i++];\r\n        }\r\n        return new Set(todel);\r\n    };\r\n    /*\\\r\n     * Set.exclude\r\n     [ method ]\r\n     **\r\n     * Removes given element from the set\r\n     **\r\n     > Parameters\r\n     **\r\n     - element (object) element to remove\r\n     = (boolean) `true` if object was found & removed from the set\r\n    \\*/\r\n    setproto.exclude = function (el) {\r\n        for (var i = 0, ii = this.length; i < ii; i++) if (this[i] == el) {\r\n            this.splice(i, 1);\r\n            return true;\r\n        }\r\n    };\r\n    setproto.animate = function (params, ms, easing, callback) {\r\n        (R.is(easing, \"function\") || !easing) && (callback = easing || null);\r\n        var len = this.items.length,\r\n            i = len,\r\n            item,\r\n            set = this,\r\n            collector;\r\n        if (!len) {\r\n            return this;\r\n        }\r\n        callback && (collector = function () {\r\n            !--len && callback.call(set);\r\n        });\r\n        easing = R.is(easing, string) ? easing : collector;\r\n        var anim = R.animation(params, ms, easing, collector);\r\n        item = this.items[--i].animate(anim);\r\n        while (i--) {\r\n            this.items[i] && !this.items[i].removed && this.items[i].animateWith(item, anim, anim);\r\n            (this.items[i] && !this.items[i].removed) || len--;\r\n        }\r\n        return this;\r\n    };\r\n    setproto.insertAfter = function (el) {\r\n        var i = this.items.length;\r\n        while (i--) {\r\n            this.items[i].insertAfter(el);\r\n        }\r\n        return this;\r\n    };\r\n    setproto.getBBox = function () {\r\n        var x = [],\r\n            y = [],\r\n            x2 = [],\r\n            y2 = [];\r\n        for (var i = this.items.length; i--;) if (!this.items[i].removed) {\r\n            var box = this.items[i].getBBox();\r\n            x.push(box.x);\r\n            y.push(box.y);\r\n            x2.push(box.x + box.width);\r\n            y2.push(box.y + box.height);\r\n        }\r\n        x = mmin[apply](0, x);\r\n        y = mmin[apply](0, y);\r\n        x2 = mmax[apply](0, x2);\r\n        y2 = mmax[apply](0, y2);\r\n        return {\r\n            x: x,\r\n            y: y,\r\n            x2: x2,\r\n            y2: y2,\r\n            width: x2 - x,\r\n            height: y2 - y\r\n        };\r\n    };\r\n    setproto.clone = function (s) {\r\n        s = this.paper.set();\r\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\r\n            s.push(this.items[i].clone());\r\n        }\r\n        return s;\r\n    };\r\n    setproto.toString = function () {\r\n        return \"Rapha\\xebl\\u2018s set\";\r\n    };\r\n\r\n    setproto.glow = function(glowConfig) {\r\n        var ret = this.paper.set();\r\n        this.forEach(function(shape, index){\r\n            var g = shape.glow(glowConfig);\r\n            if(g != null){\r\n                g.forEach(function(shape2, index2){\r\n                    ret.push(shape2);\r\n                });\r\n            }\r\n        });\r\n        return ret;\r\n    };\r\n\r\n\r\n    /*\\\r\n     * Set.isPointInside\r\n     [ method ]\r\n     **\r\n     * Determine if given point is inside this set’s elements\r\n     **\r\n     > Parameters\r\n     **\r\n     - x (number) x coordinate of the point\r\n     - y (number) y coordinate of the point\r\n     = (boolean) `true` if point is inside any of the set's elements\r\n     \\*/\r\n    setproto.isPointInside = function (x, y) {\r\n        var isPointInside = false;\r\n        this.forEach(function (el) {\r\n            if (el.isPointInside(x, y)) {\r\n                isPointInside = true;\r\n                return false; // stop loop\r\n            }\r\n        });\r\n        return isPointInside;\r\n    };\r\n\r\n    /*\\\r\n     * Raphael.registerFont\r\n     [ method ]\r\n     **\r\n     * Adds given font to the registered set of fonts for Raphaël. Should be used as an internal call from within Cufón’s font file.\r\n     * Returns original parameter, so it could be used with chaining.\r\n     # <a href=\"http://wiki.github.com/sorccu/cufon/about\">More about Cufón and how to convert your font form TTF, OTF, etc to JavaScript file.</a>\r\n     **\r\n     > Parameters\r\n     **\r\n     - font (object) the font to register\r\n     = (object) the font you passed in\r\n     > Usage\r\n     | Cufon.registerFont(Raphael.registerFont({…}));\r\n    \\*/\r\n    R.registerFont = function (font) {\r\n        if (!font.face) {\r\n            return font;\r\n        }\r\n        this.fonts = this.fonts || {};\r\n        var fontcopy = {\r\n                w: font.w,\r\n                face: {},\r\n                glyphs: {}\r\n            },\r\n            family = font.face[\"font-family\"];\r\n        for (var prop in font.face) if (font.face[has](prop)) {\r\n            fontcopy.face[prop] = font.face[prop];\r\n        }\r\n        if (this.fonts[family]) {\r\n            this.fonts[family].push(fontcopy);\r\n        } else {\r\n            this.fonts[family] = [fontcopy];\r\n        }\r\n        if (!font.svg) {\r\n            fontcopy.face[\"units-per-em\"] = toInt(font.face[\"units-per-em\"], 10);\r\n            for (var glyph in font.glyphs) if (font.glyphs[has](glyph)) {\r\n                var path = font.glyphs[glyph];\r\n                fontcopy.glyphs[glyph] = {\r\n                    w: path.w,\r\n                    k: {},\r\n                    d: path.d && \"M\" + path.d.replace(/[mlcxtrv]/g, function (command) {\r\n                            return {l: \"L\", c: \"C\", x: \"z\", t: \"m\", r: \"l\", v: \"c\"}[command] || \"M\";\r\n                        }) + \"z\"\r\n                };\r\n                if (path.k) {\r\n                    for (var k in path.k) if (path[has](k)) {\r\n                        fontcopy.glyphs[glyph].k[k] = path.k[k];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return font;\r\n    };\r\n    /*\\\r\n     * Paper.getFont\r\n     [ method ]\r\n     **\r\n     * Finds font object in the registered fonts by given parameters. You could specify only one word from the font name, like “Myriad” for “Myriad Pro”.\r\n     **\r\n     > Parameters\r\n     **\r\n     - family (string) font family name or any word from it\r\n     - weight (string) #optional font weight\r\n     - style (string) #optional font style\r\n     - stretch (string) #optional font stretch\r\n     = (object) the font object\r\n     > Usage\r\n     | paper.print(100, 100, \"Test string\", paper.getFont(\"Times\", 800), 30);\r\n    \\*/\r\n    paperproto.getFont = function (family, weight, style, stretch) {\r\n        stretch = stretch || \"normal\";\r\n        style = style || \"normal\";\r\n        weight = +weight || {normal: 400, bold: 700, lighter: 300, bolder: 800}[weight] || 400;\r\n        if (!R.fonts) {\r\n            return;\r\n        }\r\n        var font = R.fonts[family];\r\n        if (!font) {\r\n            var name = new RegExp(\"(^|\\\\s)\" + family.replace(/[^\\w\\d\\s+!~.:_-]/g, E) + \"(\\\\s|$)\", \"i\");\r\n            for (var fontName in R.fonts) if (R.fonts[has](fontName)) {\r\n                if (name.test(fontName)) {\r\n                    font = R.fonts[fontName];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        var thefont;\r\n        if (font) {\r\n            for (var i = 0, ii = font.length; i < ii; i++) {\r\n                thefont = font[i];\r\n                if (thefont.face[\"font-weight\"] == weight && (thefont.face[\"font-style\"] == style || !thefont.face[\"font-style\"]) && thefont.face[\"font-stretch\"] == stretch) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return thefont;\r\n    };\r\n    /*\\\r\n     * Paper.print\r\n     [ method ]\r\n     **\r\n     * Creates path that represent given text written using given font at given position with given size.\r\n     * Result of the method is path element that contains whole text as a separate path.\r\n     **\r\n     > Parameters\r\n     **\r\n     - x (number) x position of the text\r\n     - y (number) y position of the text\r\n     - string (string) text to print\r\n     - font (object) font object, see @Paper.getFont\r\n     - size (number) #optional size of the font, default is `16`\r\n     - origin (string) #optional could be `\"baseline\"` or `\"middle\"`, default is `\"middle\"`\r\n     - letter_spacing (number) #optional number in range `-1..1`, default is `0`\r\n     - line_spacing (number) #optional number in range `1..3`, default is `1`\r\n     = (object) resulting path element, which consist of all letters\r\n     > Usage\r\n     | var txt = r.print(10, 50, \"print\", r.getFont(\"Museo\"), 30).attr({fill: \"#fff\"});\r\n    \\*/\r\n    paperproto.print = function (x, y, string, font, size, origin, letter_spacing, line_spacing) {\r\n        origin = origin || \"middle\"; // baseline|middle\r\n        letter_spacing = mmax(mmin(letter_spacing || 0, 1), -1);\r\n        line_spacing = mmax(mmin(line_spacing || 1, 3), 1);\r\n        var letters = Str(string)[split](E),\r\n            shift = 0,\r\n            notfirst = 0,\r\n            path = E,\r\n            scale;\r\n        R.is(font, \"string\") && (font = this.getFont(font));\r\n        if (font) {\r\n            scale = (size || 16) / font.face[\"units-per-em\"];\r\n            var bb = font.face.bbox[split](separator),\r\n                top = +bb[0],\r\n                lineHeight = bb[3] - bb[1],\r\n                shifty = 0,\r\n                height = +bb[1] + (origin == \"baseline\" ? lineHeight + (+font.face.descent) : lineHeight / 2);\r\n            for (var i = 0, ii = letters.length; i < ii; i++) {\r\n                if (letters[i] == \"\\n\") {\r\n                    shift = 0;\r\n                    curr = 0;\r\n                    notfirst = 0;\r\n                    shifty += lineHeight * line_spacing;\r\n                } else {\r\n                    var prev = notfirst && font.glyphs[letters[i - 1]] || {},\r\n                        curr = font.glyphs[letters[i]];\r\n                    shift += notfirst ? (prev.w || font.w) + (prev.k && prev.k[letters[i]] || 0) + (font.w * letter_spacing) : 0;\r\n                    notfirst = 1;\r\n                }\r\n                if (curr && curr.d) {\r\n                    path += R.transformPath(curr.d, [\"t\", shift * scale, shifty * scale, \"s\", scale, scale, top, height, \"t\", (x - top) / scale, (y - height) / scale]);\r\n                }\r\n            }\r\n        }\r\n        return this.path(path).attr({\r\n            fill: \"#000\",\r\n            stroke: \"none\"\r\n        });\r\n    };\r\n\r\n    /*\\\r\n     * Paper.add\r\n     [ method ]\r\n     **\r\n     * Imports elements in JSON array in format `{type: type, <attributes>}`\r\n     **\r\n     > Parameters\r\n     **\r\n     - json (array)\r\n     = (object) resulting set of imported elements\r\n     > Usage\r\n     | paper.add([\r\n     |     {\r\n     |         type: \"circle\",\r\n     |         cx: 10,\r\n     |         cy: 10,\r\n     |         r: 5\r\n     |     },\r\n     |     {\r\n     |         type: \"rect\",\r\n     |         x: 10,\r\n     |         y: 10,\r\n     |         width: 10,\r\n     |         height: 10,\r\n     |         fill: \"#fc0\"\r\n     |     }\r\n     | ]);\r\n    \\*/\r\n    paperproto.add = function (json) {\r\n        if (R.is(json, \"array\")) {\r\n            var res = this.set(),\r\n                i = 0,\r\n                ii = json.length,\r\n                j;\r\n            for (; i < ii; i++) {\r\n                j = json[i] || {};\r\n                elements[has](j.type) && res.push(this[j.type]().attr(j));\r\n            }\r\n        }\r\n        return res;\r\n    };\r\n\r\n    /*\\\r\n     * Raphael.format\r\n     [ method ]\r\n     **\r\n     * Simple format function. Replaces construction of type “`{<number>}`” to the corresponding argument.\r\n     **\r\n     > Parameters\r\n     **\r\n     - token (string) string to format\r\n     - … (string) rest of arguments will be treated as parameters for replacement\r\n     = (string) formated string\r\n     > Usage\r\n     | var x = 10,\r\n     |     y = 20,\r\n     |     width = 40,\r\n     |     height = 50;\r\n     | // this will draw a rectangular shape equivalent to \"M10,20h40v50h-40z\"\r\n     | paper.path(Raphael.format(\"M{0},{1}h{2}v{3}h{4}z\", x, y, width, height, -width));\r\n    \\*/\r\n    R.format = function (token, params) {\r\n        var args = R.is(params, array) ? [0][concat](params) : arguments;\r\n        token && R.is(token, string) && args.length - 1 && (token = token.replace(formatrg, function (str, i) {\r\n            return args[++i] == null ? E : args[i];\r\n        }));\r\n        return token || E;\r\n    };\r\n    /*\\\r\n     * Raphael.fullfill\r\n     [ method ]\r\n     **\r\n     * A little bit more advanced format function than @Raphael.format. Replaces construction of type “`{<name>}`” to the corresponding argument.\r\n     **\r\n     > Parameters\r\n     **\r\n     - token (string) string to format\r\n     - json (object) object which properties will be used as a replacement\r\n     = (string) formated string\r\n     > Usage\r\n     | // this will draw a rectangular shape equivalent to \"M10,20h40v50h-40z\"\r\n     | paper.path(Raphael.fullfill(\"M{x},{y}h{dim.width}v{dim.height}h{dim['negative width']}z\", {\r\n     |     x: 10,\r\n     |     y: 20,\r\n     |     dim: {\r\n     |         width: 40,\r\n     |         height: 50,\r\n     |         \"negative width\": -40\r\n     |     }\r\n     | }));\r\n    \\*/\r\n    R.fullfill = (function () {\r\n        var tokenRegex = /\\{([^\\}]+)\\}/g,\r\n            objNotationRegex = /(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g, // matches .xxxxx or [\"xxxxx\"] to run over object properties\r\n            replacer = function (all, key, obj) {\r\n                var res = obj;\r\n                key.replace(objNotationRegex, function (all, name, quote, quotedName, isFunc) {\r\n                    name = name || quotedName;\r\n                    if (res) {\r\n                        if (name in res) {\r\n                            res = res[name];\r\n                        }\r\n                        typeof res == \"function\" && isFunc && (res = res());\r\n                    }\r\n                });\r\n                res = (res == null || res == obj ? all : res) + \"\";\r\n                return res;\r\n            };\r\n        return function (str, obj) {\r\n            return String(str).replace(tokenRegex, function (all, key) {\r\n                return replacer(all, key, obj);\r\n            });\r\n        };\r\n    })();\r\n    /*\\\r\n     * Raphael.ninja\r\n     [ method ]\r\n     **\r\n     * If you want to leave no trace of Raphaël (Well, Raphaël creates only one global variable `Raphael`, but anyway.) You can use `ninja` method.\r\n     * Beware, that in this case plugins could stop working, because they are depending on global variable existance.\r\n     **\r\n     = (object) Raphael object\r\n     > Usage\r\n     | (function (local_raphael) {\r\n     |     var paper = local_raphael(10, 10, 320, 200);\r\n     |     …\r\n     | })(Raphael.ninja());\r\n    \\*/\r\n    R.ninja = function () {\r\n        oldRaphael.was ? (g.win.Raphael = oldRaphael.is) : delete Raphael;\r\n        return R;\r\n    };\r\n    /*\\\r\n     * Raphael.st\r\n     [ property (object) ]\r\n     **\r\n     * You can add your own method to elements and sets. It is wise to add a set method for each element method\r\n     * you added, so you will be able to call the same method on sets too.\r\n     **\r\n     * See also @Raphael.el.\r\n     > Usage\r\n     | Raphael.el.red = function () {\r\n     |     this.attr({fill: \"#f00\"});\r\n     | };\r\n     | Raphael.st.red = function () {\r\n     |     this.forEach(function (el) {\r\n     |         el.red();\r\n     |     });\r\n     | };\r\n     | // then use it\r\n     | paper.set(paper.circle(100, 100, 20), paper.circle(110, 100, 20)).red();\r\n    \\*/\r\n    R.st = setproto;\r\n\r\n    eve.on(\"raphael.DOMload\", function () {\r\n        loaded = true;\r\n    });\r\n\r\n    // Firefox <3.6 fix: http://webreflection.blogspot.com/2009/11/195-chars-to-help-lazy-loading.html\r\n    (function (doc, loaded, f) {\r\n        if (doc.readyState == null && doc.addEventListener){\r\n            doc.addEventListener(loaded, f = function () {\r\n                doc.removeEventListener(loaded, f, false);\r\n                doc.readyState = \"complete\";\r\n            }, false);\r\n            doc.readyState = \"loading\";\r\n        }\r\n        function isLoaded() {\r\n            (/in/).test(doc.readyState) ? setTimeout(isLoaded, 9) : R.eve(\"raphael.DOMload\");\r\n        }\r\n        isLoaded();\r\n    })(document, \"DOMContentLoaded\");\r\n\r\n// ┌─────────────────────────────────────────────────────────────────────┐ \\\\\r\n// │ Raphaël - JavaScript Vector Library                                 │ \\\\\r\n// ├─────────────────────────────────────────────────────────────────────┤ \\\\\r\n// │ SVG Module                                                          │ \\\\\r\n// ├─────────────────────────────────────────────────────────────────────┤ \\\\\r\n// │ Copyright (c) 2008-2011 Dmitry Baranovskiy (http://raphaeljs.com)   │ \\\\\r\n// │ Copyright (c) 2008-2011 Sencha Labs (http://sencha.com)             │ \\\\\r\n// │ Licensed under the MIT (http://raphaeljs.com/license.html) license. │ \\\\\r\n// └─────────────────────────────────────────────────────────────────────┘ \\\\\r\n\r\n(function(){\r\n    if (!R.svg) {\r\n        return;\r\n    }\r\n    var has = \"hasOwnProperty\",\r\n        Str = String,\r\n        toFloat = parseFloat,\r\n        toInt = parseInt,\r\n        math = Math,\r\n        mmax = math.max,\r\n        abs = math.abs,\r\n        pow = math.pow,\r\n        separator = /[, ]+/,\r\n        eve = R.eve,\r\n        E = \"\",\r\n        S = \" \";\r\n    var xlink = \"http://www.w3.org/1999/xlink\",\r\n        markers = {\r\n            block: \"M5,0 0,2.5 5,5z\",\r\n            classic: \"M5,0 0,2.5 5,5 3.5,3 3.5,2z\",\r\n            diamond: \"M2.5,0 5,2.5 2.5,5 0,2.5z\",\r\n            open: \"M6,1 1,3.5 6,6\",\r\n            oval: \"M2.5,0A2.5,2.5,0,0,1,2.5,5 2.5,2.5,0,0,1,2.5,0z\"\r\n        },\r\n        markerCounter = {};\r\n    R.toString = function () {\r\n        return  \"Your browser supports SVG.\\nYou are running Rapha\\xebl \" + this.version;\r\n    };\r\n    var $ = function (el, attr) {\r\n        if (attr) {\r\n            if (typeof el == \"string\") {\r\n                el = $(el);\r\n            }\r\n            for (var key in attr) if (attr[has](key)) {\r\n                if (key.substring(0, 6) == \"xlink:\") {\r\n                    el.setAttributeNS(xlink, key.substring(6), Str(attr[key]));\r\n                } else {\r\n                    el.setAttribute(key, Str(attr[key]));\r\n                }\r\n            }\r\n        } else {\r\n            el = R._g.doc.createElementNS(\"http://www.w3.org/2000/svg\", el);\r\n            el.style && (el.style.webkitTapHighlightColor = \"rgba(0,0,0,0)\");\r\n        }\r\n        return el;\r\n    },\r\n    addGradientFill = function (element, gradient) {\r\n        var type = \"linear\",\r\n            id = element.id + gradient,\r\n            fx = .5, fy = .5,\r\n            o = element.node,\r\n            SVG = element.paper,\r\n            s = o.style,\r\n            el = R._g.doc.getElementById(id);\r\n        if (!el) {\r\n            gradient = Str(gradient).replace(R._radial_gradient, function (all, _fx, _fy) {\r\n                type = \"radial\";\r\n                if (_fx && _fy) {\r\n                    fx = toFloat(_fx);\r\n                    fy = toFloat(_fy);\r\n                    var dir = ((fy > .5) * 2 - 1);\r\n                    pow(fx - .5, 2) + pow(fy - .5, 2) > .25 &&\r\n                        (fy = math.sqrt(.25 - pow(fx - .5, 2)) * dir + .5) &&\r\n                        fy != .5 &&\r\n                        (fy = fy.toFixed(5) - 1e-5 * dir);\r\n                }\r\n                return E;\r\n            });\r\n            gradient = gradient.split(/\\s*\\-\\s*/);\r\n            if (type == \"linear\") {\r\n                var angle = gradient.shift();\r\n                angle = -toFloat(angle);\r\n                if (isNaN(angle)) {\r\n                    return null;\r\n                }\r\n                var vector = [0, 0, math.cos(R.rad(angle)), math.sin(R.rad(angle))],\r\n                    max = 1 / (mmax(abs(vector[2]), abs(vector[3])) || 1);\r\n                vector[2] *= max;\r\n                vector[3] *= max;\r\n                if (vector[2] < 0) {\r\n                    vector[0] = -vector[2];\r\n                    vector[2] = 0;\r\n                }\r\n                if (vector[3] < 0) {\r\n                    vector[1] = -vector[3];\r\n                    vector[3] = 0;\r\n                }\r\n            }\r\n            var dots = R._parseDots(gradient);\r\n            if (!dots) {\r\n                return null;\r\n            }\r\n            id = id.replace(/[\\(\\)\\s,\\xb0#]/g, \"_\");\r\n\r\n            if (element.gradient && id != element.gradient.id) {\r\n                SVG.defs.removeChild(element.gradient);\r\n                delete element.gradient;\r\n            }\r\n\r\n            if (!element.gradient) {\r\n                el = $(type + \"Gradient\", {id: id});\r\n                element.gradient = el;\r\n                $(el, type == \"radial\" ? {\r\n                    fx: fx,\r\n                    fy: fy\r\n                } : {\r\n                    x1: vector[0],\r\n                    y1: vector[1],\r\n                    x2: vector[2],\r\n                    y2: vector[3],\r\n                    gradientTransform: element.matrix.invert()\r\n                });\r\n                SVG.defs.appendChild(el);\r\n                for (var i = 0, ii = dots.length; i < ii; i++) {\r\n                    el.appendChild($(\"stop\", {\r\n                        offset: dots[i].offset ? dots[i].offset : i ? \"100%\" : \"0%\",\r\n                        \"stop-color\": dots[i].color || \"#fff\"\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n        $(o, {\r\n            fill: \"url('\" + document.location + \"#\" + id + \"')\",\r\n            opacity: 1,\r\n            \"fill-opacity\": 1\r\n        });\r\n        s.fill = E;\r\n        s.opacity = 1;\r\n        s.fillOpacity = 1;\r\n        return 1;\r\n    },\r\n    updatePosition = function (o) {\r\n        var bbox = o.getBBox(1);\r\n        $(o.pattern, {patternTransform: o.matrix.invert() + \" translate(\" + bbox.x + \",\" + bbox.y + \")\"});\r\n    },\r\n    addArrow = function (o, value, isEnd) {\r\n        if (o.type == \"path\") {\r\n            var values = Str(value).toLowerCase().split(\"-\"),\r\n                p = o.paper,\r\n                se = isEnd ? \"end\" : \"start\",\r\n                node = o.node,\r\n                attrs = o.attrs,\r\n                stroke = attrs[\"stroke-width\"],\r\n                i = values.length,\r\n                type = \"classic\",\r\n                from,\r\n                to,\r\n                dx,\r\n                refX,\r\n                attr,\r\n                w = 3,\r\n                h = 3,\r\n                t = 5;\r\n            while (i--) {\r\n                switch (values[i]) {\r\n                    case \"block\":\r\n                    case \"classic\":\r\n                    case \"oval\":\r\n                    case \"diamond\":\r\n                    case \"open\":\r\n                    case \"none\":\r\n                        type = values[i];\r\n                        break;\r\n                    case \"wide\": h = 5; break;\r\n                    case \"narrow\": h = 2; break;\r\n                    case \"long\": w = 5; break;\r\n                    case \"short\": w = 2; break;\r\n                }\r\n            }\r\n            if (type == \"open\") {\r\n                w += 2;\r\n                h += 2;\r\n                t += 2;\r\n                dx = 1;\r\n                refX = isEnd ? 4 : 1;\r\n                attr = {\r\n                    fill: \"none\",\r\n                    stroke: attrs.stroke\r\n                };\r\n            } else {\r\n                refX = dx = w / 2;\r\n                attr = {\r\n                    fill: attrs.stroke,\r\n                    stroke: \"none\"\r\n                };\r\n            }\r\n            if (o._.arrows) {\r\n                if (isEnd) {\r\n                    o._.arrows.endPath && markerCounter[o._.arrows.endPath]--;\r\n                    o._.arrows.endMarker && markerCounter[o._.arrows.endMarker]--;\r\n                } else {\r\n                    o._.arrows.startPath && markerCounter[o._.arrows.startPath]--;\r\n                    o._.arrows.startMarker && markerCounter[o._.arrows.startMarker]--;\r\n                }\r\n            } else {\r\n                o._.arrows = {};\r\n            }\r\n            if (type != \"none\") {\r\n                var pathId = \"raphael-marker-\" + type,\r\n                    markerId = \"raphael-marker-\" + se + type + w + h + \"-obj\" + o.id;\r\n                if (!R._g.doc.getElementById(pathId)) {\r\n                    p.defs.appendChild($($(\"path\"), {\r\n                        \"stroke-linecap\": \"round\",\r\n                        d: markers[type],\r\n                        id: pathId\r\n                    }));\r\n                    markerCounter[pathId] = 1;\r\n                } else {\r\n                    markerCounter[pathId]++;\r\n                }\r\n                var marker = R._g.doc.getElementById(markerId),\r\n                    use;\r\n                if (!marker) {\r\n                    marker = $($(\"marker\"), {\r\n                        id: markerId,\r\n                        markerHeight: h,\r\n                        markerWidth: w,\r\n                        orient: \"auto\",\r\n                        refX: refX,\r\n                        refY: h / 2\r\n                    });\r\n                    use = $($(\"use\"), {\r\n                        \"xlink:href\": \"#\" + pathId,\r\n                        transform: (isEnd ? \"rotate(180 \" + w / 2 + \" \" + h / 2 + \") \" : E) + \"scale(\" + w / t + \",\" + h / t + \")\",\r\n                        \"stroke-width\": (1 / ((w / t + h / t) / 2)).toFixed(4)\r\n                    });\r\n                    marker.appendChild(use);\r\n                    p.defs.appendChild(marker);\r\n                    markerCounter[markerId] = 1;\r\n                } else {\r\n                    markerCounter[markerId]++;\r\n                    use = marker.getElementsByTagName(\"use\")[0];\r\n                }\r\n                $(use, attr);\r\n                var delta = dx * (type != \"diamond\" && type != \"oval\");\r\n                if (isEnd) {\r\n                    from = o._.arrows.startdx * stroke || 0;\r\n                    to = R.getTotalLength(attrs.path) - delta * stroke;\r\n                } else {\r\n                    from = delta * stroke;\r\n                    to = R.getTotalLength(attrs.path) - (o._.arrows.enddx * stroke || 0);\r\n                }\r\n                attr = {};\r\n                attr[\"marker-\" + se] = \"url(#\" + markerId + \")\";\r\n                if (to || from) {\r\n                    attr.d = R.getSubpath(attrs.path, from, to);\r\n                }\r\n                $(node, attr);\r\n                o._.arrows[se + \"Path\"] = pathId;\r\n                o._.arrows[se + \"Marker\"] = markerId;\r\n                o._.arrows[se + \"dx\"] = delta;\r\n                o._.arrows[se + \"Type\"] = type;\r\n                o._.arrows[se + \"String\"] = value;\r\n            } else {\r\n                if (isEnd) {\r\n                    from = o._.arrows.startdx * stroke || 0;\r\n                    to = R.getTotalLength(attrs.path) - from;\r\n                } else {\r\n                    from = 0;\r\n                    to = R.getTotalLength(attrs.path) - (o._.arrows.enddx * stroke || 0);\r\n                }\r\n                o._.arrows[se + \"Path\"] && $(node, {d: R.getSubpath(attrs.path, from, to)});\r\n                delete o._.arrows[se + \"Path\"];\r\n                delete o._.arrows[se + \"Marker\"];\r\n                delete o._.arrows[se + \"dx\"];\r\n                delete o._.arrows[se + \"Type\"];\r\n                delete o._.arrows[se + \"String\"];\r\n            }\r\n            for (attr in markerCounter) if (markerCounter[has](attr) && !markerCounter[attr]) {\r\n                var item = R._g.doc.getElementById(attr);\r\n                item && item.parentNode.removeChild(item);\r\n            }\r\n        }\r\n    },\r\n    dasharray = {\r\n        \"-\": [3, 1],\r\n        \".\": [1, 1],\r\n        \"-.\": [3, 1, 1, 1],\r\n        \"-..\": [3, 1, 1, 1, 1, 1],\r\n        \". \": [1, 3],\r\n        \"- \": [4, 3],\r\n        \"--\": [8, 3],\r\n        \"- .\": [4, 3, 1, 3],\r\n        \"--.\": [8, 3, 1, 3],\r\n        \"--..\": [8, 3, 1, 3, 1, 3]\r\n    },\r\n    addDashes = function (o, value, params) {\r\n        value = dasharray[Str(value).toLowerCase()];\r\n        if (value) {\r\n            var width = o.attrs[\"stroke-width\"] || \"1\",\r\n                butt = {round: width, square: width, butt: 0}[o.attrs[\"stroke-linecap\"] || params[\"stroke-linecap\"]] || 0,\r\n                dashes = [],\r\n                i = value.length;\r\n            while (i--) {\r\n                dashes[i] = value[i] * width + ((i % 2) ? 1 : -1) * butt;\r\n            }\r\n            $(o.node, {\"stroke-dasharray\": dashes.join(\",\")});\r\n        }\r\n        else {\r\n          $(o.node, {\"stroke-dasharray\": \"none\"});\r\n        }\r\n    },\r\n    setFillAndStroke = function (o, params) {\r\n        var node = o.node,\r\n            attrs = o.attrs,\r\n            vis = node.style.visibility;\r\n        node.style.visibility = \"hidden\";\r\n        for (var att in params) {\r\n            if (params[has](att)) {\r\n                if (!R._availableAttrs[has](att)) {\r\n                    continue;\r\n                }\r\n                var value = params[att];\r\n                attrs[att] = value;\r\n                switch (att) {\r\n                    case \"blur\":\r\n                        o.blur(value);\r\n                        break;\r\n                    case \"title\":\r\n                        var title = node.getElementsByTagName(\"title\");\r\n\r\n                        // Use the existing <title>.\r\n                        if (title.length && (title = title[0])) {\r\n                          title.firstChild.nodeValue = value;\r\n                        } else {\r\n                          title = $(\"title\");\r\n                          var val = R._g.doc.createTextNode(value);\r\n                          title.appendChild(val);\r\n                          node.appendChild(title);\r\n                        }\r\n                        break;\r\n                    case \"href\":\r\n                    case \"target\":\r\n                        var pn = node.parentNode;\r\n                        if (pn.tagName.toLowerCase() != \"a\") {\r\n                            var hl = $(\"a\");\r\n                            pn.insertBefore(hl, node);\r\n                            hl.appendChild(node);\r\n                            pn = hl;\r\n                        }\r\n                        if (att == \"target\") {\r\n                            pn.setAttributeNS(xlink, \"show\", value == \"blank\" ? \"new\" : value);\r\n                        } else {\r\n                            pn.setAttributeNS(xlink, att, value);\r\n                        }\r\n                        break;\r\n                    case \"cursor\":\r\n                        node.style.cursor = value;\r\n                        break;\r\n                    case \"transform\":\r\n                        o.transform(value);\r\n                        break;\r\n                    case \"arrow-start\":\r\n                        addArrow(o, value);\r\n                        break;\r\n                    case \"arrow-end\":\r\n                        addArrow(o, value, 1);\r\n                        break;\r\n                    case \"clip-rect\":\r\n                        var rect = Str(value).split(separator);\r\n                        if (rect.length == 4) {\r\n                            o.clip && o.clip.parentNode.parentNode.removeChild(o.clip.parentNode);\r\n                            var el = $(\"clipPath\"),\r\n                                rc = $(\"rect\");\r\n                            el.id = R.createUUID();\r\n                            $(rc, {\r\n                                x: rect[0],\r\n                                y: rect[1],\r\n                                width: rect[2],\r\n                                height: rect[3]\r\n                            });\r\n                            el.appendChild(rc);\r\n                            o.paper.defs.appendChild(el);\r\n                            $(node, {\"clip-path\": \"url(#\" + el.id + \")\"});\r\n                            o.clip = rc;\r\n                        }\r\n                        if (!value) {\r\n                            var path = node.getAttribute(\"clip-path\");\r\n                            if (path) {\r\n                                var clip = R._g.doc.getElementById(path.replace(/(^url\\(#|\\)$)/g, E));\r\n                                clip && clip.parentNode.removeChild(clip);\r\n                                $(node, {\"clip-path\": E});\r\n                                delete o.clip;\r\n                            }\r\n                        }\r\n                    break;\r\n                    case \"path\":\r\n                        if (o.type == \"path\") {\r\n                            $(node, {d: value ? attrs.path = R._pathToAbsolute(value) : \"M0,0\"});\r\n                            o._.dirty = 1;\r\n                            if (o._.arrows) {\r\n                                \"startString\" in o._.arrows && addArrow(o, o._.arrows.startString);\r\n                                \"endString\" in o._.arrows && addArrow(o, o._.arrows.endString, 1);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"width\":\r\n                        node.setAttribute(att, value);\r\n                        o._.dirty = 1;\r\n                        if (attrs.fx) {\r\n                            att = \"x\";\r\n                            value = attrs.x;\r\n                        } else {\r\n                            break;\r\n                        }\r\n                    case \"x\":\r\n                        if (attrs.fx) {\r\n                            value = -attrs.x - (attrs.width || 0);\r\n                        }\r\n                    case \"rx\":\r\n                        if (att == \"rx\" && o.type == \"rect\") {\r\n                            break;\r\n                        }\r\n                    case \"cx\":\r\n                        node.setAttribute(att, value);\r\n                        o.pattern && updatePosition(o);\r\n                        o._.dirty = 1;\r\n                        break;\r\n                    case \"height\":\r\n                        node.setAttribute(att, value);\r\n                        o._.dirty = 1;\r\n                        if (attrs.fy) {\r\n                            att = \"y\";\r\n                            value = attrs.y;\r\n                        } else {\r\n                            break;\r\n                        }\r\n                    case \"y\":\r\n                        if (attrs.fy) {\r\n                            value = -attrs.y - (attrs.height || 0);\r\n                        }\r\n                    case \"ry\":\r\n                        if (att == \"ry\" && o.type == \"rect\") {\r\n                            break;\r\n                        }\r\n                    case \"cy\":\r\n                        node.setAttribute(att, value);\r\n                        o.pattern && updatePosition(o);\r\n                        o._.dirty = 1;\r\n                        break;\r\n                    case \"r\":\r\n                        if (o.type == \"rect\") {\r\n                            $(node, {rx: value, ry: value});\r\n                        } else {\r\n                            node.setAttribute(att, value);\r\n                        }\r\n                        o._.dirty = 1;\r\n                        break;\r\n                    case \"src\":\r\n                        if (o.type == \"image\") {\r\n                            node.setAttributeNS(xlink, \"href\", value);\r\n                        }\r\n                        break;\r\n                    case \"stroke-width\":\r\n                        if (o._.sx != 1 || o._.sy != 1) {\r\n                            value /= mmax(abs(o._.sx), abs(o._.sy)) || 1;\r\n                        }\r\n                        node.setAttribute(att, value);\r\n                        if (attrs[\"stroke-dasharray\"]) {\r\n                            addDashes(o, attrs[\"stroke-dasharray\"], params);\r\n                        }\r\n                        if (o._.arrows) {\r\n                            \"startString\" in o._.arrows && addArrow(o, o._.arrows.startString);\r\n                            \"endString\" in o._.arrows && addArrow(o, o._.arrows.endString, 1);\r\n                        }\r\n                        break;\r\n                    case \"stroke-dasharray\":\r\n                        addDashes(o, value, params);\r\n                        break;\r\n                    case \"fill\":\r\n                        var isURL = Str(value).match(R._ISURL);\r\n                        if (isURL) {\r\n                            el = $(\"pattern\");\r\n                            var ig = $(\"image\");\r\n                            el.id = R.createUUID();\r\n                            $(el, {x: 0, y: 0, patternUnits: \"userSpaceOnUse\", height: 1, width: 1});\r\n                            $(ig, {x: 0, y: 0, \"xlink:href\": isURL[1]});\r\n                            el.appendChild(ig);\r\n\r\n                            (function (el) {\r\n                                R._preload(isURL[1], function () {\r\n                                    var w = this.offsetWidth,\r\n                                        h = this.offsetHeight;\r\n                                    $(el, {width: w, height: h});\r\n                                    $(ig, {width: w, height: h});\r\n                                });\r\n                            })(el);\r\n                            o.paper.defs.appendChild(el);\r\n                            $(node, {fill: \"url(#\" + el.id + \")\"});\r\n                            o.pattern = el;\r\n                            o.pattern && updatePosition(o);\r\n                            break;\r\n                        }\r\n                        var clr = R.getRGB(value);\r\n                        if (!clr.error) {\r\n                            delete params.gradient;\r\n                            delete attrs.gradient;\r\n                            !R.is(attrs.opacity, \"undefined\") &&\r\n                                R.is(params.opacity, \"undefined\") &&\r\n                                $(node, {opacity: attrs.opacity});\r\n                            !R.is(attrs[\"fill-opacity\"], \"undefined\") &&\r\n                                R.is(params[\"fill-opacity\"], \"undefined\") &&\r\n                                $(node, {\"fill-opacity\": attrs[\"fill-opacity\"]});\r\n                        } else if ((o.type == \"circle\" || o.type == \"ellipse\" || Str(value).charAt() != \"r\") && addGradientFill(o, value)) {\r\n                            if (\"opacity\" in attrs || \"fill-opacity\" in attrs) {\r\n                                var gradient = R._g.doc.getElementById(node.getAttribute(\"fill\").replace(/^url\\(#|\\)$/g, E));\r\n                                if (gradient) {\r\n                                    var stops = gradient.getElementsByTagName(\"stop\");\r\n                                    $(stops[stops.length - 1], {\"stop-opacity\": (\"opacity\" in attrs ? attrs.opacity : 1) * (\"fill-opacity\" in attrs ? attrs[\"fill-opacity\"] : 1)});\r\n                                }\r\n                            }\r\n                            attrs.gradient = value;\r\n                            attrs.fill = \"none\";\r\n                            break;\r\n                        }\r\n                        clr[has](\"opacity\") && $(node, {\"fill-opacity\": clr.opacity > 1 ? clr.opacity / 100 : clr.opacity});\r\n                    case \"stroke\":\r\n                        clr = R.getRGB(value);\r\n                        node.setAttribute(att, clr.hex);\r\n                        att == \"stroke\" && clr[has](\"opacity\") && $(node, {\"stroke-opacity\": clr.opacity > 1 ? clr.opacity / 100 : clr.opacity});\r\n                        if (att == \"stroke\" && o._.arrows) {\r\n                            \"startString\" in o._.arrows && addArrow(o, o._.arrows.startString);\r\n                            \"endString\" in o._.arrows && addArrow(o, o._.arrows.endString, 1);\r\n                        }\r\n                        break;\r\n                    case \"gradient\":\r\n                        (o.type == \"circle\" || o.type == \"ellipse\" || Str(value).charAt() != \"r\") && addGradientFill(o, value);\r\n                        break;\r\n                    case \"opacity\":\r\n                        if (attrs.gradient && !attrs[has](\"stroke-opacity\")) {\r\n                            $(node, {\"stroke-opacity\": value > 1 ? value / 100 : value});\r\n                        }\r\n                        // fall\r\n                    case \"fill-opacity\":\r\n                        if (attrs.gradient) {\r\n                            gradient = R._g.doc.getElementById(node.getAttribute(\"fill\").replace(/^url\\(#|\\)$/g, E));\r\n                            if (gradient) {\r\n                                stops = gradient.getElementsByTagName(\"stop\");\r\n                                $(stops[stops.length - 1], {\"stop-opacity\": value});\r\n                            }\r\n                            break;\r\n                        }\r\n                    default:\r\n                        att == \"font-size\" && (value = toInt(value, 10) + \"px\");\r\n                        var cssrule = att.replace(/(\\-.)/g, function (w) {\r\n                            return w.substring(1).toUpperCase();\r\n                        });\r\n                        node.style[cssrule] = value;\r\n                        o._.dirty = 1;\r\n                        node.setAttribute(att, value);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        tuneText(o, params);\r\n        node.style.visibility = vis;\r\n    },\r\n    leading = 1.2,\r\n    tuneText = function (el, params) {\r\n        if (el.type != \"text\" || !(params[has](\"text\") || params[has](\"font\") || params[has](\"font-size\") || params[has](\"x\") || params[has](\"y\"))) {\r\n            return;\r\n        }\r\n        var a = el.attrs,\r\n            node = el.node,\r\n            fontSize = node.firstChild ? toInt(R._g.doc.defaultView.getComputedStyle(node.firstChild, E).getPropertyValue(\"font-size\"), 10) : 10;\r\n\r\n        if (params[has](\"text\")) {\r\n            a.text = params.text;\r\n            while (node.firstChild) {\r\n                node.removeChild(node.firstChild);\r\n            }\r\n            var texts = Str(params.text).split(\"\\n\"),\r\n                tspans = [],\r\n                tspan;\r\n            for (var i = 0, ii = texts.length; i < ii; i++) {\r\n                tspan = $(\"tspan\");\r\n                i && $(tspan, {dy: fontSize * leading, x: a.x});\r\n                tspan.appendChild(R._g.doc.createTextNode(texts[i]));\r\n                node.appendChild(tspan);\r\n                tspans[i] = tspan;\r\n            }\r\n        } else {\r\n            tspans = node.getElementsByTagName(\"tspan\");\r\n            for (i = 0, ii = tspans.length; i < ii; i++) if (i) {\r\n                $(tspans[i], {dy: fontSize * leading, x: a.x});\r\n            } else {\r\n                $(tspans[0], {dy: 0});\r\n            }\r\n        }\r\n        $(node, {x: a.x, y: a.y});\r\n        el._.dirty = 1;\r\n        var bb = el._getBBox(),\r\n            dif = a.y - (bb.y + bb.height / 2);\r\n        dif && R.is(dif, \"finite\") && $(tspans[0], {dy: dif});\r\n    },\r\n    getRealNode = function (node) {\r\n        if (node.parentNode && node.parentNode.tagName.toLowerCase() === \"a\") {\r\n            return node.parentNode;\r\n        } else {\r\n            return node;\r\n        }\r\n    },\r\n    Element = function (node, svg) {\r\n        var X = 0,\r\n            Y = 0;\r\n        /*\\\r\n         * Element.node\r\n         [ property (object) ]\r\n         **\r\n         * Gives you a reference to the DOM object, so you can assign event handlers or just mess around.\r\n         **\r\n         * Note: Don’t mess with it.\r\n         > Usage\r\n         | // draw a circle at coordinate 10,10 with radius of 10\r\n         | var c = paper.circle(10, 10, 10);\r\n         | c.node.onclick = function () {\r\n         |     c.attr(\"fill\", \"red\");\r\n         | };\r\n        \\*/\r\n        this[0] = this.node = node;\r\n        /*\\\r\n         * Element.raphael\r\n         [ property (object) ]\r\n         **\r\n         * Internal reference to @Raphael object. In case it is not available.\r\n         > Usage\r\n         | Raphael.el.red = function () {\r\n         |     var hsb = this.paper.raphael.rgb2hsb(this.attr(\"fill\"));\r\n         |     hsb.h = 1;\r\n         |     this.attr({fill: this.paper.raphael.hsb2rgb(hsb).hex});\r\n         | }\r\n        \\*/\r\n        node.raphael = true;\r\n        /*\\\r\n         * Element.id\r\n         [ property (number) ]\r\n         **\r\n         * Unique id of the element. Especially useful when you want to listen to events of the element,\r\n         * because all events are fired in format `<module>.<action>.<id>`. Also useful for @Paper.getById method.\r\n        \\*/\r\n        this.id = R._oid++;\r\n        node.raphaelid = this.id;\r\n        this.matrix = R.matrix();\r\n        this.realPath = null;\r\n        /*\\\r\n         * Element.paper\r\n         [ property (object) ]\r\n         **\r\n         * Internal reference to “paper” where object drawn. Mainly for use in plugins and element extensions.\r\n         > Usage\r\n         | Raphael.el.cross = function () {\r\n         |     this.attr({fill: \"red\"});\r\n         |     this.paper.path(\"M10,10L50,50M50,10L10,50\")\r\n         |         .attr({stroke: \"red\"});\r\n         | }\r\n        \\*/\r\n        this.paper = svg;\r\n        this.attrs = this.attrs || {};\r\n        this._ = {\r\n            transform: [],\r\n            sx: 1,\r\n            sy: 1,\r\n            deg: 0,\r\n            dx: 0,\r\n            dy: 0,\r\n            dirty: 1\r\n        };\r\n        !svg.bottom && (svg.bottom = this);\r\n        /*\\\r\n         * Element.prev\r\n         [ property (object) ]\r\n         **\r\n         * Reference to the previous element in the hierarchy.\r\n        \\*/\r\n        this.prev = svg.top;\r\n        svg.top && (svg.top.next = this);\r\n        svg.top = this;\r\n        /*\\\r\n         * Element.next\r\n         [ property (object) ]\r\n         **\r\n         * Reference to the next element in the hierarchy.\r\n        \\*/\r\n        this.next = null;\r\n    },\r\n    elproto = R.el;\r\n\r\n    Element.prototype = elproto;\r\n    elproto.constructor = Element;\r\n\r\n    R._engine.path = function (pathString, SVG) {\r\n        var el = $(\"path\");\r\n        SVG.canvas && SVG.canvas.appendChild(el);\r\n        var p = new Element(el, SVG);\r\n        p.type = \"path\";\r\n        setFillAndStroke(p, {\r\n            fill: \"none\",\r\n            stroke: \"#000\",\r\n            path: pathString\r\n        });\r\n        return p;\r\n    };\r\n    /*\\\r\n     * Element.rotate\r\n     [ method ]\r\n     **\r\n     * Deprecated! Use @Element.transform instead.\r\n     * Adds rotation by given angle around given point to the list of\r\n     * transformations of the element.\r\n     > Parameters\r\n     - deg (number) angle in degrees\r\n     - cx (number) #optional x coordinate of the centre of rotation\r\n     - cy (number) #optional y coordinate of the centre of rotation\r\n     * If cx & cy aren’t specified centre of the shape is used as a point of rotation.\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.rotate = function (deg, cx, cy) {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        deg = Str(deg).split(separator);\r\n        if (deg.length - 1) {\r\n            cx = toFloat(deg[1]);\r\n            cy = toFloat(deg[2]);\r\n        }\r\n        deg = toFloat(deg[0]);\r\n        (cy == null) && (cx = cy);\r\n        if (cx == null || cy == null) {\r\n            var bbox = this.getBBox(1);\r\n            cx = bbox.x + bbox.width / 2;\r\n            cy = bbox.y + bbox.height / 2;\r\n        }\r\n        this.transform(this._.transform.concat([[\"r\", deg, cx, cy]]));\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.scale\r\n     [ method ]\r\n     **\r\n     * Deprecated! Use @Element.transform instead.\r\n     * Adds scale by given amount relative to given point to the list of\r\n     * transformations of the element.\r\n     > Parameters\r\n     - sx (number) horisontal scale amount\r\n     - sy (number) vertical scale amount\r\n     - cx (number) #optional x coordinate of the centre of scale\r\n     - cy (number) #optional y coordinate of the centre of scale\r\n     * If cx & cy aren’t specified centre of the shape is used instead.\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.scale = function (sx, sy, cx, cy) {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        sx = Str(sx).split(separator);\r\n        if (sx.length - 1) {\r\n            sy = toFloat(sx[1]);\r\n            cx = toFloat(sx[2]);\r\n            cy = toFloat(sx[3]);\r\n        }\r\n        sx = toFloat(sx[0]);\r\n        (sy == null) && (sy = sx);\r\n        (cy == null) && (cx = cy);\r\n        if (cx == null || cy == null) {\r\n            var bbox = this.getBBox(1);\r\n        }\r\n        cx = cx == null ? bbox.x + bbox.width / 2 : cx;\r\n        cy = cy == null ? bbox.y + bbox.height / 2 : cy;\r\n        this.transform(this._.transform.concat([[\"s\", sx, sy, cx, cy]]));\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.translate\r\n     [ method ]\r\n     **\r\n     * Deprecated! Use @Element.transform instead.\r\n     * Adds translation by given amount to the list of transformations of the element.\r\n     > Parameters\r\n     - dx (number) horisontal shift\r\n     - dy (number) vertical shift\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.translate = function (dx, dy) {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        dx = Str(dx).split(separator);\r\n        if (dx.length - 1) {\r\n            dy = toFloat(dx[1]);\r\n        }\r\n        dx = toFloat(dx[0]) || 0;\r\n        dy = +dy || 0;\r\n        this.transform(this._.transform.concat([[\"t\", dx, dy]]));\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.transform\r\n     [ method ]\r\n     **\r\n     * Adds transformation to the element which is separate to other attributes,\r\n     * i.e. translation doesn’t change `x` or `y` of the rectange. The format\r\n     * of transformation string is similar to the path string syntax:\r\n     | \"t100,100r30,100,100s2,2,100,100r45s1.5\"\r\n     * Each letter is a command. There are four commands: `t` is for translate, `r` is for rotate, `s` is for\r\n     * scale and `m` is for matrix.\r\n     *\r\n     * There are also alternative “absolute” translation, rotation and scale: `T`, `R` and `S`. They will not take previous transformation into account. For example, `...T100,0` will always move element 100 px horisontally, while `...t100,0` could move it vertically if there is `r90` before. Just compare results of `r90t100,0` and `r90T100,0`.\r\n     *\r\n     * So, the example line above could be read like “translate by 100, 100; rotate 30° around 100, 100; scale twice around 100, 100;\r\n     * rotate 45° around centre; scale 1.5 times relative to centre”. As you can see rotate and scale commands have origin\r\n     * coordinates as optional parameters, the default is the centre point of the element.\r\n     * Matrix accepts six parameters.\r\n     > Usage\r\n     | var el = paper.rect(10, 20, 300, 200);\r\n     | // translate 100, 100, rotate 45°, translate -100, 0\r\n     | el.transform(\"t100,100r45t-100,0\");\r\n     | // if you want you can append or prepend transformations\r\n     | el.transform(\"...t50,50\");\r\n     | el.transform(\"s2...\");\r\n     | // or even wrap\r\n     | el.transform(\"t50,50...t-50-50\");\r\n     | // to reset transformation call method with empty string\r\n     | el.transform(\"\");\r\n     | // to get current value call it without parameters\r\n     | console.log(el.transform());\r\n     > Parameters\r\n     - tstr (string) #optional transformation string\r\n     * If tstr isn’t specified\r\n     = (string) current transformation string\r\n     * else\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.transform = function (tstr) {\r\n        var _ = this._;\r\n        if (tstr == null) {\r\n            return _.transform;\r\n        }\r\n        R._extractTransform(this, tstr);\r\n\r\n        this.clip && $(this.clip, {transform: this.matrix.invert()});\r\n        this.pattern && updatePosition(this);\r\n        this.node && $(this.node, {transform: this.matrix});\r\n\r\n        if (_.sx != 1 || _.sy != 1) {\r\n            var sw = this.attrs[has](\"stroke-width\") ? this.attrs[\"stroke-width\"] : 1;\r\n            this.attr({\"stroke-width\": sw});\r\n        }\r\n\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.hide\r\n     [ method ]\r\n     **\r\n     * Makes element invisible. See @Element.show.\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.hide = function () {\r\n        if(!this.removed) this.node.style.display = \"none\";\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.show\r\n     [ method ]\r\n     **\r\n     * Makes element visible. See @Element.hide.\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.show = function () {\r\n        if(!this.removed) this.node.style.display = \"\";\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.remove\r\n     [ method ]\r\n     **\r\n     * Removes element from the paper.\r\n    \\*/\r\n    elproto.remove = function () {\r\n        var node = getRealNode(this.node);\r\n        if (this.removed || !node.parentNode) {\r\n            return;\r\n        }\r\n        var paper = this.paper;\r\n        paper.__set__ && paper.__set__.exclude(this);\r\n        eve.unbind(\"raphael.*.*.\" + this.id);\r\n        if (this.gradient) {\r\n            paper.defs.removeChild(this.gradient);\r\n        }\r\n        R._tear(this, paper);\r\n\r\n        node.parentNode.removeChild(node);\r\n\r\n        // Remove custom data for element\r\n        this.removeData();\r\n\r\n        for (var i in this) {\r\n            this[i] = typeof this[i] == \"function\" ? R._removedFactory(i) : null;\r\n        }\r\n        this.removed = true;\r\n    };\r\n    elproto._getBBox = function () {\r\n        if (this.node.style.display == \"none\") {\r\n            this.show();\r\n            var hide = true;\r\n        }\r\n        var canvasHidden = false,\r\n            containerStyle;\r\n        if (this.paper.canvas.parentElement) {\r\n          containerStyle = this.paper.canvas.parentElement.style;\r\n        } //IE10+ can't find parentElement\r\n        else if (this.paper.canvas.parentNode) {\r\n          containerStyle = this.paper.canvas.parentNode.style;\r\n        }\r\n\r\n        if(containerStyle && containerStyle.display == \"none\") {\r\n          canvasHidden = true;\r\n          containerStyle.display = \"\";\r\n        }\r\n        var bbox = {};\r\n        try {\r\n            bbox = this.node.getBBox();\r\n        } catch(e) {\r\n            // Firefox 3.0.x, 25.0.1 (probably more versions affected) play badly here - possible fix\r\n            bbox = {\r\n                x: this.node.clientLeft,\r\n                y: this.node.clientTop,\r\n                width: this.node.clientWidth,\r\n                height: this.node.clientHeight\r\n            }\r\n        } finally {\r\n            bbox = bbox || {};\r\n            if(canvasHidden){\r\n              containerStyle.display = \"none\";\r\n            }\r\n        }\r\n        hide && this.hide();\r\n        return bbox;\r\n    };\r\n    /*\\\r\n     * Element.attr\r\n     [ method ]\r\n     **\r\n     * Sets the attributes of the element.\r\n     > Parameters\r\n     - attrName (string) attribute’s name\r\n     - value (string) value\r\n     * or\r\n     - params (object) object of name/value pairs\r\n     * or\r\n     - attrName (string) attribute’s name\r\n     * or\r\n     - attrNames (array) in this case method returns array of current values for given attribute names\r\n     = (object) @Element if attrsName & value or params are passed in.\r\n     = (...) value of the attribute if only attrsName is passed in.\r\n     = (array) array of values of the attribute if attrsNames is passed in.\r\n     = (object) object of attributes if nothing is passed in.\r\n     > Possible parameters\r\n     # <p>Please refer to the <a href=\"http://www.w3.org/TR/SVG/\" title=\"The W3C Recommendation for the SVG language describes these properties in detail.\">SVG specification</a> for an explanation of these parameters.</p>\r\n     o arrow-end (string) arrowhead on the end of the path. The format for string is `<type>[-<width>[-<length>]]`. Possible types: `classic`, `block`, `open`, `oval`, `diamond`, `none`, width: `wide`, `narrow`, `medium`, length: `long`, `short`, `midium`.\r\n     o clip-rect (string) comma or space separated values: x, y, width and height\r\n     o cursor (string) CSS type of the cursor\r\n     o cx (number) the x-axis coordinate of the center of the circle, or ellipse\r\n     o cy (number) the y-axis coordinate of the center of the circle, or ellipse\r\n     o fill (string) colour, gradient or image\r\n     o fill-opacity (number)\r\n     o font (string)\r\n     o font-family (string)\r\n     o font-size (number) font size in pixels\r\n     o font-weight (string)\r\n     o height (number)\r\n     o href (string) URL, if specified element behaves as hyperlink\r\n     o opacity (number)\r\n     o path (string) SVG path string format\r\n     o r (number) radius of the circle, ellipse or rounded corner on the rect\r\n     o rx (number) horisontal radius of the ellipse\r\n     o ry (number) vertical radius of the ellipse\r\n     o src (string) image URL, only works for @Element.image element\r\n     o stroke (string) stroke colour\r\n     o stroke-dasharray (string) [“”, “none”, “`-`”, “`.`”, “`-.`”, “`-..`”, “`. `”, “`- `”, “`--`”, “`- .`”, “`--.`”, “`--..`”]\r\n     o stroke-linecap (string) [“`butt`”, “`square`”, “`round`”]\r\n     o stroke-linejoin (string) [“`bevel`”, “`round`”, “`miter`”]\r\n     o stroke-miterlimit (number)\r\n     o stroke-opacity (number)\r\n     o stroke-width (number) stroke width in pixels, default is '1'\r\n     o target (string) used with href\r\n     o text (string) contents of the text element. Use `\\n` for multiline text\r\n     o text-anchor (string) [“`start`”, “`middle`”, “`end`”], default is “`middle`”\r\n     o title (string) will create tooltip with a given text\r\n     o transform (string) see @Element.transform\r\n     o width (number)\r\n     o x (number)\r\n     o y (number)\r\n     > Gradients\r\n     * Linear gradient format: “`‹angle›-‹colour›[-‹colour›[:‹offset›]]*-‹colour›`”, example: “`90-#fff-#000`” – 90°\r\n     * gradient from white to black or “`0-#fff-#f00:20-#000`” – 0° gradient from white via red (at 20%) to black.\r\n     *\r\n     * radial gradient: “`r[(‹fx›, ‹fy›)]‹colour›[-‹colour›[:‹offset›]]*-‹colour›`”, example: “`r#fff-#000`” –\r\n     * gradient from white to black or “`r(0.25, 0.75)#fff-#000`” – gradient from white to black with focus point\r\n     * at 0.25, 0.75. Focus point coordinates are in 0..1 range. Radial gradients can only be applied to circles and ellipses.\r\n     > Path String\r\n     # <p>Please refer to <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path’s data attribute’s format are described in the SVG specification.\">SVG documentation regarding path string</a>. Raphaël fully supports it.</p>\r\n     > Colour Parsing\r\n     # <ul>\r\n     #     <li>Colour name (“<code>red</code>”, “<code>green</code>”, “<code>cornflowerblue</code>”, etc)</li>\r\n     #     <li>#••• — shortened HTML colour: (“<code>#000</code>”, “<code>#fc0</code>”, etc)</li>\r\n     #     <li>#•••••• — full length HTML colour: (“<code>#000000</code>”, “<code>#bd2300</code>”)</li>\r\n     #     <li>rgb(•••, •••, •••) — red, green and blue channels’ values: (“<code>rgb(200,&nbsp;100,&nbsp;0)</code>”)</li>\r\n     #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (“<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>”)</li>\r\n     #     <li>rgba(•••, •••, •••, •••) — red, green and blue channels’ values: (“<code>rgba(200,&nbsp;100,&nbsp;0, .5)</code>”)</li>\r\n     #     <li>rgba(•••%, •••%, •••%, •••%) — same as above, but in %: (“<code>rgba(100%,&nbsp;175%,&nbsp;0%, 50%)</code>”)</li>\r\n     #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (“<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>”)</li>\r\n     #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\r\n     #     <li>hsba(•••, •••, •••, •••) — same as above, but with opacity</li>\r\n     #     <li>hsl(•••, •••, •••) — almost the same as hsb, see <a href=\"http://en.wikipedia.org/wiki/HSL_and_HSV\" title=\"HSL and HSV - Wikipedia, the free encyclopedia\">Wikipedia page</a></li>\r\n     #     <li>hsl(•••%, •••%, •••%) — same as above, but in %</li>\r\n     #     <li>hsla(•••, •••, •••, •••) — same as above, but with opacity</li>\r\n     #     <li>Optionally for hsb and hsl you could specify hue as a degree: “<code>hsl(240deg,&nbsp;1,&nbsp;.5)</code>” or, if you want to go fancy, “<code>hsl(240°,&nbsp;1,&nbsp;.5)</code>”</li>\r\n     # </ul>\r\n    \\*/\r\n    elproto.attr = function (name, value) {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        if (name == null) {\r\n            var res = {};\r\n            for (var a in this.attrs) if (this.attrs[has](a)) {\r\n                res[a] = this.attrs[a];\r\n            }\r\n            res.gradient && res.fill == \"none\" && (res.fill = res.gradient) && delete res.gradient;\r\n            res.transform = this._.transform;\r\n            return res;\r\n        }\r\n        if (value == null && R.is(name, \"string\")) {\r\n            if (name == \"fill\" && this.attrs.fill == \"none\" && this.attrs.gradient) {\r\n                return this.attrs.gradient;\r\n            }\r\n            if (name == \"transform\") {\r\n                return this._.transform;\r\n            }\r\n            var names = name.split(separator),\r\n                out = {};\r\n            for (var i = 0, ii = names.length; i < ii; i++) {\r\n                name = names[i];\r\n                if (name in this.attrs) {\r\n                    out[name] = this.attrs[name];\r\n                } else if (R.is(this.paper.customAttributes[name], \"function\")) {\r\n                    out[name] = this.paper.customAttributes[name].def;\r\n                } else {\r\n                    out[name] = R._availableAttrs[name];\r\n                }\r\n            }\r\n            return ii - 1 ? out : out[names[0]];\r\n        }\r\n        if (value == null && R.is(name, \"array\")) {\r\n            out = {};\r\n            for (i = 0, ii = name.length; i < ii; i++) {\r\n                out[name[i]] = this.attr(name[i]);\r\n            }\r\n            return out;\r\n        }\r\n        if (value != null) {\r\n            var params = {};\r\n            params[name] = value;\r\n        } else if (name != null && R.is(name, \"object\")) {\r\n            params = name;\r\n        }\r\n        for (var key in params) {\r\n            eve(\"raphael.attr.\" + key + \".\" + this.id, this, params[key]);\r\n        }\r\n        for (key in this.paper.customAttributes) if (this.paper.customAttributes[has](key) && params[has](key) && R.is(this.paper.customAttributes[key], \"function\")) {\r\n            var par = this.paper.customAttributes[key].apply(this, [].concat(params[key]));\r\n            this.attrs[key] = params[key];\r\n            for (var subkey in par) if (par[has](subkey)) {\r\n                params[subkey] = par[subkey];\r\n            }\r\n        }\r\n        setFillAndStroke(this, params);\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.toFront\r\n     [ method ]\r\n     **\r\n     * Moves the element so it is the closest to the viewer’s eyes, on top of other elements.\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.toFront = function () {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        var node = getRealNode(this.node);\r\n        node.parentNode.appendChild(node);\r\n        var svg = this.paper;\r\n        svg.top != this && R._tofront(this, svg);\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.toBack\r\n     [ method ]\r\n     **\r\n     * Moves the element so it is the furthest from the viewer’s eyes, behind other elements.\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.toBack = function () {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        var node = getRealNode(this.node);\r\n        var parentNode = node.parentNode;\r\n        parentNode.insertBefore(node, parentNode.firstChild);\r\n        R._toback(this, this.paper);\r\n        var svg = this.paper;\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.insertAfter\r\n     [ method ]\r\n     **\r\n     * Inserts current object after the given one.\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.insertAfter = function (element) {\r\n        if (this.removed || !element) {\r\n            return this;\r\n        }\r\n\r\n        var node = getRealNode(this.node);\r\n        var afterNode = getRealNode(element.node || element[element.length - 1].node);\r\n        if (afterNode.nextSibling) {\r\n            afterNode.parentNode.insertBefore(node, afterNode.nextSibling);\r\n        } else {\r\n            afterNode.parentNode.appendChild(node);\r\n        }\r\n        R._insertafter(this, element, this.paper);\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.insertBefore\r\n     [ method ]\r\n     **\r\n     * Inserts current object before the given one.\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.insertBefore = function (element) {\r\n        if (this.removed || !element) {\r\n            return this;\r\n        }\r\n\r\n        var node = getRealNode(this.node);\r\n        var beforeNode = getRealNode(element.node || element[0].node);\r\n        beforeNode.parentNode.insertBefore(node, beforeNode);\r\n        R._insertbefore(this, element, this.paper);\r\n        return this;\r\n    };\r\n    elproto.blur = function (size) {\r\n        // Experimental. No Safari support. Use it on your own risk.\r\n        var t = this;\r\n        if (+size !== 0) {\r\n            var fltr = $(\"filter\"),\r\n                blur = $(\"feGaussianBlur\");\r\n            t.attrs.blur = size;\r\n            fltr.id = R.createUUID();\r\n            $(blur, {stdDeviation: +size || 1.5});\r\n            fltr.appendChild(blur);\r\n            t.paper.defs.appendChild(fltr);\r\n            t._blur = fltr;\r\n            $(t.node, {filter: \"url(#\" + fltr.id + \")\"});\r\n        } else {\r\n            if (t._blur) {\r\n                t._blur.parentNode.removeChild(t._blur);\r\n                delete t._blur;\r\n                delete t.attrs.blur;\r\n            }\r\n            t.node.removeAttribute(\"filter\");\r\n        }\r\n        return t;\r\n    };\r\n    R._engine.circle = function (svg, x, y, r) {\r\n        var el = $(\"circle\");\r\n        svg.canvas && svg.canvas.appendChild(el);\r\n        var res = new Element(el, svg);\r\n        res.attrs = {cx: x, cy: y, r: r, fill: \"none\", stroke: \"#000\"};\r\n        res.type = \"circle\";\r\n        $(el, res.attrs);\r\n        return res;\r\n    };\r\n    R._engine.rect = function (svg, x, y, w, h, r) {\r\n        var el = $(\"rect\");\r\n        svg.canvas && svg.canvas.appendChild(el);\r\n        var res = new Element(el, svg);\r\n        res.attrs = {x: x, y: y, width: w, height: h, rx: r || 0, ry: r || 0, fill: \"none\", stroke: \"#000\"};\r\n        res.type = \"rect\";\r\n        $(el, res.attrs);\r\n        return res;\r\n    };\r\n    R._engine.ellipse = function (svg, x, y, rx, ry) {\r\n        var el = $(\"ellipse\");\r\n        svg.canvas && svg.canvas.appendChild(el);\r\n        var res = new Element(el, svg);\r\n        res.attrs = {cx: x, cy: y, rx: rx, ry: ry, fill: \"none\", stroke: \"#000\"};\r\n        res.type = \"ellipse\";\r\n        $(el, res.attrs);\r\n        return res;\r\n    };\r\n    R._engine.image = function (svg, src, x, y, w, h) {\r\n        var el = $(\"image\");\r\n        $(el, {x: x, y: y, width: w, height: h, preserveAspectRatio: \"none\"});\r\n        el.setAttributeNS(xlink, \"href\", src);\r\n        svg.canvas && svg.canvas.appendChild(el);\r\n        var res = new Element(el, svg);\r\n        res.attrs = {x: x, y: y, width: w, height: h, src: src};\r\n        res.type = \"image\";\r\n        return res;\r\n    };\r\n    R._engine.text = function (svg, x, y, text) {\r\n        var el = $(\"text\");\r\n        svg.canvas && svg.canvas.appendChild(el);\r\n        var res = new Element(el, svg);\r\n        res.attrs = {\r\n            x: x,\r\n            y: y,\r\n            \"text-anchor\": \"middle\",\r\n            text: text,\r\n            \"font-family\": R._availableAttrs[\"font-family\"],\r\n            \"font-size\": R._availableAttrs[\"font-size\"],\r\n            stroke: \"none\",\r\n            fill: \"#000\"\r\n        };\r\n        res.type = \"text\";\r\n        setFillAndStroke(res, res.attrs);\r\n        return res;\r\n    };\r\n    R._engine.setSize = function (width, height) {\r\n        this.width = width || this.width;\r\n        this.height = height || this.height;\r\n        this.canvas.setAttribute(\"width\", this.width);\r\n        this.canvas.setAttribute(\"height\", this.height);\r\n        if (this._viewBox) {\r\n            this.setViewBox.apply(this, this._viewBox);\r\n        }\r\n        return this;\r\n    };\r\n    R._engine.create = function () {\r\n        var con = R._getContainer.apply(0, arguments),\r\n            container = con && con.container,\r\n            x = con.x,\r\n            y = con.y,\r\n            width = con.width,\r\n            height = con.height;\r\n        if (!container) {\r\n            throw new Error(\"SVG container not found.\");\r\n        }\r\n        var cnvs = $(\"svg\"),\r\n            css = \"overflow:hidden;\",\r\n            isFloating;\r\n        x = x || 0;\r\n        y = y || 0;\r\n        width = width || 512;\r\n        height = height || 342;\r\n        $(cnvs, {\r\n            height: height,\r\n            version: 1.1,\r\n            width: width,\r\n            xmlns: \"http://www.w3.org/2000/svg\",\r\n            \"xmlns:xlink\": \"http://www.w3.org/1999/xlink\"\r\n        });\r\n        if (container == 1) {\r\n            cnvs.style.cssText = css + \"position:absolute;left:\" + x + \"px;top:\" + y + \"px\";\r\n            R._g.doc.body.appendChild(cnvs);\r\n            isFloating = 1;\r\n        } else {\r\n            cnvs.style.cssText = css + \"position:relative\";\r\n            if (container.firstChild) {\r\n                container.insertBefore(cnvs, container.firstChild);\r\n            } else {\r\n                container.appendChild(cnvs);\r\n            }\r\n        }\r\n        container = new R._Paper;\r\n        container.width = width;\r\n        container.height = height;\r\n        container.canvas = cnvs;\r\n        container.clear();\r\n        container._left = container._top = 0;\r\n        isFloating && (container.renderfix = function () {});\r\n        container.renderfix();\r\n        return container;\r\n    };\r\n    R._engine.setViewBox = function (x, y, w, h, fit) {\r\n        eve(\"raphael.setViewBox\", this, this._viewBox, [x, y, w, h, fit]);\r\n        var paperSize = this.getSize(),\r\n            size = mmax(w / paperSize.width, h / paperSize.height),\r\n            top = this.top,\r\n            aspectRatio = fit ? \"xMidYMid meet\" : \"xMinYMin\",\r\n            vb,\r\n            sw;\r\n        if (x == null) {\r\n            if (this._vbSize) {\r\n                size = 1;\r\n            }\r\n            delete this._vbSize;\r\n            vb = \"0 0 \" + this.width + S + this.height;\r\n        } else {\r\n            this._vbSize = size;\r\n            vb = x + S + y + S + w + S + h;\r\n        }\r\n        $(this.canvas, {\r\n            viewBox: vb,\r\n            preserveAspectRatio: aspectRatio\r\n        });\r\n        while (size && top) {\r\n            sw = \"stroke-width\" in top.attrs ? top.attrs[\"stroke-width\"] : 1;\r\n            top.attr({\"stroke-width\": sw});\r\n            top._.dirty = 1;\r\n            top._.dirtyT = 1;\r\n            top = top.prev;\r\n        }\r\n        this._viewBox = [x, y, w, h, !!fit];\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Paper.renderfix\r\n     [ method ]\r\n     **\r\n     * Fixes the issue of Firefox and IE9 regarding subpixel rendering. If paper is dependant\r\n     * on other elements after reflow it could shift half pixel which cause for lines to lost their crispness.\r\n     * This method fixes the issue.\r\n     **\r\n       Special thanks to Mariusz Nowak (http://www.medikoo.com/) for this method.\r\n    \\*/\r\n    R.prototype.renderfix = function () {\r\n        var cnvs = this.canvas,\r\n            s = cnvs.style,\r\n            pos;\r\n        try {\r\n            pos = cnvs.getScreenCTM() || cnvs.createSVGMatrix();\r\n        } catch (e) {\r\n            pos = cnvs.createSVGMatrix();\r\n        }\r\n        var left = -pos.e % 1,\r\n            top = -pos.f % 1;\r\n        if (left || top) {\r\n            if (left) {\r\n                this._left = (this._left + left) % 1;\r\n                s.left = this._left + \"px\";\r\n            }\r\n            if (top) {\r\n                this._top = (this._top + top) % 1;\r\n                s.top = this._top + \"px\";\r\n            }\r\n        }\r\n    };\r\n    /*\\\r\n     * Paper.clear\r\n     [ method ]\r\n     **\r\n     * Clears the paper, i.e. removes all the elements.\r\n    \\*/\r\n    R.prototype.clear = function () {\r\n        R.eve(\"raphael.clear\", this);\r\n        var c = this.canvas;\r\n        while (c.firstChild) {\r\n            c.removeChild(c.firstChild);\r\n        }\r\n        this.bottom = this.top = null;\r\n        (this.desc = $(\"desc\")).appendChild(R._g.doc.createTextNode(\"Created with Rapha\\xebl \" + R.version));\r\n        c.appendChild(this.desc);\r\n        c.appendChild(this.defs = $(\"defs\"));\r\n    };\r\n    /*\\\r\n     * Paper.remove\r\n     [ method ]\r\n     **\r\n     * Removes the paper from the DOM.\r\n    \\*/\r\n    R.prototype.remove = function () {\r\n        eve(\"raphael.remove\", this);\r\n        this.canvas.parentNode && this.canvas.parentNode.removeChild(this.canvas);\r\n        for (var i in this) {\r\n            this[i] = typeof this[i] == \"function\" ? R._removedFactory(i) : null;\r\n        }\r\n    };\r\n    var setproto = R.st;\r\n    for (var method in elproto) if (elproto[has](method) && !setproto[has](method)) {\r\n        setproto[method] = (function (methodname) {\r\n            return function () {\r\n                var arg = arguments;\r\n                return this.forEach(function (el) {\r\n                    el[methodname].apply(el, arg);\r\n                });\r\n            };\r\n        })(method);\r\n    }\r\n})();\r\n\r\n// ┌─────────────────────────────────────────────────────────────────────┐ \\\\\r\n// │ Raphaël - JavaScript Vector Library                                 │ \\\\\r\n// ├─────────────────────────────────────────────────────────────────────┤ \\\\\r\n// │ VML Module                                                          │ \\\\\r\n// ├─────────────────────────────────────────────────────────────────────┤ \\\\\r\n// │ Copyright (c) 2008-2011 Dmitry Baranovskiy (http://raphaeljs.com)   │ \\\\\r\n// │ Copyright (c) 2008-2011 Sencha Labs (http://sencha.com)             │ \\\\\r\n// │ Licensed under the MIT (http://raphaeljs.com/license.html) license. │ \\\\\r\n// └─────────────────────────────────────────────────────────────────────┘ \\\\\r\n\r\n(function(){\r\n    if (!R.vml) {\r\n        return;\r\n    }\r\n    var has = \"hasOwnProperty\",\r\n        Str = String,\r\n        toFloat = parseFloat,\r\n        math = Math,\r\n        round = math.round,\r\n        mmax = math.max,\r\n        mmin = math.min,\r\n        abs = math.abs,\r\n        fillString = \"fill\",\r\n        separator = /[, ]+/,\r\n        eve = R.eve,\r\n        ms = \" progid:DXImageTransform.Microsoft\",\r\n        S = \" \",\r\n        E = \"\",\r\n        map = {M: \"m\", L: \"l\", C: \"c\", Z: \"x\", m: \"t\", l: \"r\", c: \"v\", z: \"x\"},\r\n        bites = /([clmz]),?([^clmz]*)/gi,\r\n        blurregexp = / progid:\\S+Blur\\([^\\)]+\\)/g,\r\n        val = /-?[^,\\s-]+/g,\r\n        cssDot = \"position:absolute;left:0;top:0;width:1px;height:1px;behavior:url(#default#VML)\",\r\n        zoom = 21600,\r\n        pathTypes = {path: 1, rect: 1, image: 1},\r\n        ovalTypes = {circle: 1, ellipse: 1},\r\n        path2vml = function (path) {\r\n            var total =  /[ahqstv]/ig,\r\n                command = R._pathToAbsolute;\r\n            Str(path).match(total) && (command = R._path2curve);\r\n            total = /[clmz]/g;\r\n            if (command == R._pathToAbsolute && !Str(path).match(total)) {\r\n                var res = Str(path).replace(bites, function (all, command, args) {\r\n                    var vals = [],\r\n                        isMove = command.toLowerCase() == \"m\",\r\n                        res = map[command];\r\n                    args.replace(val, function (value) {\r\n                        if (isMove && vals.length == 2) {\r\n                            res += vals + map[command == \"m\" ? \"l\" : \"L\"];\r\n                            vals = [];\r\n                        }\r\n                        vals.push(round(value * zoom));\r\n                    });\r\n                    return res + vals;\r\n                });\r\n                return res;\r\n            }\r\n            var pa = command(path), p, r;\r\n            res = [];\r\n            for (var i = 0, ii = pa.length; i < ii; i++) {\r\n                p = pa[i];\r\n                r = pa[i][0].toLowerCase();\r\n                r == \"z\" && (r = \"x\");\r\n                for (var j = 1, jj = p.length; j < jj; j++) {\r\n                    r += round(p[j] * zoom) + (j != jj - 1 ? \",\" : E);\r\n                }\r\n                res.push(r);\r\n            }\r\n            return res.join(S);\r\n        },\r\n        compensation = function (deg, dx, dy) {\r\n            var m = R.matrix();\r\n            m.rotate(-deg, .5, .5);\r\n            return {\r\n                dx: m.x(dx, dy),\r\n                dy: m.y(dx, dy)\r\n            };\r\n        },\r\n        setCoords = function (p, sx, sy, dx, dy, deg) {\r\n            var _ = p._,\r\n                m = p.matrix,\r\n                fillpos = _.fillpos,\r\n                o = p.node,\r\n                s = o.style,\r\n                y = 1,\r\n                flip = \"\",\r\n                dxdy,\r\n                kx = zoom / sx,\r\n                ky = zoom / sy;\r\n            s.visibility = \"hidden\";\r\n            if (!sx || !sy) {\r\n                return;\r\n            }\r\n            o.coordsize = abs(kx) + S + abs(ky);\r\n            s.rotation = deg * (sx * sy < 0 ? -1 : 1);\r\n            if (deg) {\r\n                var c = compensation(deg, dx, dy);\r\n                dx = c.dx;\r\n                dy = c.dy;\r\n            }\r\n            sx < 0 && (flip += \"x\");\r\n            sy < 0 && (flip += \" y\") && (y = -1);\r\n            s.flip = flip;\r\n            o.coordorigin = (dx * -kx) + S + (dy * -ky);\r\n            if (fillpos || _.fillsize) {\r\n                var fill = o.getElementsByTagName(fillString);\r\n                fill = fill && fill[0];\r\n                o.removeChild(fill);\r\n                if (fillpos) {\r\n                    c = compensation(deg, m.x(fillpos[0], fillpos[1]), m.y(fillpos[0], fillpos[1]));\r\n                    fill.position = c.dx * y + S + c.dy * y;\r\n                }\r\n                if (_.fillsize) {\r\n                    fill.size = _.fillsize[0] * abs(sx) + S + _.fillsize[1] * abs(sy);\r\n                }\r\n                o.appendChild(fill);\r\n            }\r\n            s.visibility = \"visible\";\r\n        };\r\n    R.toString = function () {\r\n        return  \"Your browser doesn\\u2019t support SVG. Falling down to VML.\\nYou are running Rapha\\xebl \" + this.version;\r\n    };\r\n    var addArrow = function (o, value, isEnd) {\r\n        var values = Str(value).toLowerCase().split(\"-\"),\r\n            se = isEnd ? \"end\" : \"start\",\r\n            i = values.length,\r\n            type = \"classic\",\r\n            w = \"medium\",\r\n            h = \"medium\";\r\n        while (i--) {\r\n            switch (values[i]) {\r\n                case \"block\":\r\n                case \"classic\":\r\n                case \"oval\":\r\n                case \"diamond\":\r\n                case \"open\":\r\n                case \"none\":\r\n                    type = values[i];\r\n                    break;\r\n                case \"wide\":\r\n                case \"narrow\": h = values[i]; break;\r\n                case \"long\":\r\n                case \"short\": w = values[i]; break;\r\n            }\r\n        }\r\n        var stroke = o.node.getElementsByTagName(\"stroke\")[0];\r\n        stroke[se + \"arrow\"] = type;\r\n        stroke[se + \"arrowlength\"] = w;\r\n        stroke[se + \"arrowwidth\"] = h;\r\n    },\r\n    setFillAndStroke = function (o, params) {\r\n        // o.paper.canvas.style.display = \"none\";\r\n        o.attrs = o.attrs || {};\r\n        var node = o.node,\r\n            a = o.attrs,\r\n            s = node.style,\r\n            xy,\r\n            newpath = pathTypes[o.type] && (params.x != a.x || params.y != a.y || params.width != a.width || params.height != a.height || params.cx != a.cx || params.cy != a.cy || params.rx != a.rx || params.ry != a.ry || params.r != a.r),\r\n            isOval = ovalTypes[o.type] && (a.cx != params.cx || a.cy != params.cy || a.r != params.r || a.rx != params.rx || a.ry != params.ry),\r\n            res = o;\r\n\r\n\r\n        for (var par in params) if (params[has](par)) {\r\n            a[par] = params[par];\r\n        }\r\n        if (newpath) {\r\n            a.path = R._getPath[o.type](o);\r\n            o._.dirty = 1;\r\n        }\r\n        params.href && (node.href = params.href);\r\n        params.title && (node.title = params.title);\r\n        params.target && (node.target = params.target);\r\n        params.cursor && (s.cursor = params.cursor);\r\n        \"blur\" in params && o.blur(params.blur);\r\n        if (params.path && o.type == \"path\" || newpath) {\r\n            node.path = path2vml(~Str(a.path).toLowerCase().indexOf(\"r\") ? R._pathToAbsolute(a.path) : a.path);\r\n            o._.dirty = 1;\r\n            if (o.type == \"image\") {\r\n                o._.fillpos = [a.x, a.y];\r\n                o._.fillsize = [a.width, a.height];\r\n                setCoords(o, 1, 1, 0, 0, 0);\r\n            }\r\n        }\r\n        \"transform\" in params && o.transform(params.transform);\r\n        if (isOval) {\r\n            var cx = +a.cx,\r\n                cy = +a.cy,\r\n                rx = +a.rx || +a.r || 0,\r\n                ry = +a.ry || +a.r || 0;\r\n            node.path = R.format(\"ar{0},{1},{2},{3},{4},{1},{4},{1}x\", round((cx - rx) * zoom), round((cy - ry) * zoom), round((cx + rx) * zoom), round((cy + ry) * zoom), round(cx * zoom));\r\n            o._.dirty = 1;\r\n        }\r\n        if (\"clip-rect\" in params) {\r\n            var rect = Str(params[\"clip-rect\"]).split(separator);\r\n            if (rect.length == 4) {\r\n                rect[2] = +rect[2] + (+rect[0]);\r\n                rect[3] = +rect[3] + (+rect[1]);\r\n                var div = node.clipRect || R._g.doc.createElement(\"div\"),\r\n                    dstyle = div.style;\r\n                dstyle.clip = R.format(\"rect({1}px {2}px {3}px {0}px)\", rect);\r\n                if (!node.clipRect) {\r\n                    dstyle.position = \"absolute\";\r\n                    dstyle.top = 0;\r\n                    dstyle.left = 0;\r\n                    dstyle.width = o.paper.width + \"px\";\r\n                    dstyle.height = o.paper.height + \"px\";\r\n                    node.parentNode.insertBefore(div, node);\r\n                    div.appendChild(node);\r\n                    node.clipRect = div;\r\n                }\r\n            }\r\n            if (!params[\"clip-rect\"]) {\r\n                node.clipRect && (node.clipRect.style.clip = \"auto\");\r\n            }\r\n        }\r\n        if (o.textpath) {\r\n            var textpathStyle = o.textpath.style;\r\n            params.font && (textpathStyle.font = params.font);\r\n            params[\"font-family\"] && (textpathStyle.fontFamily = '\"' + params[\"font-family\"].split(\",\")[0].replace(/^['\"]+|['\"]+$/g, E) + '\"');\r\n            params[\"font-size\"] && (textpathStyle.fontSize = params[\"font-size\"]);\r\n            params[\"font-weight\"] && (textpathStyle.fontWeight = params[\"font-weight\"]);\r\n            params[\"font-style\"] && (textpathStyle.fontStyle = params[\"font-style\"]);\r\n        }\r\n        if (\"arrow-start\" in params) {\r\n            addArrow(res, params[\"arrow-start\"]);\r\n        }\r\n        if (\"arrow-end\" in params) {\r\n            addArrow(res, params[\"arrow-end\"], 1);\r\n        }\r\n        if (params.opacity != null || \r\n            params[\"stroke-width\"] != null ||\r\n            params.fill != null ||\r\n            params.src != null ||\r\n            params.stroke != null ||\r\n            params[\"stroke-width\"] != null ||\r\n            params[\"stroke-opacity\"] != null ||\r\n            params[\"fill-opacity\"] != null ||\r\n            params[\"stroke-dasharray\"] != null ||\r\n            params[\"stroke-miterlimit\"] != null ||\r\n            params[\"stroke-linejoin\"] != null ||\r\n            params[\"stroke-linecap\"] != null) {\r\n            var fill = node.getElementsByTagName(fillString),\r\n                newfill = false;\r\n            fill = fill && fill[0];\r\n            !fill && (newfill = fill = createNode(fillString));\r\n            if (o.type == \"image\" && params.src) {\r\n                fill.src = params.src;\r\n            }\r\n            params.fill && (fill.on = true);\r\n            if (fill.on == null || params.fill == \"none\" || params.fill === null) {\r\n                fill.on = false;\r\n            }\r\n            if (fill.on && params.fill) {\r\n                var isURL = Str(params.fill).match(R._ISURL);\r\n                if (isURL) {\r\n                    fill.parentNode == node && node.removeChild(fill);\r\n                    fill.rotate = true;\r\n                    fill.src = isURL[1];\r\n                    fill.type = \"tile\";\r\n                    var bbox = o.getBBox(1);\r\n                    fill.position = bbox.x + S + bbox.y;\r\n                    o._.fillpos = [bbox.x, bbox.y];\r\n\r\n                    R._preload(isURL[1], function () {\r\n                        o._.fillsize = [this.offsetWidth, this.offsetHeight];\r\n                    });\r\n                } else {\r\n                    fill.color = R.getRGB(params.fill).hex;\r\n                    fill.src = E;\r\n                    fill.type = \"solid\";\r\n                    if (R.getRGB(params.fill).error && (res.type in {circle: 1, ellipse: 1} || Str(params.fill).charAt() != \"r\") && addGradientFill(res, params.fill, fill)) {\r\n                        a.fill = \"none\";\r\n                        a.gradient = params.fill;\r\n                        fill.rotate = false;\r\n                    }\r\n                }\r\n            }\r\n            if (\"fill-opacity\" in params || \"opacity\" in params) {\r\n                var opacity = ((+a[\"fill-opacity\"] + 1 || 2) - 1) * ((+a.opacity + 1 || 2) - 1) * ((+R.getRGB(params.fill).o + 1 || 2) - 1);\r\n                opacity = mmin(mmax(opacity, 0), 1);\r\n                fill.opacity = opacity;\r\n                if (fill.src) {\r\n                    fill.color = \"none\";\r\n                }\r\n            }\r\n            node.appendChild(fill);\r\n            var stroke = (node.getElementsByTagName(\"stroke\") && node.getElementsByTagName(\"stroke\")[0]),\r\n            newstroke = false;\r\n            !stroke && (newstroke = stroke = createNode(\"stroke\"));\r\n            if ((params.stroke && params.stroke != \"none\") ||\r\n                params[\"stroke-width\"] ||\r\n                params[\"stroke-opacity\"] != null ||\r\n                params[\"stroke-dasharray\"] ||\r\n                params[\"stroke-miterlimit\"] ||\r\n                params[\"stroke-linejoin\"] ||\r\n                params[\"stroke-linecap\"]) {\r\n                stroke.on = true;\r\n            }\r\n            (params.stroke == \"none\" || params.stroke === null || stroke.on == null || params.stroke == 0 || params[\"stroke-width\"] == 0) && (stroke.on = false);\r\n            var strokeColor = R.getRGB(params.stroke);\r\n            stroke.on && params.stroke && (stroke.color = strokeColor.hex);\r\n            opacity = ((+a[\"stroke-opacity\"] + 1 || 2) - 1) * ((+a.opacity + 1 || 2) - 1) * ((+strokeColor.o + 1 || 2) - 1);\r\n            var width = (toFloat(params[\"stroke-width\"]) || 1) * .75;\r\n            opacity = mmin(mmax(opacity, 0), 1);\r\n            params[\"stroke-width\"] == null && (width = a[\"stroke-width\"]);\r\n            params[\"stroke-width\"] && (stroke.weight = width);\r\n            width && width < 1 && (opacity *= width) && (stroke.weight = 1);\r\n            stroke.opacity = opacity;\r\n        \r\n            params[\"stroke-linejoin\"] && (stroke.joinstyle = params[\"stroke-linejoin\"] || \"miter\");\r\n            stroke.miterlimit = params[\"stroke-miterlimit\"] || 8;\r\n            params[\"stroke-linecap\"] && (stroke.endcap = params[\"stroke-linecap\"] == \"butt\" ? \"flat\" : params[\"stroke-linecap\"] == \"square\" ? \"square\" : \"round\");\r\n            if (\"stroke-dasharray\" in params) {\r\n                var dasharray = {\r\n                    \"-\": \"shortdash\",\r\n                    \".\": \"shortdot\",\r\n                    \"-.\": \"shortdashdot\",\r\n                    \"-..\": \"shortdashdotdot\",\r\n                    \". \": \"dot\",\r\n                    \"- \": \"dash\",\r\n                    \"--\": \"longdash\",\r\n                    \"- .\": \"dashdot\",\r\n                    \"--.\": \"longdashdot\",\r\n                    \"--..\": \"longdashdotdot\"\r\n                };\r\n                stroke.dashstyle = dasharray[has](params[\"stroke-dasharray\"]) ? dasharray[params[\"stroke-dasharray\"]] : E;\r\n            }\r\n            newstroke && node.appendChild(stroke);\r\n        }\r\n        if (res.type == \"text\") {\r\n            res.paper.canvas.style.display = E;\r\n            var span = res.paper.span,\r\n                m = 100,\r\n                fontSize = a.font && a.font.match(/\\d+(?:\\.\\d*)?(?=px)/);\r\n            s = span.style;\r\n            a.font && (s.font = a.font);\r\n            a[\"font-family\"] && (s.fontFamily = a[\"font-family\"]);\r\n            a[\"font-weight\"] && (s.fontWeight = a[\"font-weight\"]);\r\n            a[\"font-style\"] && (s.fontStyle = a[\"font-style\"]);\r\n            fontSize = toFloat(a[\"font-size\"] || fontSize && fontSize[0]) || 10;\r\n            s.fontSize = fontSize * m + \"px\";\r\n            res.textpath.string && (span.innerHTML = Str(res.textpath.string).replace(/</g, \"&#60;\").replace(/&/g, \"&#38;\").replace(/\\n/g, \"<br>\"));\r\n            var brect = span.getBoundingClientRect();\r\n            res.W = a.w = (brect.right - brect.left) / m;\r\n            res.H = a.h = (brect.bottom - brect.top) / m;\r\n            // res.paper.canvas.style.display = \"none\";\r\n            res.X = a.x;\r\n            res.Y = a.y + res.H / 2;\r\n\r\n            (\"x\" in params || \"y\" in params) && (res.path.v = R.format(\"m{0},{1}l{2},{1}\", round(a.x * zoom), round(a.y * zoom), round(a.x * zoom) + 1));\r\n            var dirtyattrs = [\"x\", \"y\", \"text\", \"font\", \"font-family\", \"font-weight\", \"font-style\", \"font-size\"];\r\n            for (var d = 0, dd = dirtyattrs.length; d < dd; d++) if (dirtyattrs[d] in params) {\r\n                res._.dirty = 1;\r\n                break;\r\n            }\r\n        \r\n            // text-anchor emulation\r\n            switch (a[\"text-anchor\"]) {\r\n                case \"start\":\r\n                    res.textpath.style[\"v-text-align\"] = \"left\";\r\n                    res.bbx = res.W / 2;\r\n                break;\r\n                case \"end\":\r\n                    res.textpath.style[\"v-text-align\"] = \"right\";\r\n                    res.bbx = -res.W / 2;\r\n                break;\r\n                default:\r\n                    res.textpath.style[\"v-text-align\"] = \"center\";\r\n                    res.bbx = 0;\r\n                break;\r\n            }\r\n            res.textpath.style[\"v-text-kern\"] = true;\r\n        }\r\n        // res.paper.canvas.style.display = E;\r\n    },\r\n    addGradientFill = function (o, gradient, fill) {\r\n        o.attrs = o.attrs || {};\r\n        var attrs = o.attrs,\r\n            pow = Math.pow,\r\n            opacity,\r\n            oindex,\r\n            type = \"linear\",\r\n            fxfy = \".5 .5\";\r\n        o.attrs.gradient = gradient;\r\n        gradient = Str(gradient).replace(R._radial_gradient, function (all, fx, fy) {\r\n            type = \"radial\";\r\n            if (fx && fy) {\r\n                fx = toFloat(fx);\r\n                fy = toFloat(fy);\r\n                pow(fx - .5, 2) + pow(fy - .5, 2) > .25 && (fy = math.sqrt(.25 - pow(fx - .5, 2)) * ((fy > .5) * 2 - 1) + .5);\r\n                fxfy = fx + S + fy;\r\n            }\r\n            return E;\r\n        });\r\n        gradient = gradient.split(/\\s*\\-\\s*/);\r\n        if (type == \"linear\") {\r\n            var angle = gradient.shift();\r\n            angle = -toFloat(angle);\r\n            if (isNaN(angle)) {\r\n                return null;\r\n            }\r\n        }\r\n        var dots = R._parseDots(gradient);\r\n        if (!dots) {\r\n            return null;\r\n        }\r\n        o = o.shape || o.node;\r\n        if (dots.length) {\r\n            o.removeChild(fill);\r\n            fill.on = true;\r\n            fill.method = \"none\";\r\n            fill.color = dots[0].color;\r\n            fill.color2 = dots[dots.length - 1].color;\r\n            var clrs = [];\r\n            for (var i = 0, ii = dots.length; i < ii; i++) {\r\n                dots[i].offset && clrs.push(dots[i].offset + S + dots[i].color);\r\n            }\r\n            fill.colors = clrs.length ? clrs.join() : \"0% \" + fill.color;\r\n            if (type == \"radial\") {\r\n                fill.type = \"gradientTitle\";\r\n                fill.focus = \"100%\";\r\n                fill.focussize = \"0 0\";\r\n                fill.focusposition = fxfy;\r\n                fill.angle = 0;\r\n            } else {\r\n                // fill.rotate= true;\r\n                fill.type = \"gradient\";\r\n                fill.angle = (270 - angle) % 360;\r\n            }\r\n            o.appendChild(fill);\r\n        }\r\n        return 1;\r\n    },\r\n    Element = function (node, vml) {\r\n        this[0] = this.node = node;\r\n        node.raphael = true;\r\n        this.id = R._oid++;\r\n        node.raphaelid = this.id;\r\n        this.X = 0;\r\n        this.Y = 0;\r\n        this.attrs = {};\r\n        this.paper = vml;\r\n        this.matrix = R.matrix();\r\n        this._ = {\r\n            transform: [],\r\n            sx: 1,\r\n            sy: 1,\r\n            dx: 0,\r\n            dy: 0,\r\n            deg: 0,\r\n            dirty: 1,\r\n            dirtyT: 1\r\n        };\r\n        !vml.bottom && (vml.bottom = this);\r\n        this.prev = vml.top;\r\n        vml.top && (vml.top.next = this);\r\n        vml.top = this;\r\n        this.next = null;\r\n    };\r\n    var elproto = R.el;\r\n\r\n    Element.prototype = elproto;\r\n    elproto.constructor = Element;\r\n    elproto.transform = function (tstr) {\r\n        if (tstr == null) {\r\n            return this._.transform;\r\n        }\r\n        var vbs = this.paper._viewBoxShift,\r\n            vbt = vbs ? \"s\" + [vbs.scale, vbs.scale] + \"-1-1t\" + [vbs.dx, vbs.dy] : E,\r\n            oldt;\r\n        if (vbs) {\r\n            oldt = tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, this._.transform || E);\r\n        }\r\n        R._extractTransform(this, vbt + tstr);\r\n        var matrix = this.matrix.clone(),\r\n            skew = this.skew,\r\n            o = this.node,\r\n            split,\r\n            isGrad = ~Str(this.attrs.fill).indexOf(\"-\"),\r\n            isPatt = !Str(this.attrs.fill).indexOf(\"url(\");\r\n        matrix.translate(1, 1);\r\n        if (isPatt || isGrad || this.type == \"image\") {\r\n            skew.matrix = \"1 0 0 1\";\r\n            skew.offset = \"0 0\";\r\n            split = matrix.split();\r\n            if ((isGrad && split.noRotation) || !split.isSimple) {\r\n                o.style.filter = matrix.toFilter();\r\n                var bb = this.getBBox(),\r\n                    bbt = this.getBBox(1),\r\n                    dx = bb.x - bbt.x,\r\n                    dy = bb.y - bbt.y;\r\n                o.coordorigin = (dx * -zoom) + S + (dy * -zoom);\r\n                setCoords(this, 1, 1, dx, dy, 0);\r\n            } else {\r\n                o.style.filter = E;\r\n                setCoords(this, split.scalex, split.scaley, split.dx, split.dy, split.rotate);\r\n            }\r\n        } else {\r\n            o.style.filter = E;\r\n            skew.matrix = Str(matrix);\r\n            skew.offset = matrix.offset();\r\n        }\r\n        if (oldt !== null) { // empty string value is true as well\r\n            this._.transform = oldt;\r\n            R._extractTransform(this, oldt);\r\n        }\r\n        return this;\r\n    };\r\n    elproto.rotate = function (deg, cx, cy) {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        if (deg == null) {\r\n            return;\r\n        }\r\n        deg = Str(deg).split(separator);\r\n        if (deg.length - 1) {\r\n            cx = toFloat(deg[1]);\r\n            cy = toFloat(deg[2]);\r\n        }\r\n        deg = toFloat(deg[0]);\r\n        (cy == null) && (cx = cy);\r\n        if (cx == null || cy == null) {\r\n            var bbox = this.getBBox(1);\r\n            cx = bbox.x + bbox.width / 2;\r\n            cy = bbox.y + bbox.height / 2;\r\n        }\r\n        this._.dirtyT = 1;\r\n        this.transform(this._.transform.concat([[\"r\", deg, cx, cy]]));\r\n        return this;\r\n    };\r\n    elproto.translate = function (dx, dy) {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        dx = Str(dx).split(separator);\r\n        if (dx.length - 1) {\r\n            dy = toFloat(dx[1]);\r\n        }\r\n        dx = toFloat(dx[0]) || 0;\r\n        dy = +dy || 0;\r\n        if (this._.bbox) {\r\n            this._.bbox.x += dx;\r\n            this._.bbox.y += dy;\r\n        }\r\n        this.transform(this._.transform.concat([[\"t\", dx, dy]]));\r\n        return this;\r\n    };\r\n    elproto.scale = function (sx, sy, cx, cy) {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        sx = Str(sx).split(separator);\r\n        if (sx.length - 1) {\r\n            sy = toFloat(sx[1]);\r\n            cx = toFloat(sx[2]);\r\n            cy = toFloat(sx[3]);\r\n            isNaN(cx) && (cx = null);\r\n            isNaN(cy) && (cy = null);\r\n        }\r\n        sx = toFloat(sx[0]);\r\n        (sy == null) && (sy = sx);\r\n        (cy == null) && (cx = cy);\r\n        if (cx == null || cy == null) {\r\n            var bbox = this.getBBox(1);\r\n        }\r\n        cx = cx == null ? bbox.x + bbox.width / 2 : cx;\r\n        cy = cy == null ? bbox.y + bbox.height / 2 : cy;\r\n    \r\n        this.transform(this._.transform.concat([[\"s\", sx, sy, cx, cy]]));\r\n        this._.dirtyT = 1;\r\n        return this;\r\n    };\r\n    elproto.hide = function () {\r\n        !this.removed && (this.node.style.display = \"none\");\r\n        return this;\r\n    };\r\n    elproto.show = function () {\r\n        !this.removed && (this.node.style.display = E);\r\n        return this;\r\n    };\r\n    // Needed to fix the vml setViewBox issues\r\n    elproto.auxGetBBox = R.el.getBBox;\r\n    elproto.getBBox = function(){\r\n      var b = this.auxGetBBox();\r\n      if (this.paper && this.paper._viewBoxShift)\r\n      {\r\n        var c = {};\r\n        var z = 1/this.paper._viewBoxShift.scale;\r\n        c.x = b.x - this.paper._viewBoxShift.dx;\r\n        c.x *= z;\r\n        c.y = b.y - this.paper._viewBoxShift.dy;\r\n        c.y *= z;\r\n        c.width  = b.width  * z;\r\n        c.height = b.height * z;\r\n        c.x2 = c.x + c.width;\r\n        c.y2 = c.y + c.height;\r\n        return c;\r\n      }\r\n      return b;\r\n    };\r\n    elproto._getBBox = function () {\r\n        if (this.removed) {\r\n            return {};\r\n        }\r\n        return {\r\n            x: this.X + (this.bbx || 0) - this.W / 2,\r\n            y: this.Y - this.H,\r\n            width: this.W,\r\n            height: this.H\r\n        };\r\n    };\r\n    elproto.remove = function () {\r\n        if (this.removed || !this.node.parentNode) {\r\n            return;\r\n        }\r\n        this.paper.__set__ && this.paper.__set__.exclude(this);\r\n        R.eve.unbind(\"raphael.*.*.\" + this.id);\r\n        R._tear(this, this.paper);\r\n        this.node.parentNode.removeChild(this.node);\r\n        this.shape && this.shape.parentNode.removeChild(this.shape);\r\n        for (var i in this) {\r\n            this[i] = typeof this[i] == \"function\" ? R._removedFactory(i) : null;\r\n        }\r\n        this.removed = true;\r\n    };\r\n    elproto.attr = function (name, value) {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        if (name == null) {\r\n            var res = {};\r\n            for (var a in this.attrs) if (this.attrs[has](a)) {\r\n                res[a] = this.attrs[a];\r\n            }\r\n            res.gradient && res.fill == \"none\" && (res.fill = res.gradient) && delete res.gradient;\r\n            res.transform = this._.transform;\r\n            return res;\r\n        }\r\n        if (value == null && R.is(name, \"string\")) {\r\n            if (name == fillString && this.attrs.fill == \"none\" && this.attrs.gradient) {\r\n                return this.attrs.gradient;\r\n            }\r\n            var names = name.split(separator),\r\n                out = {};\r\n            for (var i = 0, ii = names.length; i < ii; i++) {\r\n                name = names[i];\r\n                if (name in this.attrs) {\r\n                    out[name] = this.attrs[name];\r\n                } else if (R.is(this.paper.customAttributes[name], \"function\")) {\r\n                    out[name] = this.paper.customAttributes[name].def;\r\n                } else {\r\n                    out[name] = R._availableAttrs[name];\r\n                }\r\n            }\r\n            return ii - 1 ? out : out[names[0]];\r\n        }\r\n        if (this.attrs && value == null && R.is(name, \"array\")) {\r\n            out = {};\r\n            for (i = 0, ii = name.length; i < ii; i++) {\r\n                out[name[i]] = this.attr(name[i]);\r\n            }\r\n            return out;\r\n        }\r\n        var params;\r\n        if (value != null) {\r\n            params = {};\r\n            params[name] = value;\r\n        }\r\n        value == null && R.is(name, \"object\") && (params = name);\r\n        for (var key in params) {\r\n            eve(\"raphael.attr.\" + key + \".\" + this.id, this, params[key]);\r\n        }\r\n        if (params) {\r\n            for (key in this.paper.customAttributes) if (this.paper.customAttributes[has](key) && params[has](key) && R.is(this.paper.customAttributes[key], \"function\")) {\r\n                var par = this.paper.customAttributes[key].apply(this, [].concat(params[key]));\r\n                this.attrs[key] = params[key];\r\n                for (var subkey in par) if (par[has](subkey)) {\r\n                    params[subkey] = par[subkey];\r\n                }\r\n            }\r\n            // this.paper.canvas.style.display = \"none\";\r\n            if (params.text && this.type == \"text\") {\r\n                this.textpath.string = params.text;\r\n            }\r\n            setFillAndStroke(this, params);\r\n            // this.paper.canvas.style.display = E;\r\n        }\r\n        return this;\r\n    };\r\n    elproto.toFront = function () {\r\n        !this.removed && this.node.parentNode.appendChild(this.node);\r\n        this.paper && this.paper.top != this && R._tofront(this, this.paper);\r\n        return this;\r\n    };\r\n    elproto.toBack = function () {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        if (this.node.parentNode.firstChild != this.node) {\r\n            this.node.parentNode.insertBefore(this.node, this.node.parentNode.firstChild);\r\n            R._toback(this, this.paper);\r\n        }\r\n        return this;\r\n    };\r\n    elproto.insertAfter = function (element) {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        if (element.constructor == R.st.constructor) {\r\n            element = element[element.length - 1];\r\n        }\r\n        if (element.node.nextSibling) {\r\n            element.node.parentNode.insertBefore(this.node, element.node.nextSibling);\r\n        } else {\r\n            element.node.parentNode.appendChild(this.node);\r\n        }\r\n        R._insertafter(this, element, this.paper);\r\n        return this;\r\n    };\r\n    elproto.insertBefore = function (element) {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        if (element.constructor == R.st.constructor) {\r\n            element = element[0];\r\n        }\r\n        element.node.parentNode.insertBefore(this.node, element.node);\r\n        R._insertbefore(this, element, this.paper);\r\n        return this;\r\n    };\r\n    elproto.blur = function (size) {\r\n        var s = this.node.runtimeStyle,\r\n            f = s.filter;\r\n        f = f.replace(blurregexp, E);\r\n        if (+size !== 0) {\r\n            this.attrs.blur = size;\r\n            s.filter = f + S + ms + \".Blur(pixelradius=\" + (+size || 1.5) + \")\";\r\n            s.margin = R.format(\"-{0}px 0 0 -{0}px\", round(+size || 1.5));\r\n        } else {\r\n            s.filter = f;\r\n            s.margin = 0;\r\n            delete this.attrs.blur;\r\n        }\r\n        return this;\r\n    };\r\n\r\n    R._engine.path = function (pathString, vml) {\r\n        var el = createNode(\"shape\");\r\n        el.style.cssText = cssDot;\r\n        el.coordsize = zoom + S + zoom;\r\n        el.coordorigin = vml.coordorigin;\r\n        var p = new Element(el, vml),\r\n            attr = {fill: \"none\", stroke: \"#000\"};\r\n        pathString && (attr.path = pathString);\r\n        p.type = \"path\";\r\n        p.path = [];\r\n        p.Path = E;\r\n        setFillAndStroke(p, attr);\r\n        vml.canvas.appendChild(el);\r\n        var skew = createNode(\"skew\");\r\n        skew.on = true;\r\n        el.appendChild(skew);\r\n        p.skew = skew;\r\n        p.transform(E);\r\n        return p;\r\n    };\r\n    R._engine.rect = function (vml, x, y, w, h, r) {\r\n        var path = R._rectPath(x, y, w, h, r),\r\n            res = vml.path(path),\r\n            a = res.attrs;\r\n        res.X = a.x = x;\r\n        res.Y = a.y = y;\r\n        res.W = a.width = w;\r\n        res.H = a.height = h;\r\n        a.r = r;\r\n        a.path = path;\r\n        res.type = \"rect\";\r\n        return res;\r\n    };\r\n    R._engine.ellipse = function (vml, x, y, rx, ry) {\r\n        var res = vml.path(),\r\n            a = res.attrs;\r\n        res.X = x - rx;\r\n        res.Y = y - ry;\r\n        res.W = rx * 2;\r\n        res.H = ry * 2;\r\n        res.type = \"ellipse\";\r\n        setFillAndStroke(res, {\r\n            cx: x,\r\n            cy: y,\r\n            rx: rx,\r\n            ry: ry\r\n        });\r\n        return res;\r\n    };\r\n    R._engine.circle = function (vml, x, y, r) {\r\n        var res = vml.path(),\r\n            a = res.attrs;\r\n        res.X = x - r;\r\n        res.Y = y - r;\r\n        res.W = res.H = r * 2;\r\n        res.type = \"circle\";\r\n        setFillAndStroke(res, {\r\n            cx: x,\r\n            cy: y,\r\n            r: r\r\n        });\r\n        return res;\r\n    };\r\n    R._engine.image = function (vml, src, x, y, w, h) {\r\n        var path = R._rectPath(x, y, w, h),\r\n            res = vml.path(path).attr({stroke: \"none\"}),\r\n            a = res.attrs,\r\n            node = res.node,\r\n            fill = node.getElementsByTagName(fillString)[0];\r\n        a.src = src;\r\n        res.X = a.x = x;\r\n        res.Y = a.y = y;\r\n        res.W = a.width = w;\r\n        res.H = a.height = h;\r\n        a.path = path;\r\n        res.type = \"image\";\r\n        fill.parentNode == node && node.removeChild(fill);\r\n        fill.rotate = true;\r\n        fill.src = src;\r\n        fill.type = \"tile\";\r\n        res._.fillpos = [x, y];\r\n        res._.fillsize = [w, h];\r\n        node.appendChild(fill);\r\n        setCoords(res, 1, 1, 0, 0, 0);\r\n        return res;\r\n    };\r\n    R._engine.text = function (vml, x, y, text) {\r\n        var el = createNode(\"shape\"),\r\n            path = createNode(\"path\"),\r\n            o = createNode(\"textpath\");\r\n        x = x || 0;\r\n        y = y || 0;\r\n        text = text || \"\";\r\n        path.v = R.format(\"m{0},{1}l{2},{1}\", round(x * zoom), round(y * zoom), round(x * zoom) + 1);\r\n        path.textpathok = true;\r\n        o.string = Str(text);\r\n        o.on = true;\r\n        el.style.cssText = cssDot;\r\n        el.coordsize = zoom + S + zoom;\r\n        el.coordorigin = \"0 0\";\r\n        var p = new Element(el, vml),\r\n            attr = {\r\n                fill: \"#000\",\r\n                stroke: \"none\",\r\n                font: R._availableAttrs.font,\r\n                text: text\r\n            };\r\n        p.shape = el;\r\n        p.path = path;\r\n        p.textpath = o;\r\n        p.type = \"text\";\r\n        p.attrs.text = Str(text);\r\n        p.attrs.x = x;\r\n        p.attrs.y = y;\r\n        p.attrs.w = 1;\r\n        p.attrs.h = 1;\r\n        setFillAndStroke(p, attr);\r\n        el.appendChild(o);\r\n        el.appendChild(path);\r\n        vml.canvas.appendChild(el);\r\n        var skew = createNode(\"skew\");\r\n        skew.on = true;\r\n        el.appendChild(skew);\r\n        p.skew = skew;\r\n        p.transform(E);\r\n        return p;\r\n    };\r\n    R._engine.setSize = function (width, height) {\r\n        var cs = this.canvas.style;\r\n        this.width = width;\r\n        this.height = height;\r\n        width == +width && (width += \"px\");\r\n        height == +height && (height += \"px\");\r\n        cs.width = width;\r\n        cs.height = height;\r\n        cs.clip = \"rect(0 \" + width + \" \" + height + \" 0)\";\r\n        if (this._viewBox) {\r\n            R._engine.setViewBox.apply(this, this._viewBox);\r\n        }\r\n        return this;\r\n    };\r\n    R._engine.setViewBox = function (x, y, w, h, fit) {\r\n        R.eve(\"raphael.setViewBox\", this, this._viewBox, [x, y, w, h, fit]);\r\n        var paperSize = this.getSize(),\r\n            width = paperSize.width,\r\n            height = paperSize.height,\r\n            H, W;\r\n        if (fit) {\r\n            H = height / h;\r\n            W = width / w;\r\n            if (w * H < width) {\r\n                x -= (width - w * H) / 2 / H;\r\n            }\r\n            if (h * W < height) {\r\n                y -= (height - h * W) / 2 / W;\r\n            }\r\n        }\r\n        this._viewBox = [x, y, w, h, !!fit];\r\n        this._viewBoxShift = {\r\n            dx: -x,\r\n            dy: -y,\r\n            scale: paperSize\r\n        };\r\n        this.forEach(function (el) {\r\n            el.transform(\"...\");\r\n        });\r\n        return this;\r\n    };\r\n    var createNode;\r\n    R._engine.initWin = function (win) {\r\n            var doc = win.document;\r\n            if (doc.styleSheets.length < 31) {\r\n                doc.createStyleSheet().addRule(\".rvml\", \"behavior:url(#default#VML)\");\r\n            } else {\r\n                // no more room, add to the existing one\r\n                // http://msdn.microsoft.com/en-us/library/ms531194%28VS.85%29.aspx\r\n                doc.styleSheets[0].addRule(\".rvml\", \"behavior:url(#default#VML)\");\r\n            }\r\n            try {\r\n                !doc.namespaces.rvml && doc.namespaces.add(\"rvml\", \"urn:schemas-microsoft-com:vml\");\r\n                createNode = function (tagName) {\r\n                    return doc.createElement('<rvml:' + tagName + ' class=\"rvml\">');\r\n                };\r\n            } catch (e) {\r\n                createNode = function (tagName) {\r\n                    return doc.createElement('<' + tagName + ' xmlns=\"urn:schemas-microsoft.com:vml\" class=\"rvml\">');\r\n                };\r\n            }\r\n        };\r\n    R._engine.initWin(R._g.win);\r\n    R._engine.create = function () {\r\n        var con = R._getContainer.apply(0, arguments),\r\n            container = con.container,\r\n            height = con.height,\r\n            s,\r\n            width = con.width,\r\n            x = con.x,\r\n            y = con.y;\r\n        if (!container) {\r\n            throw new Error(\"VML container not found.\");\r\n        }\r\n        var res = new R._Paper,\r\n            c = res.canvas = R._g.doc.createElement(\"div\"),\r\n            cs = c.style;\r\n        x = x || 0;\r\n        y = y || 0;\r\n        width = width || 512;\r\n        height = height || 342;\r\n        res.width = width;\r\n        res.height = height;\r\n        width == +width && (width += \"px\");\r\n        height == +height && (height += \"px\");\r\n        res.coordsize = zoom * 1e3 + S + zoom * 1e3;\r\n        res.coordorigin = \"0 0\";\r\n        res.span = R._g.doc.createElement(\"span\");\r\n        res.span.style.cssText = \"position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;\";\r\n        c.appendChild(res.span);\r\n        cs.cssText = R.format(\"top:0;left:0;width:{0};height:{1};display:inline-block;position:relative;clip:rect(0 {0} {1} 0);overflow:hidden\", width, height);\r\n        if (container == 1) {\r\n            R._g.doc.body.appendChild(c);\r\n            cs.left = x + \"px\";\r\n            cs.top = y + \"px\";\r\n            cs.position = \"absolute\";\r\n        } else {\r\n            if (container.firstChild) {\r\n                container.insertBefore(c, container.firstChild);\r\n            } else {\r\n                container.appendChild(c);\r\n            }\r\n        }\r\n        res.renderfix = function () {};\r\n        return res;\r\n    };\r\n    R.prototype.clear = function () {\r\n        R.eve(\"raphael.clear\", this);\r\n        this.canvas.innerHTML = E;\r\n        this.span = R._g.doc.createElement(\"span\");\r\n        this.span.style.cssText = \"position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;display:inline;\";\r\n        this.canvas.appendChild(this.span);\r\n        this.bottom = this.top = null;\r\n    };\r\n    R.prototype.remove = function () {\r\n        R.eve(\"raphael.remove\", this);\r\n        this.canvas.parentNode.removeChild(this.canvas);\r\n        for (var i in this) {\r\n            this[i] = typeof this[i] == \"function\" ? R._removedFactory(i) : null;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    var setproto = R.st;\r\n    for (var method in elproto) if (elproto[has](method) && !setproto[has](method)) {\r\n        setproto[method] = (function (methodname) {\r\n            return function () {\r\n                var arg = arguments;\r\n                return this.forEach(function (el) {\r\n                    el[methodname].apply(el, arg);\r\n                });\r\n            };\r\n        })(method);\r\n    }\r\n})();\r\n\r\n    // EXPOSE\r\n    // SVG and VML are appended just before the EXPOSE line\r\n    // Even with AMD, Raphael should be defined globally\r\n    oldRaphael.was ? (g.win.Raphael = R) : (Raphael = R);\r\n\r\n    if(typeof exports == \"object\"){\r\n        module.exports = R;\r\n    }\r\n    return R;\r\n}));","// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\r\n// \r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n// \r\n// http://www.apache.org/licenses/LICENSE-2.0\r\n// \r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// ┌────────────────────────────────────────────────────────────┐ \\\\\r\n// │ Eve 0.5.0 - JavaScript Events Library                      │ \\\\\r\n// ├────────────────────────────────────────────────────────────┤ \\\\\r\n// │ Author Dmitry Baranovskiy (http://dmitry.baranovskiy.com/) │ \\\\\r\n// └────────────────────────────────────────────────────────────┘ \\\\\r\n\r\n(function (glob) {\r\n    var version = \"0.5.0\",\r\n        has = \"hasOwnProperty\",\r\n        separator = /[\\.\\/]/,\r\n        comaseparator = /\\s*,\\s*/,\r\n        wildcard = \"*\",\r\n        fun = function () {},\r\n        numsort = function (a, b) {\r\n            return a - b;\r\n        },\r\n        current_event,\r\n        stop,\r\n        events = {n: {}},\r\n        firstDefined = function () {\r\n            for (var i = 0, ii = this.length; i < ii; i++) {\r\n                if (typeof this[i] != \"undefined\") {\r\n                    return this[i];\r\n                }\r\n            }\r\n        },\r\n        lastDefined = function () {\r\n            var i = this.length;\r\n            while (--i) {\r\n                if (typeof this[i] != \"undefined\") {\r\n                    return this[i];\r\n                }\r\n            }\r\n        },\r\n        objtos = Object.prototype.toString,\r\n        Str = String,\r\n        isArray = Array.isArray || function (ar) {\r\n            return ar instanceof Array || objtos.call(ar) == \"[object Array]\";\r\n        };\r\n    /*\\\r\n     * eve\r\n     [ method ]\r\n\r\n     * Fires event with given `name`, given scope and other parameters.\r\n\r\n     > Arguments\r\n\r\n     - name (string) name of the *event*, dot (`.`) or slash (`/`) separated\r\n     - scope (object) context for the event handlers\r\n     - varargs (...) the rest of arguments will be sent to event handlers\r\n\r\n     = (object) array of returned values from the listeners. Array has two methods `.firstDefined()` and `.lastDefined()` to get first or last not `undefined` value.\r\n    \\*/\r\n        eve = function (name, scope) {\r\n            var e = events,\r\n                oldstop = stop,\r\n                args = Array.prototype.slice.call(arguments, 2),\r\n                listeners = eve.listeners(name),\r\n                z = 0,\r\n                f = false,\r\n                l,\r\n                indexed = [],\r\n                queue = {},\r\n                out = [],\r\n                ce = current_event,\r\n                errors = [];\r\n            out.firstDefined = firstDefined;\r\n            out.lastDefined = lastDefined;\r\n            current_event = name;\r\n            stop = 0;\r\n            for (var i = 0, ii = listeners.length; i < ii; i++) if (\"zIndex\" in listeners[i]) {\r\n                indexed.push(listeners[i].zIndex);\r\n                if (listeners[i].zIndex < 0) {\r\n                    queue[listeners[i].zIndex] = listeners[i];\r\n                }\r\n            }\r\n            indexed.sort(numsort);\r\n            while (indexed[z] < 0) {\r\n                l = queue[indexed[z++]];\r\n                out.push(l.apply(scope, args));\r\n                if (stop) {\r\n                    stop = oldstop;\r\n                    return out;\r\n                }\r\n            }\r\n            for (i = 0; i < ii; i++) {\r\n                l = listeners[i];\r\n                if (\"zIndex\" in l) {\r\n                    if (l.zIndex == indexed[z]) {\r\n                        out.push(l.apply(scope, args));\r\n                        if (stop) {\r\n                            break;\r\n                        }\r\n                        do {\r\n                            z++;\r\n                            l = queue[indexed[z]];\r\n                            l && out.push(l.apply(scope, args));\r\n                            if (stop) {\r\n                                break;\r\n                            }\r\n                        } while (l)\r\n                    } else {\r\n                        queue[l.zIndex] = l;\r\n                    }\r\n                } else {\r\n                    out.push(l.apply(scope, args));\r\n                    if (stop) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            stop = oldstop;\r\n            current_event = ce;\r\n            return out;\r\n        };\r\n        // Undocumented. Debug only.\r\n        eve._events = events;\r\n    /*\\\r\n     * eve.listeners\r\n     [ method ]\r\n\r\n     * Internal method which gives you array of all event handlers that will be triggered by the given `name`.\r\n\r\n     > Arguments\r\n\r\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated\r\n\r\n     = (array) array of event handlers\r\n    \\*/\r\n    eve.listeners = function (name) {\r\n        var names = isArray(name) ? name : name.split(separator),\r\n            e = events,\r\n            item,\r\n            items,\r\n            k,\r\n            i,\r\n            ii,\r\n            j,\r\n            jj,\r\n            nes,\r\n            es = [e],\r\n            out = [];\r\n        for (i = 0, ii = names.length; i < ii; i++) {\r\n            nes = [];\r\n            for (j = 0, jj = es.length; j < jj; j++) {\r\n                e = es[j].n;\r\n                items = [e[names[i]], e[wildcard]];\r\n                k = 2;\r\n                while (k--) {\r\n                    item = items[k];\r\n                    if (item) {\r\n                        nes.push(item);\r\n                        out = out.concat(item.f || []);\r\n                    }\r\n                }\r\n            }\r\n            es = nes;\r\n        }\r\n        return out;\r\n    };\r\n    /*\\\r\n     * eve.separator\r\n     [ method ]\r\n\r\n     * If for some reasons you don’t like default separators (`.` or `/`) you can specify yours\r\n     * here. Be aware that if you pass a string longer than one character it will be treated as\r\n     * a list of characters.\r\n\r\n     - separator (string) new separator. Empty string resets to default: `.` or `/`.\r\n    \\*/\r\n    eve.separator = function (sep) {\r\n        if (sep) {\r\n            sep = Str(sep).replace(/(?=[\\.\\^\\]\\[\\-])/g, \"\\\\\");\r\n            sep = \"[\" + sep + \"]\";\r\n            separator = new RegExp(sep);\r\n        } else {\r\n            separator = /[\\.\\/]/;\r\n        }\r\n    };\r\n    /*\\\r\n     * eve.on\r\n     [ method ]\r\n     **\r\n     * Binds given event handler with a given name. You can use wildcards “`*`” for the names:\r\n     | eve.on(\"*.under.*\", f);\r\n     | eve(\"mouse.under.floor\"); // triggers f\r\n     * Use @eve to trigger the listener.\r\n     **\r\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\r\n     - f (function) event handler function\r\n     **\r\n     - name (array) if you don’t want to use separators, you can use array of strings\r\n     - f (function) event handler function\r\n     **\r\n     = (function) returned function accepts a single numeric parameter that represents z-index of the handler. It is an optional feature and only used when you need to ensure that some subset of handlers will be invoked in a given order, despite of the order of assignment. \r\n     > Example:\r\n     | eve.on(\"mouse\", eatIt)(2);\r\n     | eve.on(\"mouse\", scream);\r\n     | eve.on(\"mouse\", catchIt)(1);\r\n     * This will ensure that `catchIt` function will be called before `eatIt`.\r\n     *\r\n     * If you want to put your handler before non-indexed handlers, specify a negative value.\r\n     * Note: I assume most of the time you don’t need to worry about z-index, but it’s nice to have this feature “just in case”.\r\n    \\*/\r\n    eve.on = function (name, f) {\r\n        if (typeof f != \"function\") {\r\n            return function () {};\r\n        }\r\n        var names = isArray(name) ? (isArray(name[0]) ? name : [name]) : Str(name).split(comaseparator);\r\n        for (var i = 0, ii = names.length; i < ii; i++) {\r\n            (function (name) {\r\n                var names = isArray(name) ? name : Str(name).split(separator),\r\n                    e = events,\r\n                    exist;\r\n                for (var i = 0, ii = names.length; i < ii; i++) {\r\n                    e = e.n;\r\n                    e = e.hasOwnProperty(names[i]) && e[names[i]] || (e[names[i]] = {n: {}});\r\n                }\r\n                e.f = e.f || [];\r\n                for (i = 0, ii = e.f.length; i < ii; i++) if (e.f[i] == f) {\r\n                    exist = true;\r\n                    break;\r\n                }\r\n                !exist && e.f.push(f);\r\n            }(names[i]));\r\n        }\r\n        return function (zIndex) {\r\n            if (+zIndex == +zIndex) {\r\n                f.zIndex = +zIndex;\r\n            }\r\n        };\r\n    };\r\n    /*\\\r\n     * eve.f\r\n     [ method ]\r\n     **\r\n     * Returns function that will fire given event with optional arguments.\r\n     * Arguments that will be passed to the result function will be also\r\n     * concated to the list of final arguments.\r\n     | el.onclick = eve.f(\"click\", 1, 2);\r\n     | eve.on(\"click\", function (a, b, c) {\r\n     |     console.log(a, b, c); // 1, 2, [event object]\r\n     | });\r\n     > Arguments\r\n     - event (string) event name\r\n     - varargs (…) and any other arguments\r\n     = (function) possible event handler function\r\n    \\*/\r\n    eve.f = function (event) {\r\n        var attrs = [].slice.call(arguments, 1);\r\n        return function () {\r\n            eve.apply(null, [event, null].concat(attrs).concat([].slice.call(arguments, 0)));\r\n        };\r\n    };\r\n    /*\\\r\n     * eve.stop\r\n     [ method ]\r\n     **\r\n     * Is used inside an event handler to stop the event, preventing any subsequent listeners from firing.\r\n    \\*/\r\n    eve.stop = function () {\r\n        stop = 1;\r\n    };\r\n    /*\\\r\n     * eve.nt\r\n     [ method ]\r\n     **\r\n     * Could be used inside event handler to figure out actual name of the event.\r\n     **\r\n     > Arguments\r\n     **\r\n     - subname (string) #optional subname of the event\r\n     **\r\n     = (string) name of the event, if `subname` is not specified\r\n     * or\r\n     = (boolean) `true`, if current event’s name contains `subname`\r\n    \\*/\r\n    eve.nt = function (subname) {\r\n        var cur = isArray(current_event) ? current_event.join(\".\") : current_event;\r\n        if (subname) {\r\n            return new RegExp(\"(?:\\\\.|\\\\/|^)\" + subname + \"(?:\\\\.|\\\\/|$)\").test(cur);\r\n        }\r\n        return cur;\r\n    };\r\n    /*\\\r\n     * eve.nts\r\n     [ method ]\r\n     **\r\n     * Could be used inside event handler to figure out actual name of the event.\r\n     **\r\n     **\r\n     = (array) names of the event\r\n    \\*/\r\n    eve.nts = function () {\r\n        return isArray(current_event) ? current_event : current_event.split(separator);\r\n    };\r\n    /*\\\r\n     * eve.off\r\n     [ method ]\r\n     **\r\n     * Removes given function from the list of event listeners assigned to given name.\r\n     * If no arguments specified all the events will be cleared.\r\n     **\r\n     > Arguments\r\n     **\r\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\r\n     - f (function) event handler function\r\n    \\*/\r\n    /*\\\r\n     * eve.unbind\r\n     [ method ]\r\n     **\r\n     * See @eve.off\r\n    \\*/\r\n    eve.off = eve.unbind = function (name, f) {\r\n        if (!name) {\r\n            eve._events = events = {n: {}};\r\n            return;\r\n        }\r\n        var names = isArray(name) ? (isArray(name[0]) ? name : [name]) : Str(name).split(comaseparator);\r\n        if (names.length > 1) {\r\n            for (var i = 0, ii = names.length; i < ii; i++) {\r\n                eve.off(names[i], f);\r\n            }\r\n            return;\r\n        }\r\n        names = isArray(name) ? name : Str(name).split(separator);\r\n        var e,\r\n            key,\r\n            splice,\r\n            i, ii, j, jj,\r\n            cur = [events];\r\n        for (i = 0, ii = names.length; i < ii; i++) {\r\n            for (j = 0; j < cur.length; j += splice.length - 2) {\r\n                splice = [j, 1];\r\n                e = cur[j].n;\r\n                if (names[i] != wildcard) {\r\n                    if (e[names[i]]) {\r\n                        splice.push(e[names[i]]);\r\n                    }\r\n                } else {\r\n                    for (key in e) if (e[has](key)) {\r\n                        splice.push(e[key]);\r\n                    }\r\n                }\r\n                cur.splice.apply(cur, splice);\r\n            }\r\n        }\r\n        for (i = 0, ii = cur.length; i < ii; i++) {\r\n            e = cur[i];\r\n            while (e.n) {\r\n                if (f) {\r\n                    if (e.f) {\r\n                        for (j = 0, jj = e.f.length; j < jj; j++) if (e.f[j] == f) {\r\n                            e.f.splice(j, 1);\r\n                            break;\r\n                        }\r\n                        !e.f.length && delete e.f;\r\n                    }\r\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\r\n                        var funcs = e.n[key].f;\r\n                        for (j = 0, jj = funcs.length; j < jj; j++) if (funcs[j] == f) {\r\n                            funcs.splice(j, 1);\r\n                            break;\r\n                        }\r\n                        !funcs.length && delete e.n[key].f;\r\n                    }\r\n                } else {\r\n                    delete e.f;\r\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\r\n                        delete e.n[key].f;\r\n                    }\r\n                }\r\n                e = e.n;\r\n            }\r\n        }\r\n    };\r\n    /*\\\r\n     * eve.once\r\n     [ method ]\r\n     **\r\n     * Binds given event handler with a given name to only run once then unbind itself.\r\n     | eve.once(\"login\", f);\r\n     | eve(\"login\"); // triggers f\r\n     | eve(\"login\"); // no listeners\r\n     * Use @eve to trigger the listener.\r\n     **\r\n     > Arguments\r\n     **\r\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\r\n     - f (function) event handler function\r\n     **\r\n     = (function) same return function as @eve.on\r\n    \\*/\r\n    eve.once = function (name, f) {\r\n        var f2 = function () {\r\n            eve.off(name, f2);\r\n            return f.apply(this, arguments);\r\n        };\r\n        return eve.on(name, f2);\r\n    };\r\n    /*\\\r\n     * eve.version\r\n     [ property (string) ]\r\n     **\r\n     * Current version of the library.\r\n    \\*/\r\n    eve.version = version;\r\n    eve.toString = function () {\r\n        return \"You are running Eve \" + version;\r\n    };\r\n    (typeof module != \"undefined\" && module.exports) ? (module.exports = eve) : (typeof define === \"function\" && define.amd ? (define(\"eve\", [], function() { return eve; })) : (glob.eve = eve));\r\n})(this);","import * as g from './Index';\n\nwindow['G'] = g;\n","import { GuitarString, getGuitarStrings, IGuitarString,IFretInfo} from './GuitarString';\r\nimport {hasFromObject} from './Util/Decorators';\r\nimport {MusicNoteName} from './MusicNote';\r\n// import {Strum} from './Strum';\r\nimport {GuitarStrum} from './GuitarStrum';\r\n\r\n@hasFromObject\r\nexport class Guitar {\r\n    public strings: GuitarString[] = [];\r\n    public frets: number = 21;\r\n\r\n    public get stringCount(): number {\r\n        return this.strings.length;\r\n    }\r\n\r\n    constructor() { }\r\n\r\n\r\n    toObject(): IGuitar {\r\n        return {\r\n            strings: this.strings.map(x=> x.toObject()),\r\n            frets: this.frets\r\n        }\r\n    }\r\n\r\n\r\n    getFretsWithNote(noteName: MusicNoteName):IFretInfo[]{\r\n        let results :IFretInfo[] = [];\r\n        this.strings.forEach(str =>{\r\n            str.getFretsWithNote(noteName, this.frets).forEach(x=>{results.push(x);});\r\n        });\r\n        return results;\r\n    }\r\n\r\n    getStrum(positions:number[]):GuitarStrum{\r\n        if(positions.length !== this.stringCount) throw \"String Count does not match\";\r\n\r\n        return new GuitarStrum(this, positions);\r\n    }\r\n\r\n    static fromObject(obj: IGuitar): Guitar {\r\n        var g = new Guitar();\r\n        g.strings = obj.strings.map(x=> GuitarString.fromObject(x));\r\n        return g;\r\n    }\r\n\r\n    static GetNormalGuitar(): Guitar {\r\n        var g = new Guitar();\r\n        g.strings = getGuitarStrings([\"E4\", \"B3\", \"G3\", \"D3\", \"A2\", \"E2\"]);\r\n        return g;\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport interface IGuitar {\r\n    strings: IGuitarString[]\r\n}\r\n","import { MusicNoteName, IMusicNoteAdvanced, MusicNotes, getNote} from './MusicNote';\r\n\r\n/** a single string on the guitar. */\r\nexport class GuitarString {\r\n    private _index: number;\r\n    private _note: IMusicNoteAdvanced;\r\n\r\n    public get index(): number {\r\n        return this._index;\r\n    }\r\n\r\n    public get OpenNoteName(): string {\r\n        return this._note.fullName;\r\n    }\r\n\r\n    constructor(index: number, note: IMusicNoteAdvanced) {\r\n        this._index = index;\r\n        this._note = note;\r\n    }\r\n\r\n    public frequencyAtFret(fret: number) {\r\n        var id = fret + this._note.id;\r\n        return getNote(id).frequency;\r\n    }\r\n\r\n    public noteAtFret(fret: number): IMusicNoteAdvanced {\r\n        var id = fret + this._note.id;\r\n        return getNote(id);\r\n    }\r\n\r\n    public getFretsWithNote(noteName: MusicNoteName, fretCount: number): IFretInfo[] {\r\n        let results: IFretInfo[] = [];\r\n\r\n        for (let i = 0; i < fretCount; i++) {\r\n            let note = this.noteAtFret(i);\r\n            if (note.nameId == noteName) {\r\n                results.push({\r\n                    stringIndex: this.index,\r\n                    fretIndex: i,\r\n                    note: note\r\n                });\r\n            }\r\n        }\r\n\r\n        return results;\r\n    }\r\n\r\n    toObject(): IGuitarString {\r\n        return {\r\n            index: this.index,\r\n            note: this._note\r\n        };\r\n    }\r\n\r\n    static fromObject(obj: IGuitarString) {\r\n        return new GuitarString(obj.index, obj.note);\r\n    }\r\n}\r\n\r\nexport function getGuitarStrings(names: string[]): GuitarString[] {\r\n    var strings: GuitarString[] = [];\r\n    let idx = 0;\r\n    for (var name of names) {\r\n        let note = MusicNotes.filter(x=> x.fullName == name)[0];\r\n        if (note == undefined) debugger;\r\n        strings.push(new GuitarString(idx, note));\r\n        idx++;\r\n    }\r\n\r\n    return strings;\r\n}\r\n\r\nexport interface IGuitarString {\r\n    index: number;\r\n    note: IMusicNoteAdvanced;\r\n}\r\n\r\n\r\n/**\r\n * Info about a fret on a guitar\r\n */\r\nexport interface IFretInfo {\r\n    stringIndex: number;\r\n    fretIndex: number;\r\n    note: IMusicNoteAdvanced;\r\n}\r\n","import {Strum} from './Strum';\r\nimport {Guitar} from './Guitar';\r\n\r\nexport class GuitarStrum extends Strum {\r\n    private _gutiar: Guitar;\r\n\r\n\r\n    constructor(guitar: Guitar, positions: number[]) {\r\n        super(positions);\r\n        this._gutiar = guitar;\r\n    }\r\n\r\n    public get guitar(): Guitar {\r\n        return this._gutiar;\r\n    }\r\n\r\n\r\n    getFullNames(): string[] {\r\n        let g = this.guitar;\r\n        var a = [];\r\n        let idx = 0;\r\n        for (let p of this.positions) {\r\n            if (p != undefined) {\r\n                var s = g.strings[idx];\r\n                a.push(s.noteAtFret(p).fullName);\r\n            } else {\r\n                a.push('x');\r\n            }\r\n            idx++;\r\n        }\r\n        return a;\r\n    }\r\n\r\n    getNames():string[]{\r\n        let g = this.guitar;\r\n        var a = [];\r\n        let idx = 0;\r\n        for (let p of this.positions) {\r\n            if (p != undefined) {\r\n                var s = g.strings[idx];\r\n                a.push(s.noteAtFret(p).name);\r\n            } else {\r\n                a.push('x');\r\n            }\r\n            idx++;\r\n        }\r\n        return a;\r\n    }\r\n}\r\n","export * from './Guitar';\r\nexport * from './GuitarString'\r\nexport * from './MusicNote';\r\nexport * from './TabDocument';\r\nexport * from './Strum';\r\nexport * from './Scale';\r\nexport * from './GuitarStrum';\r\nexport * from './WellKnownChords';\r\n// export * from './UI/GuitarNeck';\r\n// export * from './UI/ChordView';\r\n// export * from './UI/TabEditor';\r\n// export * from './UI/TabView';\r\nexport * from './UI/UI';\r\n\r\n\r\nimport * as u from './Util/Array';\r\n\r\nexport module util {\r\n    export var orderBy = u.orderBy;\r\n}\r\n","\r\n// Interfaces\r\nexport interface IMusicNote {\r\n    nameId: MusicNoteName;\r\n    /** 0-8 */\r\n    octive: number;\r\n}\r\n\r\nexport interface IMusicNoteAdvanced extends IMusicNote {\r\n    /** ex: A4 */\r\n    fullName: string;\r\n    frequency: number;\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\nexport enum MusicNoteName {\r\n    C = 0,\r\n    C_,\r\n    D,\r\n    D_,\r\n    E,\r\n    F,\r\n    F_,\r\n    G,\r\n    G_,\r\n    A,\r\n    A_,\r\n    B //11\r\n}\r\nvar stringNoteNames = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\r\n\r\n/** 2^(1/12) */\r\nconst A = Math.pow(2, 1 / 12);\r\n\r\n\r\nexport var MusicNotes: IMusicNoteAdvanced[] = [];\r\n\r\n\r\nexport module noteMath {\r\n\r\n    export function getFrequencyOfNoteA4(x: number): number {\r\n        return 440 * Math.pow(A, x);\r\n    }\r\n\r\n\r\n    export function getNoteNameFromID(id: number): MusicNoteName {\r\n        return MusicNoteName[MusicNoteName[(id + (12 * 4) + 9 + 1) % 12]];\r\n    }\r\n\r\n\r\n    export function getNoteDiff(name: MusicNoteName, diff: number): MusicNoteName {\r\n        let note = MusicNotes.filter(x=>x.octive == 4 && x.nameId == name)[0];\r\n        let id = note.id + diff;\r\n        return getNoteNameFromID(id);\r\n    }\r\n\r\n    export function getOctiveFromId(id: number): number {\r\n        var x = id + (12 * 4) + 9 + 1;\r\n        return Math.floor(x / 12);\r\n    }\r\n    export function getNoteNameAsString(name:MusicNoteName){\r\n        return MusicNotes.filter(x=>x.nameId == name)[0].name;\r\n    }\r\n}\r\n\r\n//Build music notes array.\r\n\r\nfor (var noteID = -57; noteID <= 68; noteID++) {\r\n\r\n    var nn = noteMath. getNoteNameFromID(noteID);\r\n    var sname = stringNoteNames[nn];\r\n    let octive = noteMath.getOctiveFromId(noteID);\r\n    if (sname === undefined) debugger;\r\n    MusicNotes.push({\r\n        frequency: noteMath.getFrequencyOfNoteA4(noteID),\r\n        nameId: nn,\r\n        fullName: sname + octive.toString(),\r\n        id: noteID,\r\n        octive: octive,\r\n        name: sname\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\nexport function getNote(id: number) {\r\n    return MusicNotes.filter(x=> x.id == id)[0]\r\n}\r\n","import {MusicNoteName, noteMath} from './MusicNote';\r\nimport {Guitar} from './Guitar';\r\nimport {GuitarStrum} from './GuitarStrum';\r\nimport {GuitarString, IFretInfo} from './GuitarString';\r\nimport {findAllPossibleCombos} from './Util/Array';\r\n\r\n\r\nexport class Scale {\r\n\r\n    constructor(protected guitar: Guitar) {\r\n\r\n    }\r\n    protected findStrings(note: MusicNoteName) {\r\n        let g = this.guitar;\r\n        return g.getFretsWithNote(note);\r\n    }\r\n}\r\n\r\nexport class MajorScale extends Scale {\r\n    constructor(guitar: Guitar) {\r\n        super(guitar);\r\n    }\r\n\r\n    getFretInfo(note: MusicNoteName) {\r\n        var major = this.findStrings(note);\r\n        var p4 = this.findStrings(noteMath.getNoteDiff(note, 4));\r\n        var p7 = this.findStrings(noteMath.getNoteDiff(note, 7));\r\n        return {\r\n            major: major,\r\n            p4: p4,\r\n            p7: p7\r\n        };\r\n    }\r\n\r\n    getStrumList(note: MusicNoteName): GuitarStrum[] {\r\n        var results: GuitarStrum[] = [];\r\n        let info = this.getFretInfo(note);\r\n\r\n        let max = 12;\r\n        info.major = info.major.filter(x=> x.fretIndex <= max);\r\n        info.p4 = info.p4.filter(x=> x.fretIndex <= max);\r\n        info.p7 = info.p7.filter(x=> x.fretIndex <= max);\r\n\r\n        //2 major\r\n        let majors = findAllPossibleCombos(info.major, 2, 3);\r\n        let p7Combos = findAllPossibleCombos(info.p7, 1, 2);\r\n\r\n        majors.forEach(m=> {\r\n            let majorFic = new StrumBuilder();\r\n            if (majorFic.addArray(m) == false) return;\r\n\r\n\r\n            // info.p7.forEach(p7=> {\r\n            //     let fic = majorFic.clone();\r\n            //     if (fic.add(p7) == false) return;\r\n            //\r\n            //     info.p4.forEach(p4=> {\r\n            //         let f = fic.clone();\r\n            //         if (f.add(p4) == false) return;\r\n            //         results.push(f.getChord(this.guitar.stringCount));\r\n            //     });\r\n            // });\r\n\r\n            p7Combos.forEach(p7=> {\r\n                let fic = majorFic.clone();\r\n                if (fic.addArray(p7) == false) return;\r\n                info.p4.forEach(p4=> {\r\n                    let f = fic.clone();\r\n                    if (f.add(p4) == false) return;\r\n                    results.push(f.getChord(this.guitar));\r\n                });\r\n            });\r\n        });\r\n\r\n        //    console.log(majors);\r\n\r\n        return results;\r\n    }\r\n}\r\n\r\nexport class StrumBuilder {\r\n    private list: IFretInfo[] = [];\r\n\r\n    add(f: IFretInfo) {\r\n        if (this.isValid(f)) {\r\n            this.list.push(f);\r\n            return true;\r\n        }\r\n        else return false;\r\n    }\r\n\r\n    isValid(f: IFretInfo): boolean {\r\n        return this.list.filter(x=> x.stringIndex == f.stringIndex).length === 0;\r\n    }\r\n\r\n    clone(): StrumBuilder {\r\n        let ret = new StrumBuilder();\r\n        this.list.forEach(x=> ret.add(x));\r\n\r\n        return ret;\r\n    }\r\n    addArray(a: IFretInfo[]): boolean {\r\n        for (let fi of a) {\r\n            if (this.add(fi) == false) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    getChord(g:Guitar): GuitarStrum {\r\n        let u = undefined;\r\n        let stringCount = g.stringCount\r\n        let results = [];\r\n        for (var x = 0; x < stringCount; x++) {\r\n            let fi = this.list.filter(y=> y.stringIndex == x);\r\n            if (fi.length === 0) {\r\n                results.push(u);\r\n            } else {\r\n                results.push(fi[0].fretIndex);\r\n            }\r\n\r\n        }\r\n\r\n        return new GuitarStrum(g,results);\r\n    }\r\n}\r\n","import {Guitar} from './Guitar';\r\n\r\n\r\n/**\r\n * Base Strum Class.\r\n * @abstract\r\n */\r\nexport class Strum {\r\n    get stringCount(): number { return this.positions.length; }\r\n    get maxFret(): number {\r\n        return Math.max(...this.positions.filter(x=> x !== undefined));\r\n    }\r\n    get minFret(): number {\r\n        return Math.min(...this.positions.filter(x=> x !== undefined && x !== 0));\r\n    }\r\n\r\n    get stringsUsed(): number {\r\n        return this.positions.filter(x=> x !== undefined).length;\r\n    }\r\n\r\n    get maxFretDistence(): number {\r\n        return this.maxFret - this.minFret;\r\n    }\r\n\r\n    get firstUsedStringIndex(): number {\r\n        let idx = 0;\r\n        let result = null;\r\n        this.positions.forEach(x=> {\r\n            if (result !== null) return;\r\n            if (x !== undefined) {\r\n                result = idx;\r\n            }\r\n            idx++;\r\n        });\r\n        return result;\r\n    }\r\n\r\n    get lastUsedStringIndex(): number {\r\n        let result = null;\r\n\r\n        for (let i = this.stringCount - 1; i >= 0; i--) {\r\n            if (this.positions[i] !== undefined) return i;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    get positions(): number[] {\r\n        return this._positions;\r\n    }\r\n    private _positions: number[];\r\n    constructor(positions: number[]) {\r\n        this._positions = positions;\r\n    }\r\n\r\n    average(g: Guitar): number {\r\n        var a = [];\r\n        let idx = 0;\r\n        for (let p of this.positions) {\r\n            if (p != undefined) {\r\n                var s = g.strings[idx];\r\n                a.push(s.frequencyAtFret(p));\r\n            }\r\n            idx++;\r\n        }\r\n        return getAverage(a);\r\n    }\r\n\r\n\r\n\r\n    get skipCount(): number {\r\n        let ret = 0;\r\n        for (let i = this.firstUsedStringIndex; i <= this.lastUsedStringIndex; i++) {\r\n            if (this.positions[i] === undefined) ret++;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    rate(): number {\r\n        let ret = 100;\r\n\r\n        //too far appart.\r\n        if (this.maxFretDistence > 5) ret -= 1000;\r\n\r\n        //all at end of neck\r\n        if (this.maxFret < 4) ret += 100;\r\n\r\n\r\n        //Less strings is easier.\r\n        ret += (this.stringCount - this.stringsUsed) * 5;\r\n\r\n        //bonus for open strings\r\n        ret += this.positions.filter(x=> x == 0).length;\r\n\r\n        let skipCount = this.skipCount;\r\n\r\n        ret -= Math.pow(skipCount, 4) * 15;\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * @deprecated\r\n     */\r\n    static New(fretPositions: number[]) {\r\n        var s = new Strum(fretPositions);\r\n        return s;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction getAverage(arry: number[]): number {\r\n    var sum = 0, count = 0;\r\n    sum = arry.reduce(function(previousValue, currentValue, index, array) {\r\n        if (isFinite(currentValue)) {\r\n            count++;\r\n            return previousValue + currentValue;\r\n        }\r\n        return previousValue;\r\n    }, sum);\r\n    return count ? sum / count : 0;\r\n}\r\n","import {Guitar, IGuitar} from './Guitar';\nimport {Strum} from './Strum';\nimport {GuitarString} from './GuitarString';\nimport {IMusicNote, IMusicNoteAdvanced, MusicNoteName, MusicNotes} from './MusicNote';\nimport {LinkedList} from './Util/Collections';\nimport {} from './Util/SimpleEvent';\n\nexport enum TabPartType {\n    Strum\n}\n\n\nexport class TabDocument {\n\n\n    parts: LinkedList<TabPart> = new LinkedList<TabPart>();\n    guitar: Guitar;\n\n    get partCount() {\n        return this.parts.count;\n    }\n\n    constructor(g: Guitar) {\n        this.guitar = g;\n    }\n\n    addStrum(s: Strum, index?: number) {\n        if (s.stringCount != this.guitar.strings.length)\n            return;\n        var ts = new TabStrum(s.positions);\n        this.parts.add(ts, index);\n    }\n\n    addPart(part: TabPart) {\n        this.parts.add(part);\n    }\n\n    toObject(): ITabDocument {\n        return {\n            gutar: this.guitar.toObject(),\n            parts: this.parts.toArray().map(x=> x.toObject())\n        }\n    }\n\n    static fromObject(obj: ITabDocument) {\n        let td = new TabDocument(Guitar.fromObject(obj.gutar));\n        obj.parts.forEach(x=> {\n            switch (x.type) {\n                case TabPartType.Strum:\n                    let strum = <ITabStrum> x;\n                    td.addPart(TabStrum.fromObject(strum));\n            }\n        });\n\n        return td;\n    }\n}\n\nexport class TabStrum extends Strum implements TabPart {\n\n    get type() {\n        return TabPartType.Strum;\n    }\n\n    toObject(): ITabStrum {\n        return {\n            type: TabPartType.Strum,\n            positions: this.positions\n        }\n    }\n\n    static fromObject(obj: ITabStrum): TabStrum {\n        var ts = new TabStrum(obj.positions);\n        return ts;\n    }\n}\n\nexport interface TabPart {\n    type: TabPartType;\n    toObject(): ITabPart;\n}\n\nexport interface ITabPart {\n    type: TabPartType;\n}\n\nexport interface ITabStrum extends ITabPart {\n    positions: number[];\n}\n\nexport interface ITabDocument {\n    gutar: IGuitar;\n    parts: ITabPart[];\n}\n","/// <reference path=\"../../typings/raphael/raphael\" />\r\n\r\nimport * as R from \"Raphael\";\r\n\r\n\r\nexport class BaseUI {\r\n    protected draw: RaphaelPaper;\r\n    protected element: HTMLElement;\r\n\r\n\r\n    constructor(ele: HTMLElement = null) {\r\n        if (ele === null)\r\n            ele = document.createElement('div');\r\n\r\n        //ele.tabIndex = 0; //this allows keyboard events\r\n        this.element = ele;\r\n    }\r\n    public appendTo(ele: HTMLElement) {\r\n        ele.appendChild(this.element);\r\n    }\r\n}\r\n\r\n\r\nexport function pathString(mx, my, lx, ly): string {\r\n    return `M${mx},${my} L${lx},${ly}`;\r\n}\r\n\r\nexport function repeat(times: number, fn: (idx: number) => void) {\r\n    for (let x = 0; x < times; x++) {\r\n        fn(x);\r\n    }\r\n}\r\n","/// <reference path=\"../../typings/raphael/raphael\" />\r\n\r\nimport * as R from \"Raphael\";\r\nimport { Guitar } from \"../Guitar\";\r\nimport {BaseUI, pathString, repeat} from './BaseUI';\r\nimport {GuitarStrum} from '../GuitarStrum';\r\n\r\n\r\nexport interface IChordViewSize {\r\n    stringSeperation: number;\r\n    fretSeperation: number;\r\n    circleRadius: number;\r\n}\r\n\r\nexport class ChordView extends BaseUI {\r\n\r\n    public static get DefaultSize(): IChordViewSize {\r\n        return {\r\n            stringSeperation: 8,\r\n            fretSeperation: 10,\r\n            circleRadius: 3\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @param  {number}            x [description]\r\n     * @param  {IChordViewSize} s defaults to the chord view.\r\n     * @return {IChordViewSize}      [description]\r\n     */\r\n    static scaleSize(x: number, s: IChordViewSize = ChordView.DefaultSize): IChordViewSize {\r\n        s.circleRadius *= x;\r\n        s.fretSeperation *= x;\r\n        s.stringSeperation *= x;\r\n\r\n        return s;\r\n    }\r\n\r\n    private _showLetters: boolean = false;\r\n\r\n    private _size: IChordViewSize; // = ChordView.DefaultSize;\r\n\r\n    private get stringCount(): number {\r\n        return this.strum.positions.length;\r\n    }\r\n\r\n    private get fretCount(): number {\r\n        let r = Math.max(5, this.strum.maxFret);\r\n        //    console.log(r);\r\n        return r + 1 /* open fret */;\r\n    }\r\n\r\n    constructor(private strum: GuitarStrum, ele: HTMLElement = null, size: IChordViewSize = ChordView.DefaultSize) {\r\n        super(ele);\r\n        this._size = size;\r\n        this.draw = Raphael(this.element, 1, 1);\r\n\r\n        this._drawParts();\r\n    }\r\n\r\n    private _drawParts() {\r\n\r\n        let d = this.draw;\r\n        let ps = [];\r\n        this._drawStrings(ps);\r\n        this._drawFrets(ps);\r\n        d.path(ps.join(' '));\r\n\r\n        this._drawFingerPositions();\r\n        this._drawLetters();\r\n\r\n        //Sizes SVG from 1x1 to correct size based on size data\r\n        this._resize();\r\n    }\r\n\r\n    private _resize() {\r\n        let s = this.lastStringX() + this._size.stringSeperation\r\n        let f = this.lastFretY() + this._size.fretSeperation;\r\n        if (this._showLetters) {\r\n            f += this._size.fretSeperation;\r\n        }\r\n        this.draw.setSize(s, f);\r\n    }\r\n\r\n    private _drawStrings(ps: string[]) {\r\n        let size = this._size;\r\n        let strum = this.strum;\r\n        let f = size.fretSeperation;\r\n        repeat(this.stringCount, s=> {\r\n            let x = this.stringX(s);\r\n            let line = pathString(x, f, x, this.lastFretY());\r\n            ps.push(line);\r\n        });\r\n    }\r\n\r\n    private _drawFrets(ps: string[]) {\r\n        let size = this._size;\r\n        let strum = this.strum;\r\n\r\n        repeat(this.fretCount, f=> {\r\n            let y = this.fretY(f);\r\n            ps.push(pathString(size.stringSeperation, y, this.lastStringX(), y));\r\n        });\r\n        //d.path(ps.join(' '));\r\n\r\n    }\r\n\r\n    private lastStringX() {\r\n        return this.stringX(0);\r\n    }\r\n\r\n    private stringX(strIdx: number) {\r\n        strIdx = (this.stringCount - 1) - strIdx;\r\n        return this._size.stringSeperation * (strIdx + 1)\r\n    }\r\n\r\n    private fretY(fretIdx: number): number {\r\n        return this._size.fretSeperation * (fretIdx + 1)\r\n    }\r\n    private fretYMiddle(fretIdx: number): number {\r\n        return this.fretY(fretIdx) - (this._size.fretSeperation / 2);\r\n    }\r\n\r\n    private lastFretY() {\r\n        return this.fretY(this.fretCount - 1);\r\n    }\r\n\r\n    private _drawFingerPositions() {\r\n        let d = this.draw;\r\n\r\n        repeat(this.stringCount, s=> {\r\n            let f = this.strum.positions[s];\r\n            if (f === undefined) return;\r\n            let x = this.stringX(s);\r\n            let circle = d.circle(x, this.fretYMiddle(f), this._size.circleRadius);\r\n            if (f !== 0) {\r\n                circle.attr('fill', 'black');\r\n            }\r\n        });\r\n    }\r\n\r\n    private _drawLetters() {\r\n        if (this._showLetters) {\r\n\r\n            let d = this.draw;\r\n            let strum = this.strum;\r\n\r\n            let names = strum.getNames();\r\n            repeat(this.stringCount, s=> {\r\n                let x = this.stringX(s);\r\n                let y = this.fretYMiddle(this.fretCount + 1);\r\n\r\n                d.text(x, y - this._size.fretSeperation, names[s]);\r\n\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    showLetters() {\r\n        this._showLetters = true;\r\n        this._drawLetters();\r\n        this._resize();\r\n    }\r\n\r\n    /**\r\n     * Scales all contents. Note that this is expensive. Try to do this in the constructor.\r\n     * @param  {number} x [description]\r\n     */\r\n    scale(x: number) {\r\n        if (x === 1) return;\r\n        this.draw.clear();\r\n        let s = this._size;\r\n        this._size = ChordView.scaleSize(x, s);\r\n        this._drawParts();\r\n    }\r\n\r\n\r\n\r\n}\r\n","/// <reference path=\"../../typings/raphael/raphael\" />\r\n/// <reference path=\"../Guitar\"/>\r\n\r\nimport * as R from \"Raphael\";\r\nimport { GuitarString, IFretInfo } from '../GuitarString';\r\nimport {BaseUI, pathString, repeat} from './BaseUI';\r\nimport {Strum} from '../Strum';\r\nimport { Guitar } from \"../Guitar\";\r\n\r\nexport interface IGuitarNeckSizing {\r\n    startStringLine: number;\r\n    firstStringHeight: number\r\n    stringSeperation: number\r\n    fretSeperation: number;\r\n    opacityToggleTime: number;\r\n    fingerPositionRadius: number;\r\n}\r\n\r\nexport class GuitarNeck extends BaseUI {\r\n\r\n\r\n    private size: IGuitarNeckSizing = {\r\n        firstStringHeight: 25,\r\n        stringSeperation: 25,\r\n        fretSeperation: 40,\r\n        startStringLine: 40,\r\n        opacityToggleTime: 500,\r\n        fingerPositionRadius: 5\r\n    };\r\n\r\n    private _maxFrets: number = 25;\r\n\r\n    /**\r\n     * the strum circles\r\n     * @type {RaphaelElement[]}\r\n     */\r\n    private _strumElements: RaphaelElement[] = [];\r\n\r\n    get fretCount(): number {\r\n        return Math.min(this._maxFrets, this.guitar.frets);\r\n    }\r\n\r\n    get stringCount(): number {\r\n        return this.guitar.strings.length;\r\n    }\r\n\r\n\r\n    constructor(public guitar: Guitar, ele: HTMLElement = document.createElement('div')) {\r\n        super(ele);\r\n        let size = this.size;\r\n        this.element = ele;\r\n        document.body.appendChild(this.element);\r\n        this.draw = R(ele, 1024, (this.size.firstStringHeight * 2) + (guitar.strings.length * size.stringSeperation));\r\n        this.drawParts();\r\n    }\r\n\r\n    //Maths\r\n    private getStringY(idx: number) {\r\n        return (idx * this.size.stringSeperation) + this.size.firstStringHeight;\r\n    }\r\n\r\n    private getLastStringY(): number {\r\n        return this.getStringY(this.stringCount - 1);\r\n    }\r\n\r\n    private getFretX(idx: number): number {\r\n        let s = this.size;\r\n        return s.fretSeperation * (idx + 1);\r\n    }\r\n\r\n    private getLastFretX() {\r\n        return this.getFretX(this.fretCount);\r\n    }\r\n\r\n    private getStringLength(): number {\r\n        let s = this.size;\r\n        return this.getFretX(this.fretCount - 1) + s.fretSeperation;\r\n        return s.fretSeperation * (this.fretCount + 1);\r\n    }\r\n\r\n    private getPointOfStringFret(str: number, fret: number): IPoint {\r\n        let size = this.size;\r\n        return {\r\n            x: 20 + (fret * size.fretSeperation),\r\n            y: size.firstStringHeight + (str * size.stringSeperation)\r\n        };\r\n    }\r\n\r\n    private getFretHorizontalCenter(fret: number): number {\r\n        let size = this.size;\r\n\r\n        return size.startStringLine + (size.fretSeperation * fret) - (size.fretSeperation / 2);\r\n    }\r\n\r\n    private drawParts() {\r\n        this.drawDoubleFretLine();\r\n        this.drawStrings();\r\n        this.drawFrets();\r\n        this.drawFretBubbles();\r\n        if (this.noteLettersDrawn == true)\r\n            this.drawNoteLetters();\r\n        this.resize();\r\n    }\r\n\r\n    private resize() {\r\n        this.draw.setSize(this.getLastFretX() + this.size.fretSeperation, this.getLastStringY() + this.size.stringSeperation);\r\n    }\r\n\r\n\r\n    private drawStrings() {\r\n        let g = this.guitar;\r\n        let d = this.draw;\r\n        let size = this.size;\r\n        let stringLength = this.getStringLength();\r\n        repeat(this.stringCount, idx=> {\r\n            let height = this.getStringY(idx);\r\n            let pth = pathString(size.startStringLine, height, stringLength, height);\r\n            d.path(pth).attr('stroke', 'solid');\r\n        });\r\n    }\r\n\r\n\r\n\r\n    private drawDoubleFretLine() {\r\n        let g = this.guitar;\r\n        let d = this.draw;\r\n        let size = this.size;\r\n        //Double Starting Line\r\n        let x = size.startStringLine - 5;\r\n        let lastString = this.getLastStringY();\r\n        let path = pathString(x, size.firstStringHeight, x, lastString);\r\n        d.path(path).attr('stroke', 'solid');\r\n    }\r\n\r\n\r\n    private drawFrets() {\r\n        let g = this.guitar;\r\n        let d = this.draw;\r\n        let size = this.size;\r\n\r\n        let lastString = this.getLastStringY();\r\n\r\n        //Draw each fret Line\r\n        repeat(g.frets + 1, f=> {\r\n            let y = size.startStringLine + (f * size.fretSeperation);\r\n            let path = pathString(y, size.firstStringHeight, y, lastString);\r\n            d.path(path).attr('stroke', 'solid');\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n    private drawFretBubbles() {\r\n        let d = this.draw;\r\n        let g = this.guitar;\r\n        let size = this.size;\r\n\r\n        let applyStyles = (ele: RaphaelElement) => { ele.attr('fill', 'solid'); };\r\n\r\n        let single = (fret: number) => {\r\n            if (this.fretCount < fret) return;\r\n            let c = d.circle(this.getFretHorizontalCenter(fret), size.firstStringHeight + (size.stringSeperation * (g.strings.length / 2)) - (size.stringSeperation / 2), 5);\r\n            applyStyles(c);\r\n        }\r\n\r\n\r\n        let double = (fret: number) => {\r\n            if (this.fretCount < fret) return;\r\n            let c = d.circle(this.getFretHorizontalCenter(fret), size.firstStringHeight + (size.stringSeperation * (1)) - (size.stringSeperation / 2), 5)\r\n            applyStyles(c);\r\n            c = d.circle(this.getFretHorizontalCenter(fret), size.firstStringHeight + (size.stringSeperation * (g.strings.length - 1)) - (size.stringSeperation / 2), 5)\r\n            applyStyles(c);\r\n        };\r\n\r\n        single(3);\r\n        single(5);\r\n        single(7);\r\n        single(9);\r\n        double(12);\r\n        single(15);\r\n        single(17);\r\n        single(19);\r\n        single(21);\r\n        double(24);\r\n\r\n    }\r\n\r\n    private _noteLetters: NoteLetterElement[] = [];\r\n    private _noteLettersSet: RaphaelSet = null;\r\n\r\n    /** Clears all of the letters from the neck */\r\n    hideAllNoteLetters() {\r\n        let s = this.size;\r\n        let nls = this._noteLettersSet;\r\n        nls.attr({ opacity: 0 });\r\n\r\n        //    nls.animate({ opacity: 0 }, s.opacityToggleTime);\r\n\r\n    }\r\n\r\n    /**\r\n     * Makes all note letters visible\r\n     */\r\n    showAllNoteLetters() {\r\n        if (this.noteLettersDrawn == false) {\r\n            this.noteLettersDrawn = true;\r\n            this.drawNoteLetters();\r\n        }\r\n        let s = this.size;\r\n        let nls = this._noteLettersSet;\r\n        nls.attr({ opacity: 1 });\r\n        //    nls.animate({ opacity: 1 }, s.opacityToggleTime);\r\n    }\r\n\r\n    noteLettersDrawn = false;\r\n\r\n    /**\r\n     * Draw all note letters on fret board\r\n     */\r\n    private drawNoteLetters() {\r\n        let d = this.draw;\r\n        let g = this.guitar;\r\n\r\n        if (this._noteLettersSet === null) {\r\n            this._noteLettersSet = d.set();\r\n        }\r\n\r\n        let nls = this._noteLettersSet;\r\n\r\n        let sIdx = 0;\r\n        for (var s of g.strings) {\r\n\r\n            for (var f = 0; f < g.frets + 1; f++) {\r\n\r\n\r\n                var noteAtFret = s.noteAtFret(f);\r\n\r\n\r\n\r\n                let point = this.getPointOfStringFret(sIdx, f);\r\n\r\n                let text = d.text(point.x, point.y, noteAtFret.name).attr({\r\n                    \"font-size\": 12,\r\n                    \"fill\": \"green\",\r\n                    \"font-weight\": \"bold\",\r\n                    opacity: 0\r\n                });\r\n\r\n                //create white background for text, uses the text to calculate size.\r\n                let box = text.getBBox();\r\n                let rect = d.rect(box.x, box.y, box.width, box.height)\r\n                    .attr('fill', 'white')\r\n                    .attr('stroke', 'white')\r\n                    .attr('opacity', 0);\r\n                text.toFront();\r\n\r\n\r\n                this._noteLetters.push(new NoteLetterElement(s, f, text, rect));\r\n                nls.push(rect, text);\r\n            }\r\n\r\n\r\n            sIdx++;\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    clearStrum() {\r\n        for (let e of this._strumElements) {\r\n            e.remove();\r\n        }\r\n        this._strumElements = [];\r\n    }\r\n\r\n    drawStrum(s: Strum, clearStrum: boolean = true) {\r\n        let d = this.draw;\r\n        let g = this.guitar;\r\n        let size = this.size;\r\n        if (clearStrum) {\r\n            this.clearStrum();\r\n        }\r\n\r\n        let idx = 0;\r\n        var added = [];\r\n        for (let p of s.positions) {\r\n            if (p !== undefined) {\r\n                let point = this.getPointOfStringFret(idx, p);\r\n                let ele = d.circle(point.x, point.y, size.fingerPositionRadius)\r\n                    .attr('fill', 'red');\r\n                this._strumElements.push(ele);\r\n                added.push(ele);\r\n            }\r\n            idx++;\r\n        }\r\n        return added;\r\n    }\r\n\r\n    addStrumMarker(fi: IFretInfo) {\r\n        let arr = [];\r\n        repeat(this.stringCount, idx=> arr.push(undefined));\r\n        arr[fi.stringIndex] = fi.fretIndex;\r\n        return this.drawStrum(Strum.New(arr), false)[0];\r\n    }\r\n\r\n    removeBar() {\r\n\r\n    }\r\n\r\n    barFret(fret: number) {\r\n        let h = this.getFretHorizontalCenter(fret);\r\n        let d = this.draw;\r\n        //todo\r\n    }\r\n\r\n    scale(x: number) {\r\n        let s = this.size;\r\n        s.startStringLine *= x;\r\n        s.firstStringHeight *= x;\r\n        s.stringSeperation *= x;\r\n        s.fretSeperation *= x;\r\n        s.opacityToggleTime *= x;\r\n        s.fingerPositionRadius *= x;\r\n        this.draw.clear();\r\n        this.drawParts();\r\n\r\n    }\r\n\r\n    setMaxFrets(n: number) {\r\n        this._maxFrets = n;\r\n        this.drawParts();\r\n    }\r\n}\r\n\r\n\r\nmodule GuitarStringMath {\r\n    /**\r\n     * @param stringLength in pixels\r\n     * @param frets total frets\r\n     */\r\n    export function getFretLengths(stringLength: number, frets: number): number[] {\r\n        var l = stringLength;\r\n        var ret = [];\r\n        for (var i = 0; i < frets; i++) {\r\n            var c = l / 18;\r\n            l = l - c;\r\n            ret.push(c);\r\n        }\r\n        return ret;\r\n    }\r\n}\r\n\r\ninterface IPoint {\r\n    x: number;\r\n    y: number;\r\n}\r\n\r\ninterface INoteLetterElement {\r\n    text: RaphaelElement;\r\n    background: RaphaelElement;\r\n    note: IFretPosition;\r\n}\r\n\r\ninterface IFretPosition {\r\n    fret: number;\r\n    stringIndex: number;\r\n}\r\n\r\n\r\nclass NoteLetterElement {\r\n    constructor(private s: GuitarString, private fret: number, private text: RaphaelElement, private bg: RaphaelElement) {\r\n        text.click(() => this.click());\r\n        bg.click(() => this.click());\r\n    }\r\n\r\n    click() {\r\n        console.log('click', this);\r\n    }\r\n}\r\n","\nimport {repeat} from './BaseUI';\nimport {KeyManager} from '../Util/KeyManager';\nimport {SimpleEvent} from '../Util/SimpleEvent';\nimport { TabView } from './TabView';\nimport { Guitar } from \"../Guitar\";\nimport {TabCell} from './Tab/TabCell';\nimport {TabColumn} from './Tab/TabColumn';\nimport {TabDocument} from '../TabDocument';\n\nexport class TabEditor extends TabView {\n    keys: KeyManager;\n    private _onChange = SimpleEvent.New();\n\n    constructor(ele: HTMLElement, td: TabDocument) {\n        super(ele, td);\n        this.keys = new KeyManager(this.element);\n        this.bindKeys();\n        this._allowSelect = true;\n    }\n\n    private bindKeys() {\n        let k = this.keys;\n\n        k.bind('up', (e) => {\n            e.preventDefault();\n            this.selectUp();\n        });\n\n        k.bind('down', (e) => {\n            e.preventDefault();\n            this.selectDown();\n        });\n\n        k.bind('left', e=> {\n            e.preventDefault();\n            this.selectedCell.left().select();\n        });\n\n        k.bind('right', e=> {\n            e.preventDefault();\n            this.selectedCell.right().select();\n        });\n\n        k.bind('del', e=> {\n            e.preventDefault();\n            this.selectedCell.setText('');\n        });\n\n        k.bind('/', e=> {\n            e.preventDefault();\n            this.selectedCell.appendText('/');\n        });\n\n        repeat(10, idx=> {\n            k.bind(idx.toString(), (e) => {\n                e.preventDefault();\n                this.selectedCell.appendText(idx.toString());\n            });\n        });\n\n\n    }\n\n    private selectUp() {\n        this.selectedCell.up().select();\n    }\n\n    private selectDown() {\n        this.selectedCell.down().select();\n    }\n\n    private setUpEvents() {\n\n    }\n\n}\n","/// <reference path=\"../../typings/raphael/raphael\" />\r\n\r\nimport * as R from \"Raphael\";\r\nimport { Guitar } from \"../Guitar\";\r\nimport {BaseUI, pathString, repeat} from './BaseUI';\r\nimport {TabViewSize} from './Tab/TabCommon';\r\nimport {TabCell} from './Tab/TabCell';\r\nimport {TabColumn} from './Tab/TabColumn';\r\n\r\nimport {SimpleEvent, ISimpleEventBase, ISimpleEvent1, ISimpleEvent2, ISimpleEvent3} from '../Util/SimpleEvent';\r\nimport {TabDocument, TabPartType, TabStrum} from '../TabDocument';\r\n\r\nimport {Strum} from '../Strum';\r\n\r\n\r\nexport class TabView extends BaseUI {\r\n\r\n    protected _allowSelect: boolean = false;\r\n\r\n    private _document: TabDocument;\r\n\r\n    public get document(): TabDocument {\r\n        return this._document;\r\n    }\r\n\r\n    size: TabViewSize = {\r\n        stringSeperation: 20,\r\n        noteSpeperation: 20\r\n    };\r\n\r\n    get stringCount(): number {\r\n        return this.guitar.strings.length;\r\n    }\r\n\r\n    get selectedCell(): TabCell {\r\n        return this.columns.filter(x=> x.hasSelectedCell)[0].cells\r\n            .filter(x=> x.isSelected)[0];\r\n    }\r\n\r\n    public get guitar(): Guitar {\r\n        return this.document.guitar;\r\n    };\r\n\r\n    public get allowSelect() {\r\n        return this._allowSelect;\r\n    }\r\n\r\n    protected _columnAdded = SimpleEvent.New<TabColumn>();\r\n\r\n    constructor(ele: HTMLElement, doc: TabDocument) {\r\n        super(ele);\r\n        this._document = doc;\r\n        this.draw = R(this.element, 300, 300);\r\n        this.draw.canvas.onclick = () => {\r\n            console.log('canvas click');\r\n            this.element.focus();\r\n        };\r\n        this._drawAllParts();\r\n    }\r\n\r\n    //math\r\n\r\n    protected getStringY(idx) {\r\n        let s = this.size;\r\n        return (idx * s.stringSeperation) + s.stringSeperation;\r\n    }\r\n\r\n    protected getStringStartX() {\r\n        return 20;\r\n    }\r\n\r\n    private _drawAllParts() {\r\n        this._drawStringLines();\r\n        this._drawStringLetters();\r\n        this._drawStringVertLines();\r\n        this._buildTabColumns();\r\n        // var firstCell = this.columns[0].cells[0];\r\n        //firstCell.setText('0');\r\n        // firstCell.select();\r\n\r\n        this._calculateSize();\r\n    }\r\n\r\n    private _drawStringLines() {\r\n        //todo: make one path, keep refrence\r\n\r\n        let d = this.draw;\r\n        let x = this.getStringStartX();\r\n        repeat(this.stringCount, idx=> {\r\n            let y = this.getStringY(idx);\r\n            let line = pathString(x, y, 1000, y);\r\n            d.path(line);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * letters on left side\r\n     */\r\n    private _drawStringLetters() {\r\n        let d = this.draw;\r\n        let x = this.getStringStartX() / 2;\r\n        let g = this.guitar;\r\n        repeat(this.stringCount, idx=> {\r\n            let y = this.getStringY(idx);\r\n            let letter = d.text(x, y, g.strings[idx].OpenNoteName);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Vertical lines at start of tab\r\n     */\r\n    private _drawStringVertLines() {\r\n        //todo: make one path, keep refrence\r\n\r\n        let d = this.draw;\r\n        let x = this.getStringStartX();\r\n        let g = this.guitar;\r\n        let length = this.size.stringSeperation / 4;\r\n        repeat(this.stringCount, idx=> {\r\n            let y = this.getStringY(idx);\r\n\r\n            let line = pathString(x, y - length, x, y + length);\r\n            d.path(line);\r\n\r\n        });\r\n    }\r\n\r\n    columns: TabColumn[] = [];\r\n\r\n    private _addColumn(c: TabColumn) {\r\n        this.columns.push(c);\r\n        this._columnAdded.trigger(c);\r\n    }\r\n\r\n    private _buildTabColumns() {\r\n        let d = this.draw;\r\n        let g = this.guitar;\r\n        let ns = this.size.noteSpeperation;\r\n        let x = ns + this.getStringStartX();\r\n\r\n        repeat(this.document.partCount, (colIndex) => {\r\n            let column = new TabColumn(this.draw, this, colIndex);\r\n            this._addColumn(column);\r\n\r\n            let part = this.document.parts.elementAtIndex(colIndex);\r\n\r\n\r\n            repeat(this.stringCount, idx=> {\r\n\r\n\r\n                let y = this.getStringY(idx);\r\n                let cell = column.defineCell(x, y, idx);\r\n\r\n                if (part.type == TabPartType.Strum) {\r\n                    let p = <TabStrum>part;\r\n                    let pos = p.positions[idx];\r\n                    if (pos != undefined) {\r\n                        cell.setText(pos.toString());\r\n                    }\r\n                }\r\n\r\n                // cell.setText('X');\r\n\r\n            });\r\n            x = x + ns;\r\n        });\r\n    }\r\n\r\n    private get rightX() {\r\n        let x = this.columns[this.columns.length - 1].topCell.x + this.size.noteSpeperation;\r\n        return x;\r\n    }\r\n\r\n    private _calculateSize() {\r\n        //note that this points to the position after the last string\r\n        let y = this.getStringY(this.stringCount);\r\n\r\n        this.draw.setSize(this.rightX, y);\r\n    }\r\n\r\n\r\n    unselectAll() {\r\n        this.columns.forEach(x=> x.unselectAll());\r\n    }\r\n\r\n    toArray(): string[][] {\r\n        let ret: string[][] = [];\r\n\r\n        this.columns.forEach(function(c) {\r\n            let col = [];\r\n            c.cells.forEach(function(c) {\r\n                col.push(c.getText());\r\n            }, this);\r\n            ret.push(col);\r\n        }, this);\r\n\r\n        return ret;\r\n    }\r\n\r\n    toString() {\r\n\r\n        let array = this.toArray();\r\n\r\n        let lines = [];\r\n\r\n        repeat(this.stringCount, idx=> lines[idx] = []);\r\n\r\n        array.forEach(a=> {\r\n            let longest = 0;\r\n            a.forEach(x=> {\r\n                if (longest < x.length)\r\n                    longest = x.length;\r\n            });\r\n\r\n            repeat(this.stringCount, idx=> {\r\n                let p = a[idx];\r\n                if (p == undefined || p==' ') p = '';\r\n                lines[idx].push(lpad(longest, '-----', p));\r\n            });\r\n\r\n            repeat(this.stringCount, idx=> {\r\n                lines[idx].push('-');\r\n            });\r\n        });\r\n        let lines2 = [];\r\n        lines.forEach(l=> lines2.push(l.join('')));\r\n        return lines2.join('\\n');\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nfunction lpad(length, pad, str) {\r\n    if (length < this.length) return str;\r\n\r\n    pad = pad || ' ';\r\n\r\n    while (str.length < length) {\r\n        str = pad + str;\r\n    }\r\n\r\n    return str.substr(-length);\r\n}\r\n","import * as R from \"Raphael\";\nimport {TabView} from '../TabView';\nimport {pathString} from '../BaseUI';\nimport {TabColumn} from './TabColumn';\n\n\n\nexport class TabCell {\n\n    private textElement: RaphaelElement = null;\n    private backgroundElement: RaphaelElement = null;\n    private clickElement: RaphaelElement = null;\n    private selectElement: RaphaelElement = null;\n\n    private get elements(): RaphaelSet {\n        return this.draw.set([\n            this.textElement,\n            this.backgroundElement,\n            this.clickElement,\n            this.selectElement\n        ]);\n    }\n\n\n    private col: TabColumn;\n\n\n    private get tabView(): TabView {\n        return this.col.tabView;\n    }\n\n    get rowIndex(): number {\n        return this.index;\n    }\n\n    get colIndex(): number {\n        return this.col.index;\n    }\n\n    constructor(\n        public x: number,\n        public y: number,\n        private draw: RaphaelPaper,\n        c: TabColumn,\n        private index: number) {\n\n\n        this.col = c;\n\n        this.createElements();\n    }\n\n    private createElements() {\n        if (this.textElement !== null) return;\n\n        let d = this.draw;\n        let x = this.x;\n        let y = this.y;\n\n\n        let text = this.textElement = d.text(x, y, \" \").attr({\n            \"font-size\": 14\n        });\n        let box = text.getBBox();\n        this.backgroundElement = d.rect(box.x, box.y, box.width, box.height)\n            .attr('fill', 'white')\n            .attr('stroke', 'white');\n        text.toFront();\n\n\n        this.createClickElement();\n        this.createSelectElement();\n        this._bindEvents();\n    }\n\n\n\n    private _bindEvents() {\n        if(this.tabView.allowSelect == false) return;\n        let onClick = () => this.click();\n        this.elements.click(onClick);\n    }\n\n    private createClickElement() {\n        let d = this.draw;\n        let x = this.x;\n        let y = this.y;\n        let s = this.col.tabView.size;\n\n        let diffNote = s.noteSpeperation / 2;\n        let diffString = s.stringSeperation / 2;\n\n        this.clickElement = d.rect(x - diffNote, y - diffString, s.noteSpeperation, s.stringSeperation)\n            .attr({\n                stroke: 'rgba(0,0,0,0)',\n                fill: 'white'\n            });\n        this.clickElement.toBack();\n        //this.clickElement.click(() => { this.click() });\n    }\n\n    private createSelectElement() {\n        let d = this.draw;\n        let x = this.x;\n        let y = this.y;\n        let s = this.col.tabView.size;\n\n        let diffNote = s.noteSpeperation / 2;\n        let diffString = s.stringSeperation / 2;\n        diffString -= 1;\n\n        let path = pathString(x - diffNote, y + diffString, x + diffNote, y + diffString);\n        this.selectElement = d.path(path)\n            .attr({ stroke: 'rgb(255,0,0)' })\n            .attr('opacity', .1);\n    }\n\n    private recalcBackground() {\n        let box = this.textElement.getBBox();\n\n        this.backgroundElement.attr({\n            x: box.x,\n            y: box.y,\n            width: box.width,\n            height: box.height\n        });\n    }\n\n    setText(str: string) {\n        this.textElement.attr({\n            text: str\n        });\n        this.recalcBackground();\n    }\n\n    getText(): string {\n        return this.textElement.attr('text');\n    }\n\n    appendText(s: string) {\n        this.setText(this.getText() + s);\n    }\n\n\n    isSelected: boolean = false;\n    select() {\n        this.tabView.unselectAll();\n        this.isSelected = true;\n        this.backgroundElement.attr('stroke', 'blue');\n        this.selectElement.attr('opacity', 1);\n    }\n\n    unselect() {\n        this.isSelected = false;\n        this.backgroundElement.attr('stroke', 'white');\n        this.selectElement.attr('opacity', '0');\n    }\n\n    private click() {\n        console.log(this);\n        console.log('click');\n        this.select();\n    }\n\n    up(): TabCell {\n        if (this.index == 0) {\n            return this.col.cells[this.col.cells.length - 1];\n        }\n        return this.col.cells[this.index - 1];\n    }\n\n    down(): TabCell {\n        if (this.index == this.col.cells.length - 1) {\n            return this.col.cells[0];\n        }\n        return this.col.cells[this.index + 1];\n    }\n\n    left(): TabCell {\n        return this.col.getLeft().cells[this.index];\n    }\n\n    right(): TabCell {\n        return this.col.getRight().cells[this.index];\n    }\n\n}\n","import * as R from \"Raphael\";\nimport {TabView} from '../TabView';\nimport {pathString} from '../BaseUI';\nimport {TabCell} from './TabCell';\nimport {TabPart} from '../../TabDocument';\n\nexport class TabColumn {\n    cells: TabCell[] = [];\n    tabView: TabView;\n    index: number;\n\n    get part():TabPart{\n        return this.tabView.document.parts.elementAtIndex(this.index);\n    }\n\n    get hasSelectedCell(): boolean {\n        return this.cells.filter(x=> x.isSelected).length !== 0;\n    }\n\n    constructor(private draw: RaphaelPaper, tv: TabView, idx: number) {\n        this.index = idx;\n        this.tabView = tv;\n    }\n\n    defineCell(x, y, idx): TabCell {\n        let tc = new TabCell(x, y, this.draw, this, idx);\n        this.cells.push(tc);\n        return tc;\n    }\n\n    unselectAll() {\n        this.cells.forEach(x=> x.unselect());\n    }\n\n    getLeft(): TabColumn {\n        return this.tabView.columns[this.index - 1];\n    }\n\n    getRight(): TabColumn {\n        return this.tabView.columns[this.index + 1];\n    }\n\nget topCell():TabCell{\n    return this.cells[0];\n}\n\n}\n","export * from './TabView';\r\nexport * from './TabEditor';\r\nexport * from './ChordView';\r\nexport * from './GuitarNeck';\r\n// export * from './BaseUI';\r\n","/// <reference path=\"../../typings/lodash/lodash.d.ts\"/>\r\nimport {sortBy} from 'lodash';\r\nexport function orderBy<T>(arr: T[], fn: (x: T) => any): T[] {\r\n    return sortBy(arr, x=> fn(x));\r\n}\r\n\r\nexport function findAllPossibleCombos<T>(a: T[], min: number, max: number = null): T[][] {\r\n    if (max === null) max = a.length;\r\n    max += 1;\r\n    var fn = function(n, src, got, all) {\r\n        if (n == 0) {\r\n            if (got.length > 0) {\r\n                all[all.length] = got;\r\n            }\r\n            return;\r\n        }\r\n        for (var j = 0; j < src.length; j++) {\r\n            fn(n - 1, src.slice(j + 1), got.concat([src[j]]), all);\r\n        }\r\n        return;\r\n    }\r\n    var all = [];\r\n    for (var i = min; i < max; i++) {\r\n        fn(i, a, [], all);\r\n    }\r\n    //all.push(a);\r\n    return all;\r\n}\r\n","// Copyright 2013 Basarat Ali Syed. All Rights Reserved.\r\n//\r\n// Licensed under MIT open source license http://opensource.org/licenses/MIT\r\n//\r\n// Orginal javascript code was by Mauricio Santos\r\n\r\n\r\n\r\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\r\nvar has = function(obj, prop) {\r\n    return _hasOwnProperty.call(obj, prop);\r\n}\r\n\r\n/**\r\n* Function signature for comparing\r\n* <0 means a is smaller\r\n* = 0 means they are equal\r\n* >0 means a is larger\r\n*/\r\nexport interface ICompareFunction<T> {\r\n    (a: T, b: T): number;\r\n}\r\n\r\n/**\r\n* Function signature for checking equality\r\n*/\r\nexport interface IEqualsFunction<T> {\r\n    (a: T, b: T): boolean;\r\n}\r\n\r\n/**\r\n* Function signature for Iterations. Return false to break from loop\r\n*/\r\nexport interface ILoopFunction<T> {\r\n    (a: T): boolean;\r\n}\r\n\r\n/**\r\n * Default function to compare element order.\r\n * @function\r\n */\r\nexport function defaultCompare<T>(a: T, b: T): number {\r\n    if (a < b) {\r\n        return -1;\r\n    } else if (a === b) {\r\n        return 0;\r\n    } else {\r\n        return 1;\r\n    }\r\n}\r\n\r\n/**\r\n * Default function to test equality.\r\n * @function\r\n */\r\nexport function defaultEquals<T>(a: T, b: T): boolean {\r\n    return a === b;\r\n}\r\n\r\n/**\r\n * Default function to convert an object to a string.\r\n * @function\r\n */\r\nexport function defaultToString(item: any): string {\r\n    if (item === null) {\r\n        return 'COLLECTION_NULL';\r\n    } else if (isUndefined(item)) {\r\n        return 'COLLECTION_UNDEFINED';\r\n    } else if (isString(item)) {\r\n        return '$s' + item;\r\n    } else {\r\n        return '$o' + item.toString();\r\n    }\r\n}\r\n\r\n/**\r\n* Joins all the properies of the object using the provided join string\r\n*/\r\nexport function makeString<T>(item: T, join: string = \",\"): string {\r\n    if (item === null) {\r\n        return 'COLLECTION_NULL';\r\n    } else if (isUndefined(item)) {\r\n        return 'COLLECTION_UNDEFINED';\r\n    } else if (isString(item)) {\r\n        return item.toString();\r\n    } else {\r\n        var toret = \"{\";\r\n        var first = true;\r\n        for (var prop in item) {\r\n            if (has(item, prop)) {\r\n                if (first)\r\n                    first = false;\r\n                else\r\n                    toret = toret + join;\r\n                toret = toret + prop + \":\" + item[prop];\r\n            }\r\n        }\r\n        return toret + \"}\";\r\n    }\r\n}\r\n\r\n/**\r\n * Checks if the given argument is a function.\r\n * @function\r\n */\r\nexport function isFunction(func: any): boolean {\r\n    return (typeof func) === 'function';\r\n}\r\n\r\n/**\r\n * Checks if the given argument is undefined.\r\n * @function\r\n */\r\nexport function isUndefined(obj: any): boolean {\r\n    return (typeof obj) === 'undefined';\r\n}\r\n\r\n/**\r\n * Checks if the given argument is a string.\r\n * @function\r\n */\r\nexport function isString(obj: any): boolean {\r\n    return Object.prototype.toString.call(obj) === '[object String]';\r\n}\r\n\r\n/**\r\n * Reverses a compare function.\r\n * @function\r\n */\r\nexport function reverseCompareFunction<T>(compareFunction: ICompareFunction<T>): ICompareFunction<T> {\r\n    if (!isFunction(compareFunction)) {\r\n        return function(a, b) {\r\n            if (a < b) {\r\n                return 1;\r\n            } else if (a === b) {\r\n                return 0;\r\n            } else {\r\n                return -1;\r\n            }\r\n        };\r\n    } else {\r\n        return function(d: T, v: T) {\r\n            return compareFunction(d, v) * -1;\r\n        };\r\n    }\r\n}\r\n\r\n/**\r\n * Returns an equal function given a compare function.\r\n * @function\r\n */\r\nexport function compareToEquals<T>(compareFunction: ICompareFunction<T>): IEqualsFunction<T> {\r\n    return function(a: T, b: T) {\r\n        return compareFunction(a, b) === 0;\r\n    };\r\n}\r\n\r\n/**\r\n * @namespace Contains various functions for manipulating arrays.\r\n */\r\nexport module arrays {\r\n\r\n    /**\r\n     * Returns the position of the first occurrence of the specified item\r\n     * within the specified array.\r\n     * @param {*} array the array in which to search the element.\r\n     * @param {Object} item the element to search.\r\n     * @param {function(Object,Object):boolean=} equalsFunction optional function used to\r\n     * check equality between 2 elements.\r\n     * @return {number} the position of the first occurrence of the specified element\r\n     * within the specified array, or -1 if not found.\r\n     */\r\n    export function indexOf<T>(array: T[], item: T, equalsFunction?: IEqualsFunction<T>): number {\r\n        var equals = equalsFunction || defaultEquals;\r\n        var length = array.length;\r\n        for (var i = 0; i < length; i++) {\r\n            if (equals(array[i], item)) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    /**\r\n     * Returns the position of the last occurrence of the specified element\r\n     * within the specified array.\r\n     * @param {*} array the array in which to search the element.\r\n     * @param {Object} item the element to search.\r\n     * @param {function(Object,Object):boolean=} equalsFunction optional function used to\r\n     * check equality between 2 elements.\r\n     * @return {number} the position of the last occurrence of the specified element\r\n     * within the specified array or -1 if not found.\r\n     */\r\n    export function lastIndexOf<T>(array: T[], item: T, equalsFunction?: IEqualsFunction<T>): number {\r\n        var equals = equalsFunction || defaultEquals;\r\n        var length = array.length;\r\n        for (var i = length - 1; i >= 0; i--) {\r\n            if (equals(array[i], item)) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    /**\r\n     * Returns true if the specified array contains the specified element.\r\n     * @param {*} array the array in which to search the element.\r\n     * @param {Object} item the element to search.\r\n     * @param {function(Object,Object):boolean=} equalsFunction optional function to\r\n     * check equality between 2 elements.\r\n     * @return {boolean} true if the specified array contains the specified element.\r\n     */\r\n    export function contains<T>(array: T[], item: T, equalsFunction?: IEqualsFunction<T>): boolean {\r\n        return arrays.indexOf(array, item, equalsFunction) >= 0;\r\n    }\r\n\r\n\r\n    /**\r\n     * Removes the first ocurrence of the specified element from the specified array.\r\n     * @param {*} array the array in which to search element.\r\n     * @param {Object} item the element to search.\r\n     * @param {function(Object,Object):boolean=} equalsFunction optional function to\r\n     * check equality between 2 elements.\r\n     * @return {boolean} true if the array changed after this call.\r\n     */\r\n    export function remove<T>(array: T[], item: T, equalsFunction?: IEqualsFunction<T>): boolean {\r\n        var index = arrays.indexOf(array, item, equalsFunction);\r\n        if (index < 0) {\r\n            return false;\r\n        }\r\n        array.splice(index, 1);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Returns the number of elements in the specified array equal\r\n     * to the specified object.\r\n     * @param {Array} array the array in which to determine the frequency of the element.\r\n     * @param {Object} item the element whose frequency is to be determined.\r\n     * @param {function(Object,Object):boolean=} equalsFunction optional function used to\r\n     * check equality between 2 elements.\r\n     * @return {number} the number of elements in the specified array\r\n     * equal to the specified object.\r\n     */\r\n    export function frequency<T>(array: T[], item: T, equalsFunction?: IEqualsFunction<T>): number {\r\n        var equals = equalsFunction || defaultEquals;\r\n        var length = array.length;\r\n        var freq = 0;\r\n        for (var i = 0; i < length; i++) {\r\n            if (equals(array[i], item)) {\r\n                freq++;\r\n            }\r\n        }\r\n        return freq;\r\n    }\r\n\r\n    /**\r\n     * Returns true if the two specified arrays are equal to one another.\r\n     * Two arrays are considered equal if both arrays contain the same number\r\n     * of elements, and all corresponding pairs of elements in the two\r\n     * arrays are equal and are in the same order.\r\n     * @param {Array} array1 one array to be tested for equality.\r\n     * @param {Array} array2 the other array to be tested for equality.\r\n     * @param {function(Object,Object):boolean=} equalsFunction optional function used to\r\n     * check equality between elemements in the arrays.\r\n     * @return {boolean} true if the two arrays are equal\r\n     */\r\n    export function equals<T>(array1: T[], array2: T[], equalsFunction?: IEqualsFunction<T>): boolean {\r\n        var equals = equalsFunction || defaultEquals;\r\n\r\n        if (array1.length !== array2.length) {\r\n            return false;\r\n        }\r\n        var length = array1.length;\r\n        for (var i = 0; i < length; i++) {\r\n            if (!equals(array1[i], array2[i])) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Returns shallow a copy of the specified array.\r\n     * @param {*} array the array to copy.\r\n     * @return {Array} a copy of the specified array\r\n     */\r\n    export function copy<T>(array: T[]): T[] {\r\n        return array.concat();\r\n    }\r\n\r\n    /**\r\n     * Swaps the elements at the specified positions in the specified array.\r\n     * @param {Array} array The array in which to swap elements.\r\n     * @param {number} i the index of one element to be swapped.\r\n     * @param {number} j the index of the other element to be swapped.\r\n     * @return {boolean} true if the array is defined and the indexes are valid.\r\n     */\r\n    export function swap<T>(array: T[], i: number, j: number): boolean {\r\n        if (i < 0 || i >= array.length || j < 0 || j >= array.length) {\r\n            return false;\r\n        }\r\n        var temp = array[i];\r\n        array[i] = array[j];\r\n        array[j] = temp;\r\n        return true;\r\n    }\r\n\r\n    export function toString<T>(array: T[]): string {\r\n        return '[' + array.toString() + ']';\r\n    }\r\n\r\n    /**\r\n     * Executes the provided function once for each element present in this array\r\n     * starting from index 0 to length - 1.\r\n     * @param {Array} array The array in which to iterate.\r\n     * @param {function(Object):*} callback function to execute, it is\r\n     * invoked with one argument: the element value, to break the iteration you can\r\n     * optionally return false.\r\n     */\r\n    export function forEach<T>(array: T[], callback: (item: T) => boolean): void {\r\n        var lenght = array.length;\r\n        for (var i = 0; i < lenght; i++) {\r\n            if (callback(array[i]) === false) {\r\n                return;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// A linked list node\r\nexport interface ILinkedListNode<T> {\r\n    element: T;\r\n    next: ILinkedListNode<T>;\r\n}\r\n\r\nexport class LinkedList<T> {\r\n\r\n    /**\r\n    * First node in the list\r\n    * @type {Object}\r\n    * @private\r\n    */\r\n    public firstNode: ILinkedListNode<T> = null;\r\n    /**\r\n    * Last node in the list\r\n    * @type {Object}\r\n    * @private\r\n    */\r\n    private lastNode: ILinkedListNode<T> = null;\r\n\r\n    /**\r\n    * Number of elements in the list\r\n    * @type {number}\r\n    * @private\r\n    */\r\n    private nElements = 0;\r\n\r\n    public get count(){\r\n        return this.nElements;\r\n    }\r\n\r\n    /**\r\n    * Creates an empty Linked List.\r\n    * @class A linked list is a data structure consisting of a group of nodes\r\n    * which together represent a sequence.\r\n    * @constructor\r\n    */\r\n    constructor() {\r\n    }\r\n\r\n    /**\r\n    * Adds an element to this list.\r\n    * @param {Object} item element to be added.\r\n    * @param {number=} index optional index to add the element. If no index is specified\r\n    * the element is added to the end of this list.\r\n    * @return {boolean} true if the element was added or false if the index is invalid\r\n    * or if the element is undefined.\r\n    */\r\n    add(item: T, index?: number): boolean {\r\n        if (isUndefined(index)) {\r\n            index = this.nElements;\r\n        }\r\n        if (index < 0 || index > this.nElements || isUndefined(item)) {\r\n            return false;\r\n        }\r\n        var newNode = this.createNode(item);\r\n        if (this.nElements === 0) {\r\n            // First node in the list.\r\n            this.firstNode = newNode;\r\n            this.lastNode = newNode;\r\n        } else if (index === this.nElements) {\r\n            // Insert at the end.\r\n            this.lastNode.next = newNode;\r\n            this.lastNode = newNode;\r\n        } else if (index === 0) {\r\n            // Change first node.\r\n            newNode.next = this.firstNode;\r\n            this.firstNode = newNode;\r\n        } else {\r\n            var prev = this.nodeAtIndex(index - 1);\r\n            newNode.next = prev.next;\r\n            prev.next = newNode;\r\n        }\r\n        this.nElements++;\r\n        return true;\r\n    }\r\n\r\n    /**\r\n    * Returns the first element in this list.\r\n    * @return {*} the first element of the list or undefined if the list is\r\n    * empty.\r\n    */\r\n    first(): T {\r\n\r\n        if (this.firstNode !== null) {\r\n            return this.firstNode.element;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n    * Returns the last element in this list.\r\n    * @return {*} the last element in the list or undefined if the list is\r\n    * empty.\r\n    */\r\n    last(): T {\r\n\r\n        if (this.lastNode !== null) {\r\n            return this.lastNode.element;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Returns the element at the specified position in this list.\r\n     * @param {number} index desired index.\r\n     * @return {*} the element at the given index or undefined if the index is\r\n     * out of bounds.\r\n     */\r\n    elementAtIndex(index: number): T {\r\n\r\n        var node = this.nodeAtIndex(index);\r\n        if (node === null) {\r\n            return undefined;\r\n        }\r\n        return node.element;\r\n    }\r\n\r\n    /**\r\n     * Returns the index in this list of the first occurrence of the\r\n     * specified element, or -1 if the List does not contain this element.\r\n     * <p>If the elements inside this list are\r\n     * not comparable with the === operator a custom equals function should be\r\n     * provided to perform searches, the function must receive two arguments and\r\n     * return true if they are equal, false otherwise. Example:</p>\r\n     *\r\n     * <pre>\r\n     * var petsAreEqualByName = function(pet1, pet2) {\r\n     *  return pet1.name === pet2.name;\r\n     * }\r\n     * </pre>\r\n     * @param {Object} item element to search for.\r\n     * @param {function(Object,Object):boolean=} equalsFunction Optional\r\n     * function used to check if two elements are equal.\r\n     * @return {number} the index in this list of the first occurrence\r\n     * of the specified element, or -1 if this list does not contain the\r\n     * element.\r\n     */\r\n    indexOf(item: T, equalsFunction?: IEqualsFunction<T>): number {\r\n\r\n        var equalsF = equalsFunction || defaultEquals;\r\n        if (isUndefined(item)) {\r\n            return -1;\r\n        }\r\n        var currentNode = this.firstNode;\r\n        var index = 0;\r\n        while (currentNode !== null) {\r\n            if (equalsF(currentNode.element, item)) {\r\n                return index;\r\n            }\r\n            index++;\r\n            currentNode = currentNode.next;\r\n        }\r\n        return -1;\r\n    }\r\n\r\n\r\n    /**\r\n       * Returns true if this list contains the specified element.\r\n       * <p>If the elements inside the list are\r\n       * not comparable with the === operator a custom equals function should be\r\n       * provided to perform searches, the function must receive two arguments and\r\n       * return true if they are equal, false otherwise. Example:</p>\r\n       *\r\n       * <pre>\r\n       * var petsAreEqualByName = function(pet1, pet2) {\r\n       *  return pet1.name === pet2.name;\r\n       * }\r\n       * </pre>\r\n       * @param {Object} item element to search for.\r\n       * @param {function(Object,Object):boolean=} equalsFunction Optional\r\n       * function used to check if two elements are equal.\r\n       * @return {boolean} true if this list contains the specified element, false\r\n       * otherwise.\r\n       */\r\n    contains(item: T, equalsFunction?: IEqualsFunction<T>): boolean {\r\n        return (this.indexOf(item, equalsFunction) >= 0);\r\n    }\r\n\r\n    /**\r\n     * Removes the first occurrence of the specified element in this list.\r\n     * <p>If the elements inside the list are\r\n     * not comparable with the === operator a custom equals function should be\r\n     * provided to perform searches, the function must receive two arguments and\r\n     * return true if they are equal, false otherwise. Example:</p>\r\n     *\r\n     * <pre>\r\n     * var petsAreEqualByName = function(pet1, pet2) {\r\n     *  return pet1.name === pet2.name;\r\n     * }\r\n     * </pre>\r\n     * @param {Object} item element to be removed from this list, if present.\r\n     * @return {boolean} true if the list contained the specified element.\r\n     */\r\n    remove(item: T, equalsFunction?: IEqualsFunction<T>): boolean {\r\n        var equalsF = equalsFunction || defaultEquals;\r\n        if (this.nElements < 1 || isUndefined(item)) {\r\n            return false;\r\n        }\r\n        var previous: ILinkedListNode<T> = null;\r\n        var currentNode: ILinkedListNode<T> = this.firstNode;\r\n\r\n        while (currentNode !== null) {\r\n            if (equalsF(currentNode.element, item)) {\r\n\r\n                if (currentNode === this.firstNode) {\r\n                    this.firstNode = this.firstNode.next;\r\n                    if (currentNode === this.lastNode) {\r\n                        this.lastNode = null;\r\n                    }\r\n                } else if (currentNode === this.lastNode) {\r\n                    this.lastNode = previous;\r\n                    previous.next = currentNode.next;\r\n                    currentNode.next = null;\r\n                } else {\r\n                    previous.next = currentNode.next;\r\n                    currentNode.next = null;\r\n                }\r\n                this.nElements--;\r\n                return true;\r\n            }\r\n            previous = currentNode;\r\n            currentNode = currentNode.next;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Removes all of the elements from this list.\r\n     */\r\n    clear(): void {\r\n        this.firstNode = null;\r\n        this.lastNode = null;\r\n        this.nElements = 0;\r\n    }\r\n\r\n    /**\r\n     * Returns true if this list is equal to the given list.\r\n     * Two lists are equal if they have the same elements in the same order.\r\n     * @param {LinkedList} other the other list.\r\n     * @param {function(Object,Object):boolean=} equalsFunction optional\r\n     * function used to check if two elements are equal. If the elements in the lists\r\n     * are custom objects you should provide a function, otherwise\r\n     * the === operator is used to check equality between elements.\r\n     * @return {boolean} true if this list is equal to the given list.\r\n     */\r\n    equals(other: LinkedList<T>, equalsFunction?: IEqualsFunction<T>): boolean {\r\n        var eqF = equalsFunction || defaultEquals;\r\n        if (!(other instanceof LinkedList)) {\r\n            return false;\r\n        }\r\n        if (this.size() !== other.size()) {\r\n            return false;\r\n        }\r\n        return this.equalsAux(this.firstNode, other.firstNode, eqF);\r\n    }\r\n\r\n    /**\r\n    * @private\r\n    */\r\n    private equalsAux(n1: ILinkedListNode<T>, n2: ILinkedListNode<T>, eqF: IEqualsFunction<T>): boolean {\r\n        while (n1 !== null) {\r\n            if (!eqF(n1.element, n2.element)) {\r\n                return false;\r\n            }\r\n            n1 = n1.next;\r\n            n2 = n2.next;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Removes the element at the specified position in this list.\r\n     * @param {number} index given index.\r\n     * @return {*} removed element or undefined if the index is out of bounds.\r\n     */\r\n    removeElementAtIndex(index: number): T {\r\n        if (index < 0 || index >= this.nElements) {\r\n            return undefined;\r\n        }\r\n        var element: T;\r\n        if (this.nElements === 1) {\r\n            //First node in the list.\r\n            element = this.firstNode.element;\r\n            this.firstNode = null;\r\n            this.lastNode = null;\r\n        } else {\r\n            var previous = this.nodeAtIndex(index - 1);\r\n            if (previous === null) {\r\n                element = this.firstNode.element;\r\n                this.firstNode = this.firstNode.next;\r\n            } else if (previous.next === this.lastNode) {\r\n                element = this.lastNode.element;\r\n                this.lastNode = previous;\r\n            }\r\n            if (previous !== null) {\r\n                element = previous.next.element;\r\n                previous.next = previous.next.next;\r\n            }\r\n        }\r\n        this.nElements--;\r\n        return element;\r\n    }\r\n\r\n    /**\r\n     * Executes the provided function once for each element present in this list in order.\r\n     * @param {function(Object):*} callback function to execute, it is\r\n     * invoked with one argument: the element value, to break the iteration you can\r\n     * optionally return false.\r\n     */\r\n    forEach(callback: (item: T) => boolean): void {\r\n        var currentNode = this.firstNode;\r\n        while (currentNode !== null) {\r\n            if (callback(currentNode.element) === false) {\r\n                break;\r\n            }\r\n            currentNode = currentNode.next;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reverses the order of the elements in this linked list (makes the last\r\n     * element first, and the first element last).\r\n     */\r\n    reverse(): void {\r\n        var previous: ILinkedListNode<T> = null;\r\n        var current: ILinkedListNode<T> = this.firstNode;\r\n        var temp: ILinkedListNode<T> = null;\r\n        while (current !== null) {\r\n            temp = current.next;\r\n            current.next = previous;\r\n            previous = current;\r\n            current = temp;\r\n        }\r\n        temp = this.firstNode;\r\n        this.firstNode = this.lastNode;\r\n        this.lastNode = temp;\r\n    }\r\n\r\n    /**\r\n     * Returns an array containing all of the elements in this list in proper\r\n     * sequence.\r\n     * @return {Array.<*>} an array containing all of the elements in this list,\r\n     * in proper sequence.\r\n     */\r\n    toArray(): T[] {\r\n        var array: T[] = [];\r\n        var currentNode: ILinkedListNode<T> = this.firstNode;\r\n        while (currentNode !== null) {\r\n            array.push(currentNode.element);\r\n            currentNode = currentNode.next;\r\n        }\r\n        return array;\r\n    }\r\n\r\n    /**\r\n     * Returns the number of elements in this list.\r\n     * @return {number} the number of elements in this list.\r\n     */\r\n    size(): number {\r\n        return this.nElements;\r\n    }\r\n\r\n    /**\r\n     * Returns true if this list contains no elements.\r\n     * @return {boolean} true if this list contains no elements.\r\n     */\r\n    isEmpty(): boolean {\r\n        return this.nElements <= 0;\r\n    }\r\n\r\n    toString(): string {\r\n        return arrays.toString(this.toArray());\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private nodeAtIndex(index: number): ILinkedListNode<T> {\r\n\r\n        if (index < 0 || index >= this.nElements) {\r\n            return null;\r\n        }\r\n        if (index === (this.nElements - 1)) {\r\n            return this.lastNode;\r\n        }\r\n        var node = this.firstNode;\r\n        for (var i = 0; i < index; i++) {\r\n            node = node.next;\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private createNode(item: T): ILinkedListNode<T> {\r\n        return {\r\n            element: item,\r\n            next: null\r\n        };\r\n    }\r\n} // End of linked list\r\n\r\n\r\n\r\n// Used internally by dictionary\r\nexport interface IDictionaryPair<K, V> {\r\n    key: K;\r\n    value: V;\r\n}\r\n\r\nexport class Dictionary<K, V>{\r\n\r\n    /**\r\n     * Object holding the key-value pairs.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    protected table: { [key: string]: IDictionaryPair<K, V> };\r\n    //: [key: K] will not work since indices can only by strings in javascript and typescript enforces this.\r\n\r\n    /**\r\n     * Number of elements in the list.\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    protected nElements: number;\r\n\r\n    /**\r\n     * Function used to convert keys to strings.\r\n     * @type {function(Object):string}\r\n     * @protected\r\n     */\r\n    protected toStr: (key: K) => string;\r\n\r\n\r\n    /**\r\n     * Creates an empty dictionary.\r\n     * @class <p>Dictionaries map keys to values; each key can map to at most one value.\r\n     * This implementation accepts any kind of objects as keys.</p>\r\n     *\r\n     * <p>If the keys are custom objects a function which converts keys to unique\r\n     * strings must be provided. Example:</p>\r\n     * <pre>\r\n     * function petToString(pet) {\r\n     *  return pet.name;\r\n     * }\r\n     * </pre>\r\n     * @constructor\r\n     * @param {function(Object):string=} toStrFunction optional function used\r\n     * to convert keys to strings. If the keys aren't strings or if toString()\r\n     * is not appropriate, a custom function which receives a key and returns a\r\n     * unique string must be provided.\r\n     */\r\n    constructor(toStrFunction?: (key: K) => string) {\r\n        this.table = {};\r\n        this.nElements = 0;\r\n        this.toStr = toStrFunction || defaultToString;\r\n    }\r\n\r\n\r\n    /**\r\n     * Returns the value to which this dictionary maps the specified key.\r\n     * Returns undefined if this dictionary contains no mapping for this key.\r\n     * @param {Object} key key whose associated value is to be returned.\r\n     * @return {*} the value to which this dictionary maps the specified key or\r\n     * undefined if the map contains no mapping for this key.\r\n     */\r\n    getValue(key: K): V {\r\n        var pair: IDictionaryPair<K, V> = this.table['$' + this.toStr(key)];\r\n        if (isUndefined(pair)) {\r\n            return undefined;\r\n        }\r\n        return pair.value;\r\n    }\r\n\r\n\r\n    /**\r\n     * Associates the specified value with the specified key in this dictionary.\r\n     * If the dictionary previously contained a mapping for this key, the old\r\n     * value is replaced by the specified value.\r\n     * @param {Object} key key with which the specified value is to be\r\n     * associated.\r\n     * @param {Object} value value to be associated with the specified key.\r\n     * @return {*} previous value associated with the specified key, or undefined if\r\n     * there was no mapping for the key or if the key/value are undefined.\r\n     */\r\n    setValue(key: K, value: V): V {\r\n\r\n        if (isUndefined(key) || isUndefined(value)) {\r\n            return undefined;\r\n        }\r\n\r\n        var ret: V;\r\n        var k = '$' + this.toStr(key);\r\n        var previousElement: IDictionaryPair<K, V> = this.table[k];\r\n        if (isUndefined(previousElement)) {\r\n            this.nElements++;\r\n            ret = undefined;\r\n        } else {\r\n            ret = previousElement.value;\r\n        }\r\n        this.table[k] = {\r\n            key: key,\r\n            value: value\r\n        };\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * Removes the mapping for this key from this dictionary if it is present.\r\n     * @param {Object} key key whose mapping is to be removed from the\r\n     * dictionary.\r\n     * @return {*} previous value associated with specified key, or undefined if\r\n     * there was no mapping for key.\r\n     */\r\n    remove(key: K): V {\r\n        var k = '$' + this.toStr(key);\r\n        var previousElement: IDictionaryPair<K, V> = this.table[k];\r\n        if (!isUndefined(previousElement)) {\r\n            delete this.table[k];\r\n            this.nElements--;\r\n            return previousElement.value;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Returns an array containing all of the keys in this dictionary.\r\n     * @return {Array} an array containing all of the keys in this dictionary.\r\n     */\r\n    keys(): K[] {\r\n        var array: K[] = [];\r\n        for (var name in this.table) {\r\n            if (has(this.table, name)) {\r\n                var pair: IDictionaryPair<K, V> = this.table[name];\r\n                array.push(pair.key);\r\n            }\r\n        }\r\n        return array;\r\n    }\r\n\r\n    /**\r\n     * Returns an array containing all of the values in this dictionary.\r\n     * @return {Array} an array containing all of the values in this dictionary.\r\n     */\r\n    values(): V[] {\r\n        var array: V[] = [];\r\n        for (var name in this.table) {\r\n            if (has(this.table, name)) {\r\n                var pair: IDictionaryPair<K, V> = this.table[name];\r\n                array.push(pair.value);\r\n            }\r\n        }\r\n        return array;\r\n    }\r\n\r\n    /**\r\n    * Executes the provided function once for each key-value pair\r\n    * present in this dictionary.\r\n    * @param {function(Object,Object):*} callback function to execute, it is\r\n    * invoked with two arguments: key and value. To break the iteration you can\r\n    * optionally return false.\r\n    */\r\n    forEach(callback: (key: K, value: V) => any): void {\r\n        for (var name in this.table) {\r\n            if (has(this.table, name)) {\r\n                var pair: IDictionaryPair<K, V> = this.table[name];\r\n                var ret = callback(pair.key, pair.value);\r\n                if (ret === false) {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns true if this dictionary contains a mapping for the specified key.\r\n     * @param {Object} key key whose presence in this dictionary is to be\r\n     * tested.\r\n     * @return {boolean} true if this dictionary contains a mapping for the\r\n     * specified key.\r\n     */\r\n    containsKey(key: K): boolean {\r\n        return !isUndefined(this.getValue(key));\r\n    }\r\n\r\n    /**\r\n    * Removes all mappings from this dictionary.\r\n    * @this {Dictionary}\r\n    */\r\n    clear() {\r\n        this.table = {};\r\n        this.nElements = 0;\r\n    }\r\n\r\n    /**\r\n     * Returns the number of keys in this dictionary.\r\n     * @return {number} the number of key-value mappings in this dictionary.\r\n     */\r\n    size(): number {\r\n        return this.nElements;\r\n    }\r\n\r\n    /**\r\n     * Returns true if this dictionary contains no mappings.\r\n     * @return {boolean} true if this dictionary contains no mappings.\r\n     */\r\n    isEmpty(): boolean {\r\n        return this.nElements <= 0;\r\n    }\r\n\r\n    toString(): string {\r\n        var toret = \"{\";\r\n        this.forEach((k, v) => {\r\n            toret = toret + \"\\n\\t\" + k.toString() + \" : \" + v.toString();\r\n        });\r\n        return toret + \"\\n}\";\r\n    }\r\n} // End of dictionary\r\n\r\n/**\r\n * This class is used by the LinkedDictionary Internally\r\n * Has to be a class, not an interface, because it needs to have\r\n * the 'unlink' function defined.\r\n */\r\nclass LinkedDictionaryPair<K, V> implements IDictionaryPair<K, V> {\r\n    prev: LinkedDictionaryPair<K, V>;\r\n    next: LinkedDictionaryPair<K, V>;\r\n\r\n    constructor(public key: K, public value: V) { }\r\n\r\n    unlink() {\r\n        this.prev.next = this.next;\r\n        this.next.prev = this.prev;\r\n    }\r\n}\r\n\r\nexport class LinkedDictionary<K, V> extends Dictionary<K, V> {\r\n    private head: LinkedDictionaryPair<K, V>; // Head Identifier of the list.  holds no Key or Value\r\n    private tail: LinkedDictionaryPair<K, V>; // Tail Identifier of the list.  holds no Key or Value\r\n\r\n    constructor(toStrFunction?: (key: K) => string) {\r\n        super(toStrFunction);\r\n        this.head = new LinkedDictionaryPair(null, null);\r\n        this.tail = new LinkedDictionaryPair(null, null);\r\n        this.head.next = this.tail;\r\n        this.tail.prev = this.head;\r\n    }\r\n\r\n    /**\r\n     * Inserts the new node to the 'tail' of the list, updating the\r\n     * neighbors, and moving 'this.tail' (the End of List indicator) that\r\n     * to the end.\r\n     */\r\n    private appendToTail(entry: LinkedDictionaryPair<K, V>) {\r\n        var lastNode = this.tail.prev;\r\n        lastNode.next = entry;\r\n        entry.prev = lastNode;\r\n        entry.next = this.tail;\r\n        this.tail.prev = entry;\r\n    }\r\n\r\n    /**\r\n     * Retrieves a linked dictionary from the table internally\r\n     */\r\n    private getLinkedDictionaryPair(key: K): LinkedDictionaryPair<K, V> {\r\n        if (isUndefined(key)) {\r\n            return undefined;\r\n        }\r\n        var k = '$' + this.toStr(key);\r\n        var pair = <LinkedDictionaryPair<K, V>>(this.table[k]);\r\n        return pair;\r\n    }\r\n\r\n    /**\r\n     * Returns the value to which this dictionary maps the specified key.\r\n     * Returns undefined if this dictionary contains no mapping for this key.\r\n     * @param {Object} key key whose associated value is to be returned.\r\n     * @return {*} the value to which this dictionary maps the specified key or\r\n     * undefined if the map contains no mapping for this key.\r\n     */\r\n    getValue(key: K): V {\r\n        var pair = this.getLinkedDictionaryPair(key);\r\n        if (!isUndefined(pair)) {\r\n            return pair.value;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Removes the mapping for this key from this dictionary if it is present.\r\n     * Also, if a value is present for this key, the entry is removed from the\r\n     * insertion ordering.\r\n     * @param {Object} key key whose mapping is to be removed from the\r\n     * dictionary.\r\n     * @return {*} previous value associated with specified key, or undefined if\r\n     * there was no mapping for key.\r\n     */\r\n    remove(key: K): V {\r\n        var pair = this.getLinkedDictionaryPair(key);\r\n        if (!isUndefined(pair)) {\r\n            super.remove(key); // This will remove it from the table\r\n            pair.unlink(); // This will unlink it from the chain\r\n            return pair.value;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n    * Removes all mappings from this LinkedDictionary.\r\n    * @this {LinkedDictionary}\r\n    */\r\n    clear() {\r\n        super.clear();\r\n        this.head.next = this.tail;\r\n        this.tail.prev = this.head;\r\n    }\r\n\r\n    /**\r\n     * Internal function used when updating an existing KeyValue pair.\r\n     * It places the new value indexed by key into the table, but maintains\r\n     * its place in the linked ordering.\r\n     */\r\n    private replace(oldPair: LinkedDictionaryPair<K, V>, newPair: LinkedDictionaryPair<K, V>) {\r\n        var k = '$' + this.toStr(newPair.key);\r\n\r\n        // set the new Pair's links to existingPair's links\r\n        newPair.next = oldPair.next;\r\n        newPair.prev = oldPair.prev;\r\n\r\n        // Delete Existing Pair from the table, unlink it from chain.\r\n        // As a result, the nElements gets decremented by this operation\r\n        this.remove(oldPair.key);\r\n\r\n        // Link new Pair in place of where oldPair was,\r\n        // by pointing the old pair's neighbors to it.\r\n        newPair.prev.next = newPair;\r\n        newPair.next.prev = newPair;\r\n\r\n        this.table[k] = newPair;\r\n\r\n        // To make up for the fact that the number of elements was decremented,\r\n        // We need to increase it by one.\r\n        ++this.nElements;\r\n\r\n    }\r\n\r\n    /**\r\n     * Associates the specified value with the specified key in this dictionary.\r\n     * If the dictionary previously contained a mapping for this key, the old\r\n     * value is replaced by the specified value.\r\n     * Updating of a key that already exists maintains its place in the\r\n     * insertion order into the map.\r\n     * @param {Object} key key with which the specified value is to be\r\n     * associated.\r\n     * @param {Object} value value to be associated with the specified key.\r\n     * @return {*} previous value associated with the specified key, or undefined if\r\n     * there was no mapping for the key or if the key/value are undefined.\r\n     */\r\n    setValue(key: K, value: V): V {\r\n\r\n        if (isUndefined(key) || isUndefined(value)) {\r\n            return undefined;\r\n        }\r\n\r\n        var existingPair = this.getLinkedDictionaryPair(key);\r\n        var newPair = new LinkedDictionaryPair<K, V>(key, value);\r\n\r\n        var k = '$' + this.toStr(key);\r\n\r\n        // If there is already an element for that key, we\r\n        // keep it's place in the LinkedList\r\n        if (!isUndefined(existingPair)) {\r\n            this.replace(existingPair, newPair);\r\n\r\n            return existingPair.value;\r\n        } else {\r\n            this.appendToTail(newPair);\r\n            this.table[k] = newPair;\r\n            ++this.nElements;\r\n\r\n            return undefined;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Returns an array containing all of the keys in this LinkedDictionary, ordered\r\n     * by insertion order.\r\n     * @return {Array} an array containing all of the keys in this LinkedDictionary,\r\n     * ordered by insertion order.\r\n     */\r\n    keys(): K[] {\r\n        var array: K[] = [];\r\n        this.forEach((key, value) => {\r\n            array.push(key);\r\n        });\r\n        return array;\r\n    }\r\n\r\n    /**\r\n     * Returns an array containing all of the values in this LinkedDictionary, ordered by\r\n     * insertion order.\r\n     * @return {Array} an array containing all of the values in this LinkedDictionary,\r\n     * ordered by insertion order.\r\n     */\r\n    values(): V[] {\r\n        var array: V[] = [];\r\n        this.forEach((key, value) => {\r\n            array.push(value);\r\n        });\r\n        return array;\r\n    }\r\n\r\n    /**\r\n    * Executes the provided function once for each key-value pair\r\n    * present in this LinkedDictionary. It is done in the order of insertion\r\n    * into the LinkedDictionary\r\n    * @param {function(Object,Object):*} callback function to execute, it is\r\n    * invoked with two arguments: key and value. To break the iteration you can\r\n    * optionally return false.\r\n    */\r\n    forEach(callback: (key: K, value: V) => any): void {\r\n        var crawlNode = this.head.next;\r\n        while (crawlNode.next != null) {\r\n            var ret = callback(crawlNode.key, crawlNode.value);\r\n            if (ret === false) {\r\n                return;\r\n            }\r\n            crawlNode = crawlNode.next;\r\n        }\r\n    }\r\n\r\n} // End of LinkedDictionary\r\n// /**\r\n//  * Returns true if this dictionary is equal to the given dictionary.\r\n//  * Two dictionaries are equal if they contain the same mappings.\r\n//  * @param {Dictionary} other the other dictionary.\r\n//  * @param {function(Object,Object):boolean=} valuesEqualFunction optional\r\n//  * function used to check if two values are equal.\r\n//  * @return {boolean} true if this dictionary is equal to the given dictionary.\r\n//  */\r\n// Dictionary.prototype.equals = function(other,valuesEqualFunction) {\r\n// \tvar eqF = valuesEqualFunction || defaultEquals;\r\n// \tif(!(other instanceof Dictionary)){\r\n// \t\treturn false;\r\n// \t}\r\n// \tif(this.size() !== other.size()){\r\n// \t\treturn false;\r\n// \t}\r\n// \treturn this.equalsAux(this.firstNode,other.firstNode,eqF);\r\n// }\r\n\r\nexport class MultiDictionary<K, V> {\r\n\r\n    // Cannot do:\r\n    // class MultiDictionary<K,V> extends Dictionary<K,Array<V>> {\r\n    // Since we want to reuse the function name setValue and types in signature become incompatible\r\n    // Therefore we are using composition instead of inheritance\r\n    private dict: Dictionary<K, Array<V>>;\r\n    private equalsF: IEqualsFunction<V>;\r\n    private allowDuplicate: boolean;\r\n\r\n    /**\r\n     * Creates an empty multi dictionary.\r\n     * @class <p>A multi dictionary is a special kind of dictionary that holds\r\n     * multiple values against each key. Setting a value into the dictionary will\r\n     * add the value to an array at that key. Getting a key will return an array,\r\n     * holding all the values set to that key.\r\n     * You can configure to allow duplicates in the values.\r\n     * This implementation accepts any kind of objects as keys.</p>\r\n     *\r\n     * <p>If the keys are custom objects a function which converts keys to strings must be\r\n     * provided. Example:</p>\r\n     *\r\n     * <pre>\r\n     * function petToString(pet) {\r\n       *  return pet.name;\r\n       * }\r\n     * </pre>\r\n     * <p>If the values are custom objects a function to check equality between values\r\n     * must be provided. Example:</p>\r\n     *\r\n     * <pre>\r\n     * function petsAreEqualByAge(pet1,pet2) {\r\n       *  return pet1.age===pet2.age;\r\n       * }\r\n     * </pre>\r\n     * @constructor\r\n     * @param {function(Object):string=} toStrFunction optional function\r\n     * to convert keys to strings. If the keys aren't strings or if toString()\r\n     * is not appropriate, a custom function which receives a key and returns a\r\n     * unique string must be provided.\r\n     * @param {function(Object,Object):boolean=} valuesEqualsFunction optional\r\n     * function to check if two values are equal.\r\n     *\r\n     * @param allowDuplicateValues\r\n     */\r\n    constructor(toStrFunction?: (key: K) => string, valuesEqualsFunction?: IEqualsFunction<V>, allowDuplicateValues = false) {\r\n        this.dict = new Dictionary<K, Array<V>>(toStrFunction);\r\n        this.equalsF = valuesEqualsFunction || defaultEquals;\r\n        this.allowDuplicate = allowDuplicateValues;\r\n    }\r\n    /**\r\n    * Returns an array holding the values to which this dictionary maps\r\n    * the specified key.\r\n    * Returns an empty array if this dictionary contains no mappings for this key.\r\n    * @param {Object} key key whose associated values are to be returned.\r\n    * @return {Array} an array holding the values to which this dictionary maps\r\n    * the specified key.\r\n    */\r\n    getValue(key: K): V[] {\r\n        var values = this.dict.getValue(key);\r\n        if (isUndefined(values)) {\r\n            return [];\r\n        }\r\n        return arrays.copy(values);\r\n    }\r\n\r\n    /**\r\n     * Adds the value to the array associated with the specified key, if\r\n     * it is not already present.\r\n     * @param {Object} key key with which the specified value is to be\r\n     * associated.\r\n     * @param {Object} value the value to add to the array at the key\r\n     * @return {boolean} true if the value was not already associated with that key.\r\n     */\r\n    setValue(key: K, value: V): boolean {\r\n\r\n        if (isUndefined(key) || isUndefined(value)) {\r\n            return false;\r\n        }\r\n        if (!this.containsKey(key)) {\r\n            this.dict.setValue(key, [value]);\r\n            return true;\r\n        }\r\n        var array = this.dict.getValue(key);\r\n        if (!this.allowDuplicate) {\r\n            if (arrays.contains(array, value, this.equalsF)) {\r\n                return false;\r\n            }\r\n        }\r\n        array.push(value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Removes the specified values from the array of values associated with the\r\n     * specified key. If a value isn't given, all values associated with the specified\r\n     * key are removed.\r\n     * @param {Object} key key whose mapping is to be removed from the\r\n     * dictionary.\r\n     * @param {Object=} value optional argument to specify the value to remove\r\n     * from the array associated with the specified key.\r\n     * @return {*} true if the dictionary changed, false if the key doesn't exist or\r\n     * if the specified value isn't associated with the specified key.\r\n     */\r\n    remove(key: K, value?: V): boolean {\r\n        if (isUndefined(value)) {\r\n            var v = this.dict.remove(key);\r\n            return !isUndefined(v);\r\n        }\r\n        var array = this.dict.getValue(key);\r\n        if (arrays.remove(array, value, this.equalsF)) {\r\n            if (array.length === 0) {\r\n                this.dict.remove(key);\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Returns an array containing all of the keys in this dictionary.\r\n     * @return {Array} an array containing all of the keys in this dictionary.\r\n     */\r\n    keys(): K[] {\r\n        return this.dict.keys();\r\n    }\r\n\r\n    /**\r\n     * Returns an array containing all of the values in this dictionary.\r\n     * @return {Array} an array containing all of the values in this dictionary.\r\n     */\r\n    values(): V[] {\r\n        var values = this.dict.values();\r\n        var array: Array<V> = [];\r\n        for (var i = 0; i < values.length; i++) {\r\n            var v = values[i];\r\n            for (var j = 0; j < v.length; j++) {\r\n                array.push(v[j]);\r\n            }\r\n        }\r\n        return array;\r\n    }\r\n\r\n    /**\r\n     * Returns true if this dictionary at least one value associatted the specified key.\r\n     * @param {Object} key key whose presence in this dictionary is to be\r\n     * tested.\r\n     * @return {boolean} true if this dictionary at least one value associatted\r\n     * the specified key.\r\n     */\r\n    containsKey(key: K): boolean {\r\n        return this.dict.containsKey(key);\r\n    }\r\n\r\n    /**\r\n     * Removes all mappings from this dictionary.\r\n     */\r\n    clear(): void {\r\n        this.dict.clear();\r\n    }\r\n\r\n    /**\r\n     * Returns the number of keys in this dictionary.\r\n     * @return {number} the number of key-value mappings in this dictionary.\r\n     */\r\n    size(): number {\r\n        return this.dict.size();\r\n    }\r\n\r\n    /**\r\n     * Returns true if this dictionary contains no mappings.\r\n     * @return {boolean} true if this dictionary contains no mappings.\r\n     */\r\n    isEmpty(): boolean {\r\n        return this.dict.isEmpty();\r\n    }\r\n}// end of multi dictionary\r\n\r\nexport class Heap<T> {\r\n    /**\r\n     * Array used to store the elements od the heap.\r\n     * @type {Array.<Object>}\r\n     * @private\r\n     */\r\n    private data: T[] = [];\r\n    /**\r\n     * Function used to compare elements.\r\n     * @type {function(Object,Object):number}\r\n     * @private\r\n     */\r\n    private compare: ICompareFunction<T>;\r\n    /**\r\n     * Creates an empty Heap.\r\n     * @class\r\n     * <p>A heap is a binary tree, where the nodes maintain the heap property:\r\n     * each node is smaller than each of its children and therefore a MinHeap\r\n     * This implementation uses an array to store elements.</p>\r\n     * <p>If the inserted elements are custom objects a compare function must be provided,\r\n     *  at construction time, otherwise the <=, === and >= operators are\r\n     * used to compare elements. Example:</p>\r\n     *\r\n     * <pre>\r\n     * function compare(a, b) {\r\n     *  if (a is less than b by some ordering criterion) {\r\n     *     return -1;\r\n     *  } if (a is greater than b by the ordering criterion) {\r\n     *     return 1;\r\n     *  }\r\n     *  // a must be equal to b\r\n     *  return 0;\r\n     * }\r\n     * </pre>\r\n     *\r\n     * <p>If a Max-Heap is wanted (greater elements on top) you can a provide a\r\n     * reverse compare function to accomplish that behavior. Example:</p>\r\n     *\r\n     * <pre>\r\n     * function reverseCompare(a, b) {\r\n     *  if (a is less than b by some ordering criterion) {\r\n     *     return 1;\r\n     *  } if (a is greater than b by the ordering criterion) {\r\n     *     return -1;\r\n     *  }\r\n     *  // a must be equal to b\r\n     *  return 0;\r\n     * }\r\n     * </pre>\r\n     *\r\n     * @constructor\r\n     * @param {function(Object,Object):number=} compareFunction optional\r\n     * function used to compare two elements. Must return a negative integer,\r\n     * zero, or a positive integer as the first argument is less than, equal to,\r\n     * or greater than the second.\r\n     */\r\n    constructor(compareFunction?: ICompareFunction<T>) {\r\n        this.compare = compareFunction || defaultCompare;\r\n    }\r\n\r\n    /**\r\n     * Returns the index of the left child of the node at the given index.\r\n     * @param {number} nodeIndex The index of the node to get the left child\r\n     * for.\r\n     * @return {number} The index of the left child.\r\n     * @private\r\n     */\r\n    private leftChildIndex(nodeIndex: number): number {\r\n        return (2 * nodeIndex) + 1;\r\n    }\r\n    /**\r\n     * Returns the index of the right child of the node at the given index.\r\n     * @param {number} nodeIndex The index of the node to get the right child\r\n     * for.\r\n     * @return {number} The index of the right child.\r\n     * @private\r\n     */\r\n    private rightChildIndex(nodeIndex: number): number {\r\n        return (2 * nodeIndex) + 2;\r\n    }\r\n    /**\r\n     * Returns the index of the parent of the node at the given index.\r\n     * @param {number} nodeIndex The index of the node to get the parent for.\r\n     * @return {number} The index of the parent.\r\n     * @private\r\n     */\r\n    private parentIndex(nodeIndex: number): number {\r\n        return Math.floor((nodeIndex - 1) / 2);\r\n    }\r\n    /**\r\n     * Returns the index of the smaller child node (if it exists).\r\n     * @param {number} leftChild left child index.\r\n     * @param {number} rightChild right child index.\r\n     * @return {number} the index with the minimum value or -1 if it doesn't\r\n     * exists.\r\n     * @private\r\n     */\r\n    private minIndex(leftChild: number, rightChild: number): number {\r\n\r\n        if (rightChild >= this.data.length) {\r\n            if (leftChild >= this.data.length) {\r\n                return -1;\r\n            } else {\r\n                return leftChild;\r\n            }\r\n        } else {\r\n            if (this.compare(this.data[leftChild], this.data[rightChild]) <= 0) {\r\n                return leftChild;\r\n            } else {\r\n                return rightChild;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Moves the node at the given index up to its proper place in the heap.\r\n     * @param {number} index The index of the node to move up.\r\n     * @private\r\n     */\r\n    private siftUp(index: number): void {\r\n\r\n        var parent = this.parentIndex(index);\r\n        while (index > 0 && this.compare(this.data[parent], this.data[index]) > 0) {\r\n            arrays.swap(this.data, parent, index);\r\n            index = parent;\r\n            parent = this.parentIndex(index);\r\n        }\r\n    }\r\n    /**\r\n     * Moves the node at the given index down to its proper place in the heap.\r\n     * @param {number} nodeIndex The index of the node to move down.\r\n     * @private\r\n     */\r\n    private siftDown(nodeIndex: number): void {\r\n\r\n        //smaller child index\r\n        var min = this.minIndex(this.leftChildIndex(nodeIndex),\r\n            this.rightChildIndex(nodeIndex));\r\n\r\n        while (min >= 0 && this.compare(this.data[nodeIndex],\r\n            this.data[min]) > 0) {\r\n            arrays.swap(this.data, min, nodeIndex);\r\n            nodeIndex = min;\r\n            min = this.minIndex(this.leftChildIndex(nodeIndex),\r\n                this.rightChildIndex(nodeIndex));\r\n        }\r\n    }\r\n    /**\r\n     * Retrieves but does not remove the root element of this heap.\r\n     * @return {*} The value at the root of the heap. Returns undefined if the\r\n     * heap is empty.\r\n     */\r\n    peek(): T {\r\n\r\n        if (this.data.length > 0) {\r\n            return this.data[0];\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n    /**\r\n     * Adds the given element into the heap.\r\n     * @param {*} element the element.\r\n     * @return true if the element was added or fals if it is undefined.\r\n     */\r\n    add(element: T): boolean {\r\n        if (isUndefined(element)) {\r\n            return undefined;\r\n        }\r\n        this.data.push(element);\r\n        this.siftUp(this.data.length - 1);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Retrieves and removes the root element of this heap.\r\n     * @return {*} The value removed from the root of the heap. Returns\r\n     * undefined if the heap is empty.\r\n     */\r\n    removeRoot(): T {\r\n\r\n        if (this.data.length > 0) {\r\n            var obj = this.data[0];\r\n            this.data[0] = this.data[this.data.length - 1];\r\n            this.data.splice(this.data.length - 1, 1);\r\n            if (this.data.length > 0) {\r\n                this.siftDown(0);\r\n            }\r\n            return obj;\r\n        }\r\n        return undefined;\r\n    }\r\n    /**\r\n     * Returns true if this heap contains the specified element.\r\n     * @param {Object} element element to search for.\r\n     * @return {boolean} true if this Heap contains the specified element, false\r\n     * otherwise.\r\n     */\r\n    contains(element: T): boolean {\r\n        var equF = compareToEquals(this.compare);\r\n        return arrays.contains(this.data, element, equF);\r\n    }\r\n    /**\r\n     * Returns the number of elements in this heap.\r\n     * @return {number} the number of elements in this heap.\r\n     */\r\n    size(): number {\r\n        return this.data.length;\r\n    }\r\n    /**\r\n     * Checks if this heap is empty.\r\n     * @return {boolean} true if and only if this heap contains no items; false\r\n     * otherwise.\r\n     */\r\n    isEmpty(): boolean {\r\n        return this.data.length <= 0;\r\n    }\r\n    /**\r\n     * Removes all of the elements from this heap.\r\n     */\r\n    clear(): void {\r\n        this.data.length = 0;\r\n    }\r\n\r\n    /**\r\n     * Executes the provided function once for each element present in this heap in\r\n     * no particular order.\r\n     * @param {function(Object):*} callback function to execute, it is\r\n     * invoked with one argument: the element value, to break the iteration you can\r\n     * optionally return false.\r\n     */\r\n    forEach(callback: (item: T) => boolean) {\r\n        arrays.forEach(this.data, callback);\r\n    }\r\n}\r\n\r\nexport class Stack<T> {\r\n    /**\r\n     * List containing the elements.\r\n     * @type LinkedList\r\n     * @private\r\n     */\r\n    private list: LinkedList<T>;\r\n    /**\r\n     * Creates an empty Stack.\r\n     * @class A Stack is a Last-In-First-Out (LIFO) data structure, the last\r\n     * element added to the stack will be the first one to be removed. This\r\n     * implementation uses a linked list as a container.\r\n     * @constructor\r\n     */\r\n    constructor() {\r\n        this.list = new LinkedList<T>();\r\n    }\r\n\r\n    /**\r\n     * Pushes an item onto the top of this stack.\r\n     * @param {Object} elem the element to be pushed onto this stack.\r\n     * @return {boolean} true if the element was pushed or false if it is undefined.\r\n     */\r\n    push(elem: T) {\r\n        return this.list.add(elem, 0);\r\n    }\r\n    /**\r\n     * Pushes an item onto the top of this stack.\r\n     * @param {Object} elem the element to be pushed onto this stack.\r\n     * @return {boolean} true if the element was pushed or false if it is undefined.\r\n     */\r\n    add(elem: T) {\r\n        return this.list.add(elem, 0);\r\n    }\r\n    /**\r\n     * Removes the object at the top of this stack and returns that object.\r\n     * @return {*} the object at the top of this stack or undefined if the\r\n     * stack is empty.\r\n     */\r\n    pop(): T {\r\n        return this.list.removeElementAtIndex(0);\r\n    }\r\n    /**\r\n     * Looks at the object at the top of this stack without removing it from the\r\n     * stack.\r\n     * @return {*} the object at the top of this stack or undefined if the\r\n     * stack is empty.\r\n     */\r\n    peek(): T {\r\n        return this.list.first();\r\n    }\r\n    /**\r\n     * Returns the number of elements in this stack.\r\n     * @return {number} the number of elements in this stack.\r\n     */\r\n    size(): number {\r\n        return this.list.size();\r\n    }\r\n\r\n    /**\r\n     * Returns true if this stack contains the specified element.\r\n     * <p>If the elements inside this stack are\r\n     * not comparable with the === operator, a custom equals function should be\r\n     * provided to perform searches, the function must receive two arguments and\r\n     * return true if they are equal, false otherwise. Example:</p>\r\n     *\r\n     * <pre>\r\n     * var petsAreEqualByName (pet1, pet2) {\r\n     *  return pet1.name === pet2.name;\r\n     * }\r\n     * </pre>\r\n     * @param {Object} elem element to search for.\r\n     * @param {function(Object,Object):boolean=} equalsFunction optional\r\n     * function to check if two elements are equal.\r\n     * @return {boolean} true if this stack contains the specified element,\r\n     * false otherwise.\r\n     */\r\n    contains(elem: T, equalsFunction?: IEqualsFunction<T>) {\r\n        return this.list.contains(elem, equalsFunction);\r\n    }\r\n    /**\r\n     * Checks if this stack is empty.\r\n     * @return {boolean} true if and only if this stack contains no items; false\r\n     * otherwise.\r\n     */\r\n    isEmpty(): boolean {\r\n        return this.list.isEmpty();\r\n    }\r\n    /**\r\n     * Removes all of the elements from this stack.\r\n     */\r\n    clear(): void {\r\n        this.list.clear();\r\n    }\r\n\r\n    /**\r\n     * Executes the provided function once for each element present in this stack in\r\n     * LIFO order.\r\n     * @param {function(Object):*} callback function to execute, it is\r\n     * invoked with one argument: the element value, to break the iteration you can\r\n     * optionally return false.\r\n     */\r\n    forEach(callback: ILoopFunction<T>) {\r\n        this.list.forEach(callback);\r\n    }\r\n} // End of stack\r\n\r\n\r\n\r\nexport class Queue<T>{\r\n\r\n    /**\r\n     * List containing the elements.\r\n     * @type LinkedList\r\n     * @private\r\n     */\r\n    private list: LinkedList<T>;\r\n\r\n    /**\r\n     * Creates an empty queue.\r\n     * @class A queue is a First-In-First-Out (FIFO) data structure, the first\r\n     * element added to the queue will be the first one to be removed. This\r\n     * implementation uses a linked list as a container.\r\n     * @constructor\r\n     */\r\n    constructor() {\r\n        this.list = new LinkedList<T>();\r\n    }\r\n\r\n\r\n    /**\r\n     * Inserts the specified element into the end of this queue.\r\n     * @param {Object} elem the element to insert.\r\n     * @return {boolean} true if the element was inserted, or false if it is undefined.\r\n     */\r\n    enqueue(elem: T): boolean {\r\n        return this.list.add(elem);\r\n    }\r\n    /**\r\n     * Inserts the specified element into the end of this queue.\r\n     * @param {Object} elem the element to insert.\r\n     * @return {boolean} true if the element was inserted, or false if it is undefined.\r\n     */\r\n    add(elem: T): boolean {\r\n        return this.list.add(elem);\r\n    }\r\n    /**\r\n     * Retrieves and removes the head of this queue.\r\n     * @return {*} the head of this queue, or undefined if this queue is empty.\r\n     */\r\n    dequeue(): T {\r\n        if (this.list.size() !== 0) {\r\n            var el = this.list.first();\r\n            this.list.removeElementAtIndex(0);\r\n            return el;\r\n        }\r\n        return undefined;\r\n    }\r\n    /**\r\n     * Retrieves, but does not remove, the head of this queue.\r\n     * @return {*} the head of this queue, or undefined if this queue is empty.\r\n     */\r\n    peek(): T {\r\n\r\n        if (this.list.size() !== 0) {\r\n            return this.list.first();\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Returns the number of elements in this queue.\r\n     * @return {number} the number of elements in this queue.\r\n     */\r\n    size(): number {\r\n        return this.list.size();\r\n    }\r\n\r\n    /**\r\n     * Returns true if this queue contains the specified element.\r\n     * <p>If the elements inside this stack are\r\n     * not comparable with the === operator, a custom equals function should be\r\n     * provided to perform searches, the function must receive two arguments and\r\n     * return true if they are equal, false otherwise. Example:</p>\r\n     *\r\n     * <pre>\r\n     * var petsAreEqualByName (pet1, pet2) {\r\n     *  return pet1.name === pet2.name;\r\n     * }\r\n     * </pre>\r\n     * @param {Object} elem element to search for.\r\n     * @param {function(Object,Object):boolean=} equalsFunction optional\r\n     * function to check if two elements are equal.\r\n     * @return {boolean} true if this queue contains the specified element,\r\n     * false otherwise.\r\n     */\r\n    contains(elem: T, equalsFunction?: IEqualsFunction<T>): boolean {\r\n        return this.list.contains(elem, equalsFunction);\r\n    }\r\n\r\n    /**\r\n     * Checks if this queue is empty.\r\n     * @return {boolean} true if and only if this queue contains no items; false\r\n     * otherwise.\r\n     */\r\n    isEmpty(): boolean {\r\n        return this.list.size() <= 0;\r\n    }\r\n\r\n    /**\r\n     * Removes all of the elements from this queue.\r\n     */\r\n    clear(): void {\r\n        this.list.clear();\r\n    }\r\n\r\n    /**\r\n     * Executes the provided function once for each element present in this queue in\r\n     * FIFO order.\r\n     * @param {function(Object):*} callback function to execute, it is\r\n     * invoked with one argument: the element value, to break the iteration you can\r\n     * optionally return false.\r\n     */\r\n    forEach(callback: ILoopFunction<T>) {\r\n        this.list.forEach(callback);\r\n    }\r\n\r\n} // End of queue\r\n\r\n\r\nexport class PriorityQueue<T> {\r\n\r\n    private heap: Heap<T>;\r\n    /**\r\n     * Creates an empty priority queue.\r\n     * @class <p>In a priority queue each element is associated with a \"priority\",\r\n     * elements are dequeued in highest-priority-first order (the elements with the\r\n     * highest priority are dequeued first). Priority Queues are implemented as heaps.\r\n     * If the inserted elements are custom objects a compare function must be provided,\r\n     * otherwise the <=, === and >= operators are used to compare object priority.</p>\r\n     * <pre>\r\n     * function compare(a, b) {\r\n     *  if (a is less than b by some ordering criterion) {\r\n     *     return -1;\r\n     *  } if (a is greater than b by the ordering criterion) {\r\n     *     return 1;\r\n     *  }\r\n     *  // a must be equal to b\r\n     *  return 0;\r\n     * }\r\n     * </pre>\r\n     * @constructor\r\n     * @param {function(Object,Object):number=} compareFunction optional\r\n     * function used to compare two element priorities. Must return a negative integer,\r\n     * zero, or a positive integer as the first argument is less than, equal to,\r\n     * or greater than the second.\r\n     */\r\n    constructor(compareFunction?: ICompareFunction<T>) {\r\n        this.heap = new Heap<T>(reverseCompareFunction(compareFunction));\r\n    }\r\n\r\n    /**\r\n     * Inserts the specified element into this priority queue.\r\n     * @param {Object} element the element to insert.\r\n     * @return {boolean} true if the element was inserted, or false if it is undefined.\r\n     */\r\n    enqueue(element: T): boolean {\r\n        return this.heap.add(element);\r\n    }\r\n\r\n    /**\r\n     * Inserts the specified element into this priority queue.\r\n     * @param {Object} element the element to insert.\r\n     * @return {boolean} true if the element was inserted, or false if it is undefined.\r\n     */\r\n    add(element: T): boolean {\r\n        return this.heap.add(element);\r\n    }\r\n\r\n    /**\r\n     * Retrieves and removes the highest priority element of this queue.\r\n     * @return {*} the the highest priority element of this queue,\r\n     *  or undefined if this queue is empty.\r\n     */\r\n    dequeue(): T {\r\n        if (this.heap.size() !== 0) {\r\n            var el = this.heap.peek();\r\n            this.heap.removeRoot();\r\n            return el;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Retrieves, but does not remove, the highest priority element of this queue.\r\n     * @return {*} the highest priority element of this queue, or undefined if this queue is empty.\r\n     */\r\n    peek(): T {\r\n        return this.heap.peek();\r\n    }\r\n\r\n    /**\r\n     * Returns true if this priority queue contains the specified element.\r\n     * @param {Object} element element to search for.\r\n     * @return {boolean} true if this priority queue contains the specified element,\r\n     * false otherwise.\r\n     */\r\n    contains(element: T): boolean {\r\n        return this.heap.contains(element);\r\n    }\r\n\r\n    /**\r\n     * Checks if this priority queue is empty.\r\n     * @return {boolean} true if and only if this priority queue contains no items; false\r\n     * otherwise.\r\n     */\r\n    isEmpty(): boolean {\r\n        return this.heap.isEmpty();\r\n    }\r\n\r\n    /**\r\n     * Returns the number of elements in this priority queue.\r\n     * @return {number} the number of elements in this priority queue.\r\n     */\r\n    size(): number {\r\n        return this.heap.size();\r\n    }\r\n\r\n    /**\r\n     * Removes all of the elements from this priority queue.\r\n     */\r\n    clear(): void {\r\n        this.heap.clear();\r\n    }\r\n\r\n    /**\r\n     * Executes the provided function once for each element present in this queue in\r\n     * no particular order.\r\n     * @param {function(Object):*} callback function to execute, it is\r\n     * invoked with one argument: the element value, to break the iteration you can\r\n     * optionally return false.\r\n     */\r\n    forEach(callback: ILoopFunction<T>) {\r\n        this.heap.forEach(callback);\r\n    }\r\n\r\n} // end of priority queue\r\n\r\n\r\n\r\n\r\nexport class Set<T>{\r\n    private dictionary: Dictionary<T, any>;\r\n\r\n    /**\r\n     * Creates an empty set.\r\n     * @class <p>A set is a data structure that contains no duplicate items.</p>\r\n     * <p>If the inserted elements are custom objects a function\r\n     * which converts elements to strings must be provided. Example:</p>\r\n     *\r\n     * <pre>\r\n     * function petToString(pet) {\r\n     *  return pet.name;\r\n     * }\r\n     * </pre>\r\n     *\r\n     * @constructor\r\n     * @param {function(Object):string=} toStringFunction optional function used\r\n     * to convert elements to strings. If the elements aren't strings or if toString()\r\n     * is not appropriate, a custom function which receives a onject and returns a\r\n     * unique string must be provided.\r\n     */\r\n    constructor(toStringFunction?: (item: T) => string) {\r\n        this.dictionary = new Dictionary<T, any>(toStringFunction);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Returns true if this set contains the specified element.\r\n     * @param {Object} element element to search for.\r\n     * @return {boolean} true if this set contains the specified element,\r\n     * false otherwise.\r\n     */\r\n    contains(element: T): boolean {\r\n        return this.dictionary.containsKey(element);\r\n    }\r\n\r\n    /**\r\n     * Adds the specified element to this set if it is not already present.\r\n     * @param {Object} element the element to insert.\r\n     * @return {boolean} true if this set did not already contain the specified element.\r\n     */\r\n    add(element: T): boolean {\r\n        if (this.contains(element) || isUndefined(element)) {\r\n            return false;\r\n        } else {\r\n            this.dictionary.setValue(element, element);\r\n            return true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Performs an intersecion between this an another set.\r\n     * Removes all values that are not present this set and the given set.\r\n     * @param {Set} otherSet other set.\r\n     */\r\n    intersection(otherSet: Set<T>): void {\r\n        var set = this;\r\n        this.forEach(function(element: T): boolean {\r\n            if (!otherSet.contains(element)) {\r\n                set.remove(element);\r\n            }\r\n            return true;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Performs a union between this an another set.\r\n     * Adds all values from the given set to this set.\r\n     * @param {Set} otherSet other set.\r\n     */\r\n    union(otherSet: Set<T>): void {\r\n        var set = this;\r\n        otherSet.forEach(function(element: T): boolean {\r\n            set.add(element);\r\n            return true;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Performs a difference between this an another set.\r\n     * Removes from this set all the values that are present in the given set.\r\n     * @param {Set} otherSet other set.\r\n     */\r\n    difference(otherSet: Set<T>): void {\r\n        var set = this;\r\n        otherSet.forEach(function(element: T): boolean {\r\n            set.remove(element);\r\n            return true;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Checks whether the given set contains all the elements in this set.\r\n     * @param {Set} otherSet other set.\r\n     * @return {boolean} true if this set is a subset of the given set.\r\n     */\r\n    isSubsetOf(otherSet: Set<T>): boolean {\r\n\r\n        if (this.size() > otherSet.size()) {\r\n            return false;\r\n        }\r\n\r\n        var isSub = true;\r\n        this.forEach(function(element) {\r\n            if (!otherSet.contains(element)) {\r\n                isSub = false;\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        return isSub;\r\n    }\r\n\r\n    /**\r\n     * Removes the specified element from this set if it is present.\r\n     * @return {boolean} true if this set contained the specified element.\r\n     */\r\n    remove(element: T): boolean {\r\n        if (!this.contains(element)) {\r\n            return false;\r\n        } else {\r\n            this.dictionary.remove(element);\r\n            return true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Executes the provided function once for each element\r\n     * present in this set.\r\n     * @param {function(Object):*} callback function to execute, it is\r\n     * invoked with one arguments: the element. To break the iteration you can\r\n     * optionally return false.\r\n     */\r\n    forEach(callback: ILoopFunction<T>): void {\r\n        this.dictionary.forEach(function(k, v) {\r\n            return callback(v);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Returns an array containing all of the elements in this set in arbitrary order.\r\n     * @return {Array} an array containing all of the elements in this set.\r\n     */\r\n    toArray(): T[] {\r\n        return this.dictionary.values();\r\n    }\r\n\r\n    /**\r\n     * Returns true if this set contains no elements.\r\n     * @return {boolean} true if this set contains no elements.\r\n     */\r\n    isEmpty(): boolean {\r\n        return this.dictionary.isEmpty();\r\n    }\r\n\r\n    /**\r\n     * Returns the number of elements in this set.\r\n     * @return {number} the number of elements in this set.\r\n     */\r\n    size(): number {\r\n        return this.dictionary.size();\r\n    }\r\n\r\n    /**\r\n     * Removes all of the elements from this set.\r\n     */\r\n    clear(): void {\r\n        this.dictionary.clear();\r\n    }\r\n\r\n    /*\r\n    * Provides a string representation for display\r\n    */\r\n    toString(): string {\r\n        return arrays.toString(this.toArray());\r\n    }\r\n}// end of Set\r\n\r\nexport class Bag<T>{\r\n\r\n    private toStrF: (item: T) => string;\r\n    private dictionary: Dictionary<T, any>;\r\n    private nElements: number;\r\n\r\n    /**\r\n     * Creates an empty bag.\r\n     * @class <p>A bag is a special kind of set in which members are\r\n     * allowed to appear more than once.</p>\r\n     * <p>If the inserted elements are custom objects a function\r\n     * which converts elements to unique strings must be provided. Example:</p>\r\n     *\r\n     * <pre>\r\n     * function petToString(pet) {\r\n     *  return pet.name;\r\n     * }\r\n     * </pre>\r\n     *\r\n     * @constructor\r\n     * @param {function(Object):string=} toStrFunction optional function used\r\n     * to convert elements to strings. If the elements aren't strings or if toString()\r\n     * is not appropriate, a custom function which receives an object and returns a\r\n     * unique string must be provided.\r\n     */\r\n    constructor(toStrFunction?: (item: T) => string) {\r\n        this.toStrF = toStrFunction || defaultToString;\r\n        this.dictionary = new Dictionary<T, any>(this.toStrF);\r\n        this.nElements = 0;\r\n    }\r\n\r\n\r\n    /**\r\n    * Adds nCopies of the specified object to this bag.\r\n    * @param {Object} element element to add.\r\n    * @param {number=} nCopies the number of copies to add, if this argument is\r\n    * undefined 1 copy is added.\r\n    * @return {boolean} true unless element is undefined.\r\n    */\r\n    add(element: T, nCopies: number = 1): boolean {\r\n\r\n        if (isUndefined(element) || nCopies <= 0) {\r\n            return false;\r\n        }\r\n\r\n        if (!this.contains(element)) {\r\n            var node = {\r\n                value: element,\r\n                copies: nCopies\r\n            };\r\n            this.dictionary.setValue(element, node);\r\n        } else {\r\n            this.dictionary.getValue(element).copies += nCopies;\r\n        }\r\n        this.nElements += nCopies;\r\n        return true;\r\n    }\r\n\r\n    /**\r\n    * Counts the number of copies of the specified object in this bag.\r\n    * @param {Object} element the object to search for..\r\n    * @return {number} the number of copies of the object, 0 if not found\r\n    */\r\n    count(element: T): number {\r\n\r\n        if (!this.contains(element)) {\r\n            return 0;\r\n        } else {\r\n            return this.dictionary.getValue(element).copies;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns true if this bag contains the specified element.\r\n     * @param {Object} element element to search for.\r\n     * @return {boolean} true if this bag contains the specified element,\r\n     * false otherwise.\r\n     */\r\n    contains(element: T): boolean {\r\n        return this.dictionary.containsKey(element);\r\n    }\r\n\r\n    /**\r\n    * Removes nCopies of the specified object to this bag.\r\n    * If the number of copies to remove is greater than the actual number\r\n    * of copies in the Bag, all copies are removed.\r\n    * @param {Object} element element to remove.\r\n    * @param {number=} nCopies the number of copies to remove, if this argument is\r\n    * undefined 1 copy is removed.\r\n    * @return {boolean} true if at least 1 element was removed.\r\n    */\r\n    remove(element: T, nCopies: number = 1) {\r\n\r\n        if (isUndefined(element) || nCopies <= 0) {\r\n            return false;\r\n        }\r\n\r\n        if (!this.contains(element)) {\r\n            return false;\r\n        } else {\r\n            var node = this.dictionary.getValue(element);\r\n            if (nCopies > node.copies) {\r\n                this.nElements -= node.copies;\r\n            } else {\r\n                this.nElements -= nCopies;\r\n            }\r\n            node.copies -= nCopies;\r\n            if (node.copies <= 0) {\r\n                this.dictionary.remove(element);\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns an array containing all of the elements in this big in arbitrary order,\r\n     * including multiple copies.\r\n     * @return {Array} an array containing all of the elements in this bag.\r\n     */\r\n    toArray(): T[] {\r\n        var a: Array<T> = [];\r\n        var values = this.dictionary.values();\r\n        var vl = values.length;\r\n        for (var i = 0; i < vl; i++) {\r\n            var node = values[i];\r\n            var element = node.value;\r\n            var copies = node.copies;\r\n            for (var j = 0; j < copies; j++) {\r\n                a.push(element);\r\n            }\r\n        }\r\n        return a;\r\n    }\r\n\r\n    /**\r\n     * Returns a set of unique elements in this bag.\r\n     * @return {Set<T>} a set of unique elements in this bag.\r\n     */\r\n    toSet(): Set<T> {\r\n        var toret = new Set<T>(this.toStrF);\r\n        var elements = this.dictionary.values();\r\n        var l = elements.length;\r\n        for (var i = 0; i < l; i++) {\r\n            var value = elements[i].value;\r\n            toret.add(value);\r\n        }\r\n        return toret;\r\n    }\r\n\r\n    /**\r\n     * Executes the provided function once for each element\r\n     * present in this bag, including multiple copies.\r\n     * @param {function(Object):*} callback function to execute, it is\r\n     * invoked with one argument: the element. To break the iteration you can\r\n     * optionally return false.\r\n     */\r\n    forEach(callback: ILoopFunction<T>) {\r\n        this.dictionary.forEach(function(k, v) {\r\n            var value = v.value;\r\n            var copies = v.copies;\r\n            for (var i = 0; i < copies; i++) {\r\n                if (callback(value) === false) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        });\r\n    }\r\n    /**\r\n     * Returns the number of elements in this bag.\r\n     * @return {number} the number of elements in this bag.\r\n     */\r\n    size(): number {\r\n        return this.nElements;\r\n    }\r\n\r\n    /**\r\n     * Returns true if this bag contains no elements.\r\n     * @return {boolean} true if this bag contains no elements.\r\n     */\r\n    isEmpty(): boolean {\r\n        return this.nElements === 0;\r\n    }\r\n\r\n    /**\r\n     * Removes all of the elements from this bag.\r\n     */\r\n    clear(): void {\r\n        this.nElements = 0;\r\n        this.dictionary.clear();\r\n    }\r\n\r\n}// End of bag\r\n\r\n\r\n// Internal interface for BST\r\ninterface BSTreeNode<T> {\r\n    element: T;\r\n    leftCh: BSTreeNode<T>;\r\n    rightCh: BSTreeNode<T>;\r\n    parent: BSTreeNode<T>;\r\n}\r\nexport class BSTree<T> {\r\n\r\n    private root: BSTreeNode<T>;\r\n    private compare: ICompareFunction<T>;\r\n    private nElements: number;\r\n    /**\r\n     * Creates an empty binary search tree.\r\n     * @class <p>A binary search tree is a binary tree in which each\r\n     * internal node stores an element such that the elements stored in the\r\n     * left subtree are less than it and the elements\r\n     * stored in the right subtree are greater.</p>\r\n     * <p>Formally, a binary search tree is a node-based binary tree data structure which\r\n     * has the following properties:</p>\r\n     * <ul>\r\n     * <li>The left subtree of a node contains only nodes with elements less\r\n     * than the node's element</li>\r\n     * <li>The right subtree of a node contains only nodes with elements greater\r\n     * than the node's element</li>\r\n     * <li>Both the left and right subtrees must also be binary search trees.</li>\r\n     * </ul>\r\n     * <p>If the inserted elements are custom objects a compare function must\r\n     * be provided at construction time, otherwise the <=, === and >= operators are\r\n     * used to compare elements. Example:</p>\r\n     * <pre>\r\n     * function compare(a, b) {\r\n     *  if (a is less than b by some ordering criterion) {\r\n     *     return -1;\r\n     *  } if (a is greater than b by the ordering criterion) {\r\n     *     return 1;\r\n     *  }\r\n     *  // a must be equal to b\r\n     *  return 0;\r\n     * }\r\n     * </pre>\r\n     * @constructor\r\n     * @param {function(Object,Object):number=} compareFunction optional\r\n     * function used to compare two elements. Must return a negative integer,\r\n     * zero, or a positive integer as the first argument is less than, equal to,\r\n     * or greater than the second.\r\n     */\r\n    constructor(compareFunction?: ICompareFunction<T>) {\r\n        this.root = null;\r\n        this.compare = compareFunction || defaultCompare;\r\n        this.nElements = 0;\r\n    }\r\n\r\n    /**\r\n     * Adds the specified element to this tree if it is not already present.\r\n     * @param {Object} element the element to insert.\r\n     * @return {boolean} true if this tree did not already contain the specified element.\r\n     */\r\n    add(element: T): boolean {\r\n        if (isUndefined(element)) {\r\n            return false;\r\n        }\r\n\r\n        if (this.insertNode(this.createNode(element)) !== null) {\r\n            this.nElements++;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Removes all of the elements from this tree.\r\n     */\r\n    clear(): void {\r\n        this.root = null;\r\n        this.nElements = 0;\r\n    }\r\n\r\n    /**\r\n     * Returns true if this tree contains no elements.\r\n     * @return {boolean} true if this tree contains no elements.\r\n     */\r\n    isEmpty(): boolean {\r\n        return this.nElements === 0;\r\n    }\r\n\r\n    /**\r\n     * Returns the number of elements in this tree.\r\n     * @return {number} the number of elements in this tree.\r\n     */\r\n    size(): number {\r\n        return this.nElements;\r\n    }\r\n\r\n    /**\r\n     * Returns true if this tree contains the specified element.\r\n     * @param {Object} element element to search for.\r\n     * @return {boolean} true if this tree contains the specified element,\r\n     * false otherwise.\r\n     */\r\n    contains(element: T): boolean {\r\n        if (isUndefined(element)) {\r\n            return false;\r\n        }\r\n        return this.searchNode(this.root, element) !== null;\r\n    }\r\n\r\n    /**\r\n     * Removes the specified element from this tree if it is present.\r\n     * @return {boolean} true if this tree contained the specified element.\r\n     */\r\n    remove(element: T): boolean {\r\n        var node = this.searchNode(this.root, element);\r\n        if (node === null) {\r\n            return false;\r\n        }\r\n        this.removeNode(node);\r\n        this.nElements--;\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Executes the provided function once for each element present in this tree in\r\n     * in-order.\r\n     * @param {function(Object):*} callback function to execute, it is invoked with one\r\n     * argument: the element value, to break the iteration you can optionally return false.\r\n     */\r\n    inorderTraversal(callback: ILoopFunction<T>): void {\r\n        this.inorderTraversalAux(this.root, callback, {\r\n            stop: false\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Executes the provided function once for each element present in this tree in pre-order.\r\n     * @param {function(Object):*} callback function to execute, it is invoked with one\r\n     * argument: the element value, to break the iteration you can optionally return false.\r\n     */\r\n    preorderTraversal(callback: ILoopFunction<T>): void {\r\n        this.preorderTraversalAux(this.root, callback, {\r\n            stop: false\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Executes the provided function once for each element present in this tree in post-order.\r\n     * @param {function(Object):*} callback function to execute, it is invoked with one\r\n     * argument: the element value, to break the iteration you can optionally return false.\r\n     */\r\n    postorderTraversal(callback: ILoopFunction<T>): void {\r\n        this.postorderTraversalAux(this.root, callback, {\r\n            stop: false\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Executes the provided function once for each element present in this tree in\r\n     * level-order.\r\n     * @param {function(Object):*} callback function to execute, it is invoked with one\r\n     * argument: the element value, to break the iteration you can optionally return false.\r\n     */\r\n    levelTraversal(callback: ILoopFunction<T>): void {\r\n        this.levelTraversalAux(this.root, callback);\r\n    }\r\n\r\n    /**\r\n     * Returns the minimum element of this tree.\r\n     * @return {*} the minimum element of this tree or undefined if this tree is\r\n     * is empty.\r\n     */\r\n    minimum(): T {\r\n        if (this.isEmpty()) {\r\n            return undefined;\r\n        }\r\n        return this.minimumAux(this.root).element;\r\n    }\r\n\r\n    /**\r\n     * Returns the maximum element of this tree.\r\n     * @return {*} the maximum element of this tree or undefined if this tree is\r\n     * is empty.\r\n     */\r\n    maximum(): T {\r\n        if (this.isEmpty()) {\r\n            return undefined;\r\n        }\r\n        return this.maximumAux(this.root).element;\r\n    }\r\n\r\n    /**\r\n     * Executes the provided function once for each element present in this tree in inorder.\r\n     * Equivalent to inorderTraversal.\r\n     * @param {function(Object):*} callback function to execute, it is\r\n     * invoked with one argument: the element value, to break the iteration you can\r\n     * optionally return false.\r\n     */\r\n    forEach(callback: ILoopFunction<T>): void {\r\n        this.inorderTraversal(callback);\r\n    }\r\n\r\n    /**\r\n     * Returns an array containing all of the elements in this tree in in-order.\r\n     * @return {Array} an array containing all of the elements in this tree in in-order.\r\n     */\r\n    toArray(): T[] {\r\n        var array: Array<T> = [];\r\n        this.inorderTraversal(function(element: T): boolean {\r\n            array.push(element);\r\n            return true;\r\n        });\r\n        return array;\r\n    }\r\n\r\n    /**\r\n     * Returns the height of this tree.\r\n     * @return {number} the height of this tree or -1 if is empty.\r\n     */\r\n    height(): number {\r\n        return this.heightAux(this.root);\r\n    }\r\n\r\n    /**\r\n    * @private\r\n    */\r\n    private searchNode(node: BSTreeNode<T>, element: T): BSTreeNode<T> {\r\n        var cmp: number = null;\r\n        while (node !== null && cmp !== 0) {\r\n            cmp = this.compare(element, node.element);\r\n            if (cmp < 0) {\r\n                node = node.leftCh;\r\n            } else if (cmp > 0) {\r\n                node = node.rightCh;\r\n            }\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /**\r\n    * @private\r\n    */\r\n    private transplant(n1: BSTreeNode<T>, n2: BSTreeNode<T>): void {\r\n        if (n1.parent === null) {\r\n            this.root = n2;\r\n        } else if (n1 === n1.parent.leftCh) {\r\n            n1.parent.leftCh = n2;\r\n        } else {\r\n            n1.parent.rightCh = n2;\r\n        }\r\n        if (n2 !== null) {\r\n            n2.parent = n1.parent;\r\n        }\r\n    }\r\n\r\n    /**\r\n    * @private\r\n    */\r\n    private removeNode(node: BSTreeNode<T>): void {\r\n        if (node.leftCh === null) {\r\n            this.transplant(node, node.rightCh);\r\n        } else if (node.rightCh === null) {\r\n            this.transplant(node, node.leftCh);\r\n        } else {\r\n            var y = this.minimumAux(node.rightCh);\r\n            if (y.parent !== node) {\r\n                this.transplant(y, y.rightCh);\r\n                y.rightCh = node.rightCh;\r\n                y.rightCh.parent = y;\r\n            }\r\n            this.transplant(node, y);\r\n            y.leftCh = node.leftCh;\r\n            y.leftCh.parent = y;\r\n        }\r\n    }\r\n\r\n    /**\r\n    * @private\r\n    */\r\n    private inorderTraversalAux(node: BSTreeNode<T>, callback: ILoopFunction<T>, signal: { stop: boolean; }): void {\r\n        if (node === null || signal.stop) {\r\n            return;\r\n        }\r\n        this.inorderTraversalAux(node.leftCh, callback, signal);\r\n        if (signal.stop) {\r\n            return;\r\n        }\r\n        signal.stop = callback(node.element) === false;\r\n        if (signal.stop) {\r\n            return;\r\n        }\r\n        this.inorderTraversalAux(node.rightCh, callback, signal);\r\n    }\r\n\r\n    /**\r\n    * @private\r\n    */\r\n    private levelTraversalAux(node: BSTreeNode<T>, callback: ILoopFunction<T>) {\r\n        var queue = new Queue<BSTreeNode<T>>();\r\n        if (node !== null) {\r\n            queue.enqueue(node);\r\n        }\r\n        while (!queue.isEmpty()) {\r\n            node = queue.dequeue();\r\n            if (callback(node.element) === false) {\r\n                return;\r\n            }\r\n            if (node.leftCh !== null) {\r\n                queue.enqueue(node.leftCh);\r\n            }\r\n            if (node.rightCh !== null) {\r\n                queue.enqueue(node.rightCh);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n    * @private\r\n    */\r\n    private preorderTraversalAux(node: BSTreeNode<T>, callback: ILoopFunction<T>, signal: { stop: boolean; }) {\r\n        if (node === null || signal.stop) {\r\n            return;\r\n        }\r\n        signal.stop = callback(node.element) === false;\r\n        if (signal.stop) {\r\n            return;\r\n        }\r\n        this.preorderTraversalAux(node.leftCh, callback, signal);\r\n        if (signal.stop) {\r\n            return;\r\n        }\r\n        this.preorderTraversalAux(node.rightCh, callback, signal);\r\n    }\r\n    /**\r\n    * @private\r\n    */\r\n    private postorderTraversalAux(node: BSTreeNode<T>, callback: ILoopFunction<T>, signal: { stop: boolean; }) {\r\n        if (node === null || signal.stop) {\r\n            return;\r\n        }\r\n        this.postorderTraversalAux(node.leftCh, callback, signal);\r\n        if (signal.stop) {\r\n            return;\r\n        }\r\n        this.postorderTraversalAux(node.rightCh, callback, signal);\r\n        if (signal.stop) {\r\n            return;\r\n        }\r\n        signal.stop = callback(node.element) === false;\r\n    }\r\n\r\n    /**\r\n    * @private\r\n    */\r\n    private minimumAux(node: BSTreeNode<T>): BSTreeNode<T> {\r\n        while (node.leftCh !== null) {\r\n            node = node.leftCh;\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /**\r\n    * @private\r\n    */\r\n    private maximumAux(node: BSTreeNode<T>): BSTreeNode<T> {\r\n        while (node.rightCh !== null) {\r\n            node = node.rightCh;\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /**\r\n      * @private\r\n      */\r\n    private heightAux(node: BSTreeNode<T>): number {\r\n        if (node === null) {\r\n            return -1;\r\n        }\r\n        return Math.max(this.heightAux(node.leftCh), this.heightAux(node.rightCh)) + 1;\r\n    }\r\n\r\n    /*\r\n    * @private\r\n    */\r\n    private insertNode(node: BSTreeNode<T>): BSTreeNode<T> {\r\n\r\n        var parent: any = null;\r\n        var position = this.root;\r\n        var cmp: number = null;\r\n        while (position !== null) {\r\n            cmp = this.compare(node.element, position.element);\r\n            if (cmp === 0) {\r\n                return null;\r\n            } else if (cmp < 0) {\r\n                parent = position;\r\n                position = position.leftCh;\r\n            } else {\r\n                parent = position;\r\n                position = position.rightCh;\r\n            }\r\n        }\r\n        node.parent = parent;\r\n        if (parent === null) {\r\n            // tree is empty\r\n            this.root = node;\r\n        } else if (this.compare(node.element, parent.element) < 0) {\r\n            parent.leftCh = node;\r\n        } else {\r\n            parent.rightCh = node;\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /**\r\n    * @private\r\n    */\r\n    private createNode(element: T): BSTreeNode<T> {\r\n        return {\r\n            element: element,\r\n            leftCh: null,\r\n            rightCh: null,\r\n            parent: null\r\n        };\r\n    }\r\n\r\n} // end of BSTree\r\n","\n\nexport function hasFromObject<TFunction extends Function>(target: TFunction) :  void{\n\n}\n","\r\n\r\n\r\n/**\r\n * mapping of special keycodes to their corresponding keys\r\n *\r\n * everything in this dictionary cannot use keypress events\r\n * so it has to be here to map to the correct keycodes for\r\n * keyup/keydown events\r\n *\r\n * @type {Object}\r\n */\r\nvar _MAP = {\r\n    8: 'backspace',\r\n    9: 'tab',\r\n    13: 'enter',\r\n    16: 'shift',\r\n    17: 'ctrl',\r\n    18: 'alt',\r\n    20: 'capslock',\r\n    27: 'esc',\r\n    32: 'space',\r\n    33: 'pageup',\r\n    34: 'pagedown',\r\n    35: 'end',\r\n    36: 'home',\r\n    37: 'left',\r\n    38: 'up',\r\n    39: 'right',\r\n    40: 'down',\r\n    45: 'ins',\r\n    46: 'del',\r\n    91: 'meta',\r\n    93: 'meta',\r\n    224: 'meta'\r\n};\r\n\r\n/**\r\n * mapping for special characters so they can support\r\n *\r\n * this dictionary is only used incase you want to bind a\r\n * keyup or keydown event to one of these keys\r\n *\r\n * @type {Object}\r\n */\r\nvar _KEYCODE_MAP = {\r\n    106: '*',\r\n    107: '+',\r\n    109: '-',\r\n    110: '.',\r\n    111: '/',\r\n    186: ';',\r\n    187: '=',\r\n    188: ',',\r\n    189: '-',\r\n    190: '.',\r\n    191: '/',\r\n    192: '`',\r\n    219: '[',\r\n    220: '\\\\',\r\n    221: ']',\r\n    222: '\\''\r\n};\r\n\r\n/**\r\n * this is a mapping of keys that require shift on a US keypad\r\n * back to the non shift equivelents\r\n *\r\n * this is so you can use keyup events with these keys\r\n *\r\n * note that this will only work reliably on US keyboards\r\n *\r\n * @type {Object}\r\n */\r\nvar _SHIFT_MAP = {\r\n    '~': '`',\r\n    '!': '1',\r\n    '@': '2',\r\n    '#': '3',\r\n    '$': '4',\r\n    '%': '5',\r\n    '^': '6',\r\n    '&': '7',\r\n    '*': '8',\r\n    '(': '9',\r\n    ')': '0',\r\n    '_': '-',\r\n    '+': '=',\r\n    ':': ';',\r\n    '\\\"': '\\'',\r\n    '<': ',',\r\n    '>': '.',\r\n    '?': '/',\r\n    '|': '\\\\'\r\n};\r\n\r\n/**\r\n * this is a list of special strings you can use to map\r\n * to modifier keys when you specify your keyboard shortcuts\r\n *\r\n * @type {Object}\r\n */\r\nvar _SPECIAL_ALIASES = {\r\n    'option': 'alt',\r\n    'command': 'meta',\r\n    'return': 'enter',\r\n    'escape': 'esc',\r\n    'plus': '+',\r\n    'mod': /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? 'meta' : 'ctrl'\r\n};\r\n\r\n/**\r\n * variable to store the flipped version of _MAP from above\r\n * needed to check if we should use keypress or not when no action\r\n * is specified\r\n *\r\n * @type {Object|undefined}\r\n */\r\nvar _REVERSE_MAP;\r\n\r\n/**\r\n * loop through the f keys, f1 to f19 and add them to the map\r\n * programatically\r\n */\r\nfor (var i = 1; i < 20; ++i) {\r\n    _MAP[111 + i] = 'f' + i;\r\n}\r\n\r\n/**\r\n * loop through to map numbers on the numeric keypad\r\n */\r\nfor (i = 0; i <= 9; ++i) {\r\n    _MAP[i + 96] = i;\r\n}\r\n\r\n/**\r\n * cross browser add event method\r\n *\r\n * @param {Element|HTMLDocument} object\r\n * @param {string} type\r\n * @param {Function} callback\r\n * @returns void\r\n */\r\nfunction _addEvent(object, type, callback) {\r\n    if (object.addEventListener) {\r\n        object.addEventListener(type, callback, false);\r\n        return;\r\n    }\r\n\r\n    object.attachEvent('on' + type, callback);\r\n}\r\n\r\n/**\r\n * takes the event and returns the key character\r\n *\r\n * @param {Event} e\r\n * @return {string}\r\n */\r\nfunction _characterFromEvent(e) {\r\n\r\n    // for keypress events we should return the character as is\r\n    if (e.type == 'keypress') {\r\n        var character = String.fromCharCode(e.which);\r\n\r\n        // if the shift key is not pressed then it is safe to assume\r\n        // that we want the character to be lowercase.  this means if\r\n        // you accidentally have caps lock on then your key bindings\r\n        // will continue to work\r\n        //\r\n        // the only side effect that might not be desired is if you\r\n        // bind something like 'A' cause you want to trigger an\r\n        // event when capital A is pressed caps lock will no longer\r\n        // trigger the event.  shift+a will though.\r\n        if (!e.shiftKey) {\r\n            character = character.toLowerCase();\r\n        }\r\n\r\n        return character;\r\n    }\r\n\r\n    // for non keypress events the special maps are needed\r\n    if (_MAP[e.which]) {\r\n        return _MAP[e.which];\r\n    }\r\n\r\n    if (_KEYCODE_MAP[e.which]) {\r\n        return _KEYCODE_MAP[e.which];\r\n    }\r\n\r\n    // if it is not in the special map\r\n\r\n    // with keydown and keyup events the character seems to always\r\n    // come in as an uppercase character whether you are pressing shift\r\n    // or not.  we should make sure it is always lowercase for comparisons\r\n    return String.fromCharCode(e.which).toLowerCase();\r\n}\r\n\r\n/**\r\n * checks if two arrays are equal\r\n *\r\n * @param {Array} modifiers1\r\n * @param {Array} modifiers2\r\n * @returns {boolean}\r\n */\r\nfunction _modifiersMatch(modifiers1, modifiers2) {\r\n    return modifiers1.sort().join(',') === modifiers2.sort().join(',');\r\n}\r\n\r\n/**\r\n * takes a key event and figures out what the modifiers are\r\n *\r\n * @param {Event} e\r\n * @returns {Array}\r\n */\r\nfunction _eventModifiers(e) {\r\n    var modifiers = [];\r\n\r\n    if (e.shiftKey) {\r\n        modifiers.push('shift');\r\n    }\r\n\r\n    if (e.altKey) {\r\n        modifiers.push('alt');\r\n    }\r\n\r\n    if (e.ctrlKey) {\r\n        modifiers.push('ctrl');\r\n    }\r\n\r\n    if (e.metaKey) {\r\n        modifiers.push('meta');\r\n    }\r\n\r\n    return modifiers;\r\n}\r\n\r\n/**\r\n * prevents default for this event\r\n *\r\n * @param {Event} e\r\n * @returns void\r\n */\r\nfunction _preventDefault(e) {\r\n    if (e.preventDefault) {\r\n        e.preventDefault();\r\n        return;\r\n    }\r\n\r\n    e.returnValue = false;\r\n}\r\n\r\n/**\r\n * stops propogation for this event\r\n *\r\n * @param {Event} e\r\n * @returns void\r\n */\r\nfunction _stopPropagation(e) {\r\n    if (e.stopPropagation) {\r\n        e.stopPropagation();\r\n        return;\r\n    }\r\n\r\n    e.cancelBubble = true;\r\n}\r\n\r\n/**\r\n * determines if the keycode specified is a modifier key or not\r\n *\r\n * @param {string} key\r\n * @returns {boolean}\r\n */\r\nfunction _isModifier(key) {\r\n    return key == 'shift' || key == 'ctrl' || key == 'alt' || key == 'meta';\r\n}\r\n\r\n/**\r\n * reverses the map lookup so that we can look for specific keys\r\n * to see what can and can't use keypress\r\n *\r\n * @return {Object}\r\n */\r\nfunction _getReverseMap() {\r\n    if (!_REVERSE_MAP) {\r\n        _REVERSE_MAP = {};\r\n        for (var key in _MAP) {\r\n\r\n            // pull out the numeric keypad from here cause keypress should\r\n            // be able to detect the keys from the character\r\n            if (key > 95 && key < 112) {\r\n                continue;\r\n            }\r\n\r\n            if (_MAP.hasOwnProperty(key)) {\r\n                _REVERSE_MAP[_MAP[key]] = key;\r\n            }\r\n        }\r\n    }\r\n    return _REVERSE_MAP;\r\n}\r\n\r\n/**\r\n * picks the best action based on the key combination\r\n *\r\n * @param {string} key - character for key\r\n * @param {Array} modifiers\r\n * @param {string=} action passed in\r\n */\r\nfunction _pickBestAction(key, modifiers, action) {\r\n\r\n    // if no action was picked in we should try to pick the one\r\n    // that we think would work best for this key\r\n    if (!action) {\r\n        action = _getReverseMap()[key] ? 'keydown' : 'keypress';\r\n    }\r\n\r\n    // modifier keys don't work as expected with keypress,\r\n    // switch to keydown\r\n    if (action == 'keypress' && modifiers.length) {\r\n        action = 'keydown';\r\n    }\r\n\r\n    return action;\r\n}\r\n\r\n/**\r\n * Converts from a string key combination to an array\r\n *\r\n * @param  {string} combination like \"command+shift+l\"\r\n * @return {Array}\r\n */\r\nfunction _keysFromString(combination) {\r\n    if (combination === '+') {\r\n        return ['+'];\r\n    }\r\n\r\n    combination = combination.replace(/\\+{2}/g, '+plus');\r\n    return combination.split('+');\r\n}\r\n\r\n/**\r\n * Gets info for a specific key combination\r\n *\r\n * @param  {string} combination key combination (\"command+s\" or \"a\" or \"*\")\r\n * @param  {string=} action\r\n * @returns {Object}\r\n */\r\nfunction _getKeyInfo(combination, action?) {\r\n    var keys;\r\n    var key;\r\n    var i;\r\n    var modifiers = [];\r\n\r\n    // take the keys from this pattern and figure out what the actual\r\n    // pattern is all about\r\n    keys = _keysFromString(combination);\r\n\r\n    for (i = 0; i < keys.length; ++i) {\r\n        key = keys[i];\r\n\r\n        // normalize key names\r\n        if (_SPECIAL_ALIASES[key]) {\r\n            key = _SPECIAL_ALIASES[key];\r\n        }\r\n\r\n        // if this is not a keypress event then we should\r\n        // be smart about using shift keys\r\n        // this will only work for US keyboards however\r\n        if (action && action != 'keypress' && _SHIFT_MAP[key]) {\r\n            key = _SHIFT_MAP[key];\r\n            modifiers.push('shift');\r\n        }\r\n\r\n        // if this key is a modifier then add it to the list of modifiers\r\n        if (_isModifier(key)) {\r\n            modifiers.push(key);\r\n        }\r\n    }\r\n\r\n    // depending on what the key combination is\r\n    // we will try to pick the best event for it\r\n    action = _pickBestAction(key, modifiers, action);\r\n\r\n    return {\r\n        key: key,\r\n        modifiers: modifiers,\r\n        action: action\r\n    };\r\n}\r\n\r\nfunction _belongsTo(element, ancestor) {\r\n    if (element === document) {\r\n        return false;\r\n    }\r\n\r\n    if (element === ancestor) {\r\n        return true;\r\n    }\r\n\r\n    return _belongsTo(element.parentNode, ancestor);\r\n}\r\n\r\n\r\nexport class KeyManager {\r\n    private _callbacks: any = {};\r\n    private _directMap = {};\r\n    private _sequenceLevels = {};\r\n    private _resetTimer: number;\r\n    private _ignoreNextKeyup: boolean = false;\r\n    private _ignoreNextKeypress: boolean = false;\r\n    private _nextExpectedAction: boolean|string = false;\r\n\r\n    constructor(public target: HTMLElement = document.body) {\r\n        if (target.tagName = 'div') {\r\n            //http://stackoverflow.com/a/148444/358661\r\n            target.tabIndex = 0;\r\n        }\r\n\r\n        _addEvent(this.target, 'keypress', (e) => this._handleKeyEvent(e));\r\n        _addEvent(this.target, 'keydown', (e) => this._handleKeyEvent(e));\r\n        _addEvent(this.target, 'keyup', (e) => this._handleKeyEvent(e));\r\n    }\r\n\r\n\r\n    private _resetSequences(doNotReset) {\r\n        doNotReset = doNotReset || {};\r\n\r\n        var activeSequences = false;\r\n        var key;\r\n\r\n        for (key in this._sequenceLevels) {\r\n            if (doNotReset[key]) {\r\n                activeSequences = true;\r\n                continue;\r\n            }\r\n            this._sequenceLevels[key] = 0;\r\n        }\r\n\r\n        if (!activeSequences)\r\n            this._nextExpectedAction = false;\r\n\r\n    }\r\n\r\n\r\n    private _getMatches(character, modifiers, e, sequenceName?, combination?, level?) {\r\n        var i;\r\n        var callback;\r\n        var matches = [];\r\n        var action = e.type;\r\n\r\n        // if there are no events related to this keycode\r\n        if (!this._callbacks[character]) {\r\n            return [];\r\n        }\r\n\r\n        // if a modifier key is coming up on its own we should allow it\r\n        if (action == 'keyup' && _isModifier(character)) {\r\n            modifiers = [character];\r\n        }\r\n\r\n        // loop through all callbacks for the key that was pressed\r\n        // and see if any of them match\r\n        for (i = 0; i < this._callbacks[character].length; ++i) {\r\n            callback = this._callbacks[character][i];\r\n\r\n            // if a sequence name is not specified, but this is a sequence at\r\n            // the wrong level then move onto the next match\r\n            if (!sequenceName && callback.seq && this._sequenceLevels[callback.seq] != callback.level) {\r\n                continue;\r\n            }\r\n\r\n            // if the action we are looking for doesn't match the action we got\r\n            // then we should keep going\r\n            if (action != callback.action) {\r\n                continue;\r\n            }\r\n\r\n            // if this is a keypress event and the meta key and control key\r\n            // are not pressed that means that we need to only look at the\r\n            // character, otherwise check the modifiers as well\r\n            //\r\n            // chrome will not fire a keypress if meta or control is down\r\n            // safari will fire a keypress if meta or meta+shift is down\r\n            // firefox will fire a keypress if meta or control is down\r\n            if ((action == 'keypress' && !e.metaKey && !e.ctrlKey) || _modifiersMatch(modifiers, callback.modifiers)) {\r\n\r\n                // when you bind a combination or sequence a second time it\r\n                // should overwrite the first one.  if a sequenceName or\r\n                // combination is specified in this call it does just that\r\n                //\r\n                // @todo make deleting its own method?\r\n                var deleteCombo = !sequenceName && callback.combo == combination;\r\n                var deleteSequence = sequenceName && callback.seq == sequenceName && callback.level == level;\r\n                if (deleteCombo || deleteSequence) {\r\n                    this._callbacks[character].splice(i, 1);\r\n                }\r\n\r\n                matches.push(callback);\r\n            }\r\n        }\r\n\r\n        return matches;\r\n    }\r\n\r\n    private _fireCallback(callback, e, combo, sequence?) {\r\n\r\n        // if this event should not happen stop here\r\n        if (this.stopCallback(e, e.target || e.srcElement)) {\r\n            return;\r\n        }\r\n\r\n        if (callback(e, combo) === false) {\r\n            _preventDefault(e);\r\n            _stopPropagation(e);\r\n        }\r\n    }\r\n\r\n    private _handleKey(character, modifiers, e) {\r\n        var callbacks = this._getMatches(character, modifiers, e);\r\n        var i;\r\n        var doNotReset = {};\r\n        var maxLevel = 0;\r\n        var processedSequenceCallback = false;\r\n\r\n        // Calculate the maxLevel for sequences so we can only execute the longest callback sequence\r\n        for (i = 0; i < callbacks.length; ++i) {\r\n            if (callbacks[i].seq) {\r\n                maxLevel = Math.max(maxLevel, callbacks[i].level);\r\n            }\r\n        }\r\n\r\n        // loop through matching callbacks for this key event\r\n        for (i = 0; i < callbacks.length; ++i) {\r\n\r\n            // fire for all sequence callbacks\r\n            // this is because if for example you have multiple sequences\r\n            // bound such as \"g i\" and \"g t\" they both need to fire the\r\n            // callback for matching g cause otherwise you can only ever\r\n            // match the first one\r\n            if (callbacks[i].seq) {\r\n\r\n                // only fire callbacks for the maxLevel to prevent\r\n                // subsequences from also firing\r\n                //\r\n                // for example 'a option b' should not cause 'option b' to fire\r\n                // even though 'option b' is part of the other sequence\r\n                //\r\n                // any sequences that do not match here will be discarded\r\n                // below by the _resetSequences call\r\n                if (callbacks[i].level != maxLevel) {\r\n                    continue;\r\n                }\r\n\r\n                processedSequenceCallback = true;\r\n\r\n                // keep a list of which sequences were matches for later\r\n                doNotReset[callbacks[i].seq] = 1;\r\n                this._fireCallback(callbacks[i].callback, e, callbacks[i].combo, callbacks[i].seq);\r\n                continue;\r\n            }\r\n\r\n            // if there were no sequence matches but we are still here\r\n            // that means this is a regular match so we should fire that\r\n            if (!processedSequenceCallback) {\r\n                this._fireCallback(callbacks[i].callback, e, callbacks[i].combo);\r\n            }\r\n        }\r\n\r\n        // if the key you pressed matches the type of sequence without\r\n        // being a modifier (ie \"keyup\" or \"keypress\") then we should\r\n        // reset all sequences that were not matched by this event\r\n        //\r\n        // this is so, for example, if you have the sequence \"h a t\" and you\r\n        // type \"h e a r t\" it does not match.  in this case the \"e\" will\r\n        // cause the sequence to reset\r\n        //\r\n        // modifier keys are ignored because you can have a sequence\r\n        // that contains modifiers such as \"enter ctrl+space\" and in most\r\n        // cases the modifier key will be pressed before the next key\r\n        //\r\n        // also if you have a sequence such as \"ctrl+b a\" then pressing the\r\n        // \"b\" key will trigger a \"keypress\" and a \"keydown\"\r\n        //\r\n        // the \"keydown\" is expected when there is a modifier, but the\r\n        // \"keypress\" ends up matching the _nextExpectedAction since it occurs\r\n        // after and that causes the sequence to reset\r\n        //\r\n        // we ignore keypresses in a sequence that directly follow a keydown\r\n        // for the same character\r\n        var ignoreThisKeypress = e.type == 'keypress' && this._ignoreNextKeypress;\r\n        if (e.type == this._nextExpectedAction && !_isModifier(character) && !ignoreThisKeypress) {\r\n            this._resetSequences(doNotReset);\r\n        }\r\n\r\n        this._ignoreNextKeypress = processedSequenceCallback && e.type == 'keydown';\r\n    }\r\n\r\n    private _handleKeyEvent(e) {\r\n        // normalize e.which for key events\r\n        // @see http://stackoverflow.com/questions/4285627/javascript-keycode-vs-charcode-utter-confusion\r\n        if (typeof e.which !== 'number') {\r\n            e.which = e.keyCode;\r\n        }\r\n\r\n        var character = _characterFromEvent(e);\r\n\r\n        // no character found then stop\r\n        if (!character) {\r\n            return;\r\n        }\r\n\r\n        // need to use === for the character check because the character can be 0\r\n        if (e.type == 'keyup' && this._ignoreNextKeyup === character) {\r\n            this._ignoreNextKeyup = false;\r\n            return;\r\n        }\r\n\r\n        this.handleKey(character, _eventModifiers(e), e);\r\n    }\r\n\r\n\r\n    private _resetSequenceTimer() {\r\n        clearTimeout(this._resetTimer);\r\n        this._resetTimer = setTimeout(() => this._resetSequences, 1000);\r\n    }\r\n\r\n    private _bindSequence(combo, keys, callback, action) {\r\n\r\n        // start off by adding a sequence level record for this combination\r\n        // and setting the level to 0\r\n        this._sequenceLevels[combo] = 0;\r\n\r\n        /**\r\n         * callback to increase the sequence level for this sequence and reset\r\n         * all other sequences that were active\r\n         *\r\n         * @param {string} nextAction\r\n         * @returns {Function}\r\n         */\r\n        var _increaseSequence = (nextAction) => {\r\n            return function() {\r\n                this._nextExpectedAction = nextAction;\r\n                ++this._sequenceLevels[combo];\r\n                this._resetSequenceTimer();\r\n            };\r\n        }\r\n\r\n        /**\r\n         * wraps the specified callback inside of another function in order\r\n         * to reset all sequence counters as soon as this sequence is done\r\n         *\r\n         * @param {Event} e\r\n         * @returns void\r\n         */\r\n        var _callbackAndReset = (e) => {\r\n            this._fireCallback(callback, e, combo);\r\n\r\n            // we should ignore the next key up if the action is key down\r\n            // or keypress.  this is so if you finish a sequence and\r\n            // release the key the final key will not trigger a keyup\r\n            if (action !== 'keyup') {\r\n                this._ignoreNextKeyup = _characterFromEvent(e);\r\n            }\r\n\r\n            // weird race condition if a sequence ends with the key\r\n            // another sequence begins with\r\n            setTimeout(() => this._resetSequences, 10);\r\n        }\r\n\r\n        // loop through keys one at a time and bind the appropriate callback\r\n        // function.  for any key leading up to the final one it should\r\n        // increase the sequence. after the final, it should reset all sequences\r\n        //\r\n        // if an action is specified in the original bind call then that will\r\n        // be used throughout.  otherwise we will pass the action that the\r\n        // next key in the sequence should match.  this allows a sequence\r\n        // to mix and match keypress and keydown events depending on which\r\n        // ones are better suited to the key provided\r\n        for (var i = 0; i < keys.length; ++i) {\r\n            var isFinal = i + 1 === keys.length;\r\n            var wrappedCallback = isFinal ? _callbackAndReset : _increaseSequence(action || _getKeyInfo(keys[i + 1]).action);\r\n            this._bindSingle(keys[i], wrappedCallback, action, combo, i);\r\n        }\r\n    }\r\n\r\n    private _bindSingle(combination, callback, action, sequenceName?, level?) {\r\n\r\n        // store a direct mapped reference for use with Mousetrap.trigger\r\n        this._directMap[combination + ':' + action] = callback;\r\n\r\n        // make sure multiple spaces in a row become a single space\r\n        combination = combination.replace(/\\s+/g, ' ');\r\n\r\n        var sequence = combination.split(' ');\r\n        var info;\r\n\r\n        // if this pattern is a sequence of keys then run through this method\r\n        // to reprocess each pattern one key at a time\r\n        if (sequence.length > 1) {\r\n            this._bindSequence(combination, sequence, callback, action);\r\n            return;\r\n        }\r\n\r\n        info = _getKeyInfo(combination, action);\r\n\r\n        // make sure to initialize array if this is the first time\r\n        // a callback is added for this key\r\n        this._callbacks[info.key] = this._callbacks[info.key] || [];\r\n\r\n        // remove an existing match if there is one\r\n        this._getMatches(info.key, info.modifiers, { type: info.action }, sequenceName, combination, level);\r\n\r\n        // add this call back to the array\r\n        // if it is a sequence put it at the beginning\r\n        // if not put it at the end\r\n        //\r\n        // this is important because the way these are processed expects\r\n        // the sequence ones to come first\r\n        this._callbacks[info.key][sequenceName ? 'unshift' : 'push']({\r\n            callback: callback,\r\n            modifiers: info.modifiers,\r\n            action: info.action,\r\n            seq: sequenceName,\r\n            level: level,\r\n            combo: combination\r\n        });\r\n    }\r\n\r\n    private _bindMultiple(combinations, callback, action) {\r\n        for (var i = 0; i < combinations.length; ++i) {\r\n            this._bindSingle(combinations[i], callback, action);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * binds an event to mousetrap\r\n     *\r\n     * can be a single key, a combination of keys separated with +,\r\n     * an array of keys, or a sequence of keys separated by spaces\r\n     *\r\n     * be sure to list the modifier keys first to make sure that the\r\n     * correct key ends up getting bound (the last key in the pattern)\r\n     *\r\n     * @param {string|Array} keys\r\n     * @param {Function} callback\r\n     * @param {string=} action - 'keypress', 'keydown', or 'keyup'\r\n     * @returns void\r\n     */\r\n    public bind(keys, callback: (e: KeyboardEvent) => void, action?) {\r\n        var self = this;\r\n        keys = keys instanceof Array ? keys : [keys];\r\n        self._bindMultiple.call(self, keys, callback, action);\r\n        return self;\r\n    }\r\n\r\n    /**\r\n     * unbinds an event to mousetrap\r\n     *\r\n     * the unbinding sets the callback function of the specified key combo\r\n     * to an empty function and deletes the corresponding key in the\r\n     * _directMap dict.\r\n     *\r\n     * TODO: actually remove this from the _callbacks dictionary instead\r\n     * of binding an empty function\r\n     *\r\n     * the keycombo+action has to be exactly the same as\r\n     * it was defined in the bind method\r\n     *\r\n     * @param {string|Array} keys\r\n     * @param {string} action\r\n     * @returns void\r\n     */\r\n    public unbind(keys, action) {\r\n        var self = this;\r\n        return self.bind.call(self, keys, function() { }, action);\r\n    }\r\n    /**\r\n     * triggers an event that has already been bound\r\n     *\r\n     * @param {string} keys\r\n     * @param {string=} action\r\n     * @returns void\r\n     */\r\n    public trigger(keys, action) {\r\n        var self = this;\r\n        if (self._directMap[keys + ':' + action]) {\r\n            self._directMap[keys + ':' + action]({}, keys);\r\n        }\r\n        return self;\r\n    }\r\n\r\n\r\n    /**\r\n     * resets the library back to its initial state.  this is useful\r\n     * if you want to clear out the current keyboard shortcuts and bind\r\n     * new ones - for example if you switch to another page\r\n     *\r\n     * @returns void\r\n     */\r\n    public reset() {\r\n        var self = this;\r\n        self._callbacks = {};\r\n        self._directMap = {};\r\n        return self;\r\n    }\r\n\r\n    /**\r\n     * should we stop this event before firing off callbacks\r\n     *\r\n     * @param {Event} e\r\n     * @param {Element} element\r\n     * @return {boolean}\r\n     */\r\n    public stopCallback(e, element, combo?, sequence?) {\r\n        var self = this;\r\n\r\n        if (self.paused) {\r\n            return true;\r\n        }\r\n\r\n        if (this._globalCallbacks[combo] || this._globalCallbacks[sequence]) {\r\n            return false;\r\n        }\r\n\r\n\r\n        // if the element has the class \"mousetrap\" then no need to stop\r\n        if ((' ' + element.className + ' ').indexOf(' mousetrap ') > -1) {\r\n            return false;\r\n        }\r\n\r\n        if (_belongsTo(element, self.target)) {\r\n            return false;\r\n        }\r\n\r\n        // stop for input, select, and textarea\r\n        return element.tagName == 'INPUT' || element.tagName == 'SELECT' || element.tagName == 'TEXTAREA' || element.isContentEditable;\r\n    }\r\n\r\n    public bindGlobal(keys, callback, action) {\r\n        this.bind(keys, callback, action);\r\n\r\n        if (keys instanceof Array) {\r\n            for (var i = 0; i < keys.length; i++) {\r\n                this._globalCallbacks[keys[i]] = true;\r\n            }\r\n            return;\r\n        }\r\n\r\n        this._globalCallbacks[keys] = true;\r\n    }\r\n\r\n    public handleKey(character, modifiers, e) {\r\n        return this._handleKey.apply(this, arguments);\r\n    }\r\n\r\n    public dispose() {\r\n        this.reset();\r\n    }\r\n\r\n    public pause() {\r\n        this.paused = true;\r\n    }\r\n\r\n    public unpause() {\r\n        this.paused = false;\r\n    }\r\n\r\n    private _globalCallbacks = {};\r\n\r\n    private paused: boolean = false;\r\n}\r\n","\r\nexport class SimpleEvent implements ISimpleEventBase {\r\n    private _idx: number = 0;\r\n\r\n\r\n    private _key: string = Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n\r\n\r\n    private subscribers: Function[] = [];\r\n\r\n\r\n\r\n    /** function that gets called in the event that an error is thrown\r\n     * return true to stop calling other subscribers\r\n     */\r\n    public onError: (e) => boolean = () => false;\r\n\r\n    /** adds new subscriber\r\n     *  @returns refrence number used to remove subscriber */\r\n    on(fn: Function): number {\r\n        fn[this._key] = ++this._idx;\r\n        this.subscribers.push(fn);\r\n        return fn[this._key];\r\n    }\r\n\r\n    /** Triggers the event */\r\n    trigger(): SimpleEvent;\r\n    trigger(...args: any[]): SimpleEvent;\r\n    trigger(...args: any[]): SimpleEvent {\r\n        for (var f of this.subscribers) {\r\n            try {\r\n                f.apply({}, args);\r\n            }\r\n            catch (e) {\r\n                if (this.onError(e))\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    clear(): SimpleEvent {\r\n        this.subscribers = [];\r\n        return this;\r\n    }\r\n\r\n\r\n    off(id: number);\r\n    off(fn: Function);\r\n    off(arg) {\r\n        var id = 0;\r\n\r\n        if (typeof arg === 'number') {\r\n            id = arg;\r\n        } else if (typeof arg === 'Function') {\r\n            id = arg[this._key];\r\n        } else {\r\n            throw \"SimpleEvent.off: Function Identifier not found\";\r\n        }\r\n\r\n        this.subscribers = this.subscribers.filter(fn=> fn[this._key] !== id);\r\n\r\n    }\r\n\r\n\r\n\r\n    count(): number {\r\n        return this.subscribers.length;\r\n    }\r\n\r\n\r\n    dispose() { this.clear(); }\r\n\r\n\r\n    static New(): SimpleEvent;\r\n    static New<T>(): ISimpleEvent1<T>;\r\n    static New<T1, T2>(): ISimpleEvent2<T1, T2>;\r\n    static New<T1, T2, T3>(): ISimpleEvent3<T1, T2, T3>;\r\n    static New() { return new SimpleEvent(); }\r\n}\r\n\r\nexport interface ISimpleEventBase {\r\n\r\n    off(id: number);\r\n    off(fn: Function);\r\n\r\n    count(): number;\r\n    trigger(): SimpleEvent;\r\n    dispose();\r\n    clear();\r\n}\r\n\r\nexport interface ISimpleEvent1<T> extends ISimpleEventBase {\r\n    on(fn: (e: T) => void): number;\r\n    trigger(): SimpleEvent;\r\n    trigger(data: T): SimpleEvent;\r\n}\r\n\r\nexport interface ISimpleEvent2<T1, T2> extends ISimpleEventBase {\r\n    on(fn: (e: T1, e2: T2) => void): number;\r\n    trigger(): SimpleEvent;\r\n    trigger(data: T1, a2: T2): SimpleEvent;\r\n}\r\n\r\nexport interface ISimpleEvent3<T1, T2, T3> extends ISimpleEventBase {\r\n    on(fn: (e: T1, e2: T2, e3: T3) => void): number;\r\n    trigger(): SimpleEvent;\r\n    trigger(data: T1, a2: T2, a3: T3): SimpleEvent;\r\n}\r\n","import {Guitar} from './Guitar';\r\nimport {GuitarStrum} from './GuitarStrum';\r\n\r\nexport module WellKnownChords {\r\n\r\n    let standardGuitar = Guitar.GetNormalGuitar();\r\n\r\n\r\n    let s = (y) =>  standardGuitar.getStrum(y);\r\n    let x = undefined;\r\n\r\n    export var D = s([2, 3, 2, 0, x, x]);\r\n    export var A = s([0, 2, 2, 2, 0, x]);\r\n    export var C = s([0, 1, 0, 2, 3, x]);\r\n    export var E = s([0, 0, 1, 2, 2, 0]);\r\n}\r\n"],"sourceRoot":"/source/"}