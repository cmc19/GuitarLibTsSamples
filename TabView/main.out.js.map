{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","Samples/TabView/main.ts","main.out.js","node_modules/lodash/index.js","scripts/Raphael.js","scripts/eve.js","src/Guitar.ts","src/GuitarString.ts","src/GuitarStrum.ts","src/Index.ts","src/MusicNote.ts","src/Scale.ts","src/Strum.ts","src/TabDocument.ts","src/UI/BaseUI.ts","src/UI/ChordView.ts","src/UI/GuitarNeck.ts","src/UI/TabEditor.ts","src/UI/TabView.ts","src/UI/Tab/TabCell.ts","src/UI/Tab/TabColumn.ts","src/UI/UI.ts","src/Util/Array.ts","src/Util/Collections.ts","src/Util/Decorators.ts","src/Util/KeyManager.ts","src/Util/SimpleEvent.ts","src/WellKnownChords.ts"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","part1","streets","addStrum","gs","uu","commonPart","ag","G","window","undefined","streetsDiv","document","getElementById","guitar","Guitar","GetNormalGuitar","x","getStrum","TabDocument","agDiv","TabView","../../src/Index",2,"global","baseCompareAscending","value","other","valIsNull","valIsUndef","valIsReflexive","othIsNull","othIsUndef","othIsReflexive","baseFindIndex","array","predicate","fromRight","index","baseIndexOf","fromIndex","indexOfNaN","baseIsFunction","baseToString","charsLeftIndex","string","chars","indexOf","charAt","charsRightIndex","compareAscending","object","criteria","compareMultiple","orders","objCriteria","othCriteria","ordersLength","result","deburrLetter","letter","deburredLetters","escapeHtmlChar","chr","htmlEscapes","escapeStringChar","stringEscapes","isObjectLike","isSpace","charCode","replaceHolders","placeholder","resIndex","PLACEHOLDER","sortedUniq","iteratee","seen","computed","trimmedLeftIndex","charCodeAt","trimmedRightIndex","unescapeHtmlChar","htmlUnescapes","runInContext","context","lodash","isArray","LazyWrapper","LodashWrapper","hasOwnProperty","wrapperClone","baseLodash","chainAll","actions","this","__wrapped__","__actions__","__chain__","__dir__","__dropCount__","__filtered__","__iteratees__","__takeCount__","POSITIVE_INFINITY","__views__","lazyClone","iteratees","views","arrayCopy","lazyReverse","clone","lazyValue","baseWrapperValue","dir","isRight","view","getView","start","end","takeCount","nativeMin","iterLength","outer","iterIndex","data","type","LAZY_DROP_WHILE_FLAG","done","count","limit","LAZY_MAP_FLAG","LAZY_FILTER_FLAG","MapCache","__data__","mapDelete","key","has","mapGet","mapHas","mapSet","SetCache","values","hash","nativeCreate","set","Set","push","cacheIndexOf","cache","isObject","cachePush","add","source","Array","arrayEach","arrayEachRight","arrayEvery","arrayExtremum","comparator","exValue","current","arrayFilter","arrayMap","arrayReduce","accumulator","initFromArray","arrayReduceRight","arraySome","arraySum","assignDefaults","objectValue","sourceValue","assignOwnDefaults","assignWith","customizer","props","keys","baseAssign","baseCopy","baseAt","collection","isNil","isArr","isArrayLike","propsLength","isIndex","baseCallback","func","thisArg","argCount","bindCallback","identity","baseMatches","property","baseMatchesProperty","baseClone","isDeep","stackA","stackB","initCloneArray","tag","objToString","isFunc","funcTag","objectTag","argsTag","cloneableTags","initCloneByTag","initCloneObject","baseForOwn","subValue","baseDelay","wait","args","TypeError","FUNC_ERROR_TEXT","setTimeout","apply","baseDifference","getIndexOf","isCommon","createCache","valuesLength","valuesIndex","baseEvery","baseEach","baseExtremum","baseFill","baseFilter","baseFind","eachFunc","retKey","baseFlatten","isStrict","isArguments","valIndex","valLength","baseForIn","baseFor","keysIn","baseForOwnRight","baseForRight","baseFunctions","isFunction","baseGet","path","pathKey","toObject","baseIsEqual","isLoose","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","arrayTag","othTag","isTypedArray","objIsObj","othIsObj","isSameTag","equalByTag","objIsWrapped","othIsWrapped","equalArrays","equalObjects","pop","baseIsMatch","matchData","noCustomizer","objValue","srcValue","baseMap","getMatchData","isKey","isStrictComparable","toPath","baseSlice","last","baseMerge","isSrcArr","baseMergeDeep","mergeFunc","isPlainObject","toPlainObject","baseProperty","basePropertyDeep","basePullAt","indexes","previous","splice","baseRandom","min","max","floor","nativeRandom","baseReduce","initFromCollection","baseSome","baseSortBy","comparer","sort","baseSortByOrder","callback","getCallback","baseSum","baseUniq","isLarge","seenIndex","baseValues","baseWhile","isDrop","action","binaryIndex","retHighest","low","high","HALF_MAX_ARRAY_LENGTH","mid","binaryIndexBy","valIsNaN","isDef","isReflexive","setLow","MAX_ARRAY_INDEX","arguments","bufferClone","buffer","bufferSlice","composeArgs","partials","holders","holdersLength","argsIndex","argsLength","nativeMax","leftIndex","leftLength","composeArgsRight","holdersIndex","rightIndex","rightLength","offset","createAggregator","setter","initializer","createAssigner","assigner","restParam","sources","guard","isIterateeCall","createBaseEach","getLength","isLength","iterable","createBaseFor","keysFunc","createBindWrapper","wrapper","fn","root","Ctor","createCtorWrapper","createCompounder","words","deburr","thisBinding","baseCreate","prototype","createCurry","flag","curryFunc","arity","createWrapper","createExtremum","toIterable","createFind","createFindIndex","createFindKey","objectFunc","createFlow","funcs","thru","getFuncName","funcName","getData","isLaziable","ARY_FLAG","CURRY_FLAG","PARTIAL_FLAG","REARG_FLAG","plant","createForEach","arrayFunc","createForIn","createForOwn","createObjectMapper","isMapKeys","mapped","createPadDir","createPadding","createPartial","partialFunc","createReduce","createHybridWrapper","bitmask","partialsRight","holdersRight","argPos","ary","isCurry","isCurryRight","argsHolders","newArgPos","newArity","newsHolders","newHoldersRight","newPartials","newPartialsRight","PARTIAL_RIGHT_FLAG","isCurryBound","BIND_FLAG","BIND_KEY_FLAG","newData","setData","isBind","isBindKey","reorder","isAry","CURRY_BOUND_FLAG","CURRY_RIGHT_FLAG","strLength","nativeIsFinite","padLength","repeat","ceil","slice","createPartialWrapper","createSortedIndex","mergeData","baseSetData","arrLength","othLength","arrValue","othValue","boolTag","dateTag","errorTag","name","message","numberTag","regexpTag","stringTag","objProps","objLength","othProps","skipCtor","objCtor","constructor","othCtor","realNames","otherFunc","target","pairs","getNative","isNative","transforms","size","input","Object","arrayBufferTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","byteOffset","reFlags","exec","lastIndex","invokePath","reIsUint","test","MAX_SAFE_INTEGER","reIsPlainProp","reIsDeepProp","srcBitmask","newBitmask","isCombo","pickByArray","pickByCallback","oldArray","shimIsPlainObject","support","shimKeys","allowIndexes","replace","rePropName","match","number","quote","reEscapeChar","chunk","compact","drop","dropRight","dropRightWhile","dropWhile","fill","first","flatten","flattenDeep","initial","lastIndexOf","pull","remove","rest","take","takeRight","takeRightWhile","takeWhile","uniq","isSorted","unzip","group","unzipWith","xor","concat","zipObject","chain","tap","interceptor","wrapperChain","wrapperCommit","wrapperPlant","parent","wrapperReverse","reverse","wrapperToString","wrapperValue","every","filter","findWhere","find","includes","isString","map","pluck","reject","sample","toArray","rand","shuffle","some","sortBy","sortByOrder","where","after","temp","before","debounce","options","cancel","timeoutId","clearTimeout","maxTimeoutId","trailingCall","delayed","remaining","now","stamp","isCalled","lastCalled","maxDelayed","trailing","maxWait","debounced","leading","leadingCall","memoize","resolver","memoized","get","Cache","negate","once","otherArgs","spread","throttle","debounceOptions","wrap","cloneDeep","gt","gte","isBoolean","isDate","isElement","nodeType","isEmpty","isEqual","isError","isMatch","isNaN","isNumber","reIsNative","fnToString","reIsHostCtor","isNull","isRegExp","typedArrayTags","isUndefined","lt","lte","create","properties","functions","defaultValue","invert","multiValue","isProto","skipIndexes","nested","transform","valuesIn","inRange","random","floating","noMin","noMax","parseFloat","capitalize","toUpperCase","reLatin1","reComboMark","endsWith","position","escape","reHasUnescapedHtml","reUnescapedHtml","escapeRegExp","reHasRegExpChars","reRegExpChars","pad","parseInt","radix","nativeParseInt","startsWith","template","otherOptions","settings","templateSettings","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reNoMatch","reDelimiters","RegExp","reInterpolate","reEsTemplate","evaluate","sourceURL","templateCounter","escapeValue","interpolateValue","esTemplateValue","evaluateValue","reUnescapedString","variable","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","attempt","Function","trim","trimLeft","trimRight","trunc","DEFAULT_TRUNC_LENGTH","omission","DEFAULT_TRUNC_OMISSION","separator","search","newEnd","substring","unescape","reHasEscapedHtml","reEscapedHtml","pattern","reWords","matches","constant","matchesProperty","mixin","isObj","methodNames","methodName","noConflict","_","oldDash","noop","propertyOf","range","step","times","MAX_ARRAY_LENGTH","uniqueId","prefix","id","idCounter","augend","addend","sum","noIteratee","defaults","pick","contextProps","Date","Math","Number","String","arrayProto","objectProto","stringProto","toString","ArrayBuffer","getPrototypeOf","Uint8Array","WeakMap","Float64Array","nativeIsArray","isFinite","nativeKeys","nativeNow","nativeNumIsFinite","NEGATIVE_INFINITY","FLOAT64_BYTES_PER_ELEMENT","BYTES_PER_ELEMENT","metaMap","valueOf","y","dom","createDocumentFragment","reEscape","reEvaluate","baseEachRight","byteLength","floatLength","HOT_SPAN","HOT_COUNT","difference","findIndex","findLastIndex","intersection","arrays","othIndex","caches","pullAt","sortedIndex","sortedLastIndex","union","without","zip","zipWith","at","countBy","findLast","forEach","forEachRight","groupBy","indexBy","invoke","isProp","partition","reduce","reduceRight","sortByAll","getTime","bind","bindAll","bindKey","curry","curryRight","defer","delay","flow","flowRight","partial","partialRight","rearg","objProto","assign","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","mapKeys","mapValues","merge","omit","camelCase","word","toLowerCase","kebabCase","padLeft","padRight","whitespace","reHasHexPrefix","snakeCase","startCase","method","methodOf","backflow","collect","compose","each","eachRight","extend","methods","select","tail","unique","all","any","contains","eq","detect","foldl","foldr","head","include","inject","VERSION","isFilter","isDropWhile","filtered","whileName","takeName","dropName","operationName","createCallback","lodashFunc","checkIteratee","retUnwrapped","isHybrid","isLazy","useLazy","onlyLazy","chainName","names","commit","run","toJSON","mapTag","setTag","weakMapTag","upper","lower","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","&","<",">","\"","'","`","&amp;","&lt;","&gt;","&quot;","&#39;","&#96;","objectTypes","function","\\","\n","\r"," "," ","freeExports","freeModule","freeGlobal","freeSelf","self","freeWindow","moduleExports","define","amd",3,"glob","current_event","stop","version","wildcard","fun","numsort","b","events","eve","scope","oldstop","listeners","z","indexed","queue","out","ce","ii","zIndex","_events","item","items","k","j","jj","nes","split","es","on","event","attrs","nt","subname","nts","off","unbind","cur","f2","factory","R","is","loaded","_engine","nu","obj","res","repush","cacher","postprocessor","newf","arg","join","shift","clrToString","hex","catmullRom2bezier","crp","d","iLen","p","base3","p1","p2","p3","p4","t1","t2","bezlen","x1","y1","x2","y2","x3","y3","x4","y4","z2","Tvalues","Cvalues","ct","xbase","ybase","comb","math","sqrt","getTatLen","ll","abs","intersect","mmax","mmin","nx","ny","denominator","px","py","px2","toFixed","py2","interHelper","bez1","bez2","justCount","bbox1","bezierBBox","bbox2","isBBoxIntersect","l1","l2","n1","n2","dots1","dots2","xy","findDotsAtSegment","di","di1","dj","dj1","ci","cj","interPathHelper","path1","path2","_path2curve","x1m","y1m","x2m","y2m","pi","pj","intr","kk","segment1","segment2","Matrix","c","x_y_w_h","S","width","height","CubicBezierAtTime","p1x","p1y","p2x","p2y","duration","sampleCurveX","ax","bx","cx","solve","epsilon","solveCurveX","ay","by","cy","t0","d2","Animation","anim","ms","percents","newAnim","attr","toFloat","sortByNumber","top","runAnimation","element","percent","status","totalOrigin","params","isInAnim","isInAnimSet","next","prev","timestamp","from","to","diff","animationElements","el","initstatus","availableAnimAttrs","paper","customAttributes","availableAttrs","getRGB","toColour","g","pathes","path2curve","equaliseTransform","real","m","matrix","to2","getBBox","extractTransform","Str","from2","easing","easyeasy","easing_formulas","bezierrg","curve","pipe","del","origin","animation","requestAnimFrame","stopAnimation","paperproto","elements","circle","rect","ellipse","text","image","formatrg","doc","win","oldRaphael","was","Raphael","Paper","ca","supportsTouch","DocumentTouch","E","touchMap","mousedown","mousemove","mouseup","lowerCase","pow","PI","objectToString","colourRegExp","_ISURL","isnan","NaN","Infinity","-Infinity","round","toInt","upperCase","_availableAttrs","arrow-end","arrow-start","blur","clip-rect","cursor","fill-opacity","font","font-family","font-size","font-style","font-weight","gradient","href","letter-spacing","opacity","rx","ry","src","stroke","stroke-dasharray","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-anchor","title","_availableAnimAttrs","commaSpaces","hsrg","hs","rg","p2s","pathCommand","tCommand","pathValues","eldata","_radial_gradient","rectPath","_rectPath","w","h","ellipsePath","getPath","_getPath","bbox","_getBBox","mapPath","pathi","_g","SVGAngle","implementation","hasFeature","createElement","innerHTML","firstChild","style","behavior","adj","svg","vml","_Paper","_id","_oid","angle","atan2","rad","deg","snapTo","tolerance","rem","createUUID","uuidRegEx","uuidReplacer","v","setWindow","newwin","initWin","toHex","color","bod","docum","ActiveXObject","write","close","body","createPopup","createTextRange","queryCommandValue","display","appendChild","defaultView","getComputedStyle","getPropertyValue","hsbtoString","hsltoString","rgbtoString","prepareRGB","clr","packageRGB","rgb","hsb2rgb","hsl2rgb","rgb2hsl","rgb2hsb","B","X","C","H","V","L","M","_path2string","_preload","img","cssText","onload","removeChild","onerror","colour","error","red","green","blue","hsb","hsl","getColor","reset","parsePathString","pathString","pth","paths","arr","pathClone","paramCounts","q","parseTransformString","TString","ps","sleep","c1x","c1y","c2x","c2y","t13","t12","t3","mx","my","alpha","curveDim","isPointInsideBBox","pathIntersection","pathIntersectionNumber","isPointInsidePath","pathBBox","_removedFactory","methodname","pathDimensions","Y","dim","xmin","ymin","xmax","ymax","bb","pathArray","pathToRelative","_pathToRelative","rel","pa","len","pathToAbsolute","_pathToAbsolute","crz","dots","l2c","q2c","_13","_23","a2c","large_arc_flag","sweep_flag","recursive","_120","rotate","cos","sin","f1","rx2","ry2","asin","df","f2old","x2old","y2old","c1","s1","c2","s2","tan","hx","hy","m1","m2","m3","m4","newres","findDotAtSegment","dot","qx","qy","attrs2","processPath","pcom","tq","T","Q","fixArc","pp","pcoms1","pcoms2","fixM","a1","a2","pfirst","seg","seg2","seglen","seg2len","tear","_parseDots","par","_tear","bottom","toMatrix","_tofront","_toback","_insertafter","el2","_insertbefore","transformPath","_extractTransform","tstr","tdata","dx","dy","sx","sy","tlen","command","absolute","inver","translate","scale","dirtyT","getEmpty","_equaliseTransform","tt1","tt2","maxlength","_getContainer","container","tagName","pixelWidth","offsetWidth","pixelHeight","offsetHeight","matrixproto","norm","normalize","mag","me","fromCharCode","toFilter","row","scalex","shear","scaley","acos","isSimple","isSuperSimple","noRotation","toTransformString","shorter","preventDefault","returnValue","preventTouch","originalEvent","stopPropagation","cancelBubble","stopTouch","getEventPosition","scrollY","documentElement","scrollTop","scrollX","scrollLeft","clientX","clientY","addEvent","addEventListener","pos","_f","olde","targetTouches","removeEventListener","attachEvent","detacher","detachEvent","drag","dragMove","dragi","touches","touch","identifier","_drag","node","nextSibling","parentNode","opera","getElementByPoint","insertBefore","move_scope","dragUp","unmousemove","unmouseup","end_scope","start_scope","elproto","eventName","shape","removeData","hover","f_in","f_out","scope_in","scope_out","mouseover","mouseout","unhover","unmouseover","unmouseout","draggable","onmove","onstart","onend","onDragOver","undrag","unmousedown","__set__","format","itemsArray","setStart","setFinish","getSize","canvas","setSize","setViewBox","fit","raphael","getOffset","elem","box","getBoundingClientRect","ownerDocument","docElem","clientTop","clientLeft","pageYOffset","left","pageXOffset","elementFromPoint","so","sr","createSVGRect","hits","getIntersectionList","getById","raphaelid","getElementsByBBox","bot","getElementsByPoint","isPointInside","rp","realPath","isWithoutTransform","removed","dirty","bboxwt","glow","offsetx","offsety","getPointAtSegmentLength","getLengthFactory","istotal","subpath","onlystart","point","sp","subpaths","getTotalLength","getPointAtLength","getSubpathsAtLength","getSubpath","ef","linear","<>","backIn","backOut","elastic","bounce","easeIn","easeOut","easeInOut","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","Now","paused","time","that","init","upto255","animateWith","onAnimation","json",100,"lastKey","animate","setTime","pause","resume","setproto","clear","insertion","todel","arglen","exclude","collector","insertAfter","glowConfig","ret","shape2","index2","registerFont","face","fonts","fontcopy","glyphs","family","prop","glyph","getFont","weight","stretch","normal","bold","lighter","bolder","fontName","thefont","print","letter_spacing","line_spacing","letters","notfirst","lineHeight","shifty","descent","curr","token","str","fullfill","tokenRegex","objNotationRegex","replacer","quotedName","ninja","st","isLoaded","readyState","xlink","markers","block","classic","diamond","open","oval","markerCounter","$","setAttributeNS","setAttribute","createElementNS","webkitTapHighlightColor","addGradientFill","fx","fy","SVG","_fx","_fy","vector","defs","gradientTransform","stop-color","location","fillOpacity","updatePosition","patternTransform","addArrow","isEnd","refX","se","arrows","endPath","endMarker","startPath","startMarker","pathId","markerId","use","marker","getElementsByTagName","markerHeight","markerWidth","orient","refY","xlink:href","delta","startdx","enddx","dasharray","-",".","-.","-..",". ","- ","--","- .","--.","--..","addDashes","butt","square","dashes","setFillAndStroke","vis","visibility","att","nodeValue","val","createTextNode","pn","hl","clip","rc","clip-path","getAttribute","startString","endString","isURL","ig","patternUnits","stops","stop-opacity","cssrule","tuneText","fontSize","tspan","texts","tspans","dif","getRealNode","Element","sw","hide","show","containerStyle","canvasHidden","parentElement","clientWidth","clientHeight","def","subkey","toFront","toBack","afterNode","beforeNode","fltr","stdDeviation","_blur","removeAttribute","preserveAspectRatio","_viewBox","con","isFloating","cnvs","css","xmlns","xmlns:xlink","_left","_top","renderfix","vb","paperSize","aspectRatio","_vbSize","viewBox","getScreenCTM","createSVGMatrix","desc","fillString","Z","bites","blurregexp","cssDot","zoom","pathTypes","ovalTypes","path2vml","total","vals","isMove","compensation","setCoords","fillpos","flip","kx","ky","coordsize","rotation","coordorigin","fillsize","newpath","isOval","div","clipRect","dstyle","textpath","textpathStyle","fontFamily","fontWeight","fontStyle","newfill","createNode","newstroke","strokeColor","joinstyle","miterlimit","endcap","dashstyle","span","brect","W","right","dirtyattrs","dd","bbx","fxfy","color2","clrs","colors","focus","focussize","focusposition","oldt","vbs","_viewBoxShift","vbt","skew","isGrad","isPatt","bbt","auxGetBBox","runtimeStyle","margin","Path","textpathok","cs","styleSheets","createStyleSheet","addRule","namespaces","rvml",4,"comaseparator","firstDefined","lastDefined","objtos","ar","sep","exist",5,"__decorate","decorators","Reflect","decorate","GuitarString_1","Decorators_1","GuitarStrum_1","strings","frets","defineProperty","enumerable","configurable","getFretsWithNote","noteName","_this","results","positions","stringCount","GuitarStrum","fromObject","GuitarString","getGuitarStrings","hasFromObject","./GuitarString","./GuitarStrum","./Util/Decorators",6,"idx","_i","note","MusicNote_1","MusicNotes","fullName","_index","_note","frequencyAtFret","fret","getNote","frequency","noteAtFret","fretCount","nameId","stringIndex","fretIndex","./MusicNote",7,"__extends","__","Strum_1","_super","_gutiar","getFullNames","_a","getNames","Strum","./Strum",8,"__export","util","orderBy","./Guitar","./Scale","./TabDocument","./UI/UI","./Util/Array","./WellKnownChords",9,"MusicNoteName","stringNoteNames","A","noteMath","getFrequencyOfNoteA4","getNoteNameFromID","getNoteDiff","octive","getOctiveFromId","getNoteNameAsString","noteID","nn","sname",10,"Array_1","Scale","findStrings","MajorScale","getFretInfo","major","p7","getStrumList","info","majors","findAllPossibleCombos","p7Combos","majorFic","StrumBuilder","addArray","fic","getChord","list","isValid","fi",11,"getAverage","arry","previousValue","currentValue","_positions","maxFret","minFret","average","firstUsedStringIndex","lastUsedStringIndex","rate","maxFretDistence","stringsUsed","skipCount","New","fretPositions",12,"Guitar_1","Collections_1","TabPartType","parts","LinkedList","ts","TabStrum","addPart","part","gutar","td","strum","./Util/Collections",13,"lx","ly","BaseUI","ele","appendTo",14,"BaseUI_1","ChordView","DefaultSize","_showLetters","_size","draw","_drawParts","stringSeperation","fretSeperation","circleRadius","scaleSize","_drawStrings","_drawFrets","_drawFingerPositions","_drawLetters","_resize","lastStringX","lastFretY","stringX","line","fretY","strIdx","fretIdx","fretYMiddle","showLetters","./BaseUI",15,"GuitarNeck","firstStringHeight","startStringLine","opacityToggleTime","fingerPositionRadius","_maxFrets","_strumElements","_noteLetters","_noteLettersSet","noteLettersDrawn","drawParts","getStringY","getLastStringY","getFretX","getLastFretX","getStringLength","getPointOfStringFret","getFretHorizontalCenter","drawDoubleFretLine","drawStrings","drawFrets","drawFretBubbles","drawNoteLetters","resize","stringLength","lastString","applyStyles","single","double","hideAllNoteLetters","nls","showAllNoteLetters","sIdx","NoteLetterElement","clearStrum","drawStrum","added","addStrumMarker","removeBar","barFret","setMaxFrets","GuitarStringMath","getFretLengths","bg","click","console","log","../Strum",16,"KeyManager_1","SimpleEvent_1","TabView_1","TabEditor","_onChange","SimpleEvent","KeyManager","bindKeys","_allowSelect","selectUp","selectDown","selectedCell","setText","appendText","up","down","setUpEvents","../Util/KeyManager","../Util/SimpleEvent","./TabView",17,"lpad","substr","TabColumn_1","TabDocument_1","noteSpeperation","_columnAdded","columns","_document","onclick","_drawAllParts","hasSelectedCell","cells","isSelected","getStringStartX","_drawStringLines","_drawStringLetters","_drawStringVertLines","_buildTabColumns","_calculateSize","OpenNoteName","_addColumn","trigger","ns","partCount","colIndex","column","TabColumn","elementAtIndex","cell","defineCell","topCell","rightX","unselectAll","col","getText","lines","longest","lines2","../TabDocument","./Tab/TabColumn",18,"TabCell","textElement","backgroundElement","clickElement","selectElement","createElements","tabView","createClickElement","createSelectElement","_bindEvents","allowSelect","onClick","diffNote","diffString","recalcBackground","unselect","getLeft","getRight","../BaseUI",19,"TabCell_1","tv","tc","./TabCell",20,"./ChordView","./GuitarNeck","./TabEditor",21,"lodash_1","got",22,"defaultCompare","defaultEquals","defaultToString","makeString","toret","reverseCompareFunction","compareFunction","compareToEquals","_hasOwnProperty","equalsFunction","equals","freq","array1","array2","copy","swap","lenght","firstNode","lastNode","nElements","newNode","nodeAtIndex","equalsF","currentNode","eqF","equalsAux","removeElementAtIndex","Dictionary","toStrFunction","table","toStr","getValue","pair","setValue","previousElement","containsKey","LinkedDictionaryPair","unlink","LinkedDictionary","appendToTail","entry","getLinkedDictionaryPair","oldPair","newPair","existingPair","crawlNode","MultiDictionary","valuesEqualsFunction","allowDuplicateValues","dict","allowDuplicate","Heap","compare","leftChildIndex","nodeIndex","rightChildIndex","parentIndex","minIndex","leftChild","rightChild","siftUp","siftDown","peek","removeRoot","equF","Stack","Queue","enqueue","dequeue","PriorityQueue","heap","toStringFunction","dictionary","otherSet","isSubsetOf","isSub","Bag","toStrF","nCopies","copies","vl","toSet","BSTree","insertNode","searchNode","removeNode","inorderTraversal","inorderTraversalAux","preorderTraversal","preorderTraversalAux","postorderTraversal","postorderTraversalAux","levelTraversal","levelTraversalAux","minimum","minimumAux","maximum","maximumAux","heightAux","cmp","leftCh","rightCh","transplant","signal",23,24,"_addEvent","_characterFromEvent","character","which","shiftKey","_MAP","_KEYCODE_MAP","_modifiersMatch","modifiers1","modifiers2","_eventModifiers","modifiers","altKey","ctrlKey","metaKey","_preventDefault","_stopPropagation","_isModifier","_getReverseMap","_REVERSE_MAP","_pickBestAction","_keysFromString","combination","_getKeyInfo","_SPECIAL_ALIASES","_SHIFT_MAP","_belongsTo","ancestor",27,32,33,34,35,36,37,38,39,40,45,46,91,93,224,106,107,109,110,111,186,187,188,189,190,191,192,219,220,221,222,"~","!","@","#","%","^","*","(",")","+",":","?","|","option","return","plus","mod","navigator","platform","_callbacks","_directMap","_sequenceLevels","_ignoreNextKeyup","_ignoreNextKeypress","_nextExpectedAction","_globalCallbacks","tabIndex","_handleKeyEvent","_resetSequences","doNotReset","activeSequences","_getMatches","sequenceName","level","seq","deleteCombo","combo","deleteSequence","_fireCallback","sequence","stopCallback","srcElement","_handleKey","callbacks","maxLevel","processedSequenceCallback","ignoreThisKeypress","keyCode","handleKey","_resetSequenceTimer","_resetTimer","_bindSequence","_increaseSequence","nextAction","_callbackAndReset","isFinal","wrappedCallback","_bindSingle","_bindMultiple","combinations","className","isContentEditable","bindGlobal","dispose","unpause",25,"_idx","_key","subscribers","onError","_b",26,"WellKnownChords","standardGuitar","D"],"mappings":"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","file":"main.out.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import * as G from '../../src/Index';\r\nwindow['G'] = G;\r\nlet uu = undefined;\r\n\r\nlet streetsDiv = document.getElementById('wtshnn');\r\nlet guitar = G.Guitar.GetNormalGuitar();\r\n\r\nlet gs = x=> guitar.getStrum(x);\r\n\r\nlet streets = window['streets'] = new G.TabDocument(guitar);\r\n\r\nfunction part1() {\r\n    streets.addStrum(gs([10, uu, uu, uu, uu, uu]));\r\n    streets.addStrum(gs([uu, 10, uu, uu, uu, uu]));\r\n    streets.addStrum(gs([uu, uu, 12, uu, uu, uu]));\r\n    streets.addStrum(gs([uu, uu, 11, uu, uu, uu]));\r\n    streets.addStrum(gs([uu, uu, 12, uu, uu, uu]));\r\n    streets.addStrum(gs([uu, 10, uu, uu, uu, uu]));\r\n}\r\npart1();\r\npart1();\r\npart1();\r\n\r\nlet tabView = window['tabview'] = new G.TabView(streetsDiv, streets);\r\n\r\n\r\nlet agDiv = document.getElementById('tiag');\r\n\r\nlet ag = window['ag'] = new G.TabDocument(guitar);\r\n\r\nfunction commonPart(){\r\n    ag.addStrum(gs([uu, 16, uu, uu, uu, uu]));\r\n    ag.addStrum(gs([uu, 15, uu, uu, uu, uu]));\r\n    ag.addStrum(gs([uu, 13, uu, uu, uu, uu]));\r\n    ag.addStrum(gs([uu, 15, uu, uu, uu, uu]));\r\n    ag.addStrum(gs([uu, uu, uu, uu, uu, uu]));\r\n    ag.addStrum(gs([uu, 15, uu, uu, uu, uu]));\r\n    ag.addStrum(gs([uu, 13, uu, uu, uu, uu]));\r\n    ag.addStrum(gs([uu, 15, uu, uu, uu, uu]));\r\n    ag.addStrum(gs([uu, uu, uu, uu, uu, uu]));\r\n    ag.addStrum(gs([uu, uu, 15, uu, uu, uu]));\r\n    ag.addStrum(gs([uu, 13, uu, uu, uu, uu]));\r\n    ag.addStrum(gs([uu, 15, uu, uu, uu, uu]));\r\n}\r\n\r\ncommonPart();\r\n\r\nag.addStrum(gs([13, uu, uu, uu, uu, uu]));\r\nag.addStrum(gs([15, uu, uu, uu, uu, uu]));\r\n\r\nag.addStrum(gs([uu, uu, uu, uu, uu, uu]));\r\n\r\ncommonPart();\r\n\r\nag.addStrum(gs([uu, uu, 12, uu, uu, uu]));\r\nag.addStrum(gs([uu, uu, 10, uu, uu, uu]));\r\n\r\n\r\nlet tabView2 = window['tabview2'] = new G.TabView(agDiv, ag);\r\n",null,"/**\n * @license\n * lodash 3.9.3 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern -d -o ./index.js`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '3.9.3';\n\n  /** Used to compose bitmasks for wrapper metadata. */\n  var BIND_FLAG = 1,\n      BIND_KEY_FLAG = 2,\n      CURRY_BOUND_FLAG = 4,\n      CURRY_FLAG = 8,\n      CURRY_RIGHT_FLAG = 16,\n      PARTIAL_FLAG = 32,\n      PARTIAL_RIGHT_FLAG = 64,\n      ARY_FLAG = 128,\n      REARG_FLAG = 256;\n\n  /** Used as default options for `_.trunc`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect when a function becomes hot. */\n  var HOT_COUNT = 150,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_DROP_WHILE_FLAG = 0,\n      LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2;\n\n  /** Used as the `TypeError` message for \"Functions\" methods. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      weakMapTag = '[object WeakMap]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n      reUnescapedHtml = /[&<>\"'`]/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;\n\n  /**\n   * Used to match `RegExp` [special characters](http://www.regular-expressions.info/characters.html#special).\n   * In addition to special characters the forward slash is escaped to allow for\n   * easier `eval` use and `Function` compilation.\n   */\n  var reRegExpChars = /[.*+?^${}()|[\\]\\/\\\\]/g,\n      reHasRegExpChars = RegExp(reRegExpChars.source);\n\n  /** Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks). */\n  var reComboMark = /[\\u0300-\\u036f\\ufe20-\\ufe23]/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /** Used to match [ES template delimiters](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-template-literal-lexical-components). */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect hexadecimal string values. */\n  var reHasHexPrefix = /^0[xX]/;\n\n  /** Used to detect host constructors (Safari > 5). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^\\d+$/;\n\n  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to match words to create compound words. */\n  var reWords = (function() {\n    var upper = '[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]',\n        lower = '[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+';\n\n    return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');\n  }());\n\n  /** Used to detect and test for whitespace. */\n  var whitespace = (\n    // Basic whitespace characters.\n    ' \\t\\x0b\\f\\xa0\\ufeff' +\n\n    // Line terminators.\n    '\\n\\r\\u2028\\u2029' +\n\n    // Unicode category \"Zs\" space separators.\n    '\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000'\n  );\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'ArrayBuffer', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Math', 'Number',\n    'Object', 'RegExp', 'Set', 'String', '_', 'clearTimeout', 'document',\n    'isFinite', 'parseFloat', 'parseInt', 'setTimeout', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap', 'window'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dateTag] = typedArrayTags[errorTag] =\n  typedArrayTags[funcTag] = typedArrayTags[mapTag] =\n  typedArrayTags[numberTag] = typedArrayTags[objectTag] =\n  typedArrayTags[regexpTag] = typedArrayTags[setTag] =\n  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\n  cloneableTags[dateTag] = cloneableTags[float32Tag] =\n  cloneableTags[float64Tag] = cloneableTags[int8Tag] =\n  cloneableTags[int16Tag] = cloneableTags[int32Tag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[stringTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[mapTag] = cloneableTags[setTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used as an internal `_.debounce` options object by `_.throttle`. */\n  var debounceOptions = {\n    'leading': false,\n    'maxWait': 0,\n    'trailing': false\n  };\n\n  /** Used to map latin-1 supplementary letters to basic latin letters. */\n  var deburredLetters = {\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '`': '&#96;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\",\n    '&#96;': '`'\n  };\n\n  /** Used to determine if values are of the language type `Object`. */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Detect free variable `exports`. */\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global && global.Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = objectTypes[typeof self] && self && self.Object && self;\n\n  /** Detect free variable `window`. */\n  var freeWindow = objectTypes[typeof window] && window && window.Object && window;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  /**\n   * Used as a reference to the global object.\n   *\n   * The `this` value is used if it's the global object to avoid Greasemonkey's\n   * restricted `window` object, otherwise the `window` object is used.\n   */\n  var root = freeGlobal || ((freeWindow !== (this && this.window)) && freeWindow) || freeSelf || this;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The base implementation of `compareAscending` which compares values and\n   * sorts them in ascending order without guaranteeing a stable sort.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {number} Returns the sort order indicator for `value`.\n   */\n  function baseCompareAscending(value, other) {\n    if (value !== other) {\n      var valIsNull = value === null,\n          valIsUndef = value === undefined,\n          valIsReflexive = value === value;\n\n      var othIsNull = other === null,\n          othIsUndef = other === undefined,\n          othIsReflexive = other === other;\n\n      if ((value > other && !othIsNull) || !valIsReflexive ||\n          (valIsNull && !othIsUndef && othIsReflexive) ||\n          (valIsUndef && othIsReflexive)) {\n        return 1;\n      }\n      if ((value < other && !valIsNull) || !othIsReflexive ||\n          (othIsNull && !valIsUndef && valIsReflexive) ||\n          (othIsUndef && valIsReflexive)) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromRight) {\n    var length = array.length,\n        index = fromRight ? length : -1;\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without support for binary searches.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    if (value !== value) {\n      return indexOfNaN(array, fromIndex);\n    }\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isFunction` without support for environments\n   * with incorrect `typeof` results.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n   */\n  function baseIsFunction(value) {\n    // Avoid a Chakra JIT bug in compatibility modes of IE 11.\n    // See https://github.com/jashkenas/underscore/issues/1621 for more details.\n    return typeof value == 'function' || false;\n  }\n\n  /**\n   * Converts `value` to a string if it's not one. An empty string is returned\n   * for `null` or `undefined` values.\n   *\n   * @private\n   * @param {*} value The value to process.\n   * @returns {string} Returns the string.\n   */\n  function baseToString(value) {\n    if (typeof value == 'string') {\n      return value;\n    }\n    return value == null ? '' : (value + '');\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the first character not found in `chars`.\n   */\n  function charsLeftIndex(string, chars) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the last character not found in `chars`.\n   */\n  function charsRightIndex(string, chars) {\n    var index = string.length;\n\n    while (index-- && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.sortBy` to compare transformed elements of a collection and stable\n   * sort them in ascending order.\n   *\n   * @private\n   * @param {Object} object The object to compare to `other`.\n   * @param {Object} other The object to compare to `object`.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareAscending(object, other) {\n    return baseCompareAscending(object.criteria, other.criteria) || (object.index - other.index);\n  }\n\n  /**\n   * Used by `_.sortByOrder` to compare multiple properties of each element\n   * in a collection and stable sort them in the following order:\n   *\n   * If `orders` is unspecified, sort in ascending order for all properties.\n   * Otherwise, for each property, sort in ascending order if its corresponding value in\n   * orders is true, and descending order if false.\n   *\n   * @private\n   * @param {Object} object The object to compare to `other`.\n   * @param {Object} other The object to compare to `object`.\n   * @param {boolean[]} orders The order to sort by for each property.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareMultiple(object, other, orders) {\n    var index = -1,\n        objCriteria = object.criteria,\n        othCriteria = other.criteria,\n        length = objCriteria.length,\n        ordersLength = orders.length;\n\n    while (++index < length) {\n      var result = baseCompareAscending(objCriteria[index], othCriteria[index]);\n      if (result) {\n        if (index >= ordersLength) {\n          return result;\n        }\n        return result * (orders[index] ? 1 : -1);\n      }\n    }\n    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n    // that causes it, under certain circumstances, to provide the same value for\n    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n    // for more details.\n    //\n    // This also ensures a stable sort in V8 and other engines.\n    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n    return object.index - other.index;\n  }\n\n  /**\n   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  function deburrLetter(letter) {\n    return deburredLetters[letter];\n  }\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeHtmlChar(chr) {\n    return htmlEscapes[chr];\n  }\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled\n   * string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n   */\n  function indexOfNaN(array, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 0 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var other = array[index];\n      if (other !== other) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Checks if `value` is object-like.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   */\n  function isObjectLike(value) {\n    return !!value && typeof value == 'object';\n  }\n\n  /**\n   * Used by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a\n   * character code is whitespace.\n   *\n   * @private\n   * @param {number} charCode The character code to inspect.\n   * @returns {boolean} Returns `true` if `charCode` is whitespace, else `false`.\n   */\n  function isSpace(charCode) {\n    return ((charCode <= 160 && (charCode >= 9 && charCode <= 13) || charCode == 32 || charCode == 160) || charCode == 5760 || charCode == 6158 ||\n      (charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279)));\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      if (array[index] === placeholder) {\n        array[index] = PLACEHOLDER;\n        result[++resIndex] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * An implementation of `_.uniq` optimized for sorted arrays without support\n   * for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} [iteratee] The function invoked per iteration.\n   * @returns {Array} Returns the new duplicate-value-free array.\n   */\n  function sortedUniq(array, iteratee) {\n    var seen,\n        index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index],\n          computed = iteratee ? iteratee(value, index, array) : value;\n\n      if (!index || seen !== computed) {\n        seen = computed;\n        result[++resIndex] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the first non-whitespace character.\n   */\n  function trimmedLeftIndex(string) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n  function trimmedRightIndex(string) {\n    var index = string.length;\n\n    while (index-- && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  function unescapeHtmlChar(chr) {\n    return htmlUnescapes[chr];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the given `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Utility\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // using `context` to mock `Date#getTime` use in `_.now`\n   * var mock = _.runInContext({\n   *   'Date': function() {\n   *     return { 'getTime': getTimeMock };\n   *   }\n   * });\n   *\n   * // or creating a suped-up `defer` in Node.js\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  function runInContext(context) {\n    // Avoid issues with some ES3 environments that attempt to use values, named\n    // after built-in constructors like `Object`, for the creation of literals.\n    // ES5 clears this up by stating that literals must use built-in constructors.\n    // See https://es5.github.io/#x11.1.5 for more details.\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\n    /** Native constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Number = context.Number,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for native method references. */\n    var arrayProto = Array.prototype,\n        objectProto = Object.prototype,\n        stringProto = String.prototype;\n\n    /** Used to detect DOM support. */\n    var document = (document = context.window) ? document.document : null;\n\n    /** Used to resolve the decompiled source of functions. */\n    var fnToString = Function.prototype.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /**\n     * Used to resolve the [`toStringTag`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n     * of values.\n     */\n    var objToString = objectProto.toString;\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = context._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      escapeRegExp(fnToString.call(hasOwnProperty))\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Native method references. */\n    var ArrayBuffer = getNative(context, 'ArrayBuffer'),\n        bufferSlice = getNative(ArrayBuffer && new ArrayBuffer(0), 'slice'),\n        ceil = Math.ceil,\n        clearTimeout = context.clearTimeout,\n        floor = Math.floor,\n        getPrototypeOf = getNative(Object, 'getPrototypeOf'),\n        parseFloat = context.parseFloat,\n        push = arrayProto.push,\n        Set = getNative(context, 'Set'),\n        setTimeout = context.setTimeout,\n        splice = arrayProto.splice,\n        Uint8Array = getNative(context, 'Uint8Array'),\n        WeakMap = getNative(context, 'WeakMap');\n\n    /** Used to clone array buffers. */\n    var Float64Array = (function() {\n      // Safari 5 errors when using an array buffer to initialize a typed array\n      // where the array buffer's `byteLength` is not a multiple of the typed\n      // array's `BYTES_PER_ELEMENT`.\n      try {\n        var func = getNative(context, 'Float64Array'),\n            result = new func(new ArrayBuffer(10), 0, 1) && func;\n      } catch(e) {}\n      return result || null;\n    }());\n\n    /* Native method references for those with the same name as other `lodash` methods. */\n    var nativeCreate = getNative(Object, 'create'),\n        nativeIsArray = getNative(Array, 'isArray'),\n        nativeIsFinite = context.isFinite,\n        nativeKeys = getNative(Object, 'keys'),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = getNative(Date, 'now'),\n        nativeNumIsFinite = getNative(Number, 'isFinite'),\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random;\n\n    /** Used as references for `-Infinity` and `Infinity`. */\n    var NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY,\n        POSITIVE_INFINITY = Number.POSITIVE_INFINITY;\n\n    /** Used as references for the maximum length and index of an array. */\n    var MAX_ARRAY_LENGTH = 4294967295,\n        MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n    /** Used as the size, in bytes, of each `Float64Array` element. */\n    var FLOAT64_BYTES_PER_ELEMENT = Float64Array ? Float64Array.BYTES_PER_ELEMENT : 0;\n\n    /**\n     * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n     * of an array-like value.\n     */\n    var MAX_SAFE_INTEGER = 9007199254740991;\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit chaining.\n     * Methods that operate on and return arrays, collections, and functions can\n     * be chained together. Methods that return a boolean or single value will\n     * automatically end the chain returning the unwrapped value. Explicit chaining\n     * may be enabled using `_.chain`. The execution of chained methods is lazy,\n     * that is, execution is deferred until `_#value` is implicitly or explicitly\n     * called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n     * fusion is an optimization that merges iteratees to avoid creating intermediate\n     * arrays and reduce the number of iteratee executions.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`,\n     * `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`,\n     * `first`, `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`,\n     * `slice`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `toArray`,\n     * and `where`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n     * `callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, `constant`,\n     * `countBy`, `create`, `curry`, `debounce`, `defaults`, `defer`, `delay`,\n     * `difference`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `fill`,\n     * `filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`, `forEach`,\n     * `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `functions`,\n     * `groupBy`, `indexBy`, `initial`, `intersection`, `invert`, `invoke`, `keys`,\n     * `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `method`, `methodOf`, `mixin`, `negate`, `omit`, `once`,\n     * `pairs`, `partial`, `partialRight`, `partition`, `pick`, `plant`, `pluck`,\n     * `property`, `propertyOf`, `pull`, `pullAt`, `push`, `range`, `rearg`,\n     * `reject`, `remove`, `rest`, `restParam`, `reverse`, `set`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `sortByAll`, `sortByOrder`, `splice`, `spread`,\n     * `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `tap`, `throttle`,\n     * `thru`, `times`, `toArray`, `toPlainObject`, `transform`, `union`, `uniq`,\n     * `unshift`, `unzip`, `unzipWith`, `values`, `valuesIn`, `where`, `without`,\n     * `wrap`, `xor`, `zip`, `zipObject`, `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `clone`, `cloneDeep`, `deburr`,\n     * `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`,\n     * `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`, `get`,\n     * `gt`, `gte`, `has`, `identity`, `includes`, `indexOf`, `inRange`, `isArguments`,\n     * `isArray`, `isBoolean`, `isDate`, `isElement`, `isEmpty`, `isEqual`, `isError`,\n     * `isFinite` `isFunction`, `isMatch`, `isNative`, `isNaN`, `isNull`, `isNumber`,\n     * `isObject`, `isPlainObject`, `isRegExp`, `isString`, `isUndefined`,\n     * `isTypedArray`, `join`, `kebabCase`, `last`, `lastIndexOf`, `lt`, `lte`,\n     * `max`, `min`, `noConflict`, `noop`, `now`, `pad`, `padLeft`, `padRight`,\n     * `parseInt`, `pop`, `random`, `reduce`, `reduceRight`, `repeat`, `result`,\n     * `runInContext`, `shift`, `size`, `snakeCase`, `some`, `sortedIndex`,\n     * `sortedLastIndex`, `startCase`, `startsWith`, `sum`, `template`, `trim`,\n     * `trimLeft`, `trimRight`, `trunc`, `unescape`, `uniqueId`, `value`, and `words`\n     *\n     * The wrapper method `sample` will return a wrapped value when `n` is provided,\n     * otherwise an unwrapped value is returned.\n     *\n     * @name _\n     * @constructor\n     * @category Chain\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // returns an unwrapped value\n     * wrapped.reduce(function(total, n) {\n     *   return total + n;\n     * });\n     * // => 6\n     *\n     * // returns a wrapped value\n     * var squares = wrapped.map(function(n) {\n     *   return n * n;\n     * });\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__chain__') && hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The function whose prototype all chaining wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n     * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.\n     */\n    function LodashWrapper(value, chainAll, actions) {\n      this.__wrapped__ = value;\n      this.__actions__ = actions || [];\n      this.__chain__ = !!chainAll;\n    }\n\n    /**\n     * An object environment feature flags.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    var support = lodash.support = {};\n\n    (function(x) {\n      var Ctor = function() { this.x = x; },\n          object = { '0': x, 'length': x },\n          props = [];\n\n      Ctor.prototype = { 'valueOf': x, 'y': x };\n      for (var key in new Ctor) { props.push(key); }\n\n      /**\n       * Detect if the DOM is supported.\n       *\n       * @memberOf _.support\n       * @type boolean\n       */\n      try {\n        support.dom = document.createDocumentFragment().nodeType === 11;\n      } catch(e) {\n        support.dom = false;\n      }\n    }(1, 0));\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type string\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type Object\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type Function\n         */\n        '_': lodash\n      }\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = null;\n      this.__dir__ = 1;\n      this.__dropCount__ = 0;\n      this.__filtered__ = false;\n      this.__iteratees__ = null;\n      this.__takeCount__ = POSITIVE_INFINITY;\n      this.__views__ = null;\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var actions = this.__actions__,\n          iteratees = this.__iteratees__,\n          views = this.__views__,\n          result = new LazyWrapper(this.__wrapped__);\n\n      result.__actions__ = actions ? arrayCopy(actions) : null;\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = iteratees ? arrayCopy(iteratees) : null;\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = views ? arrayCopy(views) : null;\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value();\n      if (!isArray(array)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var dir = this.__dir__,\n          isRight = dir < 0,\n          view = getView(0, array.length, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          takeCount = nativeMin(length, this.__takeCount__),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees ? iteratees.length : 0,\n          resIndex = 0,\n          result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type;\n\n          if (type == LAZY_DROP_WHILE_FLAG) {\n            if (data.done && (isRight ? (index > data.index) : (index < data.index))) {\n              data.count = 0;\n              data.done = false;\n            }\n            data.index = index;\n            if (!data.done) {\n              var limit = data.limit;\n              if (!(data.done = limit > -1 ? (data.count++ >= limit) : !iteratee(value))) {\n                continue outer;\n              }\n            }\n          } else {\n            var computed = iteratee(value);\n            if (type == LAZY_MAP_FLAG) {\n              value = computed;\n            } else if (!computed) {\n              if (type == LAZY_FILTER_FLAG) {\n                continue outer;\n              } else {\n                break outer;\n              }\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a cache object to store key/value pairs.\n     *\n     * @private\n     * @static\n     * @name Cache\n     * @memberOf _.memoize\n     */\n    function MapCache() {\n      this.__data__ = {};\n    }\n\n    /**\n     * Removes `key` and its value from the cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed successfully, else `false`.\n     */\n    function mapDelete(key) {\n      return this.has(key) && delete this.__data__[key];\n    }\n\n    /**\n     * Gets the cached value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the cached value.\n     */\n    function mapGet(key) {\n      return key == '__proto__' ? undefined : this.__data__[key];\n    }\n\n    /**\n     * Checks if a cached value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapHas(key) {\n      return key != '__proto__' && hasOwnProperty.call(this.__data__, key);\n    }\n\n    /**\n     * Sets `value` to `key` of the cache.\n     *\n     * @private\n     * @name set\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to cache.\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache object.\n     */\n    function mapSet(key, value) {\n      if (key != '__proto__') {\n        this.__data__[key] = value;\n      }\n      return this;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates a cache object to store unique values.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var length = values ? values.length : 0;\n\n      this.data = { 'hash': nativeCreate(null), 'set': new Set };\n      while (length--) {\n        this.push(values[length]);\n      }\n    }\n\n    /**\n     * Checks if `value` is in `cache` mimicking the return signature of\n     * `_.indexOf` by returning `0` if the value is found, else `-1`.\n     *\n     * @private\n     * @param {Object} cache The cache to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `0` if `value` is found, else `-1`.\n     */\n    function cacheIndexOf(cache, value) {\n      var data = cache.data,\n          result = (typeof value == 'string' || isObject(value)) ? data.set.has(value) : data.hash[value];\n\n      return result ? 0 : -1;\n    }\n\n    /**\n     * Adds `value` to the cache.\n     *\n     * @private\n     * @name push\n     * @memberOf SetCache\n     * @param {*} value The value to cache.\n     */\n    function cachePush(value) {\n      var data = this.data;\n      if (typeof value == 'string' || isObject(value)) {\n        data.set.add(value);\n      } else {\n        data.hash[value] = true;\n      }\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayCopy(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEach` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEach(array, iteratee) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (iteratee(array[index], index, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEachRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEachRight(array, iteratee) {\n      var length = array.length;\n\n      while (length--) {\n        if (iteratee(array[length], length, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.every` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     */\n    function arrayEvery(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (!predicate(array[index], index, array)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `baseExtremum` for arrays which invokes `iteratee`\n     * with one argument: (value).\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function arrayExtremum(array, iteratee, comparator, exValue) {\n      var index = -1,\n          length = array.length,\n          computed = exValue,\n          result = computed;\n\n      while (++index < length) {\n        var value = array[index],\n            current = +iteratee(value);\n\n        if (comparator(current, computed)) {\n          computed = current;\n          result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.filter` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function arrayFilter(array, predicate) {\n      var index = -1,\n          length = array.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.map` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function arrayMap(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = iteratee(array[index], index, array);\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.reduce` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the first element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduce(array, iteratee, accumulator, initFromArray) {\n      var index = -1,\n          length = array.length;\n\n      if (initFromArray && length) {\n        accumulator = array[++index];\n      }\n      while (++index < length) {\n        accumulator = iteratee(accumulator, array[index], index, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.reduceRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the last element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduceRight(array, iteratee, accumulator, initFromArray) {\n      var length = array.length;\n      if (initFromArray && length) {\n        accumulator = array[--length];\n      }\n      while (length--) {\n        accumulator = iteratee(accumulator, array[length], length, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.some` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function arraySome(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (predicate(array[index], index, array)) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `_.sum` for arrays without support for iteratees.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     */\n    function arraySum(array) {\n      var length = array.length,\n          result = 0;\n\n      while (length--) {\n        result += +array[length] || 0;\n      }\n      return result;\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assign` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : objectValue;\n    }\n\n    /**\n     * Used by `_.template` to customize its `_.assign` use.\n     *\n     * **Note:** This function is like `assignDefaults` except that it ignores\n     * inherited property values when checking if a property is `undefined`.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @param {string} key The key associated with the object and source values.\n     * @param {Object} object The destination object.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignOwnDefaults(objectValue, sourceValue, key, object) {\n      return (objectValue === undefined || !hasOwnProperty.call(object, key))\n        ? sourceValue\n        : objectValue;\n    }\n\n    /**\n     * A specialized version of `_.assign` for customizing assigned values without\n     * support for argument juggling, multiple sources, and `this` binding `customizer`\n     * functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     */\n    function assignWith(object, source, customizer) {\n      var index = -1,\n          props = keys(source),\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key],\n            result = customizer(value, source[key], key, object, source);\n\n        if ((result === result ? (result !== value) : (value === value)) ||\n            (value === undefined && !(key in object))) {\n          object[key] = result;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for argument juggling,\n     * multiple sources, and `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return source == null\n        ? object\n        : baseCopy(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.at` without support for string collections\n     * and individual key arguments.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {number[]|string[]} props The property names or indexes of elements to pick.\n     * @returns {Array} Returns the new array of picked elements.\n     */\n    function baseAt(collection, props) {\n      var index = -1,\n          isNil = collection == null,\n          isArr = !isNil && isArrayLike(collection),\n          length = isArr ? collection.length : 0,\n          propsLength = props.length,\n          result = Array(propsLength);\n\n      while(++index < propsLength) {\n        var key = props[index];\n        if (isArr) {\n          result[index] = isIndex(key, length) ? collection[key] : undefined;\n        } else {\n          result[index] = isNil ? undefined : collection[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property names to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @returns {Object} Returns `object`.\n     */\n    function baseCopy(source, props, object) {\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n        object[key] = source[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.callback` which supports specifying the\n     * number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function baseCallback(func, thisArg, argCount) {\n      var type = typeof func;\n      if (type == 'function') {\n        return thisArg === undefined\n          ? func\n          : bindCallback(func, thisArg, argCount);\n      }\n      if (func == null) {\n        return identity;\n      }\n      if (type == 'object') {\n        return baseMatches(func);\n      }\n      return thisArg === undefined\n        ? property(func)\n        : baseMatchesProperty(func, thisArg);\n    }\n\n    /**\n     * The base implementation of `_.clone` without support for argument juggling\n     * and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The object `value` belongs to.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n      var result;\n      if (customizer) {\n        result = object ? customizer(value, key, object) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return arrayCopy(value, result);\n        }\n      } else {\n        var tag = objToString.call(value),\n            isFunc = tag == funcTag;\n\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = initCloneObject(isFunc ? {} : value);\n          if (!isDeep) {\n            return baseAssign(result, value);\n          }\n        } else {\n          return cloneableTags[tag]\n            ? initCloneByTag(value, tag, isDeep)\n            : (object ? value : {});\n        }\n      }\n      // Check for circular references and return corresponding clone.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == value) {\n          return stackB[length];\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate it with its clone.\n      stackA.push(value);\n      stackB.push(result);\n\n      // Recursively populate clone (susceptible to call stack limits).\n      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n        result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(prototype) {\n        if (isObject(prototype)) {\n          object.prototype = prototype;\n          var result = new object;\n          object.prototype = null;\n        }\n        return result || {};\n      };\n    }());\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts an index\n     * of where to slice the arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Object} args The arguments provide to `func`.\n     * @returns {number} Returns the timer id.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of `_.difference` which accepts a single array\n     * of values to exclude.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values) {\n      var length = array ? array.length : 0,\n          result = [];\n\n      if (!length) {\n        return result;\n      }\n      var index = -1,\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          cache = (isCommon && values.length >= 200) ? createCache(values) : null,\n          valuesLength = values.length;\n\n      if (cache) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n        values = cache;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index];\n\n        if (isCommon && value === value) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === value) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (indexOf(values, value, 0) < 0) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * Gets the extremum value of `collection` invoking `iteratee` for each value\n     * in `collection` to generate the criterion by which the value is ranked.\n     * The `iteratee` is invoked with three arguments: (value, index|key, collection).\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(collection, iteratee, comparator, exValue) {\n      var computed = exValue,\n          result = computed;\n\n      baseEach(collection, function(value, index, collection) {\n        var current = +iteratee(value, index, collection);\n        if (comparator(current, computed) || (current === exValue && current === result)) {\n          computed = current;\n          result = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : (end >>> 0);\n      start >>>= 0;\n\n      while (start < length) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n     * without support for callback shorthands and `this` binding, which iterates\n     * over `collection` using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @param {boolean} [retKey] Specify returning the key of the found element\n     *  instead of the element itself.\n     * @returns {*} Returns the found element or its key, else `undefined`.\n     */\n    function baseFind(collection, predicate, eachFunc, retKey) {\n      var result;\n      eachFunc(collection, function(value, key, collection) {\n        if (predicate(value, key, collection)) {\n          result = retKey ? key : value;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with added support for restricting\n     * flattening and specifying the start index.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, isDeep, isStrict) {\n      var index = -1,\n          length = array.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (isObjectLike(value) && isArrayLike(value) &&\n            (isStrict || isArray(value) || isArguments(value))) {\n          if (isDeep) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            value = baseFlatten(value, isDeep, isStrict);\n          }\n          var valIndex = -1,\n              valLength = value.length;\n\n          while (++valIndex < valLength) {\n            result[++resIndex] = value[valIndex];\n          }\n        } else if (!isStrict) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n     * each property. Iteratee functions may exit iteration early by explicitly\n     * returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forIn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForIn(object, iteratee) {\n      return baseFor(object, iteratee, keysIn);\n    }\n\n    /**\n     * The base implementation of `_.forOwn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from those provided.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the new array of filtered property names.\n     */\n    function baseFunctions(object, props) {\n      var index = -1,\n          length = props.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var key = props[index];\n        if (isFunction(object[key])) {\n          result[++resIndex] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `get` without support for string paths\n     * and default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path of the property to get.\n     * @param {string} [pathKey] The key representation of path.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path, pathKey) {\n      if (object == null) {\n        return;\n      }\n      if (pathKey !== undefined && pathKey in toObject(object)) {\n        path = [pathKey];\n      }\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[path[index++]];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` without support for `this` binding\n     * `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n     * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = objToString.call(object);\n        if (objTag == argsTag) {\n          objTag = objectTag;\n        } else if (objTag != objectTag) {\n          objIsArr = isTypedArray(object);\n        }\n      }\n      if (!othIsArr) {\n        othTag = objToString.call(other);\n        if (othTag == argsTag) {\n          othTag = objectTag;\n        } else if (othTag != objectTag) {\n          othIsArr = isTypedArray(other);\n        }\n      }\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && !(objIsArr || objIsObj)) {\n        return equalByTag(object, other, objTag);\n      }\n      if (!isLoose) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      // For more information on detecting circular references see https://es5.github.io/#JO.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == object) {\n          return stackB[length] == other;\n        }\n      }\n      // Add `object` and `other` to the stack of traversed objects.\n      stackA.push(object);\n      stackB.push(other);\n\n      var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);\n\n      stackA.pop();\n      stackB.pop();\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} matchData The propery names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = toObject(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var result = customizer ? customizer(objValue, srcValue, key) : undefined;\n          if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which does not clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        var key = matchData[0][0],\n            value = matchData[0][1];\n\n        return function(object) {\n          if (object == null) {\n            return false;\n          }\n          return object[key] === value && (value !== undefined || (key in toObject(object)));\n        };\n      }\n      return function(object) {\n        return baseIsMatch(object, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which does not clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to compare.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      var isArr = isArray(path),\n          isCommon = isKey(path) && isStrictComparable(srcValue),\n          pathKey = (path + '');\n\n      path = toPath(path);\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        var key = pathKey;\n        object = toObject(object);\n        if ((isArr || !isCommon) && !(key in object)) {\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          if (object == null) {\n            return false;\n          }\n          key = last(path);\n          object = toObject(object);\n        }\n        return object[key] === srcValue\n          ? (srcValue !== undefined || (key in object))\n          : baseIsEqual(srcValue, object[key], undefined, true);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for argument juggling,\n     * multiple sources, and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} [customizer] The function to customize merging properties.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {Object} Returns `object`.\n     */\n    function baseMerge(object, source, customizer, stackA, stackB) {\n      if (!isObject(object)) {\n        return object;\n      }\n      var isSrcArr = isArrayLike(source) && (isArray(source) || isTypedArray(source)),\n          props = isSrcArr ? null : keys(source);\n\n      arrayEach(props || source, function(srcValue, key) {\n        if (props) {\n          key = srcValue;\n          srcValue = source[key];\n        }\n        if (isObjectLike(srcValue)) {\n          stackA || (stackA = []);\n          stackB || (stackB = []);\n          baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n        }\n        else {\n          var value = object[key],\n              result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n              isCommon = result === undefined;\n\n          if (isCommon) {\n            result = srcValue;\n          }\n          if ((result !== undefined || (isSrcArr && !(key in object))) &&\n              (isCommon || (result === result ? (result !== value) : (value === value)))) {\n            object[key] = result;\n          }\n        }\n      });\n      return object;\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize merging properties.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n      var length = stackA.length,\n          srcValue = source[key];\n\n      while (length--) {\n        if (stackA[length] == srcValue) {\n          object[key] = stackB[length];\n          return;\n        }\n      }\n      var value = object[key],\n          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n          isCommon = result === undefined;\n\n      if (isCommon) {\n        result = srcValue;\n        if (isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))) {\n          result = isArray(value)\n            ? value\n            : (isArrayLike(value) ? arrayCopy(value) : []);\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          result = isArguments(value)\n            ? toPlainObject(value)\n            : (isPlainObject(value) ? value : {});\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate\n      // it with its merged value.\n      stackA.push(srcValue);\n      stackB.push(result);\n\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n      } else if (result === result ? (result !== value) : (value === value)) {\n        object[key] = result;\n      }\n    }\n\n    /**\n     * The base implementation of `_.property` without support for deep paths.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function baseProperty(key) {\n      return function(object) {\n        return object == null ? undefined : object[key];\n      };\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function basePropertyDeep(path) {\n      var pathKey = (path + '');\n      path = toPath(path);\n      return function(object) {\n        return baseGet(object, path, pathKey);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * index arguments and capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0;\n      while (length--) {\n        var index = indexes[length];\n        if (index != previous && isIndex(index)) {\n          var previous = index;\n          splice.call(array, index, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for argument juggling\n     * and returning floating-point numbers.\n     *\n     * @private\n     * @param {number} min The minimum possible value.\n     * @param {number} max The maximum possible value.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(min, max) {\n      return min + floor(nativeRandom() * (max - min + 1));\n    }\n\n    /**\n     * The base implementation of `_.reduce` and `_.reduceRight` without support\n     * for callback shorthands and `this` binding, which iterates over `collection`\n     * using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} accumulator The initial value.\n     * @param {boolean} initFromCollection Specify using the first or last element\n     *  of `collection` as the initial value.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @returns {*} Returns the accumulated value.\n     */\n    function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {\n      eachFunc(collection, function(value, index, collection) {\n        accumulator = initFromCollection\n          ? (initFromCollection = false, value)\n          : iteratee(accumulator, value, index, collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop detection.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortBy` which uses `comparer` to define\n     * the sort order of `array` and replaces criteria objects with their\n     * corresponding values.\n     *\n     * @private\n     * @param {Array} array The array to sort.\n     * @param {Function} comparer The function to define sort order.\n     * @returns {Array} Returns `array`.\n     */\n    function baseSortBy(array, comparer) {\n      var length = array.length;\n\n      array.sort(comparer);\n      while (length--) {\n        array[length] = array[length].value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.sortByOrder` without param guards.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseSortByOrder(collection, iteratees, orders) {\n      var callback = getCallback(),\n          index = -1;\n\n      iteratees = arrayMap(iteratees, function(iteratee) { return callback(iteratee); });\n\n      var result = baseMap(collection, function(value) {\n        var criteria = arrayMap(iteratees, function(iteratee) { return iteratee(value); });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.sum` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n    function baseSum(collection, iteratee) {\n      var result = 0;\n      baseEach(collection, function(value, index, collection) {\n        result += +iteratee(value, index, collection) || 0;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.uniq` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The function invoked per iteration.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     */\n    function baseUniq(array, iteratee) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = array.length,\n          isCommon = indexOf == baseIndexOf,\n          isLarge = isCommon && length >= 200,\n          seen = isLarge ? createCache() : null,\n          result = [];\n\n      if (seen) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n      } else {\n        isLarge = false;\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value, index, array) : value;\n\n        if (isCommon && value === value) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (indexOf(seen, computed, 0) < 0) {\n          if (iteratee || isLarge) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.values` and `_.valuesIn` which creates an\n     * array of `object` property values corresponding to the property names\n     * of `props`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} props The property names to get values for.\n     * @returns {Object} Returns the array of property values.\n     */\n    function baseValues(object, props) {\n      var index = -1,\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = object[props[index]];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.dropRightWhile`, `_.dropWhile`, `_.takeRightWhile`,\n     * and `_.takeWhile` without support for callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to peform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      var index = -1,\n          length = actions.length;\n\n      while (++index < length) {\n        var args = [result],\n            action = actions[index];\n\n        push.apply(args, action.args);\n        result = action.func.apply(action.thisArg, args);\n      }\n      return result;\n    }\n\n    /**\n     * Performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndex(array, value, retHighest) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if ((retHighest ? (computed <= value) : (computed < value)) && computed !== null) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return binaryIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * This function is like `binaryIndex` except that it invokes `iteratee` for\n     * `value` and each element of `array` to compute their sort ranking. The\n     * iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array ? array.length : 0,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsUndef = value === undefined;\n\n      while (low < high) {\n        var mid = floor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            isDef = computed !== undefined,\n            isReflexive = computed === computed;\n\n        if (valIsNaN) {\n          var setLow = isReflexive || retHighest;\n        } else if (valIsNull) {\n          setLow = isReflexive && isDef && (retHighest || computed != null);\n        } else if (valIsUndef) {\n          setLow = isReflexive && (retHighest || isDef);\n        } else if (computed == null) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * A specialized version of `baseCallback` which only supports `this` binding\n     * and specifying the number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function bindCallback(func, thisArg, argCount) {\n      if (typeof func != 'function') {\n        return identity;\n      }\n      if (thisArg === undefined) {\n        return func;\n      }\n      switch (argCount) {\n        case 1: return function(value) {\n          return func.call(thisArg, value);\n        };\n        case 3: return function(value, index, collection) {\n          return func.call(thisArg, value, index, collection);\n        };\n        case 4: return function(accumulator, value, index, collection) {\n          return func.call(thisArg, accumulator, value, index, collection);\n        };\n        case 5: return function(value, other, key, object, source) {\n          return func.call(thisArg, value, other, key, object, source);\n        };\n      }\n      return function() {\n        return func.apply(thisArg, arguments);\n      };\n    }\n\n    /**\n     * Creates a clone of the given array buffer.\n     *\n     * @private\n     * @param {ArrayBuffer} buffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function bufferClone(buffer) {\n      return bufferSlice.call(buffer, 0);\n    }\n    if (!bufferSlice) {\n      // PhantomJS has `ArrayBuffer` and `Uint8Array` but not `Float64Array`.\n      bufferClone = !(ArrayBuffer && Uint8Array) ? constant(null) : function(buffer) {\n        var byteLength = buffer.byteLength,\n            floatLength = Float64Array ? floor(byteLength / FLOAT64_BYTES_PER_ELEMENT) : 0,\n            offset = floatLength * FLOAT64_BYTES_PER_ELEMENT,\n            result = new ArrayBuffer(byteLength);\n\n        if (floatLength) {\n          var view = new Float64Array(result, 0, floatLength);\n          view.set(new Float64Array(buffer, 0, floatLength));\n        }\n        if (byteLength != offset) {\n          view = new Uint8Array(result, offset);\n          view.set(new Uint8Array(buffer, offset));\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders) {\n      var holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          leftIndex = -1,\n          leftLength = partials.length,\n          result = Array(argsLength + leftLength);\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        result[holders[argsIndex]] = args[argsIndex];\n      }\n      while (argsLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders) {\n      var holdersIndex = -1,\n          holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          rightIndex = -1,\n          rightLength = partials.length,\n          result = Array(argsLength + rightLength);\n\n      while (++argsIndex < argsLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        result[offset + holders[holdersIndex]] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * Creates a function that aggregates a collection, creating an accumulator\n     * object composed from the results of running each element in the collection\n     * through an iteratee.\n     *\n     * **Note:** This function is used to create `_.countBy`, `_.groupBy`, `_.indexBy`,\n     * and `_.partition`.\n     *\n     * @private\n     * @param {Function} setter The function to set keys and values of the accumulator object.\n     * @param {Function} [initializer] The function to initialize the accumulator object.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee, thisArg) {\n        var result = initializer ? initializer() : {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        if (isArray(collection)) {\n          var index = -1,\n              length = collection.length;\n\n          while (++index < length) {\n            var value = collection[index];\n            setter(result, value, iteratee(value, index, collection), collection);\n          }\n        } else {\n          baseEach(collection, function(value, key, collection) {\n            setter(result, value, iteratee(value, key, collection), collection);\n          });\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that assigns properties of source object(s) to a given\n     * destination object.\n     *\n     * **Note:** This function is used to create `_.assign`, `_.defaults`, and `_.merge`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return restParam(function(object, sources) {\n        var index = -1,\n            length = object == null ? 0 : sources.length,\n            customizer = length > 2 ? sources[length - 2] : undefined,\n            guard = length > 2 ? sources[2] : undefined,\n            thisArg = length > 1 ? sources[length - 1] : undefined;\n\n        if (typeof customizer == 'function') {\n          customizer = bindCallback(customizer, thisArg, 5);\n          length -= 2;\n        } else {\n          customizer = typeof thisArg == 'function' ? thisArg : undefined;\n          length -= (customizer ? 1 : 0);\n        }\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        var length = collection ? getLength(collection) : 0;\n        if (!isLength(length)) {\n          return eachFunc(collection, iteratee);\n        }\n        var index = fromRight ? length : -1,\n            iterable = toObject(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var iterable = toObject(object),\n            props = keysFunc(object),\n            length = props.length,\n            index = fromRight ? length : -1;\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var key = props[index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createBindWrapper(func, thisArg) {\n      var Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(thisArg, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `Set` cache object to optimize linear searches of large arrays.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.\n     */\n    var createCache = !(nativeCreate && Set) ? constant(null) : function(values) {\n      return new SetCache(values);\n    };\n\n    /**\n     * Creates a function that produces compound words out of the words in a\n     * given string.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        var index = -1,\n            array = words(deburr(string)),\n            length = array.length,\n            result = '';\n\n        while (++index < length) {\n          result = callback(result, array[index], index);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtorWrapper(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors.\n        // See https://people.mozilla.org/~jorendorff/es6-draft.html#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a `_.curry` or `_.curryRight` function.\n     *\n     * @private\n     * @param {boolean} flag The curry bit flag.\n     * @returns {Function} Returns the new curry function.\n     */\n    function createCurry(flag) {\n      function curryFunc(func, arity, guard) {\n        if (guard && isIterateeCall(func, arity, guard)) {\n          arity = null;\n        }\n        var result = createWrapper(func, flag, null, null, null, null, null, arity);\n        result.placeholder = curryFunc.placeholder;\n        return result;\n      }\n      return curryFunc;\n    }\n\n    /**\n     * Creates a `_.max` or `_.min` function.\n     *\n     * @private\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {Function} Returns the new extremum function.\n     */\n    function createExtremum(comparator, exValue) {\n      return function(collection, iteratee, thisArg) {\n        if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n          iteratee = null;\n        }\n        iteratee = getCallback(iteratee, thisArg, 3);\n        if (iteratee.length == 1) {\n          collection = toIterable(collection);\n          var result = arrayExtremum(collection, iteratee, comparator, exValue);\n          if (!(collection.length && result === exValue)) {\n            return result;\n          }\n        }\n        return baseExtremum(collection, iteratee, comparator, exValue);\n      };\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(eachFunc, fromRight) {\n      return function(collection, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        if (isArray(collection)) {\n          var index = baseFindIndex(collection, predicate, fromRight);\n          return index > -1 ? collection[index] : undefined;\n        }\n        return baseFind(collection, predicate, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a `_.findIndex` or `_.findLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindIndex(fromRight) {\n      return function(array, predicate, thisArg) {\n        if (!(array && array.length)) {\n          return -1;\n        }\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFindIndex(array, predicate, fromRight);\n      };\n    }\n\n    /**\n     * Creates a `_.findKey` or `_.findLastKey` function.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindKey(objectFunc) {\n      return function(object, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFind(object, predicate, objectFunc, true);\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return function() {\n        var wrapper,\n            length = arguments.length,\n            index = fromRight ? length : -1,\n            leftIndex = 0,\n            funcs = Array(length);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var func = funcs[leftIndex++] = arguments[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (!wrapper && LodashWrapper.prototype.thru && getFuncName(func) == 'wrapper') {\n            wrapper = new LodashWrapper([]);\n          }\n        }\n        index = wrapper ? -1 : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : null;\n\n          if (data && isLaziable(data[0]) && data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) && !data[4].length && data[9] == 1) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments;\n          if (wrapper && args.length == 1 && isArray(args[0])) {\n            return wrapper.plant(args[0]).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : args[0];\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      };\n    }\n\n    /**\n     * Creates a function for `_.forEach` or `_.forEachRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForEach(arrayFunc, eachFunc) {\n      return function(collection, iteratee, thisArg) {\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee)\n          : eachFunc(collection, bindCallback(iteratee, thisArg, 3));\n      };\n    }\n\n    /**\n     * Creates a function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForIn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee, keysIn);\n      };\n    }\n\n    /**\n     * Creates a function for `_.forOwn` or `_.forOwnRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForOwn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee);\n      };\n    }\n\n    /**\n     * Creates a function for `_.mapKeys` or `_.mapValues`.\n     *\n     * @private\n     * @param {boolean} [isMapKeys] Specify mapping keys instead of values.\n     * @returns {Function} Returns the new map function.\n     */\n    function createObjectMapper(isMapKeys) {\n      return function(object, iteratee, thisArg) {\n        var result = {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        baseForOwn(object, function(value, key, object) {\n          var mapped = iteratee(value, key, object);\n          key = isMapKeys ? mapped : key;\n          value = isMapKeys ? value : mapped;\n          result[key] = value;\n        });\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function for `_.padLeft` or `_.padRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify padding from the right.\n     * @returns {Function} Returns the new pad function.\n     */\n    function createPadDir(fromRight) {\n      return function(string, length, chars) {\n        string = baseToString(string);\n        return (fromRight ? string : '') + createPadding(string, length, chars) + (fromRight ? '' : string);\n      };\n    }\n\n    /**\n     * Creates a `_.partial` or `_.partialRight` function.\n     *\n     * @private\n     * @param {boolean} flag The partial bit flag.\n     * @returns {Function} Returns the new partial function.\n     */\n    function createPartial(flag) {\n      var partialFunc = restParam(function(func, partials) {\n        var holders = replaceHolders(partials, partialFunc.placeholder);\n        return createWrapper(func, flag, null, partials, holders);\n      });\n      return partialFunc;\n    }\n\n    /**\n     * Creates a function for `_.reduce` or `_.reduceRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createReduce(arrayFunc, eachFunc) {\n      return function(collection, iteratee, accumulator, thisArg) {\n        var initFromArray = arguments.length < 3;\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee, accumulator, initFromArray)\n          : baseReduce(collection, getCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with optional `this`\n     * binding of, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & ARY_FLAG,\n          isBind = bitmask & BIND_FLAG,\n          isBindKey = bitmask & BIND_KEY_FLAG,\n          isCurry = bitmask & CURRY_FLAG,\n          isCurryBound = bitmask & CURRY_BOUND_FLAG,\n          isCurryRight = bitmask & CURRY_RIGHT_FLAG,\n          Ctor = isBindKey ? null : createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it to other functions.\n        var length = arguments.length,\n            index = length,\n            args = Array(length);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight);\n        }\n        if (isCurry || isCurryRight) {\n          var placeholder = wrapper.placeholder,\n              argsHolders = replaceHolders(args, placeholder);\n\n          length -= argsHolders.length;\n          if (length < arity) {\n            var newArgPos = argPos ? arrayCopy(argPos) : null,\n                newArity = nativeMax(arity - length, 0),\n                newsHolders = isCurry ? argsHolders : null,\n                newHoldersRight = isCurry ? null : argsHolders,\n                newPartials = isCurry ? args : null,\n                newPartialsRight = isCurry ? null : args;\n\n            bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n            bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n            if (!isCurryBound) {\n              bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n            }\n            var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity],\n                result = createHybridWrapper.apply(undefined, newData);\n\n            if (isLaziable(func)) {\n              setData(result, newData);\n            }\n            result.placeholder = placeholder;\n            return result;\n          }\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        if (argPos) {\n          args = reorder(args, argPos);\n        }\n        if (isAry && ary < args.length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtorWrapper(func);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates the padding required for `string` based on the given `length`.\n     * The `chars` string is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {string} string The string to create padding for.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the pad for `string`.\n     */\n    function createPadding(string, length, chars) {\n      var strLength = string.length;\n      length = +length;\n\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return '';\n      }\n      var padLength = length - strLength;\n      chars = chars == null ? ' ' : (chars + '');\n      return repeat(chars, ceil(padLength / chars.length)).slice(0, padLength);\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the optional `this`\n     * binding of `thisArg` and the `partials` prepended to those provided to\n     * the wrapper.\n     *\n     * @private\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to the new function.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createPartialWrapper(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it `func`.\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(argsLength + leftLength);\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.sortedIndex` or `_.sortedLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {Function} Returns the new index function.\n     */\n    function createSortedIndex(retHighest) {\n      return function(array, value, iteratee, thisArg) {\n        var callback = getCallback(iteratee);\n        return (iteratee == null && callback === baseCallback)\n          ? binaryIndex(array, value, retHighest)\n          : binaryIndexBy(array, value, callback(iteratee, thisArg, 1), retHighest);\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - `_.bind`\n     *     2 - `_.bindKey`\n     *     4 - `_.curry` or `_.curryRight` of a bound function\n     *     8 - `_.curry`\n     *    16 - `_.curryRight`\n     *    32 - `_.partial`\n     *    64 - `_.partialRight`\n     *   128 - `_.rearg`\n     *   256 - `_.ary`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n        partials = holders = null;\n      }\n      length -= (holders ? holders.length : 0);\n      if (bitmask & PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = null;\n      }\n      var data = isBindKey ? null : getData(func),\n          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];\n\n      if (data) {\n        mergeData(newData, data);\n        bitmask = newData[1];\n        arity = newData[9];\n      }\n      newData[9] = arity == null\n        ? (isBindKey ? 0 : func.length)\n        : (nativeMax(arity - length, 0) || 0);\n\n      if (bitmask == BIND_FLAG) {\n        var result = createBindWrapper(newData[0], newData[2]);\n      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {\n        result = createPartialWrapper.apply(undefined, newData);\n      } else {\n        result = createHybridWrapper.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setter(result, newData);\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing arrays.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var index = -1,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isLoose && othLength > arrLength)) {\n        return false;\n      }\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index],\n            result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;\n\n        if (result !== undefined) {\n          if (result) {\n            continue;\n          }\n          return false;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (isLoose) {\n          if (!arraySome(other, function(othValue) {\n                return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n              })) {\n            return false;\n          }\n        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} value The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag) {\n      switch (tag) {\n        case boolTag:\n        case dateTag:\n          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n          return +object == +other;\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case numberTag:\n          // Treat `NaN` vs. `NaN` as equal.\n          return (object != +object)\n            ? other != +other\n            : object == +other;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings primitives and string\n          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n          return object == (other + '');\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isLoose) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      var skipCtor = isLoose;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key],\n            result = customizer ? customizer(isLoose ? othValue : objValue, isLoose? objValue : othValue, key) : undefined;\n\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {\n          return false;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (!skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Gets the appropriate \"callback\" function. If the `_.callback` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseCallback` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getCallback(func, thisArg, argCount) {\n      var result = lodash.callback || callback;\n      result = result === callback ? baseCallback : result;\n      return argCount ? result(func, thisArg, argCount) : result;\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = func.name,\n          array = realNames[result],\n          length = array ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseIndexOf` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function|number} Returns the chosen function or its result.\n     */\n    function getIndexOf(collection, target, fromIndex) {\n      var result = lodash.indexOf || indexOf;\n      result = result === indexOf ? baseIndexOf : result;\n      return collection ? result(collection, target, fromIndex) : result;\n    }\n\n    /**\n     * Gets the \"length\" property value of `object`.\n     *\n     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n     * that affects Safari on at least iOS 8.1-8.3 ARM64.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {*} Returns the \"length\" value.\n     */\n    var getLength = baseProperty('length');\n\n    /**\n     * Gets the propery names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = pairs(object),\n          length = result.length;\n\n      while (length--) {\n        result[length][2] = isStrictComparable(result[length][1]);\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = object == null ? undefined : object[key];\n      return isNative(value) ? value : undefined;\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} [transforms] The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms ? transforms.length : 0;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add array properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      var Ctor = object.constructor;\n      if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n        Ctor = Object;\n      }\n      return new Ctor;\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return bufferClone(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          var buffer = object.buffer;\n          return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          var result = new Ctor(object.source, reFlags.exec(object));\n          result.lastIndex = object.lastIndex;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the method at `path` on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function invokePath(object, path, args) {\n      if (object != null && !isKey(path, object)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        path = last(path);\n      }\n      var func = object == null ? object : object[path];\n      return func == null ? undefined : func.apply(object, args);\n    }\n\n    /**\n     * Checks if `value` is array-like.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(getLength(value));\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return value > -1 && value % 1 == 0 && value < length;\n    }\n\n    /**\n     * Checks if the provided arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n          ? (isArrayLike(object) && isIndex(index, object.length))\n          : (type == 'string' && index in object)) {\n        var other = object[index];\n        return value === value ? (value === other) : (other !== other);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      var type = typeof value;\n      if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {\n        return true;\n      }\n      if (isArray(value)) {\n        return false;\n      }\n      var result = !reIsDeepProp.test(value);\n      return result || (object != null && value in toObject(object));\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func);\n      if (!(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      var other = lodash[funcName];\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     */\n    function isLength(value) {\n      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers required to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n     * augment function arguments, making the order in which they are executed important,\n     * preventing the merging of metadata. However, we make an exception for a safe\n     * common case where curried functions have `_.ary` and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < ARY_FLAG;\n\n      var isCombo =\n        (srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG) ||\n        (srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8]) ||\n        (srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG);\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = arrayCopy(value);\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * A specialized version of `_.pick` which picks `object` properties specified\n     * by `props`.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property names to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByArray(object, props) {\n      object = toObject(object);\n\n      var index = -1,\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index];\n        if (key in object) {\n          result[key] = object[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.pick` which picks `object` properties `predicate`\n     * returns truthy for.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByCallback(object, predicate) {\n      var result = {};\n      baseForIn(object, function(value, key, object) {\n        if (predicate(value, key, object)) {\n          result[key] = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = arrayCopy(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity function\n     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = (function() {\n      var count = 0,\n          lastCalled = 0;\n\n      return function(key, value) {\n        var stamp = now(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return key;\n          }\n        } else {\n          count = 0;\n        }\n        return baseSetData(key, value);\n      };\n    }());\n\n    /**\n     * A fallback implementation of `_.isPlainObject` which checks if `value`\n     * is an object created by the `Object` constructor or has a `[[Prototype]]`\n     * of `null`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     */\n    function shimIsPlainObject(value) {\n      var Ctor,\n          support = lodash.support;\n\n      // Exit early for non `Object` objects.\n      if (!(isObjectLike(value) && objToString.call(value) == objectTag) ||\n          (!hasOwnProperty.call(value, 'constructor') &&\n            (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n        return false;\n      }\n      // IE < 9 iterates inherited properties before own properties. If the first\n      // iterated property is an object's own property then there are no inherited\n      // enumerable properties.\n      var result;\n      // In most environments an object's own properties are iterated before\n      // its inherited properties. If the last iterated property is an object's\n      // own property then there are no inherited enumerable properties.\n      baseForIn(value, function(subValue, key) {\n        result = key;\n      });\n      return result === undefined || hasOwnProperty.call(value, result);\n    }\n\n    /**\n     * A fallback implementation of `Object.keys` which creates an array of the\n     * own enumerable property names of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function shimKeys(object) {\n      var props = keysIn(object),\n          propsLength = props.length,\n          length = propsLength && object.length;\n\n      var allowIndexes = !!length && isLength(length) &&\n        (isArray(object) || isArguments(object));\n\n      var index = -1,\n          result = [];\n\n      while (++index < propsLength) {\n        var key = props[index];\n        if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to an array-like object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array|Object} Returns the array-like object.\n     */\n    function toIterable(value) {\n      if (value == null) {\n        return [];\n      }\n      if (!isArrayLike(value)) {\n        return values(value);\n      }\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to an object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Object} Returns the object.\n     */\n    function toObject(value) {\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to property path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array} Returns the property path array.\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return value;\n      }\n      var result = [];\n      baseToString(value).replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      return wrapper instanceof LazyWrapper\n        ? wrapper.clone()\n        : new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__, arrayCopy(wrapper.__actions__));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `collection` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new array containing chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if (guard ? isIterateeCall(array, size, guard) : size == null) {\n        size = 1;\n      } else {\n        size = nativeMax(+size || 1, 1);\n      }\n      var index = 0,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = Array(ceil(length / size));\n\n      while (index < length) {\n        result[++resIndex] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of unique `array` values not included in the other\n     * provided arrays using [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The arrays of values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.difference([1, 2, 3], [4, 2]);\n     * // => [1, 3]\n     */\n    var difference = restParam(function(array, values) {\n      return isArrayLike(array)\n        ? baseDifference(array, baseFlatten(values, false, true))\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that match the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [1]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active', false), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active', false), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8], '*', 1, 2);\n     * // => [4, '*', 8]\n     */\n    function fill(array, value, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(chr) {\n     *   return chr.user == 'barney';\n     * });\n     * // => 0\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findIndex(users, 'active', false);\n     * // => 0\n     *\n     * // using the `_.property` callback shorthand\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    var findIndex = createFindIndex();\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(chr) {\n     *   return chr.user == 'pebbles';\n     * });\n     * // => 2\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastIndex(users, 'active', false);\n     * // => 2\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    var findLastIndex = createFindIndex(true);\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias head\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.first([1, 2, 3]);\n     * // => 1\n     *\n     * _.first([]);\n     * // => undefined\n     */\n    function first(array) {\n      return array ? array[0] : undefined;\n    }\n\n    /**\n     * Flattens a nested array. If `isDeep` is `true` the array is recursively\n     * flattened, otherwise it is only flattened a single level.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, [4]]\n     *\n     * // using `isDeep`\n     * _.flatten([1, [2, 3, [4]]], true);\n     * // => [1, 2, 3, 4]\n     */\n    function flatten(array, isDeep, guard) {\n      var length = array ? array.length : 0;\n      if (guard && isIterateeCall(array, isDeep, guard)) {\n        isDeep = false;\n      }\n      return length ? baseFlatten(array, isDeep) : [];\n    }\n\n    /**\n     * Recursively flattens a nested array.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to recursively flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, 4]\n     */\n    function flattenDeep(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, true) : [];\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `array`. If `array` is sorted providing `true` for `fromIndex`\n     * performs a faster binary search.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n     *  to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // using `fromIndex`\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     *\n     * // performing a binary search\n     * _.indexOf([1, 1, 2, 2], 2, true);\n     * // => 2\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      if (typeof fromIndex == 'number') {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n      } else if (fromIndex) {\n        var index = binaryIndex(array, value),\n            other = array[index];\n\n        if (value === value ? (value === other) : (other !== other)) {\n          return index;\n        }\n        return -1;\n      }\n      return baseIndexOf(array, value, fromIndex || 0);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      return dropRight(array, 1);\n    }\n\n    /**\n     * Creates an array of unique values that are included in all of the provided\n     * arrays using [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of shared values.\n     * @example\n     * _.intersection([1, 2], [4, 2], [2, 1]);\n     * // => [2]\n     */\n    var intersection = restParam(function(arrays) {\n      var othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(length),\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          result = [];\n\n      while (othIndex--) {\n        var value = arrays[othIndex] = isArrayLike(value = arrays[othIndex]) ? value : [];\n        caches[othIndex] = (isCommon && value.length >= 120) ? createCache(othIndex && value) : null;\n      }\n      var array = arrays[0],\n          index = -1,\n          length = array ? array.length : 0,\n          seen = caches[0];\n\n      outer:\n      while (++index < length) {\n        value = array[index];\n        if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value, 0)) < 0) {\n          var othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if ((cache ? cacheIndexOf(cache, value) : indexOf(arrays[othIndex], value, 0)) < 0) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(value);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    });\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array ? array.length : 0;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=array.length-1] The index to search from\n     *  or `true` to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // using `fromIndex`\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     *\n     * // performing a binary search\n     * _.lastIndexOf([1, 1, 2, 2], 2, true);\n     * // => 3\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (typeof fromIndex == 'number') {\n        index = (fromIndex < 0 ? nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - 1)) + 1;\n      } else if (fromIndex) {\n        index = binaryIndex(array, value, true) - 1;\n        var other = array[index];\n        if (value === value ? (value === other) : (other !== other)) {\n          return index;\n        }\n        return -1;\n      }\n      if (value !== value) {\n        return indexOfNaN(array, index, true);\n      }\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Removes all provided values from `array` using\n     * [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3, 1, 2, 3];\n     *\n     * _.pull(array, 2, 3);\n     * console.log(array);\n     * // => [1, 1]\n     */\n    function pull() {\n      var args = arguments,\n          array = args[0];\n\n      if (!(array && array.length)) {\n        return array;\n      }\n      var index = 0,\n          indexOf = getIndexOf(),\n          length = args.length;\n\n      while (++index < length) {\n        var fromIndex = 0,\n            value = args[index];\n\n        while ((fromIndex = indexOf(array, value, fromIndex)) > -1) {\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to the given indexes and returns\n     * an array of the removed elements. Indexes may be specified as an array of\n     * indexes or as individual arguments.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [5, 10, 15, 20];\n     * var evens = _.pullAt(array, 1, 3);\n     *\n     * console.log(array);\n     * // => [5, 15]\n     *\n     * console.log(evens);\n     * // => [10, 20]\n     */\n    var pullAt = restParam(function(array, indexes) {\n      indexes = baseFlatten(indexes);\n\n      var result = baseAt(array, indexes);\n      basePullAt(array, indexes.sort(baseCompareAscending));\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate, thisArg) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getCallback(predicate, thisArg, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias tail\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.rest([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function rest(array) {\n      return drop(array, 1);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of `Array#slice` to support node\n     * lists in IE < 9 and to ensure dense arrays are returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value` should\n     * be inserted into `array` in order to maintain its sort order. If an iteratee\n     * function is provided it is invoked for `value` and each element of `array`\n     * to compute their sort ranking. The iteratee is bound to `thisArg` and\n     * invoked with one argument; (value).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     *\n     * _.sortedIndex([4, 4, 5, 5], 5);\n     * // => 2\n     *\n     * var dict = { 'data': { 'thirty': 30, 'forty': 40, 'fifty': 50 } };\n     *\n     * // using an iteratee function\n     * _.sortedIndex(['thirty', 'fifty'], 'forty', function(word) {\n     *   return this.data[word];\n     * }, dict);\n     * // => 1\n     *\n     * // using the `_.property` callback shorthand\n     * _.sortedIndex([{ 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n     * // => 1\n     */\n    var sortedIndex = createSortedIndex();\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 4, 5, 5], 5);\n     * // => 4\n     */\n    var sortedLastIndex = createSortedIndex(true);\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is bound to `thisArg`\n     * and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [2, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active', false), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [1, 2]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active', false), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all of the provided arrays\n     * using [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([1, 2], [4, 2], [2, 1]);\n     * // => [1, 2, 4]\n     */\n    var union = restParam(function(arrays) {\n      return baseUniq(baseFlatten(arrays, false, true));\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurence of each element\n     * is kept. Providing `true` for `isSorted` performs a faster search algorithm\n     * for sorted arrays. If an iteratee function is provided it is invoked for\n     * each element in the array to generate the criterion by which uniqueness\n     * is computed. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, array).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias unique\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {boolean} [isSorted] Specify the array is sorted.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     *\n     * // using `isSorted`\n     * _.uniq([1, 1, 2], true);\n     * // => [1, 2]\n     *\n     * // using an iteratee function\n     * _.uniq([1, 2.5, 1.5, 2], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => [1, 2.5]\n     *\n     * // using the `_.property` callback shorthand\n     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniq(array, isSorted, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (isSorted != null && typeof isSorted != 'boolean') {\n        thisArg = iteratee;\n        iteratee = isIterateeCall(array, isSorted, thisArg) ? null : isSorted;\n        isSorted = false;\n      }\n      var callback = getCallback();\n      if (!(iteratee == null && callback === baseCallback)) {\n        iteratee = callback(iteratee, thisArg, 3);\n      }\n      return (isSorted && getIndexOf() == baseIndexOf)\n        ? sortedUniq(array, iteratee)\n        : baseUniq(array, iteratee);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['fred', 'barney'], [30, 40], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var index = -1,\n          length = 0;\n\n      array = arrayFilter(array, function(group) {\n        if (isArrayLike(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = arrayMap(array, baseProperty(index));\n      }\n      return result;\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts an iteratee to specify\n     * how regrouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee] The function to combine regrouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      iteratee = bindCallback(iteratee, thisArg, 4);\n      return arrayMap(result, function(group) {\n        return arrayReduce(group, iteratee, undefined, true);\n      });\n    }\n\n    /**\n     * Creates an array excluding all provided values using\n     * [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to filter.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.without([1, 2, 1, 3], 1, 2);\n     * // => [3]\n     */\n    var without = restParam(function(array, values) {\n      return isArrayLike(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the provided arrays.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of values.\n     * @example\n     *\n     * _.xor([1, 2], [4, 2]);\n     * // => [1, 4]\n     */\n    function xor() {\n      var index = -1,\n          length = arguments.length;\n\n      while (++index < length) {\n        var array = arguments[index];\n        if (isArrayLike(array)) {\n          var result = result\n            ? baseDifference(result, array).concat(baseDifference(array, result))\n            : array;\n        }\n      }\n      return result ? baseUniq(result) : [];\n    }\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the first\n     * elements of the given arrays, the second of which contains the second elements\n     * of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     */\n    var zip = restParam(unzip);\n\n    /**\n     * The inverse of `_.pairs`; this method returns an object composed from arrays\n     * of property names and values. Provide either a single two dimensional array,\n     * e.g. `[[key1, value1], [key2, value2]]` or two arrays, one of property names\n     * and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @alias object\n     * @category Array\n     * @param {Array} props The property names.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject([['fred', 30], ['barney', 40]]);\n     * // => { 'fred': 30, 'barney': 40 }\n     *\n     * _.zipObject(['fred', 'barney'], [30, 40]);\n     * // => { 'fred': 30, 'barney': 40 }\n     */\n    function zipObject(props, values) {\n      var index = -1,\n          length = props ? props.length : 0,\n          result = {};\n\n      if (length && !values && !isArray(props[0])) {\n        values = [];\n      }\n      while (++index < length) {\n        var key = props[index];\n        if (values) {\n          result[key] = values[index];\n        } else if (key) {\n          result[key[0]] = key[1];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an iteratee to specify\n     * how grouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee] The function to combine grouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], _.add);\n     * // => [111, 222]\n     */\n    var zipWith = restParam(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 2 ? arrays[length - 2] : undefined,\n          thisArg = length > 1 ? arrays[length - 1] : undefined;\n\n      if (length > 2 && typeof iteratee == 'function') {\n        length -= 2;\n      } else {\n        iteratee = (length > 1 && typeof thisArg == 'function') ? (--length, thisArg) : undefined;\n        thisArg = undefined;\n      }\n      arrays.length = length;\n      return unzipWith(arrays, iteratee, thisArg);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object that wraps `value` with explicit method\n     * chaining enabled.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _.chain(users)\n     *   .sortBy('age')\n     *   .map(function(chr) {\n     *     return chr.user + ' is ' + chr.age;\n     *   })\n     *   .first()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor is\n     * bound to `thisArg` and invoked with one argument; (value). The purpose of\n     * this method is to \"tap into\" a method chain in order to perform operations\n     * on intermediate results within the chain.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor, thisArg) {\n      interceptor.call(thisArg, value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor, thisArg) {\n      return interceptor.call(thisArg, value);\n    }\n\n    /**\n     * Enables explicit method chaining on the wrapper object.\n     *\n     * @name chain\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // without explicit chaining\n     * _(users).first();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // with explicit chaining\n     * _(users).chain()\n     *   .first()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chained sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapper = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapper = wrapper.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapper.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Creates a clone of the chained sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapper = _(array).map(function(value) {\n     *   return Math.pow(value, 2);\n     * });\n     *\n     * var other = [3, 4];\n     * var otherWrapper = wrapper.plant(other);\n     *\n     * otherWrapper.value();\n     * // => [9, 16]\n     *\n     * wrapper.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * Reverses the wrapped array so the first element becomes the last, the\n     * second element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new reversed `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        if (this.__actions__.length) {\n          value = new LazyWrapper(this);\n        }\n        return new LodashWrapper(value.reverse(), this.__chain__);\n      }\n      return this.thru(function(value) {\n        return value.reverse();\n      });\n    }\n\n    /**\n     * Produces the result of coercing the unwrapped value to a string.\n     *\n     * @name toString\n     * @memberOf _\n     * @category Chain\n     * @returns {string} Returns the coerced string value.\n     * @example\n     *\n     * _([1, 2, 3]).toString();\n     * // => '1,2,3'\n     */\n    function wrapperToString() {\n      return (this.value() + '');\n    }\n\n    /**\n     * Executes the chained sequence to extract the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @alias run, toJSON, valueOf\n     * @category Chain\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements corresponding to the given keys, or indexes,\n     * of `collection`. Keys may be specified as individual arguments or as arrays\n     * of keys.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(number|number[]|string|string[])} [props] The property names\n     *  or indexes of elements to pick, specified individually or in arrays.\n     * @returns {Array} Returns the new array of picked elements.\n     * @example\n     *\n     * _.at(['a', 'b', 'c'], [0, 2]);\n     * // => ['a', 'c']\n     *\n     * _.at(['barney', 'fred', 'pebbles'], 0, 2);\n     * // => ['barney', 'pebbles']\n     */\n    var at = restParam(function(collection, props) {\n      return baseAt(collection, baseFlatten(props));\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the number of times the key was returned by `iteratee`.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * The predicate is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias all\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': false },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.every(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = null;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias select\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.filter([4, 5, 6], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 6]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.filter(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.filter(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function filter(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias detect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.result(_.find(users, function(chr) {\n     *   return chr.age < 40;\n     * }), 'user');\n     * // => 'barney'\n     *\n     * // using the `_.matches` callback shorthand\n     * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.result(_.find(users, 'active', false), 'user');\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.result(_.find(users, 'active'), 'user');\n     * // => 'barney'\n     */\n    var find = createFind(baseEach);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(baseEachRight, true);\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning the first element that has equivalent property\n     * values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.result(_.findWhere(users, { 'age': 36, 'active': true }), 'user');\n     * // => 'barney'\n     *\n     * _.result(_.findWhere(users, { 'age': 40, 'active': false }), 'user');\n     * // => 'fred'\n     */\n    function findWhere(collection, source) {\n      return find(collection, baseMatches(source));\n    }\n\n    /**\n     * Iterates over elements of `collection` invoking `iteratee` for each element.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection). Iteratee functions may exit iteration early\n     * by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n     * may be used for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @alias each\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEach(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from left to right and returns the array\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {\n     *   console.log(n, key);\n     * });\n     * // => logs each value-key pair and returns the object (iteration order is not guaranteed)\n     */\n    var forEach = createForEach(arrayEach, baseEach);\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEachRight(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from right to left and returns the array\n     */\n    var forEachRight = createForEach(arrayEachRight, baseEachRight);\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is an array of the elements responsible for generating the key.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * // using the `_.property` callback shorthand\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        result[key] = [value];\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection` using\n     * [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @alias contains, include\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {*} target The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {boolean} Returns `true` if a matching element is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n     * // => true\n     *\n     * _.includes('pebbles', 'eb');\n     * // => true\n     */\n    function includes(collection, target, fromIndex, guard) {\n      var length = collection ? getLength(collection) : 0;\n      if (!isLength(length)) {\n        collection = values(collection);\n        length = collection.length;\n      }\n      if (!length) {\n        return false;\n      }\n      if (typeof fromIndex != 'number' || (guard && isIterateeCall(target, fromIndex, guard))) {\n        fromIndex = 0;\n      } else {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);\n      }\n      return (typeof collection == 'string' || !isArray(collection) && isString(collection))\n        ? (fromIndex < length && collection.indexOf(target, fromIndex) > -1)\n        : (getIndexOf(collection, target, fromIndex) > -1);\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the last element responsible for generating the key. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var keyData = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.indexBy(keyData, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return String.fromCharCode(object.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return this.fromCharCode(object.code);\n     * }, String);\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     */\n    var indexBy = createAggregator(function(result, value, key) {\n      result[key] = value;\n    });\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `methodName` is a function it is\n     * invoked for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invoke([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invoke = restParam(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          isProp = isKey(path),\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        var func = isFunc ? path : ((isProp && value != null) ? value[path] : null);\n        result[++index] = func ? func.apply(value, args) : invokePath(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` through\n     * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`,\n     * `drop`, `dropRight`, `every`, `fill`, `flatten`, `invert`, `max`, `min`,\n     * `parseInt`, `slice`, `sortBy`, `take`, `takeRight`, `template`, `trim`,\n     * `trimLeft`, `trimRight`, `trunc`, `random`, `range`, `sample`, `some`,\n     * `sum`, `uniq`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @alias collect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function timesThree(n) {\n     *   return n * 3;\n     * }\n     *\n     * _.map([1, 2], timesThree);\n     * // => [3, 6]\n     *\n     * _.map({ 'a': 1, 'b': 2 }, timesThree);\n     * // => [3, 6] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee, thisArg) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return func(collection, iteratee);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, while the second of which\n     * contains elements `predicate` returns falsey for. The predicate is bound\n     * to `thisArg` and invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * _.partition([1, 2, 3], function(n) {\n     *   return n % 2;\n     * });\n     * // => [[1, 3], [2]]\n     *\n     * _.partition([1.2, 2.3, 3.4], function(n) {\n     *   return this.floor(n) % 2;\n     * }, Math);\n     * // => [[1.2, 3.4], [2.3]]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * var mapper = function(array) {\n     *   return _.pluck(array, 'user');\n     * };\n     *\n     * // using the `_.matches` callback shorthand\n     * _.map(_.partition(users, { 'age': 1, 'active': false }), mapper);\n     * // => [['pebbles'], ['barney', 'fred']]\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.map(_.partition(users, 'active', false), mapper);\n     * // => [['barney', 'pebbles'], ['fred']]\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(_.partition(users, 'active'), mapper);\n     * // => [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Gets the property value of `path` from all elements in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|string} path The path of the property to pluck.\n     * @returns {Array} Returns the property values.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.pluck(users, 'user');\n     * // => ['barney', 'fred']\n     *\n     * var userIndex = _.indexBy(users, 'user');\n     * _.pluck(userIndex, 'age');\n     * // => [36, 40] (iteration order is not guaranteed)\n     */\n    function pluck(collection, path) {\n      return map(collection, property(path));\n    }\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` through `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not provided the first element of `collection` is used as the initial\n     * value. The `iteratee` is bound to `thisArg` and invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `includes`, `merge`, `sortByAll`, and `sortByOrder`\n     *\n     * @static\n     * @memberOf _\n     * @alias foldl, inject\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.reduce([1, 2], function(total, n) {\n     *   return total + n;\n     * });\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     *   return result;\n     * }, {});\n     * // => { 'a': 3, 'b': 6 } (iteration order is not guaranteed)\n     */\n    var reduce = createReduce(arrayReduce, baseEach);\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias foldr\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    var reduceRight = createReduce(arrayReduceRight, baseEachRight);\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.reject([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [1, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.reject(users, { 'age': 40, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.reject(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.reject(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function reject(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, function(value, index, collection) {\n        return !predicate(value, index, collection);\n      });\n    }\n\n    /**\n     * Gets a random element or `n` random elements from a collection.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to sample.\n     * @param {number} [n] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {*} Returns the random sample(s).\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     *\n     * _.sample([1, 2, 3, 4], 2);\n     * // => [3, 1]\n     */\n    function sample(collection, n, guard) {\n      if (guard ? isIterateeCall(collection, n, guard) : n == null) {\n        collection = toIterable(collection);\n        var length = collection.length;\n        return length > 0 ? collection[baseRandom(0, length - 1)] : undefined;\n      }\n      var index = -1,\n          result = toArray(collection),\n          length = result.length,\n          lastIndex = length - 1;\n\n      n = nativeMin(n < 0 ? 0 : (+n || 0), length);\n      while (++index < n) {\n        var rand = baseRandom(index, lastIndex),\n            value = result[rand];\n\n        result[rand] = result[index];\n        result[index] = value;\n      }\n      result.length = n;\n      return result;\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      return sample(collection, POSITIVE_INFINITY);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the size of `collection`.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      var length = collection ? getLength(collection) : 0;\n      return isLength(length) ? length : keys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * The function returns as soon as it finds a passing value and does not iterate\n     * over the entire collection. The predicate is bound to `thisArg` and invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias any\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.some(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = null;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection through `iteratee`. This method performs\n     * a stable sort, that is, it preserves the original sort order of equal elements.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return Math.sin(n);\n     * });\n     * // => [3, 1, 2]\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return this.sin(n);\n     * }, Math);\n     * // => [3, 1, 2]\n     *\n     * var users = [\n     *   { 'user': 'fred' },\n     *   { 'user': 'pebbles' },\n     *   { 'user': 'barney' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.sortBy(users, 'user'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function sortBy(collection, iteratee, thisArg) {\n      if (collection == null) {\n        return [];\n      }\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = null;\n      }\n      var index = -1;\n      iteratee = getCallback(iteratee, thisArg, 3);\n\n      var result = baseMap(collection, function(value, key, collection) {\n        return { 'criteria': iteratee(value, key, collection), 'index': ++index, 'value': value };\n      });\n      return baseSortBy(result, compareAscending);\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it can sort by multiple iteratees\n     * or property names.\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(Function|Function[]|Object|Object[]|string|string[])} iteratees\n     *  The iteratees to sort by, specified as individual values or arrays of values.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.map(_.sortByAll(users, ['user', 'age']), _.values);\n     * // => [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\n     *\n     * _.map(_.sortByAll(users, 'user', function(chr) {\n     *   return Math.floor(chr.age / 10);\n     * }), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    var sortByAll = restParam(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var guard = iteratees[2];\n      if (guard && isIterateeCall(iteratees[0], iteratees[1], guard)) {\n        iteratees.length = 1;\n      }\n      return baseSortByOrder(collection, baseFlatten(iteratees), []);\n    });\n\n    /**\n     * This method is like `_.sortByAll` except that it allows specifying the\n     * sort orders of the iteratees to sort by. A truthy value in `orders` will\n     * sort the corresponding property name in ascending order while a falsey\n     * value will sort it in descending order.\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} orders The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // sort by `user` in ascending order and by `age` in descending order\n     * _.map(_.sortByOrder(users, ['user', 'age'], [true, false]), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    function sortByOrder(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (guard && isIterateeCall(iteratees, orders, guard)) {\n        orders = null;\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseSortByOrder(collection, iteratees, orders);\n    }\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning an array of all elements that have equivalent\n     * property values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false, 'pets': ['hoppy'] },\n     *   { 'user': 'fred',   'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }\n     * ];\n     *\n     * _.pluck(_.where(users, { 'age': 36, 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\n     * // => ['fred']\n     */\n    function where(collection, source) {\n      return filter(collection, baseMatches(source));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the number of milliseconds that have elapsed since the Unix epoch\n     * (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @category Date\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => logs the number of milliseconds it took for the deferred function to be invoked\n     */\n    var now = nativeNow || function() {\n      return new Date().getTime();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it is called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => logs 'done saving!' after the two async saves have completed\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      n = nativeIsFinite(n = +n) ? n : 0;\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that accepts up to `n` arguments ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      if (guard && isIterateeCall(func, n, guard)) {\n        n = null;\n      }\n      n = (func && n == null) ? func.length : nativeMax(+n || 0, 0);\n      return createWrapper(func, ARY_FLAG, null, null, null, null, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it is called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery('#add').on('click', _.before(5, addContactToList));\n     * // => allows adding up to 4 contacts to the list\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = null;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and prepends any additional `_.bind` arguments to those provided to the\n     * bound function.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind` this method does not set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var greet = function(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * };\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // using placeholders\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = restParam(function(func, thisArg, partials) {\n      var bitmask = BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bind.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method. Method names may be specified as individual arguments or as arrays\n     * of method names. If no method names are provided all enumerable function\n     * properties, own and inherited, of `object` are bound.\n     *\n     * **Note:** This method does not set the \"length\" property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} [methodNames] The object method names to bind,\n     *  specified as individual method names or arrays of method names.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'onClick': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view);\n     * jQuery('#docs').on('click', view.onClick);\n     * // => logs 'clicked docs' when the element is clicked\n     */\n    var bindAll = restParam(function(object, methodNames) {\n      methodNames = methodNames.length ? baseFlatten(methodNames) : functions(object);\n\n      var index = -1,\n          length = methodNames.length;\n\n      while (++index < length) {\n        var key = methodNames[index];\n        object[key] = createWrapper(object[key], BIND_FLAG, object);\n      }\n      return object;\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` and prepends\n     * any additional `_.bindKey` arguments to those provided to the bound function.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist.\n     * See [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object the method belongs to.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // using placeholders\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = restParam(function(object, key, partials) {\n      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bindKey.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts one or more arguments of `func` that when\n     * called either invokes `func` returning its result, if all `func` arguments\n     * have been provided, or returns a function that accepts one or more of the\n     * remaining `func` arguments, and so on. The arity of `func` may be specified\n     * if `func.length` is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    var curry = createCurry(CURRY_FLAG);\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    var curryRight = createCurry(CURRY_RIGHT_FLAG);\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed invocations. Provide an options object to indicate that `func`\n     * should be invoked on the leading and/or trailing edge of the `wait` timeout.\n     * Subsequent calls to the debounced function return the result of the last\n     * `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the debounced function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=false] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n     *  delayed before it is invoked.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // avoid costly calculations while the window size is in flux\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // invoke `sendMail` when the click event is fired, debouncing subsequent calls\n     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // ensure `batchLog` is invoked once after 1 second of debounced calls\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', _.debounce(batchLog, 250, {\n     *   'maxWait': 1000\n     * }));\n     *\n     * // cancel a debounced call\n     * var todoChanges = _.debounce(batchLog, 1000);\n     * Object.observe(models.todo, todoChanges);\n     *\n     * Object.observe(models, function(changes) {\n     *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n     *     todoChanges.cancel();\n     *   }\n     * }, ['delete']);\n     *\n     * // ...at some point `models.todo` is changed\n     * models.todo.completed = true;\n     *\n     * // ...before 1 second has passed `models.todo` is deleted\n     * // which cancels the debounced `todoChanges` call\n     * delete models.todo;\n     */\n    function debounce(func, wait, options) {\n      var args,\n          maxTimeoutId,\n          result,\n          stamp,\n          thisArg,\n          timeoutId,\n          trailingCall,\n          lastCalled = 0,\n          maxWait = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = wait < 0 ? 0 : (+wait || 0);\n      if (options === true) {\n        var leading = true;\n        trailing = false;\n      } else if (isObject(options)) {\n        leading = options.leading;\n        maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);\n        trailing = 'trailing' in options ? options.trailing : trailing;\n      }\n\n      function cancel() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        if (maxTimeoutId) {\n          clearTimeout(maxTimeoutId);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n      }\n\n      function delayed() {\n        var remaining = wait - (now() - stamp);\n        if (remaining <= 0 || remaining > wait) {\n          if (maxTimeoutId) {\n            clearTimeout(maxTimeoutId);\n          }\n          var isCalled = trailingCall;\n          maxTimeoutId = timeoutId = trailingCall = undefined;\n          if (isCalled) {\n            lastCalled = now();\n            result = func.apply(thisArg, args);\n            if (!timeoutId && !maxTimeoutId) {\n              args = thisArg = null;\n            }\n          }\n        } else {\n          timeoutId = setTimeout(delayed, remaining);\n        }\n      }\n\n      function maxDelayed() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n        if (trailing || (maxWait !== wait)) {\n          lastCalled = now();\n          result = func.apply(thisArg, args);\n          if (!timeoutId && !maxTimeoutId) {\n            args = thisArg = null;\n          }\n        }\n      }\n\n      function debounced() {\n        args = arguments;\n        stamp = now();\n        thisArg = this;\n        trailingCall = trailing && (timeoutId || !leading);\n\n        if (maxWait === false) {\n          var leadingCall = leading && !timeoutId;\n        } else {\n          if (!maxTimeoutId && !leading) {\n            lastCalled = stamp;\n          }\n          var remaining = maxWait - (stamp - lastCalled),\n              isCalled = remaining <= 0 || remaining > maxWait;\n\n          if (isCalled) {\n            if (maxTimeoutId) {\n              maxTimeoutId = clearTimeout(maxTimeoutId);\n            }\n            lastCalled = stamp;\n            result = func.apply(thisArg, args);\n          }\n          else if (!maxTimeoutId) {\n            maxTimeoutId = setTimeout(maxDelayed, remaining);\n          }\n        }\n        if (isCalled && timeoutId) {\n          timeoutId = clearTimeout(timeoutId);\n        }\n        else if (!timeoutId && wait !== maxWait) {\n          timeoutId = setTimeout(delayed, wait);\n        }\n        if (leadingCall) {\n          isCalled = true;\n          result = func.apply(thisArg, args);\n        }\n        if (isCalled && !timeoutId && !maxTimeoutId) {\n          args = thisArg = null;\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // logs 'deferred' after one or more milliseconds\n     */\n    var defer = restParam(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => logs 'later' after one second\n     */\n    var delay = restParam(function(func, wait, args) {\n      return baseDelay(func, wait, args);\n    });\n\n    /**\n     * Creates a function that returns the result of invoking the provided\n     * functions with the `this` binding of the created function, where each\n     * successive invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow(_.add, square);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the provided functions from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias backflow, compose\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight(square, _.add);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is coerced to a string and used as the\n     * cache key. The `func` is invoked with the `this` binding of the memoized\n     * function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the [`Map`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-properties-of-the-map-prototype-object)\n     * method interface of `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoizing function.\n     * @example\n     *\n     * var upperCase = _.memoize(function(string) {\n     *   return string.toUpperCase();\n     * });\n     *\n     * upperCase('fred');\n     * // => 'FRED'\n     *\n     * // modifying the result cache\n     * upperCase.cache.set('fred', 'BARNEY');\n     * upperCase('fred');\n     * // => 'BARNEY'\n     *\n     * // replacing `_.memoize.Cache`\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'barney' };\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'fred' }\n     *\n     * _.memoize.Cache = WeakMap;\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'barney' }\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result);\n        return result;\n      };\n      memoized.cache = new memoize.Cache;\n      return memoized;\n    }\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        return !predicate.apply(this, arguments);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first call. The `func` is invoked\n     * with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // `initialize` invokes `createApplication` once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with `partial` arguments prepended\n     * to those provided to the new function. This method is like `_.bind` except\n     * it does **not** alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // using placeholders\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = createPartial(PARTIAL_FLAG);\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to those provided to the new function.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // using placeholders\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = createPartial(PARTIAL_RIGHT_FLAG);\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified indexes where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, 2, 0, 1);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     *\n     * var map = _.rearg(_.map, [1, 0]);\n     * map(function(n) {\n     *   return n * 3;\n     * }, [1, 2, 3]);\n     * // => [3, 6, 9]\n     */\n    var rearg = restParam(function(func, indexes) {\n      return createWrapper(func, REARG_FLAG, null, null, null, baseFlatten(indexes));\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as an array.\n     *\n     * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.restParam(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function restParam(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            rest = Array(length);\n\n        while (++index < length) {\n          rest[index] = args[start + index];\n        }\n        switch (start) {\n          case 0: return func.call(this, rest);\n          case 1: return func.call(this, args[0], rest);\n          case 2: return func.call(this, args[0], args[1], rest);\n        }\n        var otherArgs = Array(start + 1);\n        index = -1;\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = rest;\n        return func.apply(this, otherArgs);\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the created\n     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n     *\n     * **Note:** This method is based on the [spread operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * // with a Promise\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function(array) {\n        return func.apply(this, array);\n      };\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed invocations. Provide an options object to indicate\n     * that `func` should be invoked on the leading and/or trailing edge of the\n     * `wait` timeout. Subsequent calls to the throttled function return the\n     * result of the last `func` call.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the throttled function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=true] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // avoid excessively updating the position while scrolling\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes\n     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n     *   'trailing': false\n     * }));\n     *\n     * // cancel a trailing throttled call\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (options === false) {\n        leading = false;\n      } else if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      debounceOptions.leading = leading;\n      debounceOptions.maxWait = +wait;\n      debounceOptions.trailing = trailing;\n      return debounce(func, wait, debounceOptions);\n    }\n\n    /**\n     * Creates a function that provides `value` to the wrapper function as its\n     * first argument. Any additional arguments provided to the function are\n     * appended to those provided to the wrapper function. The wrapper is invoked\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      wrapper = wrapper == null ? identity : wrapper;\n      return createWrapper(wrapper, PARTIAL_FLAG, null, [value], []);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n     * otherwise they are assigned by reference. If `customizer` is provided it is\n     * invoked to produce the cloned values. If `customizer` returns `undefined`\n     * cloning is handled by the method instead. The `customizer` is bound to\n     * `thisArg` and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var shallow = _.clone(users);\n     * shallow[0] === users[0];\n     * // => true\n     *\n     * var deep = _.clone(users, true);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.clone(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 0\n     */\n    function clone(value, isDeep, customizer, thisArg) {\n      if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\n        isDeep = false;\n      }\n      else if (typeof isDeep == 'function') {\n        thisArg = customizer;\n        customizer = isDeep;\n        isDeep = false;\n      }\n      return typeof customizer == 'function'\n        ? baseClone(value, isDeep, bindCallback(customizer, thisArg, 1))\n        : baseClone(value, isDeep);\n    }\n\n    /**\n     * Creates a deep clone of `value`. If `customizer` is provided it is invoked\n     * to produce the cloned values. If `customizer` returns `undefined` cloning\n     * is handled by the method instead. The `customizer` is bound to `thisArg`\n     * and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the deep cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var deep = _.cloneDeep(users);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.cloneDeep(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 20\n     */\n    function cloneDeep(value, customizer, thisArg) {\n      return typeof customizer == 'function'\n        ? baseClone(value, true, bindCallback(customizer, thisArg, 1))\n        : baseClone(value, true);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`, else `false`.\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    function gt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    function gte(value, other) {\n      return value >= other;\n    }\n\n    /**\n     * Checks if `value` is classified as an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      return isObjectLike(value) && isArrayLike(value) && objToString.call(value) == argsTag;\n    }\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(function() { return arguments; }());\n     * // => false\n     */\n    var isArray = nativeIsArray || function(value) {\n      return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n    };\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false || (isObjectLike(value) && objToString.call(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    function isDate(value) {\n      return isObjectLike(value) && objToString.call(value) == dateTag;\n    }\n\n    /**\n     * Checks if `value` is a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return !!value && value.nodeType === 1 && isObjectLike(value) &&\n        (objToString.call(value).indexOf('Element') > -1);\n    }\n    // Fallback for environments without DOM support.\n    if (!support.dom) {\n      isElement = function(value) {\n        return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n      };\n    }\n\n    /**\n     * Checks if `value` is empty. A value is considered empty unless it is an\n     * `arguments` object, array, string, or jQuery-like collection with a length\n     * greater than `0` or an object with own enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Array|Object|string} value The value to inspect.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) && (isArray(value) || isString(value) || isArguments(value) ||\n          (isObjectLike(value) && isFunction(value.splice)))) {\n        return !value.length;\n      }\n      return !keys(value).length;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent. If `customizer` is provided it is invoked to compare values.\n     * If `customizer` returns `undefined` comparisons are handled by the method\n     * instead. The `customizer` is bound to `thisArg` and invoked with three\n     * arguments: (value, other [, index|key]).\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. Functions and DOM nodes\n     * are **not** supported. Provide a customizer function to extend support\n     * for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @alias eq\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'fred' };\n     *\n     * object == other;\n     * // => false\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * // using a customizer callback\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqual(array, other, function(value, other) {\n     *   if (_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/)) {\n     *     return true;\n     *   }\n     * });\n     * // => true\n     */\n    function isEqual(value, other, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return  result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      return isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag;\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on [`Number.isFinite`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.isfinite).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(10);\n     * // => true\n     *\n     * _.isFinite('10');\n     * // => false\n     *\n     * _.isFinite(true);\n     * // => false\n     *\n     * _.isFinite(Object(10));\n     * // => false\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     */\n    var isFinite = nativeNumIsFinite || function(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    };\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    var isFunction = !(baseIsFunction(/x/) || (Uint8Array && !baseIsFunction(Uint8Array))) ? baseIsFunction : function(value) {\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in older versions of Chrome and Safari which return 'function' for regexes\n      // and Safari 8 equivalents which return 'object' for typed array constructors.\n      return objToString.call(value) == funcTag;\n    };\n\n    /**\n     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(1);\n     * // => false\n     */\n    function isObject(value) {\n      // Avoid a V8 JIT bug in Chrome 19-20.\n      // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n      var type = typeof value;\n      return !!value && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Performs a deep comparison between `object` and `source` to determine if\n     * `object` contains equivalent property values. If `customizer` is provided\n     * it is invoked to compare values. If `customizer` returns `undefined`\n     * comparisons are handled by the method instead. The `customizer` is bound\n     * to `thisArg` and invoked with three arguments: (value, other, index|key).\n     *\n     * **Note:** This method supports comparing properties of arrays, booleans,\n     * `Date` objects, numbers, `Object` objects, regexes, and strings. Functions\n     * and DOM nodes are **not** supported. Provide a customizer function to extend\n     * support for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.isMatch(object, { 'age': 40 });\n     * // => true\n     *\n     * _.isMatch(object, { 'age': 36 });\n     * // => false\n     *\n     * // using a customizer callback\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatch(object, source, function(value, other) {\n     *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n     * });\n     * // => true\n     */\n    function isMatch(object, source, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      return baseIsMatch(object, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\n     * which returns `true` for `undefined` and other non-numeric values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some host objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a native function.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (value == null) {\n        return false;\n      }\n      if (objToString.call(value) == funcTag) {\n        return reIsNative.test(fnToString.call(value));\n      }\n      return isObjectLike(value) && reIsHostCtor.test(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n     * as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isNumber(8.4);\n     * // => true\n     *\n     * _.isNumber(NaN);\n     * // => true\n     *\n     * _.isNumber('8.4');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' || (isObjectLike(value) && objToString.call(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * **Note:** This method assumes objects created by the `Object` constructor\n     * have no inherited enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    var isPlainObject = !getPrototypeOf ? shimIsPlainObject : function(value) {\n      if (!(value && objToString.call(value) == objectTag)) {\n        return false;\n      }\n      var valueOf = getNative(value, 'valueOf'),\n          objProto = valueOf && (objProto = getPrototypeOf(valueOf)) && getPrototypeOf(objProto);\n\n      return objProto\n        ? (value == objProto || getPrototypeOf(value) == objProto)\n        : shimIsPlainObject(value);\n    };\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    function isRegExp(value) {\n      return isObjectLike(value) && objToString.call(value) == regexpTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    function isTypedArray(value) {\n      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n    }\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`, else `false`.\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    function lt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    function lte(value, other) {\n      return value <= other;\n    }\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * (function() {\n     *   return _.toArray(arguments).slice(1);\n     * }(1, 2, 3));\n     * // => [2, 3]\n     */\n    function toArray(value) {\n      var length = value ? getLength(value) : 0;\n      if (!isLength(length)) {\n        return values(value);\n      }\n      if (!length) {\n        return [];\n      }\n      return arrayCopy(value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable\n     * properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return baseCopy(value, keysIn(value));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object. Subsequent sources overwrite property assignments of previous sources.\n     * If `customizer` is provided it is invoked to produce the assigned values.\n     * The `customizer` is bound to `thisArg` and invoked with five arguments:\n     * (objectValue, sourceValue, key, object, source).\n     *\n     * **Note:** This method mutates `object` and is based on\n     * [`Object.assign`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign).\n     *\n     * @static\n     * @memberOf _\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using a customizer callback\n     * var defaults = _.partialRight(_.assign, function(value, other) {\n     *   return _.isUndefined(value) ? other : value;\n     * });\n     *\n     * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var assign = createAssigner(function(object, source, customizer) {\n      return customizer\n        ? assignWith(object, source, customizer)\n        : baseAssign(object, source);\n    });\n\n    /**\n     * Creates an object that inherits from the given `prototype` object. If a\n     * `properties` object is provided its own enumerable properties are assigned\n     * to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties, guard) {\n      var result = baseCreate(prototype);\n      if (guard && isIterateeCall(prototype, properties, guard)) {\n        properties = null;\n      }\n      return properties ? baseAssign(result, properties) : result;\n    }\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object for all destination properties that resolve to `undefined`. Once a\n     * property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var defaults = restParam(function(args) {\n      var object = args[0];\n      if (object == null) {\n        return object;\n      }\n      args.push(assignDefaults);\n      return assign.apply(undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    var findKey = createFindKey(baseForOwn);\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => returns `pebbles` assuming `_.findKey` returns `barney`\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    var findLastKey = createFindKey(baseForOwnRight);\n\n    /**\n     * Iterates over own and inherited enumerable properties of an object invoking\n     * `iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a', 'b', and 'c' (iteration order is not guaranteed)\n     */\n    var forIn = createForIn(baseFor);\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'\n     */\n    var forInRight = createForIn(baseForRight);\n\n    /**\n     * Iterates over own enumerable properties of an object invoking `iteratee`\n     * for each property. The `iteratee` is bound to `thisArg` and invoked with\n     * three arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a' and 'b' (iteration order is not guaranteed)\n     */\n    var forOwn = createForOwn(baseForOwn);\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'b' and 'a' assuming `_.forOwn` logs 'a' and 'b'\n     */\n    var forOwnRight = createForOwn(baseForOwnRight);\n\n    /**\n     * Creates an array of function property names from all enumerable properties,\n     * own and inherited, of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @alias methods\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the new array of property names.\n     * @example\n     *\n     * _.functions(_);\n     * // => ['after', 'ary', 'assign', ...]\n     */\n    function functions(object) {\n      return baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the property value at `path` of `object`. If the resolved value is\n     * `undefined` the `defaultValue` is used in its place.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, toPath(path), path + '');\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` is a direct property, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': { 'c': 3 } } };\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b.c');\n     * // => true\n     *\n     * _.has(object, ['a', 'b', 'c']);\n     * // => true\n     */\n    function has(object, path) {\n      if (object == null) {\n        return false;\n      }\n      var result = hasOwnProperty.call(object, path);\n      if (!result && !isKey(path)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        if (object == null) {\n          return false;\n        }\n        path = last(path);\n        result = hasOwnProperty.call(object, path);\n      }\n      return result || (isLength(object.length) && isIndex(path, object.length) &&\n        (isArray(object) || isArguments(object)));\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite property\n     * assignments of previous values unless `multiValue` is `true`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {boolean} [multiValue] Allow multiple values per key.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     *\n     * // with `multiValue`\n     * _.invert(object, true);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function invert(object, multiValue, guard) {\n      if (guard && isIterateeCall(object, multiValue, guard)) {\n        multiValue = null;\n      }\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key];\n\n        if (multiValue) {\n          if (hasOwnProperty.call(result, value)) {\n            result[value].push(key);\n          } else {\n            result[value] = [key];\n          }\n        }\n        else {\n          result[value] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    var keys = !nativeKeys ? shimKeys : function(object) {\n      var Ctor = object == null ? null : object.constructor;\n      if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n          (typeof object != 'function' && isArrayLike(object))) {\n        return shimKeys(object);\n      }\n      return isObject(object) ? nativeKeys(object) : [];\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      if (object == null) {\n        return [];\n      }\n      if (!isObject(object)) {\n        object = Object(object);\n      }\n      var length = object.length;\n      length = (length && isLength(length) &&\n        (isArray(object) || isArguments(object)) && length) || 0;\n\n      var Ctor = object.constructor,\n          index = -1,\n          isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n          result = Array(length),\n          skipIndexes = length > 0;\n\n      while (++index < length) {\n        result[index] = (index + '');\n      }\n      for (var key in object) {\n        if (!(skipIndexes && isIndex(key, length)) &&\n            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * property of `object` through `iteratee`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    var mapKeys = createObjectMapper(true);\n\n    /**\n     * Creates an object with the same keys as `object` and values generated by\n     * running each own enumerable property of `object` through `iteratee`. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, key, object).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapValues({ 'a': 1, 'b': 2 }, function(n) {\n     *   return n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * // using the `_.property` callback shorthand\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    var mapValues = createObjectMapper();\n\n    /**\n     * Recursively merges own enumerable properties of the source object(s), that\n     * don't resolve to `undefined` into the destination object. Subsequent sources\n     * overwrite property assignments of previous sources. If `customizer` is\n     * provided it is invoked to produce the merged values of the destination and\n     * source properties. If `customizer` returns `undefined` merging is handled\n     * by the method instead. The `customizer` is bound to `thisArg` and invoked\n     * with five arguments: (objectValue, sourceValue, key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var users = {\n     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n     * };\n     *\n     * var ages = {\n     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n     * };\n     *\n     * _.merge(users, ages);\n     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n     *\n     * // using a customizer callback\n     * var object = {\n     *   'fruits': ['apple'],\n     *   'vegetables': ['beet']\n     * };\n     *\n     * var other = {\n     *   'fruits': ['banana'],\n     *   'vegetables': ['carrot']\n     * };\n     *\n     * _.merge(object, other, function(a, b) {\n     *   if (_.isArray(a)) {\n     *     return a.concat(b);\n     *   }\n     * });\n     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n     */\n    var merge = createAssigner(baseMerge);\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable properties of `object` that are not omitted.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to omit, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.omit(object, 'age');\n     * // => { 'user': 'fred' }\n     *\n     * _.omit(object, _.isNumber);\n     * // => { 'user': 'fred' }\n     */\n    var omit = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      if (typeof props[0] != 'function') {\n        var props = arrayMap(baseFlatten(props), String);\n        return pickByArray(object, baseDifference(keysIn(object), props));\n      }\n      var predicate = bindCallback(props[0], props[1], 3);\n      return pickByCallback(object, function(value, key, object) {\n        return !predicate(value, key, object);\n      });\n    });\n\n    /**\n     * Creates a two dimensional array of the key-value pairs for `object`,\n     * e.g. `[[key1, value1], [key2, value2]]`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the new array of key-value pairs.\n     * @example\n     *\n     * _.pairs({ 'barney': 36, 'fred': 40 });\n     * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n     */\n    function pairs(object) {\n      object = toObject(object);\n\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        var key = props[index];\n        result[index] = [key, object[key]];\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties. Property\n     * names may be specified as individual arguments or as arrays of property\n     * names. If `predicate` is provided it is invoked for each property of `object`\n     * picking the properties `predicate` returns truthy for. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to pick, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.pick(object, 'user');\n     * // => { 'user': 'fred' }\n     *\n     * _.pick(object, _.isString);\n     * // => { 'user': 'fred' }\n     */\n    var pick = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      return typeof props[0] == 'function'\n        ? pickByCallback(object, bindCallback(props[0], props[1], 3))\n        : pickByArray(object, baseFlatten(props));\n    });\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a function\n     * it is invoked with the `this` binding of its parent object and its result\n     * is returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a.b.c', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a.b.c', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      var result = object == null ? undefined : object[path];\n      if (result === undefined) {\n        if (object != null && !isKey(path, object)) {\n          path = toPath(path);\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          result = object == null ? undefined : object[last(path)];\n        }\n        result = result === undefined ? defaultValue : result;\n      }\n      return isFunction(result) ? result.call(object) : result;\n    }\n\n    /**\n     * Sets the property value of `path` on `object`. If a portion of `path`\n     * does not exist it is created.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to augment.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, 'x[0].y.z', 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      if (object == null) {\n        return object;\n      }\n      var pathKey = (path + '');\n      path = (object[pathKey] != null || isKey(path, object)) ? [pathKey] : toPath(path);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = path[index];\n        if (isObject(nested)) {\n          if (index == lastIndex) {\n            nested[key] = value;\n          } else if (nested[key] == null) {\n            nested[key] = isIndex(path[index + 1]) ? [] : {};\n          }\n        }\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own enumerable\n     * properties through `iteratee`, with each invocation potentially mutating\n     * the `accumulator` object. The `iteratee` is bound to `thisArg` and invoked\n     * with four arguments: (accumulator, value, key, object). Iteratee functions\n     * may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Array|Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     */\n    function transform(object, iteratee, accumulator, thisArg) {\n      var isArr = isArray(object) || isTypedArray(object);\n      iteratee = getCallback(iteratee, thisArg, 4);\n\n      if (accumulator == null) {\n        if (isArr || isObject(object)) {\n          var Ctor = object.constructor;\n          if (isArr) {\n            accumulator = isArray(object) ? new Ctor : [];\n          } else {\n            accumulator = baseCreate(isFunction(Ctor) ? Ctor.prototype : null);\n          }\n        } else {\n          accumulator = {};\n        }\n      }\n      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Creates an array of the own enumerable property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property values\n     * of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Checks if `n` is between `start` and up to but not including, `end`. If\n     * `end` is not specified it is set to `start` with `start` then set to `0`.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} n The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `n` is in the range, else `false`.\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     */\n    function inRange(value, start, end) {\n      start = +start || 0;\n      if (typeof end === 'undefined') {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      return value >= nativeMin(start, end) && value < nativeMax(start, end);\n    }\n\n    /**\n     * Produces a random number between `min` and `max` (inclusive). If only one\n     * argument is provided a number between `0` and the given number is returned.\n     * If `floating` is `true`, or either `min` or `max` are floats, a floating-point\n     * number is returned instead of an integer.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} [min=0] The minimum possible value.\n     * @param {number} [max=1] The maximum possible value.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(min, max, floating) {\n      if (floating && isIterateeCall(min, max, floating)) {\n        max = floating = null;\n      }\n      var noMin = min == null,\n          noMax = max == null;\n\n      if (floating == null) {\n        if (noMax && typeof min == 'boolean') {\n          floating = min;\n          min = 1;\n        }\n        else if (typeof max == 'boolean') {\n          floating = max;\n          noMax = true;\n        }\n      }\n      if (noMin && noMax) {\n        max = 1;\n        noMax = false;\n      }\n      min = +min || 0;\n      if (noMax) {\n        max = min;\n        min = 0;\n      } else {\n        max = +max || 0;\n      }\n      if (floating || min % 1 || max % 1) {\n        var rand = nativeRandom();\n        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1)))), max);\n      }\n      return baseRandom(min, max);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__foo_bar__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? (word.charAt(0).toUpperCase() + word.slice(1)) : word);\n    });\n\n    /**\n     * Capitalizes the first character of `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('fred');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      string = baseToString(string);\n      return string && (string.charAt(0).toUpperCase() + string.slice(1));\n    }\n\n    /**\n     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = baseToString(string);\n      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search from.\n     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = baseToString(string);\n      target = (target + '');\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : nativeMin(position < 0 ? 0 : (+position || 0), length);\n\n      position -= target.length;\n      return position >= 0 && string.indexOf(target, position) == position;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\", in `string` to\n     * their corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional characters\n     * use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value.\n     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * Backticks are escaped because in Internet Explorer < 9, they can break out\n     * of attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n     * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)\n     * for more details.\n     *\n     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)\n     * to reduce XSS vectors.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      // Reset `lastIndex` because in IE < 9 `String#replace` does not.\n      string = baseToString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n     * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n     */\n    function escapeRegExp(string) {\n      string = baseToString(string);\n      return (string && reHasRegExpChars.test(string))\n        ? string.replace(reRegExpChars, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__foo_bar__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = baseToString(string);\n      length = +length;\n\n      var strLength = string.length;\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return string;\n      }\n      var mid = (length - strLength) / 2,\n          leftLength = floor(mid),\n          rightLength = ceil(mid);\n\n      chars = createPadding('', rightLength, chars);\n      return chars.slice(0, leftLength) + string + chars;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padLeft('abc', 6);\n     * // => '   abc'\n     *\n     * _.padLeft('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padLeft('abc', 3);\n     * // => 'abc'\n     */\n    var padLeft = createPadDir();\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padRight('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padRight('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padRight('abc', 3);\n     * // => 'abc'\n     */\n    var padRight = createPadDir(true);\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n     * in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#E)\n     * of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard && isIterateeCall(string, radix, guard)) {\n        radix = 0;\n      }\n      return nativeParseInt(string, radix);\n    }\n    // Fallback for environments with pre-ES5 implementations.\n    if (nativeParseInt(whitespace + '08') != 8) {\n      parseInt = function(string, radix, guard) {\n        // Firefox < 21 and Opera < 15 follow ES3 for `parseInt`.\n        // Chrome fails to trim leading <BOM> whitespace characters.\n        // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n        if (guard ? isIterateeCall(string, radix, guard) : radix == null) {\n          radix = 0;\n        } else if (radix) {\n          radix = +radix;\n        }\n        string = trim(string);\n        return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n      };\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=0] The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n) {\n      var result = '';\n      string = baseToString(string);\n      n = +n;\n      if (n < 1 || !string || !nativeIsFinite(n)) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = floor(n / 2);\n        string += string;\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--foo-bar');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__foo_bar__');\n     * // => 'Foo Bar'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + (word.charAt(0).toUpperCase() + word.slice(1));\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = baseToString(string);\n      position = position == null\n        ? 0\n        : nativeMin(position < 0 ? 0 : (+position || 0), string.length);\n\n      return string.lastIndexOf(target, position) == position;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is provided it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options] The options object.\n     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n     * @param {Object} [options.imports] An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n     * @param {string} [options.variable] The data object variable name.\n     * @param- {Object} [otherOptions] Enables the legacy `options` param signature.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // using the \"interpolate\" delimiter to create a compiled template\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // using the HTML \"escape\" delimiter to escape data property values\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // using the \"evaluate\" delimiter to execute JavaScript and generate HTML\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the internal `print` function in \"evaluate\" delimiters\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // using the ES delimiter as an alternative to the default \"interpolate\" delimiter\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // using custom template delimiters\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // using backslashes to treat delimiters as plain text\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // using the `imports` option to import `jQuery` as `jq`\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the `sourceURL` option to specify a custom sourceURL for the template\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n     *\n     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // using the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and a stack trace\n     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, otherOptions) {\n      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (otherOptions && isIterateeCall(string, options, otherOptions)) {\n        options = otherOptions = null;\n      }\n      string = baseToString(string);\n      options = assignWith(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);\n\n      var imports = assignWith(baseAssign({}, options.imports), settings.imports, assignOwnDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products requires returning the `match`\n        // string in order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + 1);\n      }\n      chars = (chars + '');\n      return string.slice(charsLeftIndex(string, chars), charsRightIndex(string, chars) + 1);\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimLeft('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimLeft('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimLeft(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string));\n      }\n      return string.slice(charsLeftIndex(string, (chars + '')));\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimRight('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimRight('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimRight(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(0, trimmedRightIndex(string) + 1);\n      }\n      return string.slice(0, charsRightIndex(string, (chars + '')) + 1);\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object|number} [options] The options object or maximum string length.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.trunc('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', 24);\n     * // => 'hi-diddly-ho there, n...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function trunc(string, options, guard) {\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = null;\n      }\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (options != null) {\n        if (isObject(options)) {\n          var separator = 'separator' in options ? options.separator : separator;\n          length = 'length' in options ? (+options.length || 0) : length;\n          omission = 'omission' in options ? baseToString(options.omission) : omission;\n        } else {\n          length = +options || 0;\n        }\n      }\n      string = baseToString(string);\n      if (length >= string.length) {\n        return string;\n      }\n      var end = length - omission.length;\n      if (end < 1) {\n        return omission;\n      }\n      var result = string.slice(0, end);\n      if (separator == null) {\n        return result + omission;\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              newEnd,\n              substring = string.slice(0, end);\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, (reFlags.exec(separator) || '') + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            newEnd = match.index;\n          }\n          result = result.slice(0, newEnd == null ? end : newEnd);\n        }\n      } else if (string.indexOf(separator, end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n     * corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n     * entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = baseToString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      if (guard && isIterateeCall(string, pattern, guard)) {\n        pattern = null;\n      }\n      string = baseToString(string);\n      return string.match(pattern || reWords) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function} func The function to attempt.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // avoid throwing errors for invalid selectors\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = restParam(function(func, args) {\n      try {\n        return func.apply(undefined, args);\n      } catch(e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and arguments of the created function. If `func` is a property name the\n     * created callback returns the property value for a given element. If `func`\n     * is an object the created callback returns `true` for elements that contain\n     * the equivalent object properties, otherwise it returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias iteratee\n     * @category Utility\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // wrap to create custom callback shorthands\n     * _.callback = _.wrap(_.callback, function(callback, func, thisArg) {\n     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(func);\n     *   if (!match) {\n     *     return callback(func, thisArg);\n     *   }\n     *   return function(object) {\n     *     return match[2] == 'gt'\n     *       ? object[match[1]] > match[3]\n     *       : object[match[1]] < match[3];\n     *   };\n     * });\n     *\n     * _.filter(users, 'age__gt36');\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     */\n    function callback(func, thisArg, guard) {\n      if (guard && isIterateeCall(func, thisArg, guard)) {\n        thisArg = null;\n      }\n      return isObjectLike(func)\n        ? matches(func)\n        : baseCallback(func, thisArg);\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var getter = _.constant(object);\n     *\n     * getter() === object;\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * This method returns the first argument provided to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.identity(object) === object;\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that performs a deep comparison between a given object\n     * and `source`, returning `true` if the given object has equivalent property\n     * values, else `false`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that compares the property value of `path` on a given\n     * object to `value`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * _.find(users, _.matchesProperty('user', 'fred'));\n     * // => { 'user': 'fred' }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, true));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` on a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': _.constant(2) } } },\n     *   { 'a': { 'b': { 'c': _.constant(1) } } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.invoke(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    var method = restParam(function(path, args) {\n      return function(object) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path on `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = restParam(function(object, args) {\n      return function(path) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable function properties of a source object to the\n     * destination object. If `object` is a function then methods are added to\n     * its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.chain=true] Specify whether the functions added\n     *  are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      if (options == null) {\n        var isObj = isObject(source),\n            props = isObj ? keys(source) : null,\n            methodNames = (props && props.length) ? baseFunctions(source, props) : null;\n\n        if (!(methodNames ? methodNames.length : isObj)) {\n          methodNames = false;\n          options = source;\n          source = object;\n          object = this;\n        }\n      }\n      if (!methodNames) {\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = true,\n          index = -1,\n          isFunc = isFunction(object),\n          length = methodNames.length;\n\n      if (options === false) {\n        chain = false;\n      } else if (isObject(options) && 'chain' in options) {\n        chain = options.chain;\n      }\n      while (++index < length) {\n        var methodName = methodNames[index],\n            func = source[methodName];\n\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = (function(func) {\n            return function() {\n              var chainAll = this.__chain__;\n              if (chain || chainAll) {\n                var result = object(this.__wrapped__),\n                    actions = result.__actions__ = arrayCopy(this.__actions__);\n\n                actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n                result.__chain__ = chainAll;\n                return result;\n              }\n              var args = [this.value()];\n              push.apply(args, arguments);\n              return func.apply(object, args);\n            };\n          }(func));\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      context._ = oldDash;\n      return this;\n    }\n\n    /**\n     * A no-operation function that returns `undefined` regardless of the\n     * arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.noop(object) === undefined;\n     * // => true\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that returns the property value at `path` on a\n     * given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': 2 } } },\n     *   { 'a': { 'b': { 'c': 1 } } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the property value at a given path on `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return baseGet(object, toPath(path), path + '');\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. If `end` is not specified it is\n     * set to `start` with `start` then set to `0`. If `end` is less than `start`\n     * a zero-length range is created unless a negative `step` is specified.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the new array of numbers.\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    function range(start, end, step) {\n      if (step && isIterateeCall(start, end, step)) {\n        end = step = null;\n      }\n      start = +start || 0;\n      step = step == null ? 1 : (+step || 0);\n\n      if (end == null) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      // Use `Array(length)` so engines like Chakra and V8 avoid slower modes.\n      // See https://youtu.be/XAqIpGU8ZZk#t=17m25s for more details.\n      var index = -1,\n          length = nativeMax(ceil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the iteratee function `n` times, returning an array of the results\n     * of each invocation. The `iteratee` is bound to `thisArg` and invoked with\n     * one argument; (index).\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * var diceRolls = _.times(3, _.partial(_.random, 1, 6, false));\n     * // => [3, 6, 4]\n     *\n     * _.times(3, function(n) {\n     *   mage.castSpell(n);\n     * });\n     * // => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2`\n     *\n     * _.times(3, function(n) {\n     *   this.cast(n);\n     * }, mage);\n     * // => also invokes `mage.castSpell(n)` three times\n     */\n    function times(n, iteratee, thisArg) {\n      n = floor(n);\n\n      // Exit early to avoid a JSC JIT bug in Safari 8\n      // where `Array(0)` is treated as `Array(1)`.\n      if (n < 1 || !nativeIsFinite(n)) {\n        return [];\n      }\n      var index = -1,\n          result = Array(nativeMin(n, MAX_ARRAY_LENGTH));\n\n      iteratee = bindCallback(iteratee, thisArg, 1);\n      while (++index < n) {\n        if (index < MAX_ARRAY_LENGTH) {\n          result[index] = iteratee(index);\n        } else {\n          iteratee(index);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is provided the ID is appended to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {string} [prefix] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return baseToString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} augend The first number to add.\n     * @param {number} addend The second number to add.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    function add(augend, addend) {\n      return (+augend || 0) + (+addend || 0);\n    }\n\n    /**\n     * Gets the maximum value of `collection`. If `collection` is empty or falsey\n     * `-Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => -Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.max(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.max(users, 'age');\n     * // => { 'user': 'fred', 'age': 40 }\n     */\n    var max = createExtremum(gt, NEGATIVE_INFINITY);\n\n    /**\n     * Gets the minimum value of `collection`. If `collection` is empty or falsey\n     * `Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.min(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.min(users, 'age');\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var min = createExtremum(lt, POSITIVE_INFINITY);\n\n    /**\n     * Gets the sum of the values in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 6]);\n     * // => 10\n     *\n     * _.sum({ 'a': 4, 'b': 6 });\n     * // => 10\n     *\n     * var objects = [\n     *   { 'n': 4 },\n     *   { 'n': 6 }\n     * ];\n     *\n     * _.sum(objects, function(object) {\n     *   return object.n;\n     * });\n     * // => 10\n     *\n     * // using the `_.property` callback shorthand\n     * _.sum(objects, 'n');\n     * // => 10\n     */\n    function sum(collection, iteratee, thisArg) {\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = null;\n      }\n      var callback = getCallback(),\n          noIteratee = iteratee == null;\n\n      if (!(noIteratee && callback === baseCallback)) {\n        noIteratee = false;\n        iteratee = callback(iteratee, thisArg, 3);\n      }\n      return noIteratee\n        ? arraySum(isArray(collection) ? collection : toIterable(collection))\n        : baseSum(collection, iteratee);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    // Add functions to the `Map` cache.\n    MapCache.prototype['delete'] = mapDelete;\n    MapCache.prototype.get = mapGet;\n    MapCache.prototype.has = mapHas;\n    MapCache.prototype.set = mapSet;\n\n    // Add functions to the `Set` cache.\n    SetCache.prototype.push = cachePush;\n\n    // Assign cache to `_.memoize`.\n    memoize.Cache = MapCache;\n\n    // Add functions that return wrapped values when chaining.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.callback = callback;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.functions = functions;\n    lodash.groupBy = groupBy;\n    lodash.indexBy = indexBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.invert = invert;\n    lodash.invoke = invoke;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.omit = omit;\n    lodash.once = once;\n    lodash.pairs = pairs;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pluck = pluck;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.restParam = restParam;\n    lodash.set = set;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortByAll = sortByAll;\n    lodash.sortByOrder = sortByOrder;\n    lodash.spread = spread;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.times = times;\n    lodash.toArray = toArray;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.union = union;\n    lodash.uniq = uniq;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.where = where;\n    lodash.without = without;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.backflow = flowRight;\n    lodash.collect = map;\n    lodash.compose = flowRight;\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.extend = assign;\n    lodash.iteratee = callback;\n    lodash.methods = functions;\n    lodash.object = zipObject;\n    lodash.select = filter;\n    lodash.tail = rest;\n    lodash.unique = uniq;\n\n    // Add functions to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions that return unwrapped values when chaining.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.deburr = deburr;\n    lodash.endsWith = endsWith;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.findWhere = findWhere;\n    lodash.first = first;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isBoolean = isBoolean;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isMatch = isMatch;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isString = isString;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.min = min;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padLeft = padLeft;\n    lodash.padRight = padRight;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.result = result;\n    lodash.runInContext = runInContext;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.sum = sum;\n    lodash.template = template;\n    lodash.trim = trim;\n    lodash.trimLeft = trimLeft;\n    lodash.trimRight = trimRight;\n    lodash.trunc = trunc;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.words = words;\n\n    // Add aliases.\n    lodash.all = every;\n    lodash.any = some;\n    lodash.contains = includes;\n    lodash.eq = isEqual;\n    lodash.detect = find;\n    lodash.foldl = reduce;\n    lodash.foldr = reduceRight;\n    lodash.head = first;\n    lodash.include = includes;\n    lodash.inject = reduce;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!lodash.prototype[methodName]) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), false);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions capable of returning wrapped and unwrapped values when chaining.\n    lodash.sample = sample;\n\n    lodash.prototype.sample = function(n) {\n      if (!this.__chain__ && n == null) {\n        return sample(this.value());\n      }\n      return this.thru(function(value) {\n        return sample(value, n);\n      });\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type string\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['dropWhile', 'filter', 'map', 'takeWhile'], function(methodName, type) {\n      var isFilter = type != LAZY_MAP_FLAG,\n          isDropWhile = type == LAZY_DROP_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee, thisArg) {\n        var filtered = this.__filtered__,\n            result = (filtered && isDropWhile) ? new LazyWrapper(this) : this.clone(),\n            iteratees = result.__iteratees__ || (result.__iteratees__ = []);\n\n        iteratees.push({\n          'done': false,\n          'count': 0,\n          'index': 0,\n          'iteratee': getCallback(iteratee, thisArg, 1),\n          'limit': -1,\n          'type': type\n        });\n\n        result.__filtered__ = filtered || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      var whileName = methodName + 'While';\n\n      LazyWrapper.prototype[methodName] = function(n) {\n        var filtered = this.__filtered__,\n            result = (filtered && !index) ? this.dropWhile() : this.clone();\n\n        n = n == null ? 1 : nativeMax(floor(n) || 0, 0);\n        if (filtered) {\n          if (index) {\n            result.__takeCount__ = nativeMin(result.__takeCount__, n);\n          } else {\n            last(result.__iteratees__).limit = n;\n          }\n        } else {\n          var views = result.__views__ || (result.__views__ = []);\n          views.push({ 'size': n, 'type': methodName + (result.__dir__ < 0 ? 'Right' : '') });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n\n      LazyWrapper.prototype[methodName + 'RightWhile'] = function(predicate, thisArg) {\n        return this.reverse()[whileName](predicate, thisArg).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.first` and `_.last`.\n    arrayEach(['first', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.rest`.\n    arrayEach(['initial', 'rest'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[dropName](1);\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.pluck` and `_.where`.\n    arrayEach(['pluck', 'where'], function(methodName, index) {\n      var operationName = index ? 'filter' : 'map',\n          createCallback = index ? baseMatches : property;\n\n      LazyWrapper.prototype[methodName] = function(value) {\n        return this[operationName](createCallback(value));\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.reject = function(predicate, thisArg) {\n      predicate = getCallback(predicate, thisArg, 1);\n      return this.filter(function(value) {\n        return !predicate(value);\n      });\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = start == null ? 0 : (+start || 0);\n\n      var result = this;\n      if (start < 0) {\n        result = this.takeRight(-start);\n      } else if (start) {\n        result = this.drop(start);\n      }\n      if (end !== undefined) {\n        end = (+end || 0);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.drop(0);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (!lodashFunc) {\n        return;\n      }\n      var checkIteratee = /^(?:filter|map|reject)|While$/.test(methodName),\n          retUnwrapped = /^(?:first|last)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments,\n            chainAll = this.__chain__,\n            value = this.__wrapped__,\n            isHybrid = !!this.__actions__.length,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // avoid lazy use if the iteratee has a \"length\" value other than `1`\n          isLazy = useLazy = false;\n        }\n        var onlyLazy = isLazy && !isHybrid;\n        if (retUnwrapped && !chainAll) {\n          return onlyLazy\n            ? func.call(value)\n            : lodashFunc.call(lodash, this.value());\n        }\n        var interceptor = function(value) {\n          var otherArgs = [value];\n          push.apply(otherArgs, args);\n          return lodashFunc.apply(lodash, otherArgs);\n        };\n        if (useLazy) {\n          var wrapper = onlyLazy ? value : new LazyWrapper(this),\n              result = func.apply(wrapper, args);\n\n          if (!retUnwrapped && (isHybrid || result.__actions__)) {\n            var actions = result.__actions__ || (result.__actions__ = []);\n            actions.push({ 'func': thru, 'args': [interceptor], 'thisArg': lodash });\n          }\n          return new LodashWrapper(result, chainAll);\n        }\n        return this.thru(interceptor);\n      };\n    });\n\n    // Add `Array` and `String` methods to `lodash.prototype`.\n    arrayEach(['concat', 'join', 'pop', 'push', 'replace', 'shift', 'sort', 'splice', 'split', 'unshift'], function(methodName) {\n      var func = (/^(?:replace|split)$/.test(methodName) ? stringProto : arrayProto)[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:join|pop|replace|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          return func.apply(this.value(), args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(value, args);\n        });\n      };\n    });\n\n    // Map minified function names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name,\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybridWrapper(null, BIND_KEY_FLAG).name] = [{ 'name': 'wrapper', 'func': null }];\n\n    // Add functions to the lazy wrapper.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chaining functions to the `lodash` wrapper.\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toString = wrapperToString;\n    lodash.prototype.run = lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add function aliases to the `lodash` wrapper.\n    lodash.prototype.collect = lodash.prototype.map;\n    lodash.prototype.head = lodash.prototype.first;\n    lodash.prototype.select = lodash.prototype.filter;\n    lodash.prototype.tail = lodash.prototype.rest;\n\n    return lodash;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers like r.js check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose lodash to the global object when an AMD loader is present to avoid\n    // errors in cases where lodash is loaded by a script tag and not intended\n    // as an AMD module. See http://requirejs.org/docs/errors.html#mismatch for\n    // more details.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeExports && freeModule) {\n    // Export for Node.js or RingoJS.\n    if (moduleExports) {\n      (freeModule.exports = _)._ = _;\n    }\n    // Export for Rhino with CommonJS support.\n    else {\n      freeExports._ = _;\n    }\n  }\n  else {\n    // Export for a browser or Rhino.\n    root._ = _;\n  }\n}.call(this));\n","// ┌────────────────────────────────────────────────────────────────────┐ \\\\\r\n// │ Raphaël 2.1.4 - JavaScript Vector Library                          │ \\\\\r\n// ├────────────────────────────────────────────────────────────────────┤ \\\\\r\n// │ Copyright © 2008-2012 Dmitry Baranovskiy (http://raphaeljs.com)    │ \\\\\r\n// │ Copyright © 2008-2012 Sencha Labs (http://sencha.com)              │ \\\\\r\n// ├────────────────────────────────────────────────────────────────────┤ \\\\\r\n// │ Licensed under the MIT (http://raphaeljs.com/license.html) license.│ \\\\\r\n// └────────────────────────────────────────────────────────────────────┘ \\\\\r\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\r\n// \r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n// \r\n// http://www.apache.org/licenses/LICENSE-2.0\r\n// \r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// ┌────────────────────────────────────────────────────────────┐ \\\\\r\n// │ Eve 0.4.2 - JavaScript Events Library                      │ \\\\\r\n// ├────────────────────────────────────────────────────────────┤ \\\\\r\n// │ Author Dmitry Baranovskiy (http://dmitry.baranovskiy.com/) │ \\\\\r\n// └────────────────────────────────────────────────────────────┘ \\\\\r\n\r\n(function (glob) {\r\n    var version = \"0.4.2\",\r\n        has = \"hasOwnProperty\",\r\n        separator = /[\\.\\/]/,\r\n        wildcard = \"*\",\r\n        fun = function () {},\r\n        numsort = function (a, b) {\r\n            return a - b;\r\n        },\r\n        current_event,\r\n        stop,\r\n        events = {n: {}},\r\n    /*\\\r\n     * eve\r\n     [ method ]\r\n\r\n     * Fires event with given `name`, given scope and other parameters.\r\n\r\n     > Arguments\r\n\r\n     - name (string) name of the *event*, dot (`.`) or slash (`/`) separated\r\n     - scope (object) context for the event handlers\r\n     - varargs (...) the rest of arguments will be sent to event handlers\r\n\r\n     = (object) array of returned values from the listeners\r\n    \\*/\r\n        eve = function (name, scope) {\r\n\t\t\tname = String(name);\r\n            var e = events,\r\n                oldstop = stop,\r\n                args = Array.prototype.slice.call(arguments, 2),\r\n                listeners = eve.listeners(name),\r\n                z = 0,\r\n                f = false,\r\n                l,\r\n                indexed = [],\r\n                queue = {},\r\n                out = [],\r\n                ce = current_event,\r\n                errors = [];\r\n            current_event = name;\r\n            stop = 0;\r\n            for (var i = 0, ii = listeners.length; i < ii; i++) if (\"zIndex\" in listeners[i]) {\r\n                indexed.push(listeners[i].zIndex);\r\n                if (listeners[i].zIndex < 0) {\r\n                    queue[listeners[i].zIndex] = listeners[i];\r\n                }\r\n            }\r\n            indexed.sort(numsort);\r\n            while (indexed[z] < 0) {\r\n                l = queue[indexed[z++]];\r\n                out.push(l.apply(scope, args));\r\n                if (stop) {\r\n                    stop = oldstop;\r\n                    return out;\r\n                }\r\n            }\r\n            for (i = 0; i < ii; i++) {\r\n                l = listeners[i];\r\n                if (\"zIndex\" in l) {\r\n                    if (l.zIndex == indexed[z]) {\r\n                        out.push(l.apply(scope, args));\r\n                        if (stop) {\r\n                            break;\r\n                        }\r\n                        do {\r\n                            z++;\r\n                            l = queue[indexed[z]];\r\n                            l && out.push(l.apply(scope, args));\r\n                            if (stop) {\r\n                                break;\r\n                            }\r\n                        } while (l)\r\n                    } else {\r\n                        queue[l.zIndex] = l;\r\n                    }\r\n                } else {\r\n                    out.push(l.apply(scope, args));\r\n                    if (stop) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            stop = oldstop;\r\n            current_event = ce;\r\n            return out.length ? out : null;\r\n        };\r\n\t\t// Undocumented. Debug only.\r\n\t\teve._events = events;\r\n    /*\\\r\n     * eve.listeners\r\n     [ method ]\r\n\r\n     * Internal method which gives you array of all event handlers that will be triggered by the given `name`.\r\n\r\n     > Arguments\r\n\r\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated\r\n\r\n     = (array) array of event handlers\r\n    \\*/\r\n    eve.listeners = function (name) {\r\n        var names = name.split(separator),\r\n            e = events,\r\n            item,\r\n            items,\r\n            k,\r\n            i,\r\n            ii,\r\n            j,\r\n            jj,\r\n            nes,\r\n            es = [e],\r\n            out = [];\r\n        for (i = 0, ii = names.length; i < ii; i++) {\r\n            nes = [];\r\n            for (j = 0, jj = es.length; j < jj; j++) {\r\n                e = es[j].n;\r\n                items = [e[names[i]], e[wildcard]];\r\n                k = 2;\r\n                while (k--) {\r\n                    item = items[k];\r\n                    if (item) {\r\n                        nes.push(item);\r\n                        out = out.concat(item.f || []);\r\n                    }\r\n                }\r\n            }\r\n            es = nes;\r\n        }\r\n        return out;\r\n    };\r\n    \r\n    /*\\\r\n     * eve.on\r\n     [ method ]\r\n     **\r\n     * Binds given event handler with a given name. You can use wildcards “`*`” for the names:\r\n     | eve.on(\"*.under.*\", f);\r\n     | eve(\"mouse.under.floor\"); // triggers f\r\n     * Use @eve to trigger the listener.\r\n     **\r\n     > Arguments\r\n     **\r\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\r\n     - f (function) event handler function\r\n     **\r\n     = (function) returned function accepts a single numeric parameter that represents z-index of the handler. It is an optional feature and only used when you need to ensure that some subset of handlers will be invoked in a given order, despite of the order of assignment. \r\n     > Example:\r\n     | eve.on(\"mouse\", eatIt)(2);\r\n     | eve.on(\"mouse\", scream);\r\n     | eve.on(\"mouse\", catchIt)(1);\r\n     * This will ensure that `catchIt()` function will be called before `eatIt()`.\r\n\t *\r\n     * If you want to put your handler before non-indexed handlers, specify a negative value.\r\n     * Note: I assume most of the time you don’t need to worry about z-index, but it’s nice to have this feature “just in case”.\r\n    \\*/\r\n    eve.on = function (name, f) {\r\n\t\tname = String(name);\r\n\t\tif (typeof f != \"function\") {\r\n\t\t\treturn function () {};\r\n\t\t}\r\n        var names = name.split(separator),\r\n            e = events;\r\n        for (var i = 0, ii = names.length; i < ii; i++) {\r\n            e = e.n;\r\n            e = e.hasOwnProperty(names[i]) && e[names[i]] || (e[names[i]] = {n: {}});\r\n        }\r\n        e.f = e.f || [];\r\n        for (i = 0, ii = e.f.length; i < ii; i++) if (e.f[i] == f) {\r\n            return fun;\r\n        }\r\n        e.f.push(f);\r\n        return function (zIndex) {\r\n            if (+zIndex == +zIndex) {\r\n                f.zIndex = +zIndex;\r\n            }\r\n        };\r\n    };\r\n    /*\\\r\n     * eve.f\r\n     [ method ]\r\n     **\r\n     * Returns function that will fire given event with optional arguments.\r\n\t * Arguments that will be passed to the result function will be also\r\n\t * concated to the list of final arguments.\r\n \t | el.onclick = eve.f(\"click\", 1, 2);\r\n \t | eve.on(\"click\", function (a, b, c) {\r\n \t |     console.log(a, b, c); // 1, 2, [event object]\r\n \t | });\r\n     > Arguments\r\n\t - event (string) event name\r\n\t - varargs (…) and any other arguments\r\n\t = (function) possible event handler function\r\n    \\*/\r\n\teve.f = function (event) {\r\n\t\tvar attrs = [].slice.call(arguments, 1);\r\n\t\treturn function () {\r\n\t\t\teve.apply(null, [event, null].concat(attrs).concat([].slice.call(arguments, 0)));\r\n\t\t};\r\n\t};\r\n    /*\\\r\n     * eve.stop\r\n     [ method ]\r\n     **\r\n     * Is used inside an event handler to stop the event, preventing any subsequent listeners from firing.\r\n    \\*/\r\n    eve.stop = function () {\r\n        stop = 1;\r\n    };\r\n    /*\\\r\n     * eve.nt\r\n     [ method ]\r\n     **\r\n     * Could be used inside event handler to figure out actual name of the event.\r\n     **\r\n     > Arguments\r\n     **\r\n     - subname (string) #optional subname of the event\r\n     **\r\n     = (string) name of the event, if `subname` is not specified\r\n     * or\r\n     = (boolean) `true`, if current event’s name contains `subname`\r\n    \\*/\r\n    eve.nt = function (subname) {\r\n        if (subname) {\r\n            return new RegExp(\"(?:\\\\.|\\\\/|^)\" + subname + \"(?:\\\\.|\\\\/|$)\").test(current_event);\r\n        }\r\n        return current_event;\r\n    };\r\n    /*\\\r\n     * eve.nts\r\n     [ method ]\r\n     **\r\n     * Could be used inside event handler to figure out actual name of the event.\r\n     **\r\n     **\r\n     = (array) names of the event\r\n    \\*/\r\n    eve.nts = function () {\r\n        return current_event.split(separator);\r\n    };\r\n    /*\\\r\n     * eve.off\r\n     [ method ]\r\n     **\r\n     * Removes given function from the list of event listeners assigned to given name.\r\n\t * If no arguments specified all the events will be cleared.\r\n     **\r\n     > Arguments\r\n     **\r\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\r\n     - f (function) event handler function\r\n    \\*/\r\n    /*\\\r\n     * eve.unbind\r\n     [ method ]\r\n     **\r\n     * See @eve.off\r\n    \\*/\r\n    eve.off = eve.unbind = function (name, f) {\r\n\t\tif (!name) {\r\n\t\t    eve._events = events = {n: {}};\r\n\t\t\treturn;\r\n\t\t}\r\n        var names = name.split(separator),\r\n            e,\r\n            key,\r\n            splice,\r\n            i, ii, j, jj,\r\n            cur = [events];\r\n        for (i = 0, ii = names.length; i < ii; i++) {\r\n            for (j = 0; j < cur.length; j += splice.length - 2) {\r\n                splice = [j, 1];\r\n                e = cur[j].n;\r\n                if (names[i] != wildcard) {\r\n                    if (e[names[i]]) {\r\n                        splice.push(e[names[i]]);\r\n                    }\r\n                } else {\r\n                    for (key in e) if (e[has](key)) {\r\n                        splice.push(e[key]);\r\n                    }\r\n                }\r\n                cur.splice.apply(cur, splice);\r\n            }\r\n        }\r\n        for (i = 0, ii = cur.length; i < ii; i++) {\r\n            e = cur[i];\r\n            while (e.n) {\r\n                if (f) {\r\n                    if (e.f) {\r\n                        for (j = 0, jj = e.f.length; j < jj; j++) if (e.f[j] == f) {\r\n                            e.f.splice(j, 1);\r\n                            break;\r\n                        }\r\n                        !e.f.length && delete e.f;\r\n                    }\r\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\r\n                        var funcs = e.n[key].f;\r\n                        for (j = 0, jj = funcs.length; j < jj; j++) if (funcs[j] == f) {\r\n                            funcs.splice(j, 1);\r\n                            break;\r\n                        }\r\n                        !funcs.length && delete e.n[key].f;\r\n                    }\r\n                } else {\r\n                    delete e.f;\r\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\r\n                        delete e.n[key].f;\r\n                    }\r\n                }\r\n                e = e.n;\r\n            }\r\n        }\r\n    };\r\n    /*\\\r\n     * eve.once\r\n     [ method ]\r\n     **\r\n     * Binds given event handler with a given name to only run once then unbind itself.\r\n     | eve.once(\"login\", f);\r\n     | eve(\"login\"); // triggers f\r\n     | eve(\"login\"); // no listeners\r\n     * Use @eve to trigger the listener.\r\n     **\r\n     > Arguments\r\n     **\r\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\r\n     - f (function) event handler function\r\n     **\r\n     = (function) same return function as @eve.on\r\n    \\*/\r\n    eve.once = function (name, f) {\r\n        var f2 = function () {\r\n            eve.unbind(name, f2);\r\n            return f.apply(this, arguments);\r\n        };\r\n        return eve.on(name, f2);\r\n    };\r\n    /*\\\r\n     * eve.version\r\n     [ property (string) ]\r\n     **\r\n     * Current version of the library.\r\n    \\*/\r\n    eve.version = version;\r\n    eve.toString = function () {\r\n        return \"You are running Eve \" + version;\r\n    };\r\n    (typeof module != \"undefined\" && module.exports) ? (module.exports = eve) : (typeof define != \"undefined\" ? (define(\"eve\", [], function() { return eve; })) : (glob.eve = eve));\r\n})(this);\r\n// ┌─────────────────────────────────────────────────────────────────────┐ \\\\\r\n// │ \"Raphaël 2.1.2\" - JavaScript Vector Library                         │ \\\\\r\n// ├─────────────────────────────────────────────────────────────────────┤ \\\\\r\n// │ Copyright (c) 2008-2011 Dmitry Baranovskiy (http://raphaeljs.com)   │ \\\\\r\n// │ Copyright (c) 2008-2011 Sencha Labs (http://sencha.com)             │ \\\\\r\n// │ Licensed under the MIT (http://raphaeljs.com/license.html) license. │ \\\\\r\n// └─────────────────────────────────────────────────────────────────────┘ \\\\\r\n\r\n(function (glob, factory) {\r\n    // AMD support\r\n    if (typeof define === \"function\" && define.amd) {\r\n        // Define as an anonymous module\r\n        define([\"eve\"], function( eve ) {\r\n            return factory(glob, eve);\r\n        });\r\n    } else {\r\n        // Browser globals (glob is window)\r\n        // Raphael adds itself to window\r\n        factory(glob, glob.eve || (typeof require == \"function\" && require('eve')) );\r\n    }\r\n}(this, function (window, eve) {\r\n    /*\\\r\n     * Raphael\r\n     [ method ]\r\n     **\r\n     * Creates a canvas object on which to draw.\r\n     * You must do this first, as all future calls to drawing methods\r\n     * from this instance will be bound to this canvas.\r\n     > Parameters\r\n     **\r\n     - container (HTMLElement|string) DOM element or its ID which is going to be a parent for drawing surface\r\n     - width (number)\r\n     - height (number)\r\n     - callback (function) #optional callback function which is going to be executed in the context of newly created paper\r\n     * or\r\n     - x (number)\r\n     - y (number)\r\n     - width (number)\r\n     - height (number)\r\n     - callback (function) #optional callback function which is going to be executed in the context of newly created paper\r\n     * or\r\n     - all (array) (first 3 or 4 elements in the array are equal to [containerID, width, height] or [x, y, width, height]. The rest are element descriptions in format {type: type, <attributes>}). See @Paper.add.\r\n     - callback (function) #optional callback function which is going to be executed in the context of newly created paper\r\n     * or\r\n     - onReadyCallback (function) function that is going to be called on DOM ready event. You can also subscribe to this event via Eve’s “DOMLoad” event. In this case method returns `undefined`.\r\n     = (object) @Paper\r\n     > Usage\r\n     | // Each of the following examples create a canvas\r\n     | // that is 320px wide by 200px high.\r\n     | // Canvas is created at the viewport’s 10,50 coordinate.\r\n     | var paper = Raphael(10, 50, 320, 200);\r\n     | // Canvas is created at the top left corner of the #notepad element\r\n     | // (or its top right corner in dir=\"rtl\" elements)\r\n     | var paper = Raphael(document.getElementById(\"notepad\"), 320, 200);\r\n     | // Same as above\r\n     | var paper = Raphael(\"notepad\", 320, 200);\r\n     | // Image dump\r\n     | var set = Raphael([\"notepad\", 320, 200, {\r\n     |     type: \"rect\",\r\n     |     x: 10,\r\n     |     y: 10,\r\n     |     width: 25,\r\n     |     height: 25,\r\n     |     stroke: \"#f00\"\r\n     | }, {\r\n     |     type: \"text\",\r\n     |     x: 30,\r\n     |     y: 40,\r\n     |     text: \"Dump\"\r\n     | }]);\r\n    \\*/\r\n    function R(first) {\r\n        if (R.is(first, \"function\")) {\r\n            return loaded ? first() : eve.on(\"raphael.DOMload\", first);\r\n        } else if (R.is(first, array)) {\r\n            return R._engine.create[apply](R, first.splice(0, 3 + R.is(first[0], nu))).add(first);\r\n        } else {\r\n            var args = Array.prototype.slice.call(arguments, 0);\r\n            if (R.is(args[args.length - 1], \"function\")) {\r\n                var f = args.pop();\r\n                return loaded ? f.call(R._engine.create[apply](R, args)) : eve.on(\"raphael.DOMload\", function () {\r\n                    f.call(R._engine.create[apply](R, args));\r\n                });\r\n            } else {\r\n                return R._engine.create[apply](R, arguments);\r\n            }\r\n        }\r\n    }\r\n    R.version = \"2.1.2\";\r\n    R.eve = eve;\r\n    var loaded,\r\n        separator = /[, ]+/,\r\n        elements = {circle: 1, rect: 1, path: 1, ellipse: 1, text: 1, image: 1},\r\n        formatrg = /\\{(\\d+)\\}/g,\r\n        proto = \"prototype\",\r\n        has = \"hasOwnProperty\",\r\n        g = {\r\n            doc: document,\r\n            win: window\r\n        },\r\n        oldRaphael = {\r\n            was: Object.prototype[has].call(g.win, \"Raphael\"),\r\n            is: g.win.Raphael\r\n        },\r\n        Paper = function () {\r\n            /*\\\r\n             * Paper.ca\r\n             [ property (object) ]\r\n             **\r\n             * Shortcut for @Paper.customAttributes\r\n            \\*/\r\n            /*\\\r\n             * Paper.customAttributes\r\n             [ property (object) ]\r\n             **\r\n             * If you have a set of attributes that you would like to represent\r\n             * as a function of some number you can do it easily with custom attributes:\r\n             > Usage\r\n             | paper.customAttributes.hue = function (num) {\r\n             |     num = num % 1;\r\n             |     return {fill: \"hsb(\" + num + \", 0.75, 1)\"};\r\n             | };\r\n             | // Custom attribute “hue” will change fill\r\n             | // to be given hue with fixed saturation and brightness.\r\n             | // Now you can use it like this:\r\n             | var c = paper.circle(10, 10, 10).attr({hue: .45});\r\n             | // or even like this:\r\n             | c.animate({hue: 1}, 1e3);\r\n             |\r\n             | // You could also create custom attribute\r\n             | // with multiple parameters:\r\n             | paper.customAttributes.hsb = function (h, s, b) {\r\n             |     return {fill: \"hsb(\" + [h, s, b].join(\",\") + \")\"};\r\n             | };\r\n             | c.attr({hsb: \"0.5 .8 1\"});\r\n             | c.animate({hsb: [1, 0, 0.5]}, 1e3);\r\n            \\*/\r\n            this.ca = this.customAttributes = {};\r\n        },\r\n        paperproto,\r\n        appendChild = \"appendChild\",\r\n        apply = \"apply\",\r\n        concat = \"concat\",\r\n        supportsTouch = ('ontouchstart' in g.win) || g.win.DocumentTouch && g.doc instanceof DocumentTouch, //taken from Modernizr touch test\r\n        E = \"\",\r\n        S = \" \",\r\n        Str = String,\r\n        split = \"split\",\r\n        events = \"click dblclick mousedown mousemove mouseout mouseover mouseup touchstart touchmove touchend touchcancel\"[split](S),\r\n        touchMap = {\r\n            mousedown: \"touchstart\",\r\n            mousemove: \"touchmove\",\r\n            mouseup: \"touchend\"\r\n        },\r\n        lowerCase = Str.prototype.toLowerCase,\r\n        math = Math,\r\n        mmax = math.max,\r\n        mmin = math.min,\r\n        abs = math.abs,\r\n        pow = math.pow,\r\n        PI = math.PI,\r\n        nu = \"number\",\r\n        string = \"string\",\r\n        array = \"array\",\r\n        toString = \"toString\",\r\n        fillString = \"fill\",\r\n        objectToString = Object.prototype.toString,\r\n        paper = {},\r\n        push = \"push\",\r\n        ISURL = R._ISURL = /^url\\(['\"]?(.+?)['\"]?\\)$/i,\r\n        colourRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?)%?\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?)%?\\s*\\))\\s*$/i,\r\n        isnan = {\"NaN\": 1, \"Infinity\": 1, \"-Infinity\": 1},\r\n        bezierrg = /^(?:cubic-)?bezier\\(([^,]+),([^,]+),([^,]+),([^\\)]+)\\)/,\r\n        round = math.round,\r\n        setAttribute = \"setAttribute\",\r\n        toFloat = parseFloat,\r\n        toInt = parseInt,\r\n        upperCase = Str.prototype.toUpperCase,\r\n        availableAttrs = R._availableAttrs = {\r\n            \"arrow-end\": \"none\",\r\n            \"arrow-start\": \"none\",\r\n            blur: 0,\r\n            \"clip-rect\": \"0 0 1e9 1e9\",\r\n            cursor: \"default\",\r\n            cx: 0,\r\n            cy: 0,\r\n            fill: \"#fff\",\r\n            \"fill-opacity\": 1,\r\n            font: '10px \"Arial\"',\r\n            \"font-family\": '\"Arial\"',\r\n            \"font-size\": \"10\",\r\n            \"font-style\": \"normal\",\r\n            \"font-weight\": 400,\r\n            gradient: 0,\r\n            height: 0,\r\n            href: \"http://raphaeljs.com/\",\r\n            \"letter-spacing\": 0,\r\n            opacity: 1,\r\n            path: \"M0,0\",\r\n            r: 0,\r\n            rx: 0,\r\n            ry: 0,\r\n            src: \"\",\r\n            stroke: \"#000\",\r\n            \"stroke-dasharray\": \"\",\r\n            \"stroke-linecap\": \"butt\",\r\n            \"stroke-linejoin\": \"butt\",\r\n            \"stroke-miterlimit\": 0,\r\n            \"stroke-opacity\": 1,\r\n            \"stroke-width\": 1,\r\n            target: \"_blank\",\r\n            \"text-anchor\": \"middle\",\r\n            title: \"Raphael\",\r\n            transform: \"\",\r\n            width: 0,\r\n            x: 0,\r\n            y: 0\r\n        },\r\n        availableAnimAttrs = R._availableAnimAttrs = {\r\n            blur: nu,\r\n            \"clip-rect\": \"csv\",\r\n            cx: nu,\r\n            cy: nu,\r\n            fill: \"colour\",\r\n            \"fill-opacity\": nu,\r\n            \"font-size\": nu,\r\n            height: nu,\r\n            opacity: nu,\r\n            path: \"path\",\r\n            r: nu,\r\n            rx: nu,\r\n            ry: nu,\r\n            stroke: \"colour\",\r\n            \"stroke-opacity\": nu,\r\n            \"stroke-width\": nu,\r\n            transform: \"transform\",\r\n            width: nu,\r\n            x: nu,\r\n            y: nu\r\n        },\r\n        whitespace = /[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]/g,\r\n        commaSpaces = /[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*/,\r\n        hsrg = {hs: 1, rg: 1},\r\n        p2s = /,?([achlmqrstvxz]),?/gi,\r\n        pathCommand = /([achlmrqstvz])[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)/ig,\r\n        tCommand = /([rstm])[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)/ig,\r\n        pathValues = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*/ig,\r\n        radial_gradient = R._radial_gradient = /^r(?:\\(([^,]+?)[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*([^\\)]+?)\\))?/,\r\n        eldata = {},\r\n        sortByKey = function (a, b) {\r\n            return a.key - b.key;\r\n        },\r\n        sortByNumber = function (a, b) {\r\n            return toFloat(a) - toFloat(b);\r\n        },\r\n        fun = function () {},\r\n        pipe = function (x) {\r\n            return x;\r\n        },\r\n        rectPath = R._rectPath = function (x, y, w, h, r) {\r\n            if (r) {\r\n                return [[\"M\", x + r, y], [\"l\", w - r * 2, 0], [\"a\", r, r, 0, 0, 1, r, r], [\"l\", 0, h - r * 2], [\"a\", r, r, 0, 0, 1, -r, r], [\"l\", r * 2 - w, 0], [\"a\", r, r, 0, 0, 1, -r, -r], [\"l\", 0, r * 2 - h], [\"a\", r, r, 0, 0, 1, r, -r], [\"z\"]];\r\n            }\r\n            return [[\"M\", x, y], [\"l\", w, 0], [\"l\", 0, h], [\"l\", -w, 0], [\"z\"]];\r\n        },\r\n        ellipsePath = function (x, y, rx, ry) {\r\n            if (ry == null) {\r\n                ry = rx;\r\n            }\r\n            return [[\"M\", x, y], [\"m\", 0, -ry], [\"a\", rx, ry, 0, 1, 1, 0, 2 * ry], [\"a\", rx, ry, 0, 1, 1, 0, -2 * ry], [\"z\"]];\r\n        },\r\n        getPath = R._getPath = {\r\n            path: function (el) {\r\n                return el.attr(\"path\");\r\n            },\r\n            circle: function (el) {\r\n                var a = el.attrs;\r\n                return ellipsePath(a.cx, a.cy, a.r);\r\n            },\r\n            ellipse: function (el) {\r\n                var a = el.attrs;\r\n                return ellipsePath(a.cx, a.cy, a.rx, a.ry);\r\n            },\r\n            rect: function (el) {\r\n                var a = el.attrs;\r\n                return rectPath(a.x, a.y, a.width, a.height, a.r);\r\n            },\r\n            image: function (el) {\r\n                var a = el.attrs;\r\n                return rectPath(a.x, a.y, a.width, a.height);\r\n            },\r\n            text: function (el) {\r\n                var bbox = el._getBBox();\r\n                return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\r\n            },\r\n            set : function(el) {\r\n                var bbox = el._getBBox();\r\n                return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\r\n            }\r\n        },\r\n        /*\\\r\n         * Raphael.mapPath\r\n         [ method ]\r\n         **\r\n         * Transform the path string with given matrix.\r\n         > Parameters\r\n         - path (string) path string\r\n         - matrix (object) see @Matrix\r\n         = (string) transformed path string\r\n        \\*/\r\n        mapPath = R.mapPath = function (path, matrix) {\r\n            if (!matrix) {\r\n                return path;\r\n            }\r\n            var x, y, i, j, ii, jj, pathi;\r\n            path = path2curve(path);\r\n            for (i = 0, ii = path.length; i < ii; i++) {\r\n                pathi = path[i];\r\n                for (j = 1, jj = pathi.length; j < jj; j += 2) {\r\n                    x = matrix.x(pathi[j], pathi[j + 1]);\r\n                    y = matrix.y(pathi[j], pathi[j + 1]);\r\n                    pathi[j] = x;\r\n                    pathi[j + 1] = y;\r\n                }\r\n            }\r\n            return path;\r\n        };\r\n\r\n    R._g = g;\r\n    /*\\\r\n     * Raphael.type\r\n     [ property (string) ]\r\n     **\r\n     * Can be “SVG”, “VML” or empty, depending on browser support.\r\n    \\*/\r\n    R.type = (g.win.SVGAngle || g.doc.implementation.hasFeature(\"http://www.w3.org/TR/SVG11/feature#BasicStructure\", \"1.1\") ? \"SVG\" : \"VML\");\r\n    if (R.type == \"VML\") {\r\n        var d = g.doc.createElement(\"div\"),\r\n            b;\r\n        d.innerHTML = '<v:shape adj=\"1\"/>';\r\n        b = d.firstChild;\r\n        b.style.behavior = \"url(#default#VML)\";\r\n        if (!(b && typeof b.adj == \"object\")) {\r\n            return (R.type = E);\r\n        }\r\n        d = null;\r\n    }\r\n    /*\\\r\n     * Raphael.svg\r\n     [ property (boolean) ]\r\n     **\r\n     * `true` if browser supports SVG.\r\n    \\*/\r\n    /*\\\r\n     * Raphael.vml\r\n     [ property (boolean) ]\r\n     **\r\n     * `true` if browser supports VML.\r\n    \\*/\r\n    R.svg = !(R.vml = R.type == \"VML\");\r\n    R._Paper = Paper;\r\n    /*\\\r\n     * Raphael.fn\r\n     [ property (object) ]\r\n     **\r\n     * You can add your own method to the canvas. For example if you want to draw a pie chart,\r\n     * you can create your own pie chart function and ship it as a Raphaël plugin. To do this\r\n     * you need to extend the `Raphael.fn` object. You should modify the `fn` object before a\r\n     * Raphaël instance is created, otherwise it will take no effect. Please note that the\r\n     * ability for namespaced plugins was removed in Raphael 2.0. It is up to the plugin to\r\n     * ensure any namespacing ensures proper context.\r\n     > Usage\r\n     | Raphael.fn.arrow = function (x1, y1, x2, y2, size) {\r\n     |     return this.path( ... );\r\n     | };\r\n     | // or create namespace\r\n     | Raphael.fn.mystuff = {\r\n     |     arrow: function () {…},\r\n     |     star: function () {…},\r\n     |     // etc…\r\n     | };\r\n     | var paper = Raphael(10, 10, 630, 480);\r\n     | // then use it\r\n     | paper.arrow(10, 10, 30, 30, 5).attr({fill: \"#f00\"});\r\n     | paper.mystuff.arrow();\r\n     | paper.mystuff.star();\r\n    \\*/\r\n    R.fn = paperproto = Paper.prototype = R.prototype;\r\n    R._id = 0;\r\n    R._oid = 0;\r\n    /*\\\r\n     * Raphael.is\r\n     [ method ]\r\n     **\r\n     * Handful of replacements for `typeof` operator.\r\n     > Parameters\r\n     - o (…) any object or primitive\r\n     - type (string) name of the type, i.e. “string”, “function”, “number”, etc.\r\n     = (boolean) is given value is of given type\r\n    \\*/\r\n    R.is = function (o, type) {\r\n        type = lowerCase.call(type);\r\n        if (type == \"finite\") {\r\n            return !isnan[has](+o);\r\n        }\r\n        if (type == \"array\") {\r\n            return o instanceof Array;\r\n        }\r\n        return  (type == \"null\" && o === null) ||\r\n                (type == typeof o && o !== null) ||\r\n                (type == \"object\" && o === Object(o)) ||\r\n                (type == \"array\" && Array.isArray && Array.isArray(o)) ||\r\n                objectToString.call(o).slice(8, -1).toLowerCase() == type;\r\n    };\r\n\r\n    function clone(obj) {\r\n        if (typeof obj == \"function\" || Object(obj) !== obj) {\r\n            return obj;\r\n        }\r\n        var res = new obj.constructor;\r\n        for (var key in obj) if (obj[has](key)) {\r\n            res[key] = clone(obj[key]);\r\n        }\r\n        return res;\r\n    }\r\n\r\n    /*\\\r\n     * Raphael.angle\r\n     [ method ]\r\n     **\r\n     * Returns angle between two or three points\r\n     > Parameters\r\n     - x1 (number) x coord of first point\r\n     - y1 (number) y coord of first point\r\n     - x2 (number) x coord of second point\r\n     - y2 (number) y coord of second point\r\n     - x3 (number) #optional x coord of third point\r\n     - y3 (number) #optional y coord of third point\r\n     = (number) angle in degrees.\r\n    \\*/\r\n    R.angle = function (x1, y1, x2, y2, x3, y3) {\r\n        if (x3 == null) {\r\n            var x = x1 - x2,\r\n                y = y1 - y2;\r\n            if (!x && !y) {\r\n                return 0;\r\n            }\r\n            return (180 + math.atan2(-y, -x) * 180 / PI + 360) % 360;\r\n        } else {\r\n            return R.angle(x1, y1, x3, y3) - R.angle(x2, y2, x3, y3);\r\n        }\r\n    };\r\n    /*\\\r\n     * Raphael.rad\r\n     [ method ]\r\n     **\r\n     * Transform angle to radians\r\n     > Parameters\r\n     - deg (number) angle in degrees\r\n     = (number) angle in radians.\r\n    \\*/\r\n    R.rad = function (deg) {\r\n        return deg % 360 * PI / 180;\r\n    };\r\n    /*\\\r\n     * Raphael.deg\r\n     [ method ]\r\n     **\r\n     * Transform angle to degrees\r\n     > Parameters\r\n     - rad (number) angle in radians\r\n     = (number) angle in degrees.\r\n    \\*/\r\n    R.deg = function (rad) {\r\n        return Math.round ((rad * 180 / PI% 360)* 1000) / 1000;\r\n    };\r\n    /*\\\r\n     * Raphael.snapTo\r\n     [ method ]\r\n     **\r\n     * Snaps given value to given grid.\r\n     > Parameters\r\n     - values (array|number) given array of values or step of the grid\r\n     - value (number) value to adjust\r\n     - tolerance (number) #optional tolerance for snapping. Default is `10`.\r\n     = (number) adjusted value.\r\n    \\*/\r\n    R.snapTo = function (values, value, tolerance) {\r\n        tolerance = R.is(tolerance, \"finite\") ? tolerance : 10;\r\n        if (R.is(values, array)) {\r\n            var i = values.length;\r\n            while (i--) if (abs(values[i] - value) <= tolerance) {\r\n                return values[i];\r\n            }\r\n        } else {\r\n            values = +values;\r\n            var rem = value % values;\r\n            if (rem < tolerance) {\r\n                return value - rem;\r\n            }\r\n            if (rem > values - tolerance) {\r\n                return value - rem + values;\r\n            }\r\n        }\r\n        return value;\r\n    };\r\n\r\n    /*\\\r\n     * Raphael.createUUID\r\n     [ method ]\r\n     **\r\n     * Returns RFC4122, version 4 ID\r\n    \\*/\r\n    var createUUID = R.createUUID = (function (uuidRegEx, uuidReplacer) {\r\n        return function () {\r\n            return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(uuidRegEx, uuidReplacer).toUpperCase();\r\n        };\r\n    })(/[xy]/g, function (c) {\r\n        var r = math.random() * 16 | 0,\r\n            v = c == \"x\" ? r : (r & 3 | 8);\r\n        return v.toString(16);\r\n    });\r\n\r\n    /*\\\r\n     * Raphael.setWindow\r\n     [ method ]\r\n     **\r\n     * Used when you need to draw in `&lt;iframe>`. Switched window to the iframe one.\r\n     > Parameters\r\n     - newwin (window) new window object\r\n    \\*/\r\n    R.setWindow = function (newwin) {\r\n        eve(\"raphael.setWindow\", R, g.win, newwin);\r\n        g.win = newwin;\r\n        g.doc = g.win.document;\r\n        if (R._engine.initWin) {\r\n            R._engine.initWin(g.win);\r\n        }\r\n    };\r\n    var toHex = function (color) {\r\n        if (R.vml) {\r\n            // http://dean.edwards.name/weblog/2009/10/convert-any-colour-value-to-hex-in-msie/\r\n            var trim = /^\\s+|\\s+$/g;\r\n            var bod;\r\n            try {\r\n                var docum = new ActiveXObject(\"htmlfile\");\r\n                docum.write(\"<body>\");\r\n                docum.close();\r\n                bod = docum.body;\r\n            } catch(e) {\r\n                bod = createPopup().document.body;\r\n            }\r\n            var range = bod.createTextRange();\r\n            toHex = cacher(function (color) {\r\n                try {\r\n                    bod.style.color = Str(color).replace(trim, E);\r\n                    var value = range.queryCommandValue(\"ForeColor\");\r\n                    value = ((value & 255) << 16) | (value & 65280) | ((value & 16711680) >>> 16);\r\n                    return \"#\" + (\"000000\" + value.toString(16)).slice(-6);\r\n                } catch(e) {\r\n                    return \"none\";\r\n                }\r\n            });\r\n        } else {\r\n            var i = g.doc.createElement(\"i\");\r\n            i.title = \"Rapha\\xebl Colour Picker\";\r\n            i.style.display = \"none\";\r\n            g.doc.body.appendChild(i);\r\n            toHex = cacher(function (color) {\r\n                i.style.color = color;\r\n                return g.doc.defaultView.getComputedStyle(i, E).getPropertyValue(\"color\");\r\n            });\r\n        }\r\n        return toHex(color);\r\n    },\r\n    hsbtoString = function () {\r\n        return \"hsb(\" + [this.h, this.s, this.b] + \")\";\r\n    },\r\n    hsltoString = function () {\r\n        return \"hsl(\" + [this.h, this.s, this.l] + \")\";\r\n    },\r\n    rgbtoString = function () {\r\n        return this.hex;\r\n    },\r\n    prepareRGB = function (r, g, b) {\r\n        if (g == null && R.is(r, \"object\") && \"r\" in r && \"g\" in r && \"b\" in r) {\r\n            b = r.b;\r\n            g = r.g;\r\n            r = r.r;\r\n        }\r\n        if (g == null && R.is(r, string)) {\r\n            var clr = R.getRGB(r);\r\n            r = clr.r;\r\n            g = clr.g;\r\n            b = clr.b;\r\n        }\r\n        if (r > 1 || g > 1 || b > 1) {\r\n            r /= 255;\r\n            g /= 255;\r\n            b /= 255;\r\n        }\r\n\r\n        return [r, g, b];\r\n    },\r\n    packageRGB = function (r, g, b, o) {\r\n        r *= 255;\r\n        g *= 255;\r\n        b *= 255;\r\n        var rgb = {\r\n            r: r,\r\n            g: g,\r\n            b: b,\r\n            hex: R.rgb(r, g, b),\r\n            toString: rgbtoString\r\n        };\r\n        R.is(o, \"finite\") && (rgb.opacity = o);\r\n        return rgb;\r\n    };\r\n\r\n    /*\\\r\n     * Raphael.color\r\n     [ method ]\r\n     **\r\n     * Parses the color string and returns object with all values for the given color.\r\n     > Parameters\r\n     - clr (string) color string in one of the supported formats (see @Raphael.getRGB)\r\n     = (object) Combined RGB & HSB object in format:\r\n     o {\r\n     o     r (number) red,\r\n     o     g (number) green,\r\n     o     b (number) blue,\r\n     o     hex (string) color in HTML/CSS format: #••••••,\r\n     o     error (boolean) `true` if string can’t be parsed,\r\n     o     h (number) hue,\r\n     o     s (number) saturation,\r\n     o     v (number) value (brightness),\r\n     o     l (number) lightness\r\n     o }\r\n    \\*/\r\n    R.color = function (clr) {\r\n        var rgb;\r\n        if (R.is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"b\" in clr) {\r\n            rgb = R.hsb2rgb(clr);\r\n            clr.r = rgb.r;\r\n            clr.g = rgb.g;\r\n            clr.b = rgb.b;\r\n            clr.hex = rgb.hex;\r\n        } else if (R.is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"l\" in clr) {\r\n            rgb = R.hsl2rgb(clr);\r\n            clr.r = rgb.r;\r\n            clr.g = rgb.g;\r\n            clr.b = rgb.b;\r\n            clr.hex = rgb.hex;\r\n        } else {\r\n            if (R.is(clr, \"string\")) {\r\n                clr = R.getRGB(clr);\r\n            }\r\n            if (R.is(clr, \"object\") && \"r\" in clr && \"g\" in clr && \"b\" in clr) {\r\n                rgb = R.rgb2hsl(clr);\r\n                clr.h = rgb.h;\r\n                clr.s = rgb.s;\r\n                clr.l = rgb.l;\r\n                rgb = R.rgb2hsb(clr);\r\n                clr.v = rgb.b;\r\n            } else {\r\n                clr = {hex: \"none\"};\r\n                clr.r = clr.g = clr.b = clr.h = clr.s = clr.v = clr.l = -1;\r\n            }\r\n        }\r\n        clr.toString = rgbtoString;\r\n        return clr;\r\n    };\r\n    /*\\\r\n     * Raphael.hsb2rgb\r\n     [ method ]\r\n     **\r\n     * Converts HSB values to RGB object.\r\n     > Parameters\r\n     - h (number) hue\r\n     - s (number) saturation\r\n     - v (number) value or brightness\r\n     = (object) RGB object in format:\r\n     o {\r\n     o     r (number) red,\r\n     o     g (number) green,\r\n     o     b (number) blue,\r\n     o     hex (string) color in HTML/CSS format: #••••••\r\n     o }\r\n    \\*/\r\n    R.hsb2rgb = function (h, s, v, o) {\r\n        if (this.is(h, \"object\") && \"h\" in h && \"s\" in h && \"b\" in h) {\r\n            v = h.b;\r\n            s = h.s;\r\n            o = h.o;\r\n            h = h.h;\r\n        }\r\n        h *= 360;\r\n        var R, G, B, X, C;\r\n        h = (h % 360) / 60;\r\n        C = v * s;\r\n        X = C * (1 - abs(h % 2 - 1));\r\n        R = G = B = v - C;\r\n\r\n        h = ~~h;\r\n        R += [C, X, 0, 0, X, C][h];\r\n        G += [X, C, C, X, 0, 0][h];\r\n        B += [0, 0, X, C, C, X][h];\r\n        return packageRGB(R, G, B, o);\r\n    };\r\n    /*\\\r\n     * Raphael.hsl2rgb\r\n     [ method ]\r\n     **\r\n     * Converts HSL values to RGB object.\r\n     > Parameters\r\n     - h (number) hue\r\n     - s (number) saturation\r\n     - l (number) luminosity\r\n     = (object) RGB object in format:\r\n     o {\r\n     o     r (number) red,\r\n     o     g (number) green,\r\n     o     b (number) blue,\r\n     o     hex (string) color in HTML/CSS format: #••••••\r\n     o }\r\n    \\*/\r\n    R.hsl2rgb = function (h, s, l, o) {\r\n        if (this.is(h, \"object\") && \"h\" in h && \"s\" in h && \"l\" in h) {\r\n            l = h.l;\r\n            s = h.s;\r\n            h = h.h;\r\n        }\r\n        if (h > 1 || s > 1 || l > 1) {\r\n            h /= 360;\r\n            s /= 100;\r\n            l /= 100;\r\n        }\r\n        h *= 360;\r\n        var R, G, B, X, C;\r\n        h = (h % 360) / 60;\r\n        C = 2 * s * (l < .5 ? l : 1 - l);\r\n        X = C * (1 - abs(h % 2 - 1));\r\n        R = G = B = l - C / 2;\r\n\r\n        h = ~~h;\r\n        R += [C, X, 0, 0, X, C][h];\r\n        G += [X, C, C, X, 0, 0][h];\r\n        B += [0, 0, X, C, C, X][h];\r\n        return packageRGB(R, G, B, o);\r\n    };\r\n    /*\\\r\n     * Raphael.rgb2hsb\r\n     [ method ]\r\n     **\r\n     * Converts RGB values to HSB object.\r\n     > Parameters\r\n     - r (number) red\r\n     - g (number) green\r\n     - b (number) blue\r\n     = (object) HSB object in format:\r\n     o {\r\n     o     h (number) hue\r\n     o     s (number) saturation\r\n     o     b (number) brightness\r\n     o }\r\n    \\*/\r\n    R.rgb2hsb = function (r, g, b) {\r\n        b = prepareRGB(r, g, b);\r\n        r = b[0];\r\n        g = b[1];\r\n        b = b[2];\r\n\r\n        var H, S, V, C;\r\n        V = mmax(r, g, b);\r\n        C = V - mmin(r, g, b);\r\n        H = (C == 0 ? null :\r\n             V == r ? (g - b) / C :\r\n             V == g ? (b - r) / C + 2 :\r\n                      (r - g) / C + 4\r\n            );\r\n        H = ((H + 360) % 6) * 60 / 360;\r\n        S = C == 0 ? 0 : C / V;\r\n        return {h: H, s: S, b: V, toString: hsbtoString};\r\n    };\r\n    /*\\\r\n     * Raphael.rgb2hsl\r\n     [ method ]\r\n     **\r\n     * Converts RGB values to HSL object.\r\n     > Parameters\r\n     - r (number) red\r\n     - g (number) green\r\n     - b (number) blue\r\n     = (object) HSL object in format:\r\n     o {\r\n     o     h (number) hue\r\n     o     s (number) saturation\r\n     o     l (number) luminosity\r\n     o }\r\n    \\*/\r\n    R.rgb2hsl = function (r, g, b) {\r\n        b = prepareRGB(r, g, b);\r\n        r = b[0];\r\n        g = b[1];\r\n        b = b[2];\r\n\r\n        var H, S, L, M, m, C;\r\n        M = mmax(r, g, b);\r\n        m = mmin(r, g, b);\r\n        C = M - m;\r\n        H = (C == 0 ? null :\r\n             M == r ? (g - b) / C :\r\n             M == g ? (b - r) / C + 2 :\r\n                      (r - g) / C + 4);\r\n        H = ((H + 360) % 6) * 60 / 360;\r\n        L = (M + m) / 2;\r\n        S = (C == 0 ? 0 :\r\n             L < .5 ? C / (2 * L) :\r\n                      C / (2 - 2 * L));\r\n        return {h: H, s: S, l: L, toString: hsltoString};\r\n    };\r\n    R._path2string = function () {\r\n        return this.join(\",\").replace(p2s, \"$1\");\r\n    };\r\n    function repush(array, item) {\r\n        for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\r\n            return array.push(array.splice(i, 1)[0]);\r\n        }\r\n    }\r\n    function cacher(f, scope, postprocessor) {\r\n        function newf() {\r\n            var arg = Array.prototype.slice.call(arguments, 0),\r\n                args = arg.join(\"\\u2400\"),\r\n                cache = newf.cache = newf.cache || {},\r\n                count = newf.count = newf.count || [];\r\n            if (cache[has](args)) {\r\n                repush(count, args);\r\n                return postprocessor ? postprocessor(cache[args]) : cache[args];\r\n            }\r\n            count.length >= 1e3 && delete cache[count.shift()];\r\n            count.push(args);\r\n            cache[args] = f[apply](scope, arg);\r\n            return postprocessor ? postprocessor(cache[args]) : cache[args];\r\n        }\r\n        return newf;\r\n    }\r\n\r\n    var preload = R._preload = function (src, f) {\r\n        var img = g.doc.createElement(\"img\");\r\n        img.style.cssText = \"position:absolute;left:-9999em;top:-9999em\";\r\n        img.onload = function () {\r\n            f.call(this);\r\n            this.onload = null;\r\n            g.doc.body.removeChild(this);\r\n        };\r\n        img.onerror = function () {\r\n            g.doc.body.removeChild(this);\r\n        };\r\n        g.doc.body.appendChild(img);\r\n        img.src = src;\r\n    };\r\n\r\n    function clrToString() {\r\n        return this.hex;\r\n    }\r\n\r\n    /*\\\r\n     * Raphael.getRGB\r\n     [ method ]\r\n     **\r\n     * Parses colour string as RGB object\r\n     > Parameters\r\n     - colour (string) colour string in one of formats:\r\n     # <ul>\r\n     #     <li>Colour name (“<code>red</code>”, “<code>green</code>”, “<code>cornflowerblue</code>”, etc)</li>\r\n     #     <li>#••• — shortened HTML colour: (“<code>#000</code>”, “<code>#fc0</code>”, etc)</li>\r\n     #     <li>#•••••• — full length HTML colour: (“<code>#000000</code>”, “<code>#bd2300</code>”)</li>\r\n     #     <li>rgb(•••, •••, •••) — red, green and blue channels’ values: (“<code>rgb(200,&nbsp;100,&nbsp;0)</code>”)</li>\r\n     #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (“<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>”)</li>\r\n     #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (“<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>”)</li>\r\n     #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\r\n     #     <li>hsl(•••, •••, •••) — same as hsb</li>\r\n     #     <li>hsl(•••%, •••%, •••%) — same as hsb</li>\r\n     # </ul>\r\n     = (object) RGB object in format:\r\n     o {\r\n     o     r (number) red,\r\n     o     g (number) green,\r\n     o     b (number) blue\r\n     o     hex (string) color in HTML/CSS format: #••••••,\r\n     o     error (boolean) true if string can’t be parsed\r\n     o }\r\n    \\*/\r\n    R.getRGB = cacher(function (colour) {\r\n        if (!colour || !!((colour = Str(colour)).indexOf(\"-\") + 1)) {\r\n            return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: clrToString};\r\n        }\r\n        if (colour == \"none\") {\r\n            return {r: -1, g: -1, b: -1, hex: \"none\", toString: clrToString};\r\n        }\r\n        !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \"#\") && (colour = toHex(colour));\r\n        var res,\r\n            red,\r\n            green,\r\n            blue,\r\n            opacity,\r\n            t,\r\n            values,\r\n            rgb = colour.match(colourRegExp);\r\n        if (rgb) {\r\n            if (rgb[2]) {\r\n                blue = toInt(rgb[2].substring(5), 16);\r\n                green = toInt(rgb[2].substring(3, 5), 16);\r\n                red = toInt(rgb[2].substring(1, 3), 16);\r\n            }\r\n            if (rgb[3]) {\r\n                blue = toInt((t = rgb[3].charAt(3)) + t, 16);\r\n                green = toInt((t = rgb[3].charAt(2)) + t, 16);\r\n                red = toInt((t = rgb[3].charAt(1)) + t, 16);\r\n            }\r\n            if (rgb[4]) {\r\n                values = rgb[4][split](commaSpaces);\r\n                red = toFloat(values[0]);\r\n                values[0].slice(-1) == \"%\" && (red *= 2.55);\r\n                green = toFloat(values[1]);\r\n                values[1].slice(-1) == \"%\" && (green *= 2.55);\r\n                blue = toFloat(values[2]);\r\n                values[2].slice(-1) == \"%\" && (blue *= 2.55);\r\n                rgb[1].toLowerCase().slice(0, 4) == \"rgba\" && (opacity = toFloat(values[3]));\r\n                values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\r\n            }\r\n            if (rgb[5]) {\r\n                values = rgb[5][split](commaSpaces);\r\n                red = toFloat(values[0]);\r\n                values[0].slice(-1) == \"%\" && (red *= 2.55);\r\n                green = toFloat(values[1]);\r\n                values[1].slice(-1) == \"%\" && (green *= 2.55);\r\n                blue = toFloat(values[2]);\r\n                values[2].slice(-1) == \"%\" && (blue *= 2.55);\r\n                (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\r\n                rgb[1].toLowerCase().slice(0, 4) == \"hsba\" && (opacity = toFloat(values[3]));\r\n                values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\r\n                return R.hsb2rgb(red, green, blue, opacity);\r\n            }\r\n            if (rgb[6]) {\r\n                values = rgb[6][split](commaSpaces);\r\n                red = toFloat(values[0]);\r\n                values[0].slice(-1) == \"%\" && (red *= 2.55);\r\n                green = toFloat(values[1]);\r\n                values[1].slice(-1) == \"%\" && (green *= 2.55);\r\n                blue = toFloat(values[2]);\r\n                values[2].slice(-1) == \"%\" && (blue *= 2.55);\r\n                (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\r\n                rgb[1].toLowerCase().slice(0, 4) == \"hsla\" && (opacity = toFloat(values[3]));\r\n                values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\r\n                return R.hsl2rgb(red, green, blue, opacity);\r\n            }\r\n            rgb = {r: red, g: green, b: blue, toString: clrToString};\r\n            rgb.hex = \"#\" + (16777216 | blue | (green << 8) | (red << 16)).toString(16).slice(1);\r\n            R.is(opacity, \"finite\") && (rgb.opacity = opacity);\r\n            return rgb;\r\n        }\r\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: clrToString};\r\n    }, R);\r\n    /*\\\r\n     * Raphael.hsb\r\n     [ method ]\r\n     **\r\n     * Converts HSB values to hex representation of the colour.\r\n     > Parameters\r\n     - h (number) hue\r\n     - s (number) saturation\r\n     - b (number) value or brightness\r\n     = (string) hex representation of the colour.\r\n    \\*/\r\n    R.hsb = cacher(function (h, s, b) {\r\n        return R.hsb2rgb(h, s, b).hex;\r\n    });\r\n    /*\\\r\n     * Raphael.hsl\r\n     [ method ]\r\n     **\r\n     * Converts HSL values to hex representation of the colour.\r\n     > Parameters\r\n     - h (number) hue\r\n     - s (number) saturation\r\n     - l (number) luminosity\r\n     = (string) hex representation of the colour.\r\n    \\*/\r\n    R.hsl = cacher(function (h, s, l) {\r\n        return R.hsl2rgb(h, s, l).hex;\r\n    });\r\n    /*\\\r\n     * Raphael.rgb\r\n     [ method ]\r\n     **\r\n     * Converts RGB values to hex representation of the colour.\r\n     > Parameters\r\n     - r (number) red\r\n     - g (number) green\r\n     - b (number) blue\r\n     = (string) hex representation of the colour.\r\n    \\*/\r\n    R.rgb = cacher(function (r, g, b) {\r\n        return \"#\" + (16777216 | b | (g << 8) | (r << 16)).toString(16).slice(1);\r\n    });\r\n    /*\\\r\n     * Raphael.getColor\r\n     [ method ]\r\n     **\r\n     * On each call returns next colour in the spectrum. To reset it back to red call @Raphael.getColor.reset\r\n     > Parameters\r\n     - value (number) #optional brightness, default is `0.75`\r\n     = (string) hex representation of the colour.\r\n    \\*/\r\n    R.getColor = function (value) {\r\n        var start = this.getColor.start = this.getColor.start || {h: 0, s: 1, b: value || .75},\r\n            rgb = this.hsb2rgb(start.h, start.s, start.b);\r\n        start.h += .075;\r\n        if (start.h > 1) {\r\n            start.h = 0;\r\n            start.s -= .2;\r\n            start.s <= 0 && (this.getColor.start = {h: 0, s: 1, b: start.b});\r\n        }\r\n        return rgb.hex;\r\n    };\r\n    /*\\\r\n     * Raphael.getColor.reset\r\n     [ method ]\r\n     **\r\n     * Resets spectrum position for @Raphael.getColor back to red.\r\n    \\*/\r\n    R.getColor.reset = function () {\r\n        delete this.start;\r\n    };\r\n\r\n    // http://schepers.cc/getting-to-the-point\r\n    function catmullRom2bezier(crp, z) {\r\n        var d = [];\r\n        for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\r\n            var p = [\r\n                        {x: +crp[i - 2], y: +crp[i - 1]},\r\n                        {x: +crp[i],     y: +crp[i + 1]},\r\n                        {x: +crp[i + 2], y: +crp[i + 3]},\r\n                        {x: +crp[i + 4], y: +crp[i + 5]}\r\n                    ];\r\n            if (z) {\r\n                if (!i) {\r\n                    p[0] = {x: +crp[iLen - 2], y: +crp[iLen - 1]};\r\n                } else if (iLen - 4 == i) {\r\n                    p[3] = {x: +crp[0], y: +crp[1]};\r\n                } else if (iLen - 2 == i) {\r\n                    p[2] = {x: +crp[0], y: +crp[1]};\r\n                    p[3] = {x: +crp[2], y: +crp[3]};\r\n                }\r\n            } else {\r\n                if (iLen - 4 == i) {\r\n                    p[3] = p[2];\r\n                } else if (!i) {\r\n                    p[0] = {x: +crp[i], y: +crp[i + 1]};\r\n                }\r\n            }\r\n            d.push([\"C\",\r\n                  (-p[0].x + 6 * p[1].x + p[2].x) / 6,\r\n                  (-p[0].y + 6 * p[1].y + p[2].y) / 6,\r\n                  (p[1].x + 6 * p[2].x - p[3].x) / 6,\r\n                  (p[1].y + 6*p[2].y - p[3].y) / 6,\r\n                  p[2].x,\r\n                  p[2].y\r\n            ]);\r\n        }\r\n\r\n        return d;\r\n    }\r\n    /*\\\r\n     * Raphael.parsePathString\r\n     [ method ]\r\n     **\r\n     * Utility method\r\n     **\r\n     * Parses given path string into an array of arrays of path segments.\r\n     > Parameters\r\n     - pathString (string|array) path string or array of segments (in the last case it will be returned straight away)\r\n     = (array) array of segments.\r\n    \\*/\r\n    R.parsePathString = function (pathString) {\r\n        if (!pathString) {\r\n            return null;\r\n        }\r\n        var pth = paths(pathString);\r\n        if (pth.arr) {\r\n            return pathClone(pth.arr);\r\n        }\r\n\r\n        var paramCounts = {a: 7, c: 6, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, z: 0},\r\n            data = [];\r\n        if (R.is(pathString, array) && R.is(pathString[0], array)) { // rough assumption\r\n            data = pathClone(pathString);\r\n        }\r\n        if (!data.length) {\r\n            Str(pathString).replace(pathCommand, function (a, b, c) {\r\n                var params = [],\r\n                    name = b.toLowerCase();\r\n                c.replace(pathValues, function (a, b) {\r\n                    b && params.push(+b);\r\n                });\r\n                if (name == \"m\" && params.length > 2) {\r\n                    data.push([b][concat](params.splice(0, 2)));\r\n                    name = \"l\";\r\n                    b = b == \"m\" ? \"l\" : \"L\";\r\n                }\r\n                if (name == \"r\") {\r\n                    data.push([b][concat](params));\r\n                } else while (params.length >= paramCounts[name]) {\r\n                    data.push([b][concat](params.splice(0, paramCounts[name])));\r\n                    if (!paramCounts[name]) {\r\n                        break;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        data.toString = R._path2string;\r\n        pth.arr = pathClone(data);\r\n        return data;\r\n    };\r\n    /*\\\r\n     * Raphael.parseTransformString\r\n     [ method ]\r\n     **\r\n     * Utility method\r\n     **\r\n     * Parses given path string into an array of transformations.\r\n     > Parameters\r\n     - TString (string|array) transform string or array of transformations (in the last case it will be returned straight away)\r\n     = (array) array of transformations.\r\n    \\*/\r\n    R.parseTransformString = cacher(function (TString) {\r\n        if (!TString) {\r\n            return null;\r\n        }\r\n        var paramCounts = {r: 3, s: 4, t: 2, m: 6},\r\n            data = [];\r\n        if (R.is(TString, array) && R.is(TString[0], array)) { // rough assumption\r\n            data = pathClone(TString);\r\n        }\r\n        if (!data.length) {\r\n            Str(TString).replace(tCommand, function (a, b, c) {\r\n                var params = [],\r\n                    name = lowerCase.call(b);\r\n                c.replace(pathValues, function (a, b) {\r\n                    b && params.push(+b);\r\n                });\r\n                data.push([b][concat](params));\r\n            });\r\n        }\r\n        data.toString = R._path2string;\r\n        return data;\r\n    });\r\n    // PATHS\r\n    var paths = function (ps) {\r\n        var p = paths.ps = paths.ps || {};\r\n        if (p[ps]) {\r\n            p[ps].sleep = 100;\r\n        } else {\r\n            p[ps] = {\r\n                sleep: 100\r\n            };\r\n        }\r\n        setTimeout(function () {\r\n            for (var key in p) if (p[has](key) && key != ps) {\r\n                p[key].sleep--;\r\n                !p[key].sleep && delete p[key];\r\n            }\r\n        });\r\n        return p[ps];\r\n    };\r\n    /*\\\r\n     * Raphael.findDotsAtSegment\r\n     [ method ]\r\n     **\r\n     * Utility method\r\n     **\r\n     * Find dot coordinates on the given cubic bezier curve at the given t.\r\n     > Parameters\r\n     - p1x (number) x of the first point of the curve\r\n     - p1y (number) y of the first point of the curve\r\n     - c1x (number) x of the first anchor of the curve\r\n     - c1y (number) y of the first anchor of the curve\r\n     - c2x (number) x of the second anchor of the curve\r\n     - c2y (number) y of the second anchor of the curve\r\n     - p2x (number) x of the second point of the curve\r\n     - p2y (number) y of the second point of the curve\r\n     - t (number) position on the curve (0..1)\r\n     = (object) point information in format:\r\n     o {\r\n     o     x: (number) x coordinate of the point\r\n     o     y: (number) y coordinate of the point\r\n     o     m: {\r\n     o         x: (number) x coordinate of the left anchor\r\n     o         y: (number) y coordinate of the left anchor\r\n     o     }\r\n     o     n: {\r\n     o         x: (number) x coordinate of the right anchor\r\n     o         y: (number) y coordinate of the right anchor\r\n     o     }\r\n     o     start: {\r\n     o         x: (number) x coordinate of the start of the curve\r\n     o         y: (number) y coordinate of the start of the curve\r\n     o     }\r\n     o     end: {\r\n     o         x: (number) x coordinate of the end of the curve\r\n     o         y: (number) y coordinate of the end of the curve\r\n     o     }\r\n     o     alpha: (number) angle of the curve derivative at the point\r\n     o }\r\n    \\*/\r\n    R.findDotsAtSegment = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\r\n        var t1 = 1 - t,\r\n            t13 = pow(t1, 3),\r\n            t12 = pow(t1, 2),\r\n            t2 = t * t,\r\n            t3 = t2 * t,\r\n            x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\r\n            y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\r\n            mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\r\n            my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\r\n            nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\r\n            ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\r\n            ax = t1 * p1x + t * c1x,\r\n            ay = t1 * p1y + t * c1y,\r\n            cx = t1 * c2x + t * p2x,\r\n            cy = t1 * c2y + t * p2y,\r\n            alpha = (90 - math.atan2(mx - nx, my - ny) * 180 / PI);\r\n        (mx > nx || my < ny) && (alpha += 180);\r\n        return {\r\n            x: x,\r\n            y: y,\r\n            m: {x: mx, y: my},\r\n            n: {x: nx, y: ny},\r\n            start: {x: ax, y: ay},\r\n            end: {x: cx, y: cy},\r\n            alpha: alpha\r\n        };\r\n    };\r\n    /*\\\r\n     * Raphael.bezierBBox\r\n     [ method ]\r\n     **\r\n     * Utility method\r\n     **\r\n     * Return bounding box of a given cubic bezier curve\r\n     > Parameters\r\n     - p1x (number) x of the first point of the curve\r\n     - p1y (number) y of the first point of the curve\r\n     - c1x (number) x of the first anchor of the curve\r\n     - c1y (number) y of the first anchor of the curve\r\n     - c2x (number) x of the second anchor of the curve\r\n     - c2y (number) y of the second anchor of the curve\r\n     - p2x (number) x of the second point of the curve\r\n     - p2y (number) y of the second point of the curve\r\n     * or\r\n     - bez (array) array of six points for bezier curve\r\n     = (object) point information in format:\r\n     o {\r\n     o     min: {\r\n     o         x: (number) x coordinate of the left point\r\n     o         y: (number) y coordinate of the top point\r\n     o     }\r\n     o     max: {\r\n     o         x: (number) x coordinate of the right point\r\n     o         y: (number) y coordinate of the bottom point\r\n     o     }\r\n     o }\r\n    \\*/\r\n    R.bezierBBox = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\r\n        if (!R.is(p1x, \"array\")) {\r\n            p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\r\n        }\r\n        var bbox = curveDim.apply(null, p1x);\r\n        return {\r\n            x: bbox.min.x,\r\n            y: bbox.min.y,\r\n            x2: bbox.max.x,\r\n            y2: bbox.max.y,\r\n            width: bbox.max.x - bbox.min.x,\r\n            height: bbox.max.y - bbox.min.y\r\n        };\r\n    };\r\n    /*\\\r\n     * Raphael.isPointInsideBBox\r\n     [ method ]\r\n     **\r\n     * Utility method\r\n     **\r\n     * Returns `true` if given point is inside bounding boxes.\r\n     > Parameters\r\n     - bbox (string) bounding box\r\n     - x (string) x coordinate of the point\r\n     - y (string) y coordinate of the point\r\n     = (boolean) `true` if point inside\r\n    \\*/\r\n    R.isPointInsideBBox = function (bbox, x, y) {\r\n        return x >= bbox.x && x <= bbox.x2 && y >= bbox.y && y <= bbox.y2;\r\n    };\r\n    /*\\\r\n     * Raphael.isBBoxIntersect\r\n     [ method ]\r\n     **\r\n     * Utility method\r\n     **\r\n     * Returns `true` if two bounding boxes intersect\r\n     > Parameters\r\n     - bbox1 (string) first bounding box\r\n     - bbox2 (string) second bounding box\r\n     = (boolean) `true` if they intersect\r\n    \\*/\r\n    R.isBBoxIntersect = function (bbox1, bbox2) {\r\n        var i = R.isPointInsideBBox;\r\n        return i(bbox2, bbox1.x, bbox1.y)\r\n            || i(bbox2, bbox1.x2, bbox1.y)\r\n            || i(bbox2, bbox1.x, bbox1.y2)\r\n            || i(bbox2, bbox1.x2, bbox1.y2)\r\n            || i(bbox1, bbox2.x, bbox2.y)\r\n            || i(bbox1, bbox2.x2, bbox2.y)\r\n            || i(bbox1, bbox2.x, bbox2.y2)\r\n            || i(bbox1, bbox2.x2, bbox2.y2)\r\n            || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x)\r\n            && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\r\n    };\r\n    function base3(t, p1, p2, p3, p4) {\r\n        var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\r\n            t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\r\n        return t * t2 - 3 * p1 + 3 * p2;\r\n    }\r\n    function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\r\n        if (z == null) {\r\n            z = 1;\r\n        }\r\n        z = z > 1 ? 1 : z < 0 ? 0 : z;\r\n        var z2 = z / 2,\r\n            n = 12,\r\n            Tvalues = [-0.1252,0.1252,-0.3678,0.3678,-0.5873,0.5873,-0.7699,0.7699,-0.9041,0.9041,-0.9816,0.9816],\r\n            Cvalues = [0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],\r\n            sum = 0;\r\n        for (var i = 0; i < n; i++) {\r\n            var ct = z2 * Tvalues[i] + z2,\r\n                xbase = base3(ct, x1, x2, x3, x4),\r\n                ybase = base3(ct, y1, y2, y3, y4),\r\n                comb = xbase * xbase + ybase * ybase;\r\n            sum += Cvalues[i] * math.sqrt(comb);\r\n        }\r\n        return z2 * sum;\r\n    }\r\n    function getTatLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {\r\n        if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {\r\n            return;\r\n        }\r\n        var t = 1,\r\n            step = t / 2,\r\n            t2 = t - step,\r\n            l,\r\n            e = .01;\r\n        l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\r\n        while (abs(l - ll) > e) {\r\n            step /= 2;\r\n            t2 += (l < ll ? 1 : -1) * step;\r\n            l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\r\n        }\r\n        return t2;\r\n    }\r\n    function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\r\n        if (\r\n            mmax(x1, x2) < mmin(x3, x4) ||\r\n            mmin(x1, x2) > mmax(x3, x4) ||\r\n            mmax(y1, y2) < mmin(y3, y4) ||\r\n            mmin(y1, y2) > mmax(y3, y4)\r\n        ) {\r\n            return;\r\n        }\r\n        var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\r\n            ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\r\n            denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\r\n\r\n        if (!denominator) {\r\n            return;\r\n        }\r\n        var px = nx / denominator,\r\n            py = ny / denominator,\r\n            px2 = +px.toFixed(2),\r\n            py2 = +py.toFixed(2);\r\n        if (\r\n            px2 < +mmin(x1, x2).toFixed(2) ||\r\n            px2 > +mmax(x1, x2).toFixed(2) ||\r\n            px2 < +mmin(x3, x4).toFixed(2) ||\r\n            px2 > +mmax(x3, x4).toFixed(2) ||\r\n            py2 < +mmin(y1, y2).toFixed(2) ||\r\n            py2 > +mmax(y1, y2).toFixed(2) ||\r\n            py2 < +mmin(y3, y4).toFixed(2) ||\r\n            py2 > +mmax(y3, y4).toFixed(2)\r\n        ) {\r\n            return;\r\n        }\r\n        return {x: px, y: py};\r\n    }\r\n    function inter(bez1, bez2) {\r\n        return interHelper(bez1, bez2);\r\n    }\r\n    function interCount(bez1, bez2) {\r\n        return interHelper(bez1, bez2, 1);\r\n    }\r\n    function interHelper(bez1, bez2, justCount) {\r\n        var bbox1 = R.bezierBBox(bez1),\r\n            bbox2 = R.bezierBBox(bez2);\r\n        if (!R.isBBoxIntersect(bbox1, bbox2)) {\r\n            return justCount ? 0 : [];\r\n        }\r\n        var l1 = bezlen.apply(0, bez1),\r\n            l2 = bezlen.apply(0, bez2),\r\n            n1 = mmax(~~(l1 / 5), 1),\r\n            n2 = mmax(~~(l2 / 5), 1),\r\n            dots1 = [],\r\n            dots2 = [],\r\n            xy = {},\r\n            res = justCount ? 0 : [];\r\n        for (var i = 0; i < n1 + 1; i++) {\r\n            var p = R.findDotsAtSegment.apply(R, bez1.concat(i / n1));\r\n            dots1.push({x: p.x, y: p.y, t: i / n1});\r\n        }\r\n        for (i = 0; i < n2 + 1; i++) {\r\n            p = R.findDotsAtSegment.apply(R, bez2.concat(i / n2));\r\n            dots2.push({x: p.x, y: p.y, t: i / n2});\r\n        }\r\n        for (i = 0; i < n1; i++) {\r\n            for (var j = 0; j < n2; j++) {\r\n                var di = dots1[i],\r\n                    di1 = dots1[i + 1],\r\n                    dj = dots2[j],\r\n                    dj1 = dots2[j + 1],\r\n                    ci = abs(di1.x - di.x) < .001 ? \"y\" : \"x\",\r\n                    cj = abs(dj1.x - dj.x) < .001 ? \"y\" : \"x\",\r\n                    is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\r\n                if (is) {\r\n                    if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\r\n                        continue;\r\n                    }\r\n                    xy[is.x.toFixed(4)] = is.y.toFixed(4);\r\n                    var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\r\n                        t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\r\n                    if (t1 >= 0 && t1 <= 1.001 && t2 >= 0 && t2 <= 1.001) {\r\n                        if (justCount) {\r\n                            res++;\r\n                        } else {\r\n                            res.push({\r\n                                x: is.x,\r\n                                y: is.y,\r\n                                t1: mmin(t1, 1),\r\n                                t2: mmin(t2, 1)\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    /*\\\r\n     * Raphael.pathIntersection\r\n     [ method ]\r\n     **\r\n     * Utility method\r\n     **\r\n     * Finds intersections of two paths\r\n     > Parameters\r\n     - path1 (string) path string\r\n     - path2 (string) path string\r\n     = (array) dots of intersection\r\n     o [\r\n     o     {\r\n     o         x: (number) x coordinate of the point\r\n     o         y: (number) y coordinate of the point\r\n     o         t1: (number) t value for segment of path1\r\n     o         t2: (number) t value for segment of path2\r\n     o         segment1: (number) order number for segment of path1\r\n     o         segment2: (number) order number for segment of path2\r\n     o         bez1: (array) eight coordinates representing beziér curve for the segment of path1\r\n     o         bez2: (array) eight coordinates representing beziér curve for the segment of path2\r\n     o     }\r\n     o ]\r\n    \\*/\r\n    R.pathIntersection = function (path1, path2) {\r\n        return interPathHelper(path1, path2);\r\n    };\r\n    R.pathIntersectionNumber = function (path1, path2) {\r\n        return interPathHelper(path1, path2, 1);\r\n    };\r\n    function interPathHelper(path1, path2, justCount) {\r\n        path1 = R._path2curve(path1);\r\n        path2 = R._path2curve(path2);\r\n        var x1, y1, x2, y2, x1m, y1m, x2m, y2m, bez1, bez2,\r\n            res = justCount ? 0 : [];\r\n        for (var i = 0, ii = path1.length; i < ii; i++) {\r\n            var pi = path1[i];\r\n            if (pi[0] == \"M\") {\r\n                x1 = x1m = pi[1];\r\n                y1 = y1m = pi[2];\r\n            } else {\r\n                if (pi[0] == \"C\") {\r\n                    bez1 = [x1, y1].concat(pi.slice(1));\r\n                    x1 = bez1[6];\r\n                    y1 = bez1[7];\r\n                } else {\r\n                    bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\r\n                    x1 = x1m;\r\n                    y1 = y1m;\r\n                }\r\n                for (var j = 0, jj = path2.length; j < jj; j++) {\r\n                    var pj = path2[j];\r\n                    if (pj[0] == \"M\") {\r\n                        x2 = x2m = pj[1];\r\n                        y2 = y2m = pj[2];\r\n                    } else {\r\n                        if (pj[0] == \"C\") {\r\n                            bez2 = [x2, y2].concat(pj.slice(1));\r\n                            x2 = bez2[6];\r\n                            y2 = bez2[7];\r\n                        } else {\r\n                            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\r\n                            x2 = x2m;\r\n                            y2 = y2m;\r\n                        }\r\n                        var intr = interHelper(bez1, bez2, justCount);\r\n                        if (justCount) {\r\n                            res += intr;\r\n                        } else {\r\n                            for (var k = 0, kk = intr.length; k < kk; k++) {\r\n                                intr[k].segment1 = i;\r\n                                intr[k].segment2 = j;\r\n                                intr[k].bez1 = bez1;\r\n                                intr[k].bez2 = bez2;\r\n                            }\r\n                            res = res.concat(intr);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    /*\\\r\n     * Raphael.isPointInsidePath\r\n     [ method ]\r\n     **\r\n     * Utility method\r\n     **\r\n     * Returns `true` if given point is inside a given closed path.\r\n     > Parameters\r\n     - path (string) path string\r\n     - x (number) x of the point\r\n     - y (number) y of the point\r\n     = (boolean) true, if point is inside the path\r\n    \\*/\r\n    R.isPointInsidePath = function (path, x, y) {\r\n        var bbox = R.pathBBox(path);\r\n        return R.isPointInsideBBox(bbox, x, y) &&\r\n               interPathHelper(path, [[\"M\", x, y], [\"H\", bbox.x2 + 10]], 1) % 2 == 1;\r\n    };\r\n    R._removedFactory = function (methodname) {\r\n        return function () {\r\n            eve(\"raphael.log\", null, \"Rapha\\xebl: you are calling to method \\u201c\" + methodname + \"\\u201d of removed object\", methodname);\r\n        };\r\n    };\r\n    /*\\\r\n     * Raphael.pathBBox\r\n     [ method ]\r\n     **\r\n     * Utility method\r\n     **\r\n     * Return bounding box of a given path\r\n     > Parameters\r\n     - path (string) path string\r\n     = (object) bounding box\r\n     o {\r\n     o     x: (number) x coordinate of the left top point of the box\r\n     o     y: (number) y coordinate of the left top point of the box\r\n     o     x2: (number) x coordinate of the right bottom point of the box\r\n     o     y2: (number) y coordinate of the right bottom point of the box\r\n     o     width: (number) width of the box\r\n     o     height: (number) height of the box\r\n     o     cx: (number) x coordinate of the center of the box\r\n     o     cy: (number) y coordinate of the center of the box\r\n     o }\r\n    \\*/\r\n    var pathDimensions = R.pathBBox = function (path) {\r\n        var pth = paths(path);\r\n        if (pth.bbox) {\r\n            return clone(pth.bbox);\r\n        }\r\n        if (!path) {\r\n            return {x: 0, y: 0, width: 0, height: 0, x2: 0, y2: 0};\r\n        }\r\n        path = path2curve(path);\r\n        var x = 0,\r\n            y = 0,\r\n            X = [],\r\n            Y = [],\r\n            p;\r\n        for (var i = 0, ii = path.length; i < ii; i++) {\r\n            p = path[i];\r\n            if (p[0] == \"M\") {\r\n                x = p[1];\r\n                y = p[2];\r\n                X.push(x);\r\n                Y.push(y);\r\n            } else {\r\n                var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\r\n                X = X[concat](dim.min.x, dim.max.x);\r\n                Y = Y[concat](dim.min.y, dim.max.y);\r\n                x = p[5];\r\n                y = p[6];\r\n            }\r\n        }\r\n        var xmin = mmin[apply](0, X),\r\n            ymin = mmin[apply](0, Y),\r\n            xmax = mmax[apply](0, X),\r\n            ymax = mmax[apply](0, Y),\r\n            width = xmax - xmin,\r\n            height = ymax - ymin,\r\n                bb = {\r\n                x: xmin,\r\n                y: ymin,\r\n                x2: xmax,\r\n                y2: ymax,\r\n                width: width,\r\n                height: height,\r\n                cx: xmin + width / 2,\r\n                cy: ymin + height / 2\r\n            };\r\n        pth.bbox = clone(bb);\r\n        return bb;\r\n    },\r\n        pathClone = function (pathArray) {\r\n            var res = clone(pathArray);\r\n            res.toString = R._path2string;\r\n            return res;\r\n        },\r\n        pathToRelative = R._pathToRelative = function (pathArray) {\r\n            var pth = paths(pathArray);\r\n            if (pth.rel) {\r\n                return pathClone(pth.rel);\r\n            }\r\n            if (!R.is(pathArray, array) || !R.is(pathArray && pathArray[0], array)) { // rough assumption\r\n                pathArray = R.parsePathString(pathArray);\r\n            }\r\n            var res = [],\r\n                x = 0,\r\n                y = 0,\r\n                mx = 0,\r\n                my = 0,\r\n                start = 0;\r\n            if (pathArray[0][0] == \"M\") {\r\n                x = pathArray[0][1];\r\n                y = pathArray[0][2];\r\n                mx = x;\r\n                my = y;\r\n                start++;\r\n                res.push([\"M\", x, y]);\r\n            }\r\n            for (var i = start, ii = pathArray.length; i < ii; i++) {\r\n                var r = res[i] = [],\r\n                    pa = pathArray[i];\r\n                if (pa[0] != lowerCase.call(pa[0])) {\r\n                    r[0] = lowerCase.call(pa[0]);\r\n                    switch (r[0]) {\r\n                        case \"a\":\r\n                            r[1] = pa[1];\r\n                            r[2] = pa[2];\r\n                            r[3] = pa[3];\r\n                            r[4] = pa[4];\r\n                            r[5] = pa[5];\r\n                            r[6] = +(pa[6] - x).toFixed(3);\r\n                            r[7] = +(pa[7] - y).toFixed(3);\r\n                            break;\r\n                        case \"v\":\r\n                            r[1] = +(pa[1] - y).toFixed(3);\r\n                            break;\r\n                        case \"m\":\r\n                            mx = pa[1];\r\n                            my = pa[2];\r\n                        default:\r\n                            for (var j = 1, jj = pa.length; j < jj; j++) {\r\n                                r[j] = +(pa[j] - ((j % 2) ? x : y)).toFixed(3);\r\n                            }\r\n                    }\r\n                } else {\r\n                    r = res[i] = [];\r\n                    if (pa[0] == \"m\") {\r\n                        mx = pa[1] + x;\r\n                        my = pa[2] + y;\r\n                    }\r\n                    for (var k = 0, kk = pa.length; k < kk; k++) {\r\n                        res[i][k] = pa[k];\r\n                    }\r\n                }\r\n                var len = res[i].length;\r\n                switch (res[i][0]) {\r\n                    case \"z\":\r\n                        x = mx;\r\n                        y = my;\r\n                        break;\r\n                    case \"h\":\r\n                        x += +res[i][len - 1];\r\n                        break;\r\n                    case \"v\":\r\n                        y += +res[i][len - 1];\r\n                        break;\r\n                    default:\r\n                        x += +res[i][len - 2];\r\n                        y += +res[i][len - 1];\r\n                }\r\n            }\r\n            res.toString = R._path2string;\r\n            pth.rel = pathClone(res);\r\n            return res;\r\n        },\r\n        pathToAbsolute = R._pathToAbsolute = function (pathArray) {\r\n            var pth = paths(pathArray);\r\n            if (pth.abs) {\r\n                return pathClone(pth.abs);\r\n            }\r\n            if (!R.is(pathArray, array) || !R.is(pathArray && pathArray[0], array)) { // rough assumption\r\n                pathArray = R.parsePathString(pathArray);\r\n            }\r\n            if (!pathArray || !pathArray.length) {\r\n                return [[\"M\", 0, 0]];\r\n            }\r\n            var res = [],\r\n                x = 0,\r\n                y = 0,\r\n                mx = 0,\r\n                my = 0,\r\n                start = 0;\r\n            if (pathArray[0][0] == \"M\") {\r\n                x = +pathArray[0][1];\r\n                y = +pathArray[0][2];\r\n                mx = x;\r\n                my = y;\r\n                start++;\r\n                res[0] = [\"M\", x, y];\r\n            }\r\n            var crz = pathArray.length == 3 && pathArray[0][0] == \"M\" && pathArray[1][0].toUpperCase() == \"R\" && pathArray[2][0].toUpperCase() == \"Z\";\r\n            for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\r\n                res.push(r = []);\r\n                pa = pathArray[i];\r\n                if (pa[0] != upperCase.call(pa[0])) {\r\n                    r[0] = upperCase.call(pa[0]);\r\n                    switch (r[0]) {\r\n                        case \"A\":\r\n                            r[1] = pa[1];\r\n                            r[2] = pa[2];\r\n                            r[3] = pa[3];\r\n                            r[4] = pa[4];\r\n                            r[5] = pa[5];\r\n                            r[6] = +(pa[6] + x);\r\n                            r[7] = +(pa[7] + y);\r\n                            break;\r\n                        case \"V\":\r\n                            r[1] = +pa[1] + y;\r\n                            break;\r\n                        case \"H\":\r\n                            r[1] = +pa[1] + x;\r\n                            break;\r\n                        case \"R\":\r\n                            var dots = [x, y][concat](pa.slice(1));\r\n                            for (var j = 2, jj = dots.length; j < jj; j++) {\r\n                                dots[j] = +dots[j] + x;\r\n                                dots[++j] = +dots[j] + y;\r\n                            }\r\n                            res.pop();\r\n                            res = res[concat](catmullRom2bezier(dots, crz));\r\n                            break;\r\n                        case \"M\":\r\n                            mx = +pa[1] + x;\r\n                            my = +pa[2] + y;\r\n                        default:\r\n                            for (j = 1, jj = pa.length; j < jj; j++) {\r\n                                r[j] = +pa[j] + ((j % 2) ? x : y);\r\n                            }\r\n                    }\r\n                } else if (pa[0] == \"R\") {\r\n                    dots = [x, y][concat](pa.slice(1));\r\n                    res.pop();\r\n                    res = res[concat](catmullRom2bezier(dots, crz));\r\n                    r = [\"R\"][concat](pa.slice(-2));\r\n                } else {\r\n                    for (var k = 0, kk = pa.length; k < kk; k++) {\r\n                        r[k] = pa[k];\r\n                    }\r\n                }\r\n                switch (r[0]) {\r\n                    case \"Z\":\r\n                        x = mx;\r\n                        y = my;\r\n                        break;\r\n                    case \"H\":\r\n                        x = r[1];\r\n                        break;\r\n                    case \"V\":\r\n                        y = r[1];\r\n                        break;\r\n                    case \"M\":\r\n                        mx = r[r.length - 2];\r\n                        my = r[r.length - 1];\r\n                    default:\r\n                        x = r[r.length - 2];\r\n                        y = r[r.length - 1];\r\n                }\r\n            }\r\n            res.toString = R._path2string;\r\n            pth.abs = pathClone(res);\r\n            return res;\r\n        },\r\n        l2c = function (x1, y1, x2, y2) {\r\n            return [x1, y1, x2, y2, x2, y2];\r\n        },\r\n        q2c = function (x1, y1, ax, ay, x2, y2) {\r\n            var _13 = 1 / 3,\r\n                _23 = 2 / 3;\r\n            return [\r\n                    _13 * x1 + _23 * ax,\r\n                    _13 * y1 + _23 * ay,\r\n                    _13 * x2 + _23 * ax,\r\n                    _13 * y2 + _23 * ay,\r\n                    x2,\r\n                    y2\r\n                ];\r\n        },\r\n        a2c = function (x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\r\n            // for more information of where this math came from visit:\r\n            // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\r\n            var _120 = PI * 120 / 180,\r\n                rad = PI / 180 * (+angle || 0),\r\n                res = [],\r\n                xy,\r\n                rotate = cacher(function (x, y, rad) {\r\n                    var X = x * math.cos(rad) - y * math.sin(rad),\r\n                        Y = x * math.sin(rad) + y * math.cos(rad);\r\n                    return {x: X, y: Y};\r\n                });\r\n            if (!recursive) {\r\n                xy = rotate(x1, y1, -rad);\r\n                x1 = xy.x;\r\n                y1 = xy.y;\r\n                xy = rotate(x2, y2, -rad);\r\n                x2 = xy.x;\r\n                y2 = xy.y;\r\n                var cos = math.cos(PI / 180 * angle),\r\n                    sin = math.sin(PI / 180 * angle),\r\n                    x = (x1 - x2) / 2,\r\n                    y = (y1 - y2) / 2;\r\n                var h = (x * x) / (rx * rx) + (y * y) / (ry * ry);\r\n                if (h > 1) {\r\n                    h = math.sqrt(h);\r\n                    rx = h * rx;\r\n                    ry = h * ry;\r\n                }\r\n                var rx2 = rx * rx,\r\n                    ry2 = ry * ry,\r\n                    k = (large_arc_flag == sweep_flag ? -1 : 1) *\r\n                        math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\r\n                    cx = k * rx * y / ry + (x1 + x2) / 2,\r\n                    cy = k * -ry * x / rx + (y1 + y2) / 2,\r\n                    f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\r\n                    f2 = math.asin(((y2 - cy) / ry).toFixed(9));\r\n\r\n                f1 = x1 < cx ? PI - f1 : f1;\r\n                f2 = x2 < cx ? PI - f2 : f2;\r\n                f1 < 0 && (f1 = PI * 2 + f1);\r\n                f2 < 0 && (f2 = PI * 2 + f2);\r\n                if (sweep_flag && f1 > f2) {\r\n                    f1 = f1 - PI * 2;\r\n                }\r\n                if (!sweep_flag && f2 > f1) {\r\n                    f2 = f2 - PI * 2;\r\n                }\r\n            } else {\r\n                f1 = recursive[0];\r\n                f2 = recursive[1];\r\n                cx = recursive[2];\r\n                cy = recursive[3];\r\n            }\r\n            var df = f2 - f1;\r\n            if (abs(df) > _120) {\r\n                var f2old = f2,\r\n                    x2old = x2,\r\n                    y2old = y2;\r\n                f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\r\n                x2 = cx + rx * math.cos(f2);\r\n                y2 = cy + ry * math.sin(f2);\r\n                res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\r\n            }\r\n            df = f2 - f1;\r\n            var c1 = math.cos(f1),\r\n                s1 = math.sin(f1),\r\n                c2 = math.cos(f2),\r\n                s2 = math.sin(f2),\r\n                t = math.tan(df / 4),\r\n                hx = 4 / 3 * rx * t,\r\n                hy = 4 / 3 * ry * t,\r\n                m1 = [x1, y1],\r\n                m2 = [x1 + hx * s1, y1 - hy * c1],\r\n                m3 = [x2 + hx * s2, y2 - hy * c2],\r\n                m4 = [x2, y2];\r\n            m2[0] = 2 * m1[0] - m2[0];\r\n            m2[1] = 2 * m1[1] - m2[1];\r\n            if (recursive) {\r\n                return [m2, m3, m4][concat](res);\r\n            } else {\r\n                res = [m2, m3, m4][concat](res).join()[split](\",\");\r\n                var newres = [];\r\n                for (var i = 0, ii = res.length; i < ii; i++) {\r\n                    newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\r\n                }\r\n                return newres;\r\n            }\r\n        },\r\n        findDotAtSegment = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\r\n            var t1 = 1 - t;\r\n            return {\r\n                x: pow(t1, 3) * p1x + pow(t1, 2) * 3 * t * c1x + t1 * 3 * t * t * c2x + pow(t, 3) * p2x,\r\n                y: pow(t1, 3) * p1y + pow(t1, 2) * 3 * t * c1y + t1 * 3 * t * t * c2y + pow(t, 3) * p2y\r\n            };\r\n        },\r\n        curveDim = cacher(function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\r\n            var a = (c2x - 2 * c1x + p1x) - (p2x - 2 * c2x + c1x),\r\n                b = 2 * (c1x - p1x) - 2 * (c2x - c1x),\r\n                c = p1x - c1x,\r\n                t1 = (-b + math.sqrt(b * b - 4 * a * c)) / 2 / a,\r\n                t2 = (-b - math.sqrt(b * b - 4 * a * c)) / 2 / a,\r\n                y = [p1y, p2y],\r\n                x = [p1x, p2x],\r\n                dot;\r\n            abs(t1) > \"1e12\" && (t1 = .5);\r\n            abs(t2) > \"1e12\" && (t2 = .5);\r\n            if (t1 > 0 && t1 < 1) {\r\n                dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t1);\r\n                x.push(dot.x);\r\n                y.push(dot.y);\r\n            }\r\n            if (t2 > 0 && t2 < 1) {\r\n                dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t2);\r\n                x.push(dot.x);\r\n                y.push(dot.y);\r\n            }\r\n            a = (c2y - 2 * c1y + p1y) - (p2y - 2 * c2y + c1y);\r\n            b = 2 * (c1y - p1y) - 2 * (c2y - c1y);\r\n            c = p1y - c1y;\r\n            t1 = (-b + math.sqrt(b * b - 4 * a * c)) / 2 / a;\r\n            t2 = (-b - math.sqrt(b * b - 4 * a * c)) / 2 / a;\r\n            abs(t1) > \"1e12\" && (t1 = .5);\r\n            abs(t2) > \"1e12\" && (t2 = .5);\r\n            if (t1 > 0 && t1 < 1) {\r\n                dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t1);\r\n                x.push(dot.x);\r\n                y.push(dot.y);\r\n            }\r\n            if (t2 > 0 && t2 < 1) {\r\n                dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t2);\r\n                x.push(dot.x);\r\n                y.push(dot.y);\r\n            }\r\n            return {\r\n                min: {x: mmin[apply](0, x), y: mmin[apply](0, y)},\r\n                max: {x: mmax[apply](0, x), y: mmax[apply](0, y)}\r\n            };\r\n        }),\r\n        path2curve = R._path2curve = cacher(function (path, path2) {\r\n            var pth = !path2 && paths(path);\r\n            if (!path2 && pth.curve) {\r\n                return pathClone(pth.curve);\r\n            }\r\n            var p = pathToAbsolute(path),\r\n                p2 = path2 && pathToAbsolute(path2),\r\n                attrs = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\r\n                attrs2 = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\r\n                processPath = function (path, d, pcom) {\r\n                    var nx, ny, tq = {T:1, Q:1};\r\n                    if (!path) {\r\n                        return [\"C\", d.x, d.y, d.x, d.y, d.x, d.y];\r\n                    }\r\n                    !(path[0] in tq) && (d.qx = d.qy = null);\r\n                    switch (path[0]) {\r\n                        case \"M\":\r\n                            d.X = path[1];\r\n                            d.Y = path[2];\r\n                            break;\r\n                        case \"A\":\r\n                            path = [\"C\"][concat](a2c[apply](0, [d.x, d.y][concat](path.slice(1))));\r\n                            break;\r\n                        case \"S\":\r\n                            if (pcom == \"C\" || pcom == \"S\") { // In \"S\" case we have to take into account, if the previous command is C/S.\r\n                                nx = d.x * 2 - d.bx;          // And reflect the previous\r\n                                ny = d.y * 2 - d.by;          // command's control point relative to the current point.\r\n                            }\r\n                            else {                            // or some else or nothing\r\n                                nx = d.x;\r\n                                ny = d.y;\r\n                            }\r\n                            path = [\"C\", nx, ny][concat](path.slice(1));\r\n                            break;\r\n                        case \"T\":\r\n                            if (pcom == \"Q\" || pcom == \"T\") { // In \"T\" case we have to take into account, if the previous command is Q/T.\r\n                                d.qx = d.x * 2 - d.qx;        // And make a reflection similar\r\n                                d.qy = d.y * 2 - d.qy;        // to case \"S\".\r\n                            }\r\n                            else {                            // or something else or nothing\r\n                                d.qx = d.x;\r\n                                d.qy = d.y;\r\n                            }\r\n                            path = [\"C\"][concat](q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\r\n                            break;\r\n                        case \"Q\":\r\n                            d.qx = path[1];\r\n                            d.qy = path[2];\r\n                            path = [\"C\"][concat](q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\r\n                            break;\r\n                        case \"L\":\r\n                            path = [\"C\"][concat](l2c(d.x, d.y, path[1], path[2]));\r\n                            break;\r\n                        case \"H\":\r\n                            path = [\"C\"][concat](l2c(d.x, d.y, path[1], d.y));\r\n                            break;\r\n                        case \"V\":\r\n                            path = [\"C\"][concat](l2c(d.x, d.y, d.x, path[1]));\r\n                            break;\r\n                        case \"Z\":\r\n                            path = [\"C\"][concat](l2c(d.x, d.y, d.X, d.Y));\r\n                            break;\r\n                    }\r\n                    return path;\r\n                },\r\n                fixArc = function (pp, i) {\r\n                    if (pp[i].length > 7) {\r\n                        pp[i].shift();\r\n                        var pi = pp[i];\r\n                        while (pi.length) {\r\n                            pcoms1[i]=\"A\"; // if created multiple C:s, their original seg is saved\r\n                            p2 && (pcoms2[i]=\"A\"); // the same as above\r\n                            pp.splice(i++, 0, [\"C\"][concat](pi.splice(0, 6)));\r\n                        }\r\n                        pp.splice(i, 1);\r\n                        ii = mmax(p.length, p2 && p2.length || 0);\r\n                    }\r\n                },\r\n                fixM = function (path1, path2, a1, a2, i) {\r\n                    if (path1 && path2 && path1[i][0] == \"M\" && path2[i][0] != \"M\") {\r\n                        path2.splice(i, 0, [\"M\", a2.x, a2.y]);\r\n                        a1.bx = 0;\r\n                        a1.by = 0;\r\n                        a1.x = path1[i][1];\r\n                        a1.y = path1[i][2];\r\n                        ii = mmax(p.length, p2 && p2.length || 0);\r\n                    }\r\n                },\r\n                pcoms1 = [], // path commands of original path p\r\n                pcoms2 = [], // path commands of original path p2\r\n                pfirst = \"\", // temporary holder for original path command\r\n                pcom = \"\"; // holder for previous path command of original path\r\n            for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\r\n                p[i] && (pfirst = p[i][0]); // save current path command\r\n\r\n                if (pfirst != \"C\") // C is not saved yet, because it may be result of conversion\r\n                {\r\n                    pcoms1[i] = pfirst; // Save current path command\r\n                    i && ( pcom = pcoms1[i-1]); // Get previous path command pcom\r\n                }\r\n                p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\r\n\r\n                if (pcoms1[i] != \"A\" && pfirst == \"C\") pcoms1[i] = \"C\"; // A is the only command\r\n                // which may produce multiple C:s\r\n                // so we have to make sure that C is also C in original path\r\n\r\n                fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\r\n\r\n                if (p2) { // the same procedures is done to p2\r\n                    p2[i] && (pfirst = p2[i][0]);\r\n                    if (pfirst != \"C\")\r\n                    {\r\n                        pcoms2[i] = pfirst;\r\n                        i && (pcom = pcoms2[i-1]);\r\n                    }\r\n                    p2[i] = processPath(p2[i], attrs2, pcom);\r\n\r\n                    if (pcoms2[i]!=\"A\" && pfirst==\"C\") pcoms2[i]=\"C\";\r\n\r\n                    fixArc(p2, i);\r\n                }\r\n                fixM(p, p2, attrs, attrs2, i);\r\n                fixM(p2, p, attrs2, attrs, i);\r\n                var seg = p[i],\r\n                    seg2 = p2 && p2[i],\r\n                    seglen = seg.length,\r\n                    seg2len = p2 && seg2.length;\r\n                attrs.x = seg[seglen - 2];\r\n                attrs.y = seg[seglen - 1];\r\n                attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\r\n                attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\r\n                attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\r\n                attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\r\n                attrs2.x = p2 && seg2[seg2len - 2];\r\n                attrs2.y = p2 && seg2[seg2len - 1];\r\n            }\r\n            if (!p2) {\r\n                pth.curve = pathClone(p);\r\n            }\r\n            return p2 ? [p, p2] : p;\r\n        }, null, pathClone),\r\n        parseDots = R._parseDots = cacher(function (gradient) {\r\n            var dots = [];\r\n            for (var i = 0, ii = gradient.length; i < ii; i++) {\r\n                var dot = {},\r\n                    par = gradient[i].match(/^([^:]*):?([\\d\\.]*)/);\r\n                dot.color = R.getRGB(par[1]);\r\n                if (dot.color.error) {\r\n                    return null;\r\n                }\r\n                dot.color = dot.color.hex;\r\n                par[2] && (dot.offset = par[2] + \"%\");\r\n                dots.push(dot);\r\n            }\r\n            for (i = 1, ii = dots.length - 1; i < ii; i++) {\r\n                if (!dots[i].offset) {\r\n                    var start = toFloat(dots[i - 1].offset || 0),\r\n                        end = 0;\r\n                    for (var j = i + 1; j < ii; j++) {\r\n                        if (dots[j].offset) {\r\n                            end = dots[j].offset;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (!end) {\r\n                        end = 100;\r\n                        j = ii;\r\n                    }\r\n                    end = toFloat(end);\r\n                    var d = (end - start) / (j - i + 1);\r\n                    for (; i < j; i++) {\r\n                        start += d;\r\n                        dots[i].offset = start + \"%\";\r\n                    }\r\n                }\r\n            }\r\n            return dots;\r\n        }),\r\n        tear = R._tear = function (el, paper) {\r\n            el == paper.top && (paper.top = el.prev);\r\n            el == paper.bottom && (paper.bottom = el.next);\r\n            el.next && (el.next.prev = el.prev);\r\n            el.prev && (el.prev.next = el.next);\r\n        },\r\n        tofront = R._tofront = function (el, paper) {\r\n            if (paper.top === el) {\r\n                return;\r\n            }\r\n            tear(el, paper);\r\n            el.next = null;\r\n            el.prev = paper.top;\r\n            paper.top.next = el;\r\n            paper.top = el;\r\n        },\r\n        toback = R._toback = function (el, paper) {\r\n            if (paper.bottom === el) {\r\n                return;\r\n            }\r\n            tear(el, paper);\r\n            el.next = paper.bottom;\r\n            el.prev = null;\r\n            paper.bottom.prev = el;\r\n            paper.bottom = el;\r\n        },\r\n        insertafter = R._insertafter = function (el, el2, paper) {\r\n            tear(el, paper);\r\n            el2 == paper.top && (paper.top = el);\r\n            el2.next && (el2.next.prev = el);\r\n            el.next = el2.next;\r\n            el.prev = el2;\r\n            el2.next = el;\r\n        },\r\n        insertbefore = R._insertbefore = function (el, el2, paper) {\r\n            tear(el, paper);\r\n            el2 == paper.bottom && (paper.bottom = el);\r\n            el2.prev && (el2.prev.next = el);\r\n            el.prev = el2.prev;\r\n            el2.prev = el;\r\n            el.next = el2;\r\n        },\r\n        /*\\\r\n         * Raphael.toMatrix\r\n         [ method ]\r\n         **\r\n         * Utility method\r\n         **\r\n         * Returns matrix of transformations applied to a given path\r\n         > Parameters\r\n         - path (string) path string\r\n         - transform (string|array) transformation string\r\n         = (object) @Matrix\r\n        \\*/\r\n        toMatrix = R.toMatrix = function (path, transform) {\r\n            var bb = pathDimensions(path),\r\n                el = {\r\n                    _: {\r\n                        transform: E\r\n                    },\r\n                    getBBox: function () {\r\n                        return bb;\r\n                    }\r\n                };\r\n            extractTransform(el, transform);\r\n            return el.matrix;\r\n        },\r\n        /*\\\r\n         * Raphael.transformPath\r\n         [ method ]\r\n         **\r\n         * Utility method\r\n         **\r\n         * Returns path transformed by a given transformation\r\n         > Parameters\r\n         - path (string) path string\r\n         - transform (string|array) transformation string\r\n         = (string) path\r\n        \\*/\r\n        transformPath = R.transformPath = function (path, transform) {\r\n            return mapPath(path, toMatrix(path, transform));\r\n        },\r\n        extractTransform = R._extractTransform = function (el, tstr) {\r\n            if (tstr == null) {\r\n                return el._.transform;\r\n            }\r\n            tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, el._.transform || E);\r\n            var tdata = R.parseTransformString(tstr),\r\n                deg = 0,\r\n                dx = 0,\r\n                dy = 0,\r\n                sx = 1,\r\n                sy = 1,\r\n                _ = el._,\r\n                m = new Matrix;\r\n            _.transform = tdata || [];\r\n            if (tdata) {\r\n                for (var i = 0, ii = tdata.length; i < ii; i++) {\r\n                    var t = tdata[i],\r\n                        tlen = t.length,\r\n                        command = Str(t[0]).toLowerCase(),\r\n                        absolute = t[0] != command,\r\n                        inver = absolute ? m.invert() : 0,\r\n                        x1,\r\n                        y1,\r\n                        x2,\r\n                        y2,\r\n                        bb;\r\n                    if (command == \"t\" && tlen == 3) {\r\n                        if (absolute) {\r\n                            x1 = inver.x(0, 0);\r\n                            y1 = inver.y(0, 0);\r\n                            x2 = inver.x(t[1], t[2]);\r\n                            y2 = inver.y(t[1], t[2]);\r\n                            m.translate(x2 - x1, y2 - y1);\r\n                        } else {\r\n                            m.translate(t[1], t[2]);\r\n                        }\r\n                    } else if (command == \"r\") {\r\n                        if (tlen == 2) {\r\n                            bb = bb || el.getBBox(1);\r\n                            m.rotate(t[1], bb.x + bb.width / 2, bb.y + bb.height / 2);\r\n                            deg += t[1];\r\n                        } else if (tlen == 4) {\r\n                            if (absolute) {\r\n                                x2 = inver.x(t[2], t[3]);\r\n                                y2 = inver.y(t[2], t[3]);\r\n                                m.rotate(t[1], x2, y2);\r\n                            } else {\r\n                                m.rotate(t[1], t[2], t[3]);\r\n                            }\r\n                            deg += t[1];\r\n                        }\r\n                    } else if (command == \"s\") {\r\n                        if (tlen == 2 || tlen == 3) {\r\n                            bb = bb || el.getBBox(1);\r\n                            m.scale(t[1], t[tlen - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\r\n                            sx *= t[1];\r\n                            sy *= t[tlen - 1];\r\n                        } else if (tlen == 5) {\r\n                            if (absolute) {\r\n                                x2 = inver.x(t[3], t[4]);\r\n                                y2 = inver.y(t[3], t[4]);\r\n                                m.scale(t[1], t[2], x2, y2);\r\n                            } else {\r\n                                m.scale(t[1], t[2], t[3], t[4]);\r\n                            }\r\n                            sx *= t[1];\r\n                            sy *= t[2];\r\n                        }\r\n                    } else if (command == \"m\" && tlen == 7) {\r\n                        m.add(t[1], t[2], t[3], t[4], t[5], t[6]);\r\n                    }\r\n                    _.dirtyT = 1;\r\n                    el.matrix = m;\r\n                }\r\n            }\r\n\r\n            /*\\\r\n             * Element.matrix\r\n             [ property (object) ]\r\n             **\r\n             * Keeps @Matrix object, which represents element transformation\r\n            \\*/\r\n            el.matrix = m;\r\n\r\n            _.sx = sx;\r\n            _.sy = sy;\r\n            _.deg = deg;\r\n            _.dx = dx = m.e;\r\n            _.dy = dy = m.f;\r\n\r\n            if (sx == 1 && sy == 1 && !deg && _.bbox) {\r\n                _.bbox.x += +dx;\r\n                _.bbox.y += +dy;\r\n            } else {\r\n                _.dirtyT = 1;\r\n            }\r\n        },\r\n        getEmpty = function (item) {\r\n            var l = item[0];\r\n            switch (l.toLowerCase()) {\r\n                case \"t\": return [l, 0, 0];\r\n                case \"m\": return [l, 1, 0, 0, 1, 0, 0];\r\n                case \"r\": if (item.length == 4) {\r\n                    return [l, 0, item[2], item[3]];\r\n                } else {\r\n                    return [l, 0];\r\n                }\r\n                case \"s\": if (item.length == 5) {\r\n                    return [l, 1, 1, item[3], item[4]];\r\n                } else if (item.length == 3) {\r\n                    return [l, 1, 1];\r\n                } else {\r\n                    return [l, 1];\r\n                }\r\n            }\r\n        },\r\n        equaliseTransform = R._equaliseTransform = function (t1, t2) {\r\n            t2 = Str(t2).replace(/\\.{3}|\\u2026/g, t1);\r\n            t1 = R.parseTransformString(t1) || [];\r\n            t2 = R.parseTransformString(t2) || [];\r\n            var maxlength = mmax(t1.length, t2.length),\r\n                from = [],\r\n                to = [],\r\n                i = 0, j, jj,\r\n                tt1, tt2;\r\n            for (; i < maxlength; i++) {\r\n                tt1 = t1[i] || getEmpty(t2[i]);\r\n                tt2 = t2[i] || getEmpty(tt1);\r\n                if ((tt1[0] != tt2[0]) ||\r\n                    (tt1[0].toLowerCase() == \"r\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3])) ||\r\n                    (tt1[0].toLowerCase() == \"s\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4]))\r\n                    ) {\r\n                    return;\r\n                }\r\n                from[i] = [];\r\n                to[i] = [];\r\n                for (j = 0, jj = mmax(tt1.length, tt2.length); j < jj; j++) {\r\n                    j in tt1 && (from[i][j] = tt1[j]);\r\n                    j in tt2 && (to[i][j] = tt2[j]);\r\n                }\r\n            }\r\n            return {\r\n                from: from,\r\n                to: to\r\n            };\r\n        };\r\n    R._getContainer = function (x, y, w, h) {\r\n        var container;\r\n        container = h == null && !R.is(x, \"object\") ? g.doc.getElementById(x) : x;\r\n        if (container == null) {\r\n            return;\r\n        }\r\n        if (container.tagName) {\r\n            if (y == null) {\r\n                return {\r\n                    container: container,\r\n                    width: container.style.pixelWidth || container.offsetWidth,\r\n                    height: container.style.pixelHeight || container.offsetHeight\r\n                };\r\n            } else {\r\n                return {\r\n                    container: container,\r\n                    width: y,\r\n                    height: w\r\n                };\r\n            }\r\n        }\r\n        return {\r\n            container: 1,\r\n            x: x,\r\n            y: y,\r\n            width: w,\r\n            height: h\r\n        };\r\n    };\r\n    /*\\\r\n     * Raphael.pathToRelative\r\n     [ method ]\r\n     **\r\n     * Utility method\r\n     **\r\n     * Converts path to relative form\r\n     > Parameters\r\n     - pathString (string|array) path string or array of segments\r\n     = (array) array of segments.\r\n    \\*/\r\n    R.pathToRelative = pathToRelative;\r\n    R._engine = {};\r\n    /*\\\r\n     * Raphael.path2curve\r\n     [ method ]\r\n     **\r\n     * Utility method\r\n     **\r\n     * Converts path to a new path where all segments are cubic bezier curves.\r\n     > Parameters\r\n     - pathString (string|array) path string or array of segments\r\n     = (array) array of segments.\r\n    \\*/\r\n    R.path2curve = path2curve;\r\n    /*\\\r\n     * Raphael.matrix\r\n     [ method ]\r\n     **\r\n     * Utility method\r\n     **\r\n     * Returns matrix based on given parameters.\r\n     > Parameters\r\n     - a (number)\r\n     - b (number)\r\n     - c (number)\r\n     - d (number)\r\n     - e (number)\r\n     - f (number)\r\n     = (object) @Matrix\r\n    \\*/\r\n    R.matrix = function (a, b, c, d, e, f) {\r\n        return new Matrix(a, b, c, d, e, f);\r\n    };\r\n    function Matrix(a, b, c, d, e, f) {\r\n        if (a != null) {\r\n            this.a = +a;\r\n            this.b = +b;\r\n            this.c = +c;\r\n            this.d = +d;\r\n            this.e = +e;\r\n            this.f = +f;\r\n        } else {\r\n            this.a = 1;\r\n            this.b = 0;\r\n            this.c = 0;\r\n            this.d = 1;\r\n            this.e = 0;\r\n            this.f = 0;\r\n        }\r\n    }\r\n    (function (matrixproto) {\r\n        /*\\\r\n         * Matrix.add\r\n         [ method ]\r\n         **\r\n         * Adds given matrix to existing one.\r\n         > Parameters\r\n         - a (number)\r\n         - b (number)\r\n         - c (number)\r\n         - d (number)\r\n         - e (number)\r\n         - f (number)\r\n         or\r\n         - matrix (object) @Matrix\r\n        \\*/\r\n        matrixproto.add = function (a, b, c, d, e, f) {\r\n            var out = [[], [], []],\r\n                m = [[this.a, this.c, this.e], [this.b, this.d, this.f], [0, 0, 1]],\r\n                matrix = [[a, c, e], [b, d, f], [0, 0, 1]],\r\n                x, y, z, res;\r\n\r\n            if (a && a instanceof Matrix) {\r\n                matrix = [[a.a, a.c, a.e], [a.b, a.d, a.f], [0, 0, 1]];\r\n            }\r\n\r\n            for (x = 0; x < 3; x++) {\r\n                for (y = 0; y < 3; y++) {\r\n                    res = 0;\r\n                    for (z = 0; z < 3; z++) {\r\n                        res += m[x][z] * matrix[z][y];\r\n                    }\r\n                    out[x][y] = res;\r\n                }\r\n            }\r\n            this.a = out[0][0];\r\n            this.b = out[1][0];\r\n            this.c = out[0][1];\r\n            this.d = out[1][1];\r\n            this.e = out[0][2];\r\n            this.f = out[1][2];\r\n        };\r\n        /*\\\r\n         * Matrix.invert\r\n         [ method ]\r\n         **\r\n         * Returns inverted version of the matrix\r\n         = (object) @Matrix\r\n        \\*/\r\n        matrixproto.invert = function () {\r\n            var me = this,\r\n                x = me.a * me.d - me.b * me.c;\r\n            return new Matrix(me.d / x, -me.b / x, -me.c / x, me.a / x, (me.c * me.f - me.d * me.e) / x, (me.b * me.e - me.a * me.f) / x);\r\n        };\r\n        /*\\\r\n         * Matrix.clone\r\n         [ method ]\r\n         **\r\n         * Returns copy of the matrix\r\n         = (object) @Matrix\r\n        \\*/\r\n        matrixproto.clone = function () {\r\n            return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f);\r\n        };\r\n        /*\\\r\n         * Matrix.translate\r\n         [ method ]\r\n         **\r\n         * Translate the matrix\r\n         > Parameters\r\n         - x (number)\r\n         - y (number)\r\n        \\*/\r\n        matrixproto.translate = function (x, y) {\r\n            this.add(1, 0, 0, 1, x, y);\r\n        };\r\n        /*\\\r\n         * Matrix.scale\r\n         [ method ]\r\n         **\r\n         * Scales the matrix\r\n         > Parameters\r\n         - x (number)\r\n         - y (number) #optional\r\n         - cx (number) #optional\r\n         - cy (number) #optional\r\n        \\*/\r\n        matrixproto.scale = function (x, y, cx, cy) {\r\n            y == null && (y = x);\r\n            (cx || cy) && this.add(1, 0, 0, 1, cx, cy);\r\n            this.add(x, 0, 0, y, 0, 0);\r\n            (cx || cy) && this.add(1, 0, 0, 1, -cx, -cy);\r\n        };\r\n        /*\\\r\n         * Matrix.rotate\r\n         [ method ]\r\n         **\r\n         * Rotates the matrix\r\n         > Parameters\r\n         - a (number)\r\n         - x (number)\r\n         - y (number)\r\n        \\*/\r\n        matrixproto.rotate = function (a, x, y) {\r\n            a = R.rad(a);\r\n            x = x || 0;\r\n            y = y || 0;\r\n            var cos = +math.cos(a).toFixed(9),\r\n                sin = +math.sin(a).toFixed(9);\r\n            this.add(cos, sin, -sin, cos, x, y);\r\n            this.add(1, 0, 0, 1, -x, -y);\r\n        };\r\n        /*\\\r\n         * Matrix.x\r\n         [ method ]\r\n         **\r\n         * Return x coordinate for given point after transformation described by the matrix. See also @Matrix.y\r\n         > Parameters\r\n         - x (number)\r\n         - y (number)\r\n         = (number) x\r\n        \\*/\r\n        matrixproto.x = function (x, y) {\r\n            return x * this.a + y * this.c + this.e;\r\n        };\r\n        /*\\\r\n         * Matrix.y\r\n         [ method ]\r\n         **\r\n         * Return y coordinate for given point after transformation described by the matrix. See also @Matrix.x\r\n         > Parameters\r\n         - x (number)\r\n         - y (number)\r\n         = (number) y\r\n        \\*/\r\n        matrixproto.y = function (x, y) {\r\n            return x * this.b + y * this.d + this.f;\r\n        };\r\n        matrixproto.get = function (i) {\r\n            return +this[Str.fromCharCode(97 + i)].toFixed(4);\r\n        };\r\n        matrixproto.toString = function () {\r\n            return R.svg ?\r\n                \"matrix(\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + \")\" :\r\n                [this.get(0), this.get(2), this.get(1), this.get(3), 0, 0].join();\r\n        };\r\n        matrixproto.toFilter = function () {\r\n            return \"progid:DXImageTransform.Microsoft.Matrix(M11=\" + this.get(0) +\r\n                \", M12=\" + this.get(2) + \", M21=\" + this.get(1) + \", M22=\" + this.get(3) +\r\n                \", Dx=\" + this.get(4) + \", Dy=\" + this.get(5) + \", sizingmethod='auto expand')\";\r\n        };\r\n        matrixproto.offset = function () {\r\n            return [this.e.toFixed(4), this.f.toFixed(4)];\r\n        };\r\n        function norm(a) {\r\n            return a[0] * a[0] + a[1] * a[1];\r\n        }\r\n        function normalize(a) {\r\n            var mag = math.sqrt(norm(a));\r\n            a[0] && (a[0] /= mag);\r\n            a[1] && (a[1] /= mag);\r\n        }\r\n        /*\\\r\n         * Matrix.split\r\n         [ method ]\r\n         **\r\n         * Splits matrix into primitive transformations\r\n         = (object) in format:\r\n         o dx (number) translation by x\r\n         o dy (number) translation by y\r\n         o scalex (number) scale by x\r\n         o scaley (number) scale by y\r\n         o shear (number) shear\r\n         o rotate (number) rotation in deg\r\n         o isSimple (boolean) could it be represented via simple transformations\r\n        \\*/\r\n        matrixproto.split = function () {\r\n            var out = {};\r\n            // translation\r\n            out.dx = this.e;\r\n            out.dy = this.f;\r\n\r\n            // scale and shear\r\n            var row = [[this.a, this.c], [this.b, this.d]];\r\n            out.scalex = math.sqrt(norm(row[0]));\r\n            normalize(row[0]);\r\n\r\n            out.shear = row[0][0] * row[1][0] + row[0][1] * row[1][1];\r\n            row[1] = [row[1][0] - row[0][0] * out.shear, row[1][1] - row[0][1] * out.shear];\r\n\r\n            out.scaley = math.sqrt(norm(row[1]));\r\n            normalize(row[1]);\r\n            out.shear /= out.scaley;\r\n\r\n            // rotation\r\n            var sin = -row[0][1],\r\n                cos = row[1][1];\r\n            if (cos < 0) {\r\n                out.rotate = R.deg(math.acos(cos));\r\n                if (sin < 0) {\r\n                    out.rotate = 360 - out.rotate;\r\n                }\r\n            } else {\r\n                out.rotate = R.deg(math.asin(sin));\r\n            }\r\n\r\n            out.isSimple = !+out.shear.toFixed(9) && (out.scalex.toFixed(9) == out.scaley.toFixed(9) || !out.rotate);\r\n            out.isSuperSimple = !+out.shear.toFixed(9) && out.scalex.toFixed(9) == out.scaley.toFixed(9) && !out.rotate;\r\n            out.noRotation = !+out.shear.toFixed(9) && !out.rotate;\r\n            return out;\r\n        };\r\n        /*\\\r\n         * Matrix.toTransformString\r\n         [ method ]\r\n         **\r\n         * Return transform string that represents given matrix\r\n         = (string) transform string\r\n        \\*/\r\n        matrixproto.toTransformString = function (shorter) {\r\n            var s = shorter || this[split]();\r\n            if (s.isSimple) {\r\n                s.scalex = +s.scalex.toFixed(4);\r\n                s.scaley = +s.scaley.toFixed(4);\r\n                s.rotate = +s.rotate.toFixed(4);\r\n                return  (s.dx || s.dy ? \"t\" + [s.dx, s.dy] : E) +\r\n                        (s.scalex != 1 || s.scaley != 1 ? \"s\" + [s.scalex, s.scaley, 0, 0] : E) +\r\n                        (s.rotate ? \"r\" + [s.rotate, 0, 0] : E);\r\n            } else {\r\n                return \"m\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)];\r\n            }\r\n        };\r\n    })(Matrix.prototype);\r\n\r\n    var preventDefault = function () {\r\n        this.returnValue = false;\r\n    },\r\n    preventTouch = function () {\r\n        return this.originalEvent.preventDefault();\r\n    },\r\n    stopPropagation = function () {\r\n        this.cancelBubble = true;\r\n    },\r\n    stopTouch = function () {\r\n        return this.originalEvent.stopPropagation();\r\n    },\r\n    getEventPosition = function (e) {\r\n        var scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,\r\n            scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft;\r\n\r\n        return {\r\n            x: e.clientX + scrollX,\r\n            y: e.clientY + scrollY\r\n        };\r\n    },\r\n    addEvent = (function () {\r\n        if (g.doc.addEventListener) {\r\n            return function (obj, type, fn, element) {\r\n                var f = function (e) {\r\n                    var pos = getEventPosition(e);\r\n                    return fn.call(element, e, pos.x, pos.y);\r\n                };\r\n                obj.addEventListener(type, f, false);\r\n\r\n                if (supportsTouch && touchMap[type]) {\r\n                    var _f = function (e) {\r\n                        var pos = getEventPosition(e),\r\n                            olde = e;\r\n\r\n                        for (var i = 0, ii = e.targetTouches && e.targetTouches.length; i < ii; i++) {\r\n                            if (e.targetTouches[i].target == obj) {\r\n                                e = e.targetTouches[i];\r\n                                e.originalEvent = olde;\r\n                                e.preventDefault = preventTouch;\r\n                                e.stopPropagation = stopTouch;\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                        return fn.call(element, e, pos.x, pos.y);\r\n                    };\r\n                    obj.addEventListener(touchMap[type], _f, false);\r\n                }\r\n\r\n                return function () {\r\n                    obj.removeEventListener(type, f, false);\r\n\r\n                    if (supportsTouch && touchMap[type])\r\n                        obj.removeEventListener(touchMap[type], _f, false);\r\n\r\n                    return true;\r\n                };\r\n            };\r\n        } else if (g.doc.attachEvent) {\r\n            return function (obj, type, fn, element) {\r\n                var f = function (e) {\r\n                    e = e || g.win.event;\r\n                    var scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,\r\n                        scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft,\r\n                        x = e.clientX + scrollX,\r\n                        y = e.clientY + scrollY;\r\n                    e.preventDefault = e.preventDefault || preventDefault;\r\n                    e.stopPropagation = e.stopPropagation || stopPropagation;\r\n                    return fn.call(element, e, x, y);\r\n                };\r\n                obj.attachEvent(\"on\" + type, f);\r\n                var detacher = function () {\r\n                    obj.detachEvent(\"on\" + type, f);\r\n                    return true;\r\n                };\r\n                return detacher;\r\n            };\r\n        }\r\n    })(),\r\n    drag = [],\r\n    dragMove = function (e) {\r\n        var x = e.clientX,\r\n            y = e.clientY,\r\n            scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,\r\n            scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft,\r\n            dragi,\r\n            j = drag.length;\r\n        while (j--) {\r\n            dragi = drag[j];\r\n            if (supportsTouch && e.touches) {\r\n                var i = e.touches.length,\r\n                    touch;\r\n                while (i--) {\r\n                    touch = e.touches[i];\r\n                    if (touch.identifier == dragi.el._drag.id) {\r\n                        x = touch.clientX;\r\n                        y = touch.clientY;\r\n                        (e.originalEvent ? e.originalEvent : e).preventDefault();\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                e.preventDefault();\r\n            }\r\n            var node = dragi.el.node,\r\n                o,\r\n                next = node.nextSibling,\r\n                parent = node.parentNode,\r\n                display = node.style.display;\r\n            g.win.opera && parent.removeChild(node);\r\n            node.style.display = \"none\";\r\n            o = dragi.el.paper.getElementByPoint(x, y);\r\n            node.style.display = display;\r\n            g.win.opera && (next ? parent.insertBefore(node, next) : parent.appendChild(node));\r\n            o && eve(\"raphael.drag.over.\" + dragi.el.id, dragi.el, o);\r\n            x += scrollX;\r\n            y += scrollY;\r\n            eve(\"raphael.drag.move.\" + dragi.el.id, dragi.move_scope || dragi.el, x - dragi.el._drag.x, y - dragi.el._drag.y, x, y, e);\r\n        }\r\n    },\r\n    dragUp = function (e) {\r\n        R.unmousemove(dragMove).unmouseup(dragUp);\r\n        var i = drag.length,\r\n            dragi;\r\n        while (i--) {\r\n            dragi = drag[i];\r\n            dragi.el._drag = {};\r\n            eve(\"raphael.drag.end.\" + dragi.el.id, dragi.end_scope || dragi.start_scope || dragi.move_scope || dragi.el, e);\r\n        }\r\n        drag = [];\r\n    },\r\n    /*\\\r\n     * Raphael.el\r\n     [ property (object) ]\r\n     **\r\n     * You can add your own method to elements. This is usefull when you want to hack default functionality or\r\n     * want to wrap some common transformation or attributes in one method. In difference to canvas methods,\r\n     * you can redefine element method at any time. Expending element methods wouldn’t affect set.\r\n     > Usage\r\n     | Raphael.el.red = function () {\r\n     |     this.attr({fill: \"#f00\"});\r\n     | };\r\n     | // then use it\r\n     | paper.circle(100, 100, 20).red();\r\n    \\*/\r\n    elproto = R.el = {};\r\n    /*\\\r\n     * Element.click\r\n     [ method ]\r\n     **\r\n     * Adds event handler for click for the element.\r\n     > Parameters\r\n     - handler (function) handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n    /*\\\r\n     * Element.unclick\r\n     [ method ]\r\n     **\r\n     * Removes event handler for click for the element.\r\n     > Parameters\r\n     - handler (function) #optional handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n\r\n    /*\\\r\n     * Element.dblclick\r\n     [ method ]\r\n     **\r\n     * Adds event handler for double click for the element.\r\n     > Parameters\r\n     - handler (function) handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n    /*\\\r\n     * Element.undblclick\r\n     [ method ]\r\n     **\r\n     * Removes event handler for double click for the element.\r\n     > Parameters\r\n     - handler (function) #optional handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n\r\n    /*\\\r\n     * Element.mousedown\r\n     [ method ]\r\n     **\r\n     * Adds event handler for mousedown for the element.\r\n     > Parameters\r\n     - handler (function) handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n    /*\\\r\n     * Element.unmousedown\r\n     [ method ]\r\n     **\r\n     * Removes event handler for mousedown for the element.\r\n     > Parameters\r\n     - handler (function) #optional handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n\r\n    /*\\\r\n     * Element.mousemove\r\n     [ method ]\r\n     **\r\n     * Adds event handler for mousemove for the element.\r\n     > Parameters\r\n     - handler (function) handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n    /*\\\r\n     * Element.unmousemove\r\n     [ method ]\r\n     **\r\n     * Removes event handler for mousemove for the element.\r\n     > Parameters\r\n     - handler (function) #optional handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n\r\n    /*\\\r\n     * Element.mouseout\r\n     [ method ]\r\n     **\r\n     * Adds event handler for mouseout for the element.\r\n     > Parameters\r\n     - handler (function) handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n    /*\\\r\n     * Element.unmouseout\r\n     [ method ]\r\n     **\r\n     * Removes event handler for mouseout for the element.\r\n     > Parameters\r\n     - handler (function) #optional handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n\r\n    /*\\\r\n     * Element.mouseover\r\n     [ method ]\r\n     **\r\n     * Adds event handler for mouseover for the element.\r\n     > Parameters\r\n     - handler (function) handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n    /*\\\r\n     * Element.unmouseover\r\n     [ method ]\r\n     **\r\n     * Removes event handler for mouseover for the element.\r\n     > Parameters\r\n     - handler (function) #optional handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n\r\n    /*\\\r\n     * Element.mouseup\r\n     [ method ]\r\n     **\r\n     * Adds event handler for mouseup for the element.\r\n     > Parameters\r\n     - handler (function) handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n    /*\\\r\n     * Element.unmouseup\r\n     [ method ]\r\n     **\r\n     * Removes event handler for mouseup for the element.\r\n     > Parameters\r\n     - handler (function) #optional handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n\r\n    /*\\\r\n     * Element.touchstart\r\n     [ method ]\r\n     **\r\n     * Adds event handler for touchstart for the element.\r\n     > Parameters\r\n     - handler (function) handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n    /*\\\r\n     * Element.untouchstart\r\n     [ method ]\r\n     **\r\n     * Removes event handler for touchstart for the element.\r\n     > Parameters\r\n     - handler (function) #optional handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n\r\n    /*\\\r\n     * Element.touchmove\r\n     [ method ]\r\n     **\r\n     * Adds event handler for touchmove for the element.\r\n     > Parameters\r\n     - handler (function) handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n    /*\\\r\n     * Element.untouchmove\r\n     [ method ]\r\n     **\r\n     * Removes event handler for touchmove for the element.\r\n     > Parameters\r\n     - handler (function) #optional handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n\r\n    /*\\\r\n     * Element.touchend\r\n     [ method ]\r\n     **\r\n     * Adds event handler for touchend for the element.\r\n     > Parameters\r\n     - handler (function) handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n    /*\\\r\n     * Element.untouchend\r\n     [ method ]\r\n     **\r\n     * Removes event handler for touchend for the element.\r\n     > Parameters\r\n     - handler (function) #optional handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n\r\n    /*\\\r\n     * Element.touchcancel\r\n     [ method ]\r\n     **\r\n     * Adds event handler for touchcancel for the element.\r\n     > Parameters\r\n     - handler (function) handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n    /*\\\r\n     * Element.untouchcancel\r\n     [ method ]\r\n     **\r\n     * Removes event handler for touchcancel for the element.\r\n     > Parameters\r\n     - handler (function) #optional handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n    for (var i = events.length; i--;) {\r\n        (function (eventName) {\r\n            R[eventName] = elproto[eventName] = function (fn, scope) {\r\n                if (R.is(fn, \"function\")) {\r\n                    this.events = this.events || [];\r\n                    this.events.push({name: eventName, f: fn, unbind: addEvent(this.shape || this.node || g.doc, eventName, fn, scope || this)});\r\n                }\r\n                return this;\r\n            };\r\n            R[\"un\" + eventName] = elproto[\"un\" + eventName] = function (fn) {\r\n                var events = this.events || [],\r\n                    l = events.length;\r\n                while (l--){\r\n                    if (events[l].name == eventName && (R.is(fn, \"undefined\") || events[l].f == fn)) {\r\n                        events[l].unbind();\r\n                        events.splice(l, 1);\r\n                        !events.length && delete this.events;\r\n                    }\r\n                }\r\n                return this;\r\n            };\r\n        })(events[i]);\r\n    }\r\n\r\n    /*\\\r\n     * Element.data\r\n     [ method ]\r\n     **\r\n     * Adds or retrieves given value asociated with given key.\r\n     **\r\n     * See also @Element.removeData\r\n     > Parameters\r\n     - key (string) key to store data\r\n     - value (any) #optional value to store\r\n     = (object) @Element\r\n     * or, if value is not specified:\r\n     = (any) value\r\n     * or, if key and value are not specified:\r\n     = (object) Key/value pairs for all the data associated with the element.\r\n     > Usage\r\n     | for (var i = 0, i < 5, i++) {\r\n     |     paper.circle(10 + 15 * i, 10, 10)\r\n     |          .attr({fill: \"#000\"})\r\n     |          .data(\"i\", i)\r\n     |          .click(function () {\r\n     |             alert(this.data(\"i\"));\r\n     |          });\r\n     | }\r\n    \\*/\r\n    elproto.data = function (key, value) {\r\n        var data = eldata[this.id] = eldata[this.id] || {};\r\n        if (arguments.length == 0) {\r\n            return data;\r\n        }\r\n        if (arguments.length == 1) {\r\n            if (R.is(key, \"object\")) {\r\n                for (var i in key) if (key[has](i)) {\r\n                    this.data(i, key[i]);\r\n                }\r\n                return this;\r\n            }\r\n            eve(\"raphael.data.get.\" + this.id, this, data[key], key);\r\n            return data[key];\r\n        }\r\n        data[key] = value;\r\n        eve(\"raphael.data.set.\" + this.id, this, value, key);\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.removeData\r\n     [ method ]\r\n     **\r\n     * Removes value associated with an element by given key.\r\n     * If key is not provided, removes all the data of the element.\r\n     > Parameters\r\n     - key (string) #optional key\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.removeData = function (key) {\r\n        if (key == null) {\r\n            eldata[this.id] = {};\r\n        } else {\r\n            eldata[this.id] && delete eldata[this.id][key];\r\n        }\r\n        return this;\r\n    };\r\n     /*\\\r\n     * Element.getData\r\n     [ method ]\r\n     **\r\n     * Retrieves the element data\r\n     = (object) data\r\n    \\*/\r\n    elproto.getData = function () {\r\n        return clone(eldata[this.id] || {});\r\n    };\r\n    /*\\\r\n     * Element.hover\r\n     [ method ]\r\n     **\r\n     * Adds event handlers for hover for the element.\r\n     > Parameters\r\n     - f_in (function) handler for hover in\r\n     - f_out (function) handler for hover out\r\n     - icontext (object) #optional context for hover in handler\r\n     - ocontext (object) #optional context for hover out handler\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.hover = function (f_in, f_out, scope_in, scope_out) {\r\n        return this.mouseover(f_in, scope_in).mouseout(f_out, scope_out || scope_in);\r\n    };\r\n    /*\\\r\n     * Element.unhover\r\n     [ method ]\r\n     **\r\n     * Removes event handlers for hover for the element.\r\n     > Parameters\r\n     - f_in (function) handler for hover in\r\n     - f_out (function) handler for hover out\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.unhover = function (f_in, f_out) {\r\n        return this.unmouseover(f_in).unmouseout(f_out);\r\n    };\r\n    var draggable = [];\r\n    /*\\\r\n     * Element.drag\r\n     [ method ]\r\n     **\r\n     * Adds event handlers for drag of the element.\r\n     > Parameters\r\n     - onmove (function) handler for moving\r\n     - onstart (function) handler for drag start\r\n     - onend (function) handler for drag end\r\n     - mcontext (object) #optional context for moving handler\r\n     - scontext (object) #optional context for drag start handler\r\n     - econtext (object) #optional context for drag end handler\r\n     * Additionaly following `drag` events will be triggered: `drag.start.<id>` on start,\r\n     * `drag.end.<id>` on end and `drag.move.<id>` on every move. When element will be dragged over another element\r\n     * `drag.over.<id>` will be fired as well.\r\n     *\r\n     * Start event and start handler will be called in specified context or in context of the element with following parameters:\r\n     o x (number) x position of the mouse\r\n     o y (number) y position of the mouse\r\n     o event (object) DOM event object\r\n     * Move event and move handler will be called in specified context or in context of the element with following parameters:\r\n     o dx (number) shift by x from the start point\r\n     o dy (number) shift by y from the start point\r\n     o x (number) x position of the mouse\r\n     o y (number) y position of the mouse\r\n     o event (object) DOM event object\r\n     * End event and end handler will be called in specified context or in context of the element with following parameters:\r\n     o event (object) DOM event object\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.drag = function (onmove, onstart, onend, move_scope, start_scope, end_scope) {\r\n        function start(e) {\r\n            (e.originalEvent || e).preventDefault();\r\n            var x = e.clientX,\r\n                y = e.clientY,\r\n                scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,\r\n                scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft;\r\n            this._drag.id = e.identifier;\r\n            if (supportsTouch && e.touches) {\r\n                var i = e.touches.length, touch;\r\n                while (i--) {\r\n                    touch = e.touches[i];\r\n                    this._drag.id = touch.identifier;\r\n                    if (touch.identifier == this._drag.id) {\r\n                        x = touch.clientX;\r\n                        y = touch.clientY;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            this._drag.x = x + scrollX;\r\n            this._drag.y = y + scrollY;\r\n            !drag.length && R.mousemove(dragMove).mouseup(dragUp);\r\n            drag.push({el: this, move_scope: move_scope, start_scope: start_scope, end_scope: end_scope});\r\n            onstart && eve.on(\"raphael.drag.start.\" + this.id, onstart);\r\n            onmove && eve.on(\"raphael.drag.move.\" + this.id, onmove);\r\n            onend && eve.on(\"raphael.drag.end.\" + this.id, onend);\r\n            eve(\"raphael.drag.start.\" + this.id, start_scope || move_scope || this, e.clientX + scrollX, e.clientY + scrollY, e);\r\n        }\r\n        this._drag = {};\r\n        draggable.push({el: this, start: start});\r\n        this.mousedown(start);\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.onDragOver\r\n     [ method ]\r\n     **\r\n     * Shortcut for assigning event handler for `drag.over.<id>` event, where id is id of the element (see @Element.id).\r\n     > Parameters\r\n     - f (function) handler for event, first argument would be the element you are dragging over\r\n    \\*/\r\n    elproto.onDragOver = function (f) {\r\n        f ? eve.on(\"raphael.drag.over.\" + this.id, f) : eve.unbind(\"raphael.drag.over.\" + this.id);\r\n    };\r\n    /*\\\r\n     * Element.undrag\r\n     [ method ]\r\n     **\r\n     * Removes all drag event handlers from given element.\r\n    \\*/\r\n    elproto.undrag = function () {\r\n        var i = draggable.length;\r\n        while (i--) if (draggable[i].el == this) {\r\n            this.unmousedown(draggable[i].start);\r\n            draggable.splice(i, 1);\r\n            eve.unbind(\"raphael.drag.*.\" + this.id);\r\n        }\r\n        !draggable.length && R.unmousemove(dragMove).unmouseup(dragUp);\r\n        drag = [];\r\n    };\r\n    /*\\\r\n     * Paper.circle\r\n     [ method ]\r\n     **\r\n     * Draws a circle.\r\n     **\r\n     > Parameters\r\n     **\r\n     - x (number) x coordinate of the centre\r\n     - y (number) y coordinate of the centre\r\n     - r (number) radius\r\n     = (object) Raphaël element object with type “circle”\r\n     **\r\n     > Usage\r\n     | var c = paper.circle(50, 50, 40);\r\n    \\*/\r\n    paperproto.circle = function (x, y, r) {\r\n        var out = R._engine.circle(this, x || 0, y || 0, r || 0);\r\n        this.__set__ && this.__set__.push(out);\r\n        return out;\r\n    };\r\n    /*\\\r\n     * Paper.rect\r\n     [ method ]\r\n     *\r\n     * Draws a rectangle.\r\n     **\r\n     > Parameters\r\n     **\r\n     - x (number) x coordinate of the top left corner\r\n     - y (number) y coordinate of the top left corner\r\n     - width (number) width\r\n     - height (number) height\r\n     - r (number) #optional radius for rounded corners, default is 0\r\n     = (object) Raphaël element object with type “rect”\r\n     **\r\n     > Usage\r\n     | // regular rectangle\r\n     | var c = paper.rect(10, 10, 50, 50);\r\n     | // rectangle with rounded corners\r\n     | var c = paper.rect(40, 40, 50, 50, 10);\r\n    \\*/\r\n    paperproto.rect = function (x, y, w, h, r) {\r\n        var out = R._engine.rect(this, x || 0, y || 0, w || 0, h || 0, r || 0);\r\n        this.__set__ && this.__set__.push(out);\r\n        return out;\r\n    };\r\n    /*\\\r\n     * Paper.ellipse\r\n     [ method ]\r\n     **\r\n     * Draws an ellipse.\r\n     **\r\n     > Parameters\r\n     **\r\n     - x (number) x coordinate of the centre\r\n     - y (number) y coordinate of the centre\r\n     - rx (number) horizontal radius\r\n     - ry (number) vertical radius\r\n     = (object) Raphaël element object with type “ellipse”\r\n     **\r\n     > Usage\r\n     | var c = paper.ellipse(50, 50, 40, 20);\r\n    \\*/\r\n    paperproto.ellipse = function (x, y, rx, ry) {\r\n        var out = R._engine.ellipse(this, x || 0, y || 0, rx || 0, ry || 0);\r\n        this.__set__ && this.__set__.push(out);\r\n        return out;\r\n    };\r\n    /*\\\r\n     * Paper.path\r\n     [ method ]\r\n     **\r\n     * Creates a path element by given path data string.\r\n     > Parameters\r\n     - pathString (string) #optional path string in SVG format.\r\n     * Path string consists of one-letter commands, followed by comma seprarated arguments in numercal form. Example:\r\n     | \"M10,20L30,40\"\r\n     * Here we can see two commands: “M”, with arguments `(10, 20)` and “L” with arguments `(30, 40)`. Upper case letter mean command is absolute, lower case—relative.\r\n     *\r\n     # <p>Here is short list of commands available, for more details see <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path's data attribute's format are described in the SVG specification.\">SVG path string format</a>.</p>\r\n     # <table><thead><tr><th>Command</th><th>Name</th><th>Parameters</th></tr></thead><tbody>\r\n     # <tr><td>M</td><td>moveto</td><td>(x y)+</td></tr>\r\n     # <tr><td>Z</td><td>closepath</td><td>(none)</td></tr>\r\n     # <tr><td>L</td><td>lineto</td><td>(x y)+</td></tr>\r\n     # <tr><td>H</td><td>horizontal lineto</td><td>x+</td></tr>\r\n     # <tr><td>V</td><td>vertical lineto</td><td>y+</td></tr>\r\n     # <tr><td>C</td><td>curveto</td><td>(x1 y1 x2 y2 x y)+</td></tr>\r\n     # <tr><td>S</td><td>smooth curveto</td><td>(x2 y2 x y)+</td></tr>\r\n     # <tr><td>Q</td><td>quadratic Bézier curveto</td><td>(x1 y1 x y)+</td></tr>\r\n     # <tr><td>T</td><td>smooth quadratic Bézier curveto</td><td>(x y)+</td></tr>\r\n     # <tr><td>A</td><td>elliptical arc</td><td>(rx ry x-axis-rotation large-arc-flag sweep-flag x y)+</td></tr>\r\n     # <tr><td>R</td><td><a href=\"http://en.wikipedia.org/wiki/Catmull–Rom_spline#Catmull.E2.80.93Rom_spline\">Catmull-Rom curveto</a>*</td><td>x1 y1 (x y)+</td></tr></tbody></table>\r\n     * * “Catmull-Rom curveto” is a not standard SVG command and added in 2.0 to make life easier.\r\n     * Note: there is a special case when path consist of just three commands: “M10,10R…z”. In this case path will smoothly connects to its beginning.\r\n     > Usage\r\n     | var c = paper.path(\"M10 10L90 90\");\r\n     | // draw a diagonal line:\r\n     | // move to 10,10, line to 90,90\r\n     * For example of path strings, check out these icons: http://raphaeljs.com/icons/\r\n    \\*/\r\n    paperproto.path = function (pathString) {\r\n        pathString && !R.is(pathString, string) && !R.is(pathString[0], array) && (pathString += E);\r\n        var out = R._engine.path(R.format[apply](R, arguments), this);\r\n        this.__set__ && this.__set__.push(out);\r\n        return out;\r\n    };\r\n    /*\\\r\n     * Paper.image\r\n     [ method ]\r\n     **\r\n     * Embeds an image into the surface.\r\n     **\r\n     > Parameters\r\n     **\r\n     - src (string) URI of the source image\r\n     - x (number) x coordinate position\r\n     - y (number) y coordinate position\r\n     - width (number) width of the image\r\n     - height (number) height of the image\r\n     = (object) Raphaël element object with type “image”\r\n     **\r\n     > Usage\r\n     | var c = paper.image(\"apple.png\", 10, 10, 80, 80);\r\n    \\*/\r\n    paperproto.image = function (src, x, y, w, h) {\r\n        var out = R._engine.image(this, src || \"about:blank\", x || 0, y || 0, w || 0, h || 0);\r\n        this.__set__ && this.__set__.push(out);\r\n        return out;\r\n    };\r\n    /*\\\r\n     * Paper.text\r\n     [ method ]\r\n     **\r\n     * Draws a text string. If you need line breaks, put “\\n” in the string.\r\n     **\r\n     > Parameters\r\n     **\r\n     - x (number) x coordinate position\r\n     - y (number) y coordinate position\r\n     - text (string) The text string to draw\r\n     = (object) Raphaël element object with type “text”\r\n     **\r\n     > Usage\r\n     | var t = paper.text(50, 50, \"Raphaël\\nkicks\\nbutt!\");\r\n    \\*/\r\n    paperproto.text = function (x, y, text) {\r\n        var out = R._engine.text(this, x || 0, y || 0, Str(text));\r\n        this.__set__ && this.__set__.push(out);\r\n        return out;\r\n    };\r\n    /*\\\r\n     * Paper.set\r\n     [ method ]\r\n     **\r\n     * Creates array-like object to keep and operate several elements at once.\r\n     * Warning: it doesn’t create any elements for itself in the page, it just groups existing elements.\r\n     * Sets act as pseudo elements — all methods available to an element can be used on a set.\r\n     = (object) array-like object that represents set of elements\r\n     **\r\n     > Usage\r\n     | var st = paper.set();\r\n     | st.push(\r\n     |     paper.circle(10, 10, 5),\r\n     |     paper.circle(30, 10, 5)\r\n     | );\r\n     | st.attr({fill: \"red\"}); // changes the fill of both circles\r\n    \\*/\r\n    paperproto.set = function (itemsArray) {\r\n        !R.is(itemsArray, \"array\") && (itemsArray = Array.prototype.splice.call(arguments, 0, arguments.length));\r\n        var out = new Set(itemsArray);\r\n        this.__set__ && this.__set__.push(out);\r\n        out[\"paper\"] = this;\r\n        out[\"type\"] = \"set\";\r\n        return out;\r\n    };\r\n    /*\\\r\n     * Paper.setStart\r\n     [ method ]\r\n     **\r\n     * Creates @Paper.set. All elements that will be created after calling this method and before calling\r\n     * @Paper.setFinish will be added to the set.\r\n     **\r\n     > Usage\r\n     | paper.setStart();\r\n     | paper.circle(10, 10, 5),\r\n     | paper.circle(30, 10, 5)\r\n     | var st = paper.setFinish();\r\n     | st.attr({fill: \"red\"}); // changes the fill of both circles\r\n    \\*/\r\n    paperproto.setStart = function (set) {\r\n        this.__set__ = set || this.set();\r\n    };\r\n    /*\\\r\n     * Paper.setFinish\r\n     [ method ]\r\n     **\r\n     * See @Paper.setStart. This method finishes catching and returns resulting set.\r\n     **\r\n     = (object) set\r\n    \\*/\r\n    paperproto.setFinish = function (set) {\r\n        var out = this.__set__;\r\n        delete this.__set__;\r\n        return out;\r\n    };\r\n    /*\\\r\n     * Paper.getSize\r\n     [ method ]\r\n     **\r\n     * Obtains current paper actual size.\r\n     **\r\n     = (object)\r\n     \\*/\r\n    paperproto.getSize = function () {\r\n        var container = this.canvas.parentNode;\r\n        return {\r\n            width: container.offsetWidth,\r\n            height: container.offsetHeight\r\n                };\r\n        };\r\n    /*\\\r\n     * Paper.setSize\r\n     [ method ]\r\n     **\r\n     * If you need to change dimensions of the canvas call this method\r\n     **\r\n     > Parameters\r\n     **\r\n     - width (number) new width of the canvas\r\n     - height (number) new height of the canvas\r\n    \\*/\r\n    paperproto.setSize = function (width, height) {\r\n        return R._engine.setSize.call(this, width, height);\r\n    };\r\n    /*\\\r\n     * Paper.setViewBox\r\n     [ method ]\r\n     **\r\n     * Sets the view box of the paper. Practically it gives you ability to zoom and pan whole paper surface by\r\n     * specifying new boundaries.\r\n     **\r\n     > Parameters\r\n     **\r\n     - x (number) new x position, default is `0`\r\n     - y (number) new y position, default is `0`\r\n     - w (number) new width of the canvas\r\n     - h (number) new height of the canvas\r\n     - fit (boolean) `true` if you want graphics to fit into new boundary box\r\n    \\*/\r\n    paperproto.setViewBox = function (x, y, w, h, fit) {\r\n        return R._engine.setViewBox.call(this, x, y, w, h, fit);\r\n    };\r\n    /*\\\r\n     * Paper.top\r\n     [ property ]\r\n     **\r\n     * Points to the topmost element on the paper\r\n    \\*/\r\n    /*\\\r\n     * Paper.bottom\r\n     [ property ]\r\n     **\r\n     * Points to the bottom element on the paper\r\n    \\*/\r\n    paperproto.top = paperproto.bottom = null;\r\n    /*\\\r\n     * Paper.raphael\r\n     [ property ]\r\n     **\r\n     * Points to the @Raphael object/function\r\n    \\*/\r\n    paperproto.raphael = R;\r\n    var getOffset = function (elem) {\r\n        var box = elem.getBoundingClientRect(),\r\n            doc = elem.ownerDocument,\r\n            body = doc.body,\r\n            docElem = doc.documentElement,\r\n            clientTop = docElem.clientTop || body.clientTop || 0, clientLeft = docElem.clientLeft || body.clientLeft || 0,\r\n            top  = box.top  + (g.win.pageYOffset || docElem.scrollTop || body.scrollTop ) - clientTop,\r\n            left = box.left + (g.win.pageXOffset || docElem.scrollLeft || body.scrollLeft) - clientLeft;\r\n        return {\r\n            y: top,\r\n            x: left\r\n        };\r\n    };\r\n    /*\\\r\n     * Paper.getElementByPoint\r\n     [ method ]\r\n     **\r\n     * Returns you topmost element under given point.\r\n     **\r\n     = (object) Raphaël element object\r\n     > Parameters\r\n     **\r\n     - x (number) x coordinate from the top left corner of the window\r\n     - y (number) y coordinate from the top left corner of the window\r\n     > Usage\r\n     | paper.getElementByPoint(mouseX, mouseY).attr({stroke: \"#f00\"});\r\n    \\*/\r\n    paperproto.getElementByPoint = function (x, y) {\r\n        var paper = this,\r\n            svg = paper.canvas,\r\n            target = g.doc.elementFromPoint(x, y);\r\n        if (g.win.opera && target.tagName == \"svg\") {\r\n            var so = getOffset(svg),\r\n                sr = svg.createSVGRect();\r\n            sr.x = x - so.x;\r\n            sr.y = y - so.y;\r\n            sr.width = sr.height = 1;\r\n            var hits = svg.getIntersectionList(sr, null);\r\n            if (hits.length) {\r\n                target = hits[hits.length - 1];\r\n            }\r\n        }\r\n        if (!target) {\r\n            return null;\r\n        }\r\n        while (target.parentNode && target != svg.parentNode && !target.raphael) {\r\n            target = target.parentNode;\r\n        }\r\n        target == paper.canvas.parentNode && (target = svg);\r\n        target = target && target.raphael ? paper.getById(target.raphaelid) : null;\r\n        return target;\r\n    };\r\n\r\n    /*\\\r\n     * Paper.getElementsByBBox\r\n     [ method ]\r\n     **\r\n     * Returns set of elements that have an intersecting bounding box\r\n     **\r\n     > Parameters\r\n     **\r\n     - bbox (object) bbox to check with\r\n     = (object) @Set\r\n     \\*/\r\n    paperproto.getElementsByBBox = function (bbox) {\r\n        var set = this.set();\r\n        this.forEach(function (el) {\r\n            if (R.isBBoxIntersect(el.getBBox(), bbox)) {\r\n                set.push(el);\r\n            }\r\n        });\r\n        return set;\r\n    };\r\n\r\n    /*\\\r\n     * Paper.getById\r\n     [ method ]\r\n     **\r\n     * Returns you element by its internal ID.\r\n     **\r\n     > Parameters\r\n     **\r\n     - id (number) id\r\n     = (object) Raphaël element object\r\n    \\*/\r\n    paperproto.getById = function (id) {\r\n        var bot = this.bottom;\r\n        while (bot) {\r\n            if (bot.id == id) {\r\n                return bot;\r\n            }\r\n            bot = bot.next;\r\n        }\r\n        return null;\r\n    };\r\n    /*\\\r\n     * Paper.forEach\r\n     [ method ]\r\n     **\r\n     * Executes given function for each element on the paper\r\n     *\r\n     * If callback function returns `false` it will stop loop running.\r\n     **\r\n     > Parameters\r\n     **\r\n     - callback (function) function to run\r\n     - thisArg (object) context object for the callback\r\n     = (object) Paper object\r\n     > Usage\r\n     | paper.forEach(function (el) {\r\n     |     el.attr({ stroke: \"blue\" });\r\n     | });\r\n    \\*/\r\n    paperproto.forEach = function (callback, thisArg) {\r\n        var bot = this.bottom;\r\n        while (bot) {\r\n            if (callback.call(thisArg, bot) === false) {\r\n                return this;\r\n            }\r\n            bot = bot.next;\r\n        }\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Paper.getElementsByPoint\r\n     [ method ]\r\n     **\r\n     * Returns set of elements that have common point inside\r\n     **\r\n     > Parameters\r\n     **\r\n     - x (number) x coordinate of the point\r\n     - y (number) y coordinate of the point\r\n     = (object) @Set\r\n    \\*/\r\n    paperproto.getElementsByPoint = function (x, y) {\r\n        var set = this.set();\r\n        this.forEach(function (el) {\r\n            if (el.isPointInside(x, y)) {\r\n                set.push(el);\r\n            }\r\n        });\r\n        return set;\r\n    };\r\n    function x_y() {\r\n        return this.x + S + this.y;\r\n    }\r\n    function x_y_w_h() {\r\n        return this.x + S + this.y + S + this.width + \" \\xd7 \" + this.height;\r\n    }\r\n    /*\\\r\n     * Element.isPointInside\r\n     [ method ]\r\n     **\r\n     * Determine if given point is inside this element’s shape\r\n     **\r\n     > Parameters\r\n     **\r\n     - x (number) x coordinate of the point\r\n     - y (number) y coordinate of the point\r\n     = (boolean) `true` if point inside the shape\r\n    \\*/\r\n    elproto.isPointInside = function (x, y) {\r\n        var rp = this.realPath = getPath[this.type](this);\r\n        if (this.attr('transform') && this.attr('transform').length) {\r\n            rp = R.transformPath(rp, this.attr('transform'));\r\n        }\r\n        return R.isPointInsidePath(rp, x, y);\r\n    };\r\n    /*\\\r\n     * Element.getBBox\r\n     [ method ]\r\n     **\r\n     * Return bounding box for a given element\r\n     **\r\n     > Parameters\r\n     **\r\n     - isWithoutTransform (boolean) flag, `true` if you want to have bounding box before transformations. Default is `false`.\r\n     = (object) Bounding box object:\r\n     o {\r\n     o     x: (number) top left corner x\r\n     o     y: (number) top left corner y\r\n     o     x2: (number) bottom right corner x\r\n     o     y2: (number) bottom right corner y\r\n     o     width: (number) width\r\n     o     height: (number) height\r\n     o }\r\n    \\*/\r\n    elproto.getBBox = function (isWithoutTransform) {\r\n        if (this.removed) {\r\n            return {};\r\n        }\r\n        var _ = this._;\r\n        if (isWithoutTransform) {\r\n            if (_.dirty || !_.bboxwt) {\r\n                this.realPath = getPath[this.type](this);\r\n                _.bboxwt = pathDimensions(this.realPath);\r\n                _.bboxwt.toString = x_y_w_h;\r\n                _.dirty = 0;\r\n            }\r\n            return _.bboxwt;\r\n        }\r\n        if (_.dirty || _.dirtyT || !_.bbox) {\r\n            if (_.dirty || !this.realPath) {\r\n                _.bboxwt = 0;\r\n                this.realPath = getPath[this.type](this);\r\n            }\r\n            _.bbox = pathDimensions(mapPath(this.realPath, this.matrix));\r\n            _.bbox.toString = x_y_w_h;\r\n            _.dirty = _.dirtyT = 0;\r\n        }\r\n        return _.bbox;\r\n    };\r\n    /*\\\r\n     * Element.clone\r\n     [ method ]\r\n     **\r\n     = (object) clone of a given element\r\n     **\r\n    \\*/\r\n    elproto.clone = function () {\r\n        if (this.removed) {\r\n            return null;\r\n        }\r\n        var out = this.paper[this.type]().attr(this.attr());\r\n        this.__set__ && this.__set__.push(out);\r\n        return out;\r\n    };\r\n    /*\\\r\n     * Element.glow\r\n     [ method ]\r\n     **\r\n     * Return set of elements that create glow-like effect around given element. See @Paper.set.\r\n     *\r\n     * Note: Glow is not connected to the element. If you change element attributes it won’t adjust itself.\r\n     **\r\n     > Parameters\r\n     **\r\n     - glow (object) #optional parameters object with all properties optional:\r\n     o {\r\n     o     width (number) size of the glow, default is `10`\r\n     o     fill (boolean) will it be filled, default is `false`\r\n     o     opacity (number) opacity, default is `0.5`\r\n     o     offsetx (number) horizontal offset, default is `0`\r\n     o     offsety (number) vertical offset, default is `0`\r\n     o     color (string) glow colour, default is `black`\r\n     o }\r\n     = (object) @Paper.set of elements that represents glow\r\n    \\*/\r\n    elproto.glow = function (glow) {\r\n        if (this.type == \"text\") {\r\n            return null;\r\n        }\r\n        glow = glow || {};\r\n        var s = {\r\n            width: (glow.width || 10) + (+this.attr(\"stroke-width\") || 1),\r\n            fill: glow.fill || false,\r\n            opacity: glow.opacity || .5,\r\n            offsetx: glow.offsetx || 0,\r\n            offsety: glow.offsety || 0,\r\n            color: glow.color || \"#000\"\r\n        },\r\n            c = s.width / 2,\r\n            r = this.paper,\r\n            out = r.set(),\r\n            path = this.realPath || getPath[this.type](this);\r\n        path = this.matrix ? mapPath(path, this.matrix) : path;\r\n        for (var i = 1; i < c + 1; i++) {\r\n            out.push(r.path(path).attr({\r\n                stroke: s.color,\r\n                fill: s.fill ? s.color : \"none\",\r\n                \"stroke-linejoin\": \"round\",\r\n                \"stroke-linecap\": \"round\",\r\n                \"stroke-width\": +(s.width / c * i).toFixed(3),\r\n                opacity: +(s.opacity / c).toFixed(3)\r\n            }));\r\n        }\r\n        return out.insertBefore(this).translate(s.offsetx, s.offsety);\r\n    };\r\n    var curveslengths = {},\r\n    getPointAtSegmentLength = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length) {\r\n        if (length == null) {\r\n            return bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y);\r\n        } else {\r\n            return R.findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, getTatLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length));\r\n        }\r\n    },\r\n    getLengthFactory = function (istotal, subpath) {\r\n        return function (path, length, onlystart) {\r\n            path = path2curve(path);\r\n            var x, y, p, l, sp = \"\", subpaths = {}, point,\r\n                len = 0;\r\n            for (var i = 0, ii = path.length; i < ii; i++) {\r\n                p = path[i];\r\n                if (p[0] == \"M\") {\r\n                    x = +p[1];\r\n                    y = +p[2];\r\n                } else {\r\n                    l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\r\n                    if (len + l > length) {\r\n                        if (subpath && !subpaths.start) {\r\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\r\n                            sp += [\"C\" + point.start.x, point.start.y, point.m.x, point.m.y, point.x, point.y];\r\n                            if (onlystart) {return sp;}\r\n                            subpaths.start = sp;\r\n                            sp = [\"M\" + point.x, point.y + \"C\" + point.n.x, point.n.y, point.end.x, point.end.y, p[5], p[6]].join();\r\n                            len += l;\r\n                            x = +p[5];\r\n                            y = +p[6];\r\n                            continue;\r\n                        }\r\n                        if (!istotal && !subpath) {\r\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\r\n                            return {x: point.x, y: point.y, alpha: point.alpha};\r\n                        }\r\n                    }\r\n                    len += l;\r\n                    x = +p[5];\r\n                    y = +p[6];\r\n                }\r\n                sp += p.shift() + p;\r\n            }\r\n            subpaths.end = sp;\r\n            point = istotal ? len : subpath ? subpaths : R.findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);\r\n            point.alpha && (point = {x: point.x, y: point.y, alpha: point.alpha});\r\n            return point;\r\n        };\r\n    };\r\n    var getTotalLength = getLengthFactory(1),\r\n        getPointAtLength = getLengthFactory(),\r\n        getSubpathsAtLength = getLengthFactory(0, 1);\r\n    /*\\\r\n     * Raphael.getTotalLength\r\n     [ method ]\r\n     **\r\n     * Returns length of the given path in pixels.\r\n     **\r\n     > Parameters\r\n     **\r\n     - path (string) SVG path string.\r\n     **\r\n     = (number) length.\r\n    \\*/\r\n    R.getTotalLength = getTotalLength;\r\n    /*\\\r\n     * Raphael.getPointAtLength\r\n     [ method ]\r\n     **\r\n     * Return coordinates of the point located at the given length on the given path.\r\n     **\r\n     > Parameters\r\n     **\r\n     - path (string) SVG path string\r\n     - length (number)\r\n     **\r\n     = (object) representation of the point:\r\n     o {\r\n     o     x: (number) x coordinate\r\n     o     y: (number) y coordinate\r\n     o     alpha: (number) angle of derivative\r\n     o }\r\n    \\*/\r\n    R.getPointAtLength = getPointAtLength;\r\n    /*\\\r\n     * Raphael.getSubpath\r\n     [ method ]\r\n     **\r\n     * Return subpath of a given path from given length to given length.\r\n     **\r\n     > Parameters\r\n     **\r\n     - path (string) SVG path string\r\n     - from (number) position of the start of the segment\r\n     - to (number) position of the end of the segment\r\n     **\r\n     = (string) pathstring for the segment\r\n    \\*/\r\n    R.getSubpath = function (path, from, to) {\r\n        if (this.getTotalLength(path) - to < 1e-6) {\r\n            return getSubpathsAtLength(path, from).end;\r\n        }\r\n        var a = getSubpathsAtLength(path, to, 1);\r\n        return from ? getSubpathsAtLength(a, from).end : a;\r\n    };\r\n    /*\\\r\n     * Element.getTotalLength\r\n     [ method ]\r\n     **\r\n     * Returns length of the path in pixels. Only works for element of “path” type.\r\n     = (number) length.\r\n    \\*/\r\n    elproto.getTotalLength = function () {\r\n        var path = this.getPath();\r\n        if (!path) {\r\n            return;\r\n        }\r\n\r\n        if (this.node.getTotalLength) {\r\n            return this.node.getTotalLength();\r\n        }\r\n\r\n        return getTotalLength(path);\r\n    };\r\n    /*\\\r\n     * Element.getPointAtLength\r\n     [ method ]\r\n     **\r\n     * Return coordinates of the point located at the given length on the given path. Only works for element of “path” type.\r\n     **\r\n     > Parameters\r\n     **\r\n     - length (number)\r\n     **\r\n     = (object) representation of the point:\r\n     o {\r\n     o     x: (number) x coordinate\r\n     o     y: (number) y coordinate\r\n     o     alpha: (number) angle of derivative\r\n     o }\r\n    \\*/\r\n    elproto.getPointAtLength = function (length) {\r\n        var path = this.getPath();\r\n        if (!path) {\r\n            return;\r\n        }\r\n\r\n        return getPointAtLength(path, length);\r\n    };\r\n    /*\\\r\n     * Element.getPath\r\n     [ method ]\r\n     **\r\n     * Returns path of the element. Only works for elements of “path” type and simple elements like circle.\r\n     = (object) path\r\n     **\r\n    \\*/\r\n    elproto.getPath = function () {\r\n        var path,\r\n            getPath = R._getPath[this.type];\r\n\r\n        if (this.type == \"text\" || this.type == \"set\") {\r\n            return;\r\n        }\r\n\r\n        if (getPath) {\r\n            path = getPath(this);\r\n        }\r\n\r\n        return path;\r\n    };\r\n    /*\\\r\n     * Element.getSubpath\r\n     [ method ]\r\n     **\r\n     * Return subpath of a given element from given length to given length. Only works for element of “path” type.\r\n     **\r\n     > Parameters\r\n     **\r\n     - from (number) position of the start of the segment\r\n     - to (number) position of the end of the segment\r\n     **\r\n     = (string) pathstring for the segment\r\n    \\*/\r\n    elproto.getSubpath = function (from, to) {\r\n        var path = this.getPath();\r\n        if (!path) {\r\n            return;\r\n        }\r\n\r\n        return R.getSubpath(path, from, to);\r\n    };\r\n    /*\\\r\n     * Raphael.easing_formulas\r\n     [ property ]\r\n     **\r\n     * Object that contains easing formulas for animation. You could extend it with your own. By default it has following list of easing:\r\n     # <ul>\r\n     #     <li>“linear”</li>\r\n     #     <li>“&lt;” or “easeIn” or “ease-in”</li>\r\n     #     <li>“>” or “easeOut” or “ease-out”</li>\r\n     #     <li>“&lt;>” or “easeInOut” or “ease-in-out”</li>\r\n     #     <li>“backIn” or “back-in”</li>\r\n     #     <li>“backOut” or “back-out”</li>\r\n     #     <li>“elastic”</li>\r\n     #     <li>“bounce”</li>\r\n     # </ul>\r\n     # <p>See also <a href=\"http://raphaeljs.com/easing.html\">Easing demo</a>.</p>\r\n    \\*/\r\n    var ef = R.easing_formulas = {\r\n        linear: function (n) {\r\n            return n;\r\n        },\r\n        \"<\": function (n) {\r\n            return pow(n, 1.7);\r\n        },\r\n        \">\": function (n) {\r\n            return pow(n, .48);\r\n        },\r\n        \"<>\": function (n) {\r\n            var q = .48 - n / 1.04,\r\n                Q = math.sqrt(.1734 + q * q),\r\n                x = Q - q,\r\n                X = pow(abs(x), 1 / 3) * (x < 0 ? -1 : 1),\r\n                y = -Q - q,\r\n                Y = pow(abs(y), 1 / 3) * (y < 0 ? -1 : 1),\r\n                t = X + Y + .5;\r\n            return (1 - t) * 3 * t * t + t * t * t;\r\n        },\r\n        backIn: function (n) {\r\n            var s = 1.70158;\r\n            return n * n * ((s + 1) * n - s);\r\n        },\r\n        backOut: function (n) {\r\n            n = n - 1;\r\n            var s = 1.70158;\r\n            return n * n * ((s + 1) * n + s) + 1;\r\n        },\r\n        elastic: function (n) {\r\n            if (n == !!n) {\r\n                return n;\r\n            }\r\n            return pow(2, -10 * n) * math.sin((n - .075) * (2 * PI) / .3) + 1;\r\n        },\r\n        bounce: function (n) {\r\n            var s = 7.5625,\r\n                p = 2.75,\r\n                l;\r\n            if (n < (1 / p)) {\r\n                l = s * n * n;\r\n            } else {\r\n                if (n < (2 / p)) {\r\n                    n -= (1.5 / p);\r\n                    l = s * n * n + .75;\r\n                } else {\r\n                    if (n < (2.5 / p)) {\r\n                        n -= (2.25 / p);\r\n                        l = s * n * n + .9375;\r\n                    } else {\r\n                        n -= (2.625 / p);\r\n                        l = s * n * n + .984375;\r\n                    }\r\n                }\r\n            }\r\n            return l;\r\n        }\r\n    };\r\n    ef.easeIn = ef[\"ease-in\"] = ef[\"<\"];\r\n    ef.easeOut = ef[\"ease-out\"] = ef[\">\"];\r\n    ef.easeInOut = ef[\"ease-in-out\"] = ef[\"<>\"];\r\n    ef[\"back-in\"] = ef.backIn;\r\n    ef[\"back-out\"] = ef.backOut;\r\n\r\n    var animationElements = [],\r\n        requestAnimFrame = window.requestAnimationFrame       ||\r\n                           window.webkitRequestAnimationFrame ||\r\n                           window.mozRequestAnimationFrame    ||\r\n                           window.oRequestAnimationFrame      ||\r\n                           window.msRequestAnimationFrame     ||\r\n                           function (callback) {\r\n                               setTimeout(callback, 16);\r\n                           },\r\n        animation = function () {\r\n            var Now = +new Date,\r\n                l = 0;\r\n            for (; l < animationElements.length; l++) {\r\n                var e = animationElements[l];\r\n                if (e.el.removed || e.paused) {\r\n                    continue;\r\n                }\r\n                var time = Now - e.start,\r\n                    ms = e.ms,\r\n                    easing = e.easing,\r\n                    from = e.from,\r\n                    diff = e.diff,\r\n                    to = e.to,\r\n                    t = e.t,\r\n                    that = e.el,\r\n                    set = {},\r\n                    now,\r\n                    init = {},\r\n                    key;\r\n                if (e.initstatus) {\r\n                    time = (e.initstatus * e.anim.top - e.prev) / (e.percent - e.prev) * ms;\r\n                    e.status = e.initstatus;\r\n                    delete e.initstatus;\r\n                    e.stop && animationElements.splice(l--, 1);\r\n                } else {\r\n                    e.status = (e.prev + (e.percent - e.prev) * (time / ms)) / e.anim.top;\r\n                }\r\n                if (time < 0) {\r\n                    continue;\r\n                }\r\n                if (time < ms) {\r\n                    var pos = easing(time / ms);\r\n                    for (var attr in from) if (from[has](attr)) {\r\n                        switch (availableAnimAttrs[attr]) {\r\n                            case nu:\r\n                                now = +from[attr] + pos * ms * diff[attr];\r\n                                break;\r\n                            case \"colour\":\r\n                                now = \"rgb(\" + [\r\n                                    upto255(round(from[attr].r + pos * ms * diff[attr].r)),\r\n                                    upto255(round(from[attr].g + pos * ms * diff[attr].g)),\r\n                                    upto255(round(from[attr].b + pos * ms * diff[attr].b))\r\n                                ].join(\",\") + \")\";\r\n                                break;\r\n                            case \"path\":\r\n                                now = [];\r\n                                for (var i = 0, ii = from[attr].length; i < ii; i++) {\r\n                                    now[i] = [from[attr][i][0]];\r\n                                    for (var j = 1, jj = from[attr][i].length; j < jj; j++) {\r\n                                        now[i][j] = +from[attr][i][j] + pos * ms * diff[attr][i][j];\r\n                                    }\r\n                                    now[i] = now[i].join(S);\r\n                                }\r\n                                now = now.join(S);\r\n                                break;\r\n                            case \"transform\":\r\n                                if (diff[attr].real) {\r\n                                    now = [];\r\n                                    for (i = 0, ii = from[attr].length; i < ii; i++) {\r\n                                        now[i] = [from[attr][i][0]];\r\n                                        for (j = 1, jj = from[attr][i].length; j < jj; j++) {\r\n                                            now[i][j] = from[attr][i][j] + pos * ms * diff[attr][i][j];\r\n                                        }\r\n                                    }\r\n                                } else {\r\n                                    var get = function (i) {\r\n                                        return +from[attr][i] + pos * ms * diff[attr][i];\r\n                                    };\r\n                                    // now = [[\"r\", get(2), 0, 0], [\"t\", get(3), get(4)], [\"s\", get(0), get(1), 0, 0]];\r\n                                    now = [[\"m\", get(0), get(1), get(2), get(3), get(4), get(5)]];\r\n                                }\r\n                                break;\r\n                            case \"csv\":\r\n                                if (attr == \"clip-rect\") {\r\n                                    now = [];\r\n                                    i = 4;\r\n                                    while (i--) {\r\n                                        now[i] = +from[attr][i] + pos * ms * diff[attr][i];\r\n                                    }\r\n                                }\r\n                                break;\r\n                            default:\r\n                                var from2 = [][concat](from[attr]);\r\n                                now = [];\r\n                                i = that.paper.customAttributes[attr].length;\r\n                                while (i--) {\r\n                                    now[i] = +from2[i] + pos * ms * diff[attr][i];\r\n                                }\r\n                                break;\r\n                        }\r\n                        set[attr] = now;\r\n                    }\r\n                    that.attr(set);\r\n                    (function (id, that, anim) {\r\n                        setTimeout(function () {\r\n                            eve(\"raphael.anim.frame.\" + id, that, anim);\r\n                        });\r\n                    })(that.id, that, e.anim);\r\n                } else {\r\n                    (function(f, el, a) {\r\n                        setTimeout(function() {\r\n                            eve(\"raphael.anim.frame.\" + el.id, el, a);\r\n                            eve(\"raphael.anim.finish.\" + el.id, el, a);\r\n                            R.is(f, \"function\") && f.call(el);\r\n                        });\r\n                    })(e.callback, that, e.anim);\r\n                    that.attr(to);\r\n                    animationElements.splice(l--, 1);\r\n                    if (e.repeat > 1 && !e.next) {\r\n                        for (key in to) if (to[has](key)) {\r\n                            init[key] = e.totalOrigin[key];\r\n                        }\r\n                        e.el.attr(init);\r\n                        runAnimation(e.anim, e.el, e.anim.percents[0], null, e.totalOrigin, e.repeat - 1);\r\n                    }\r\n                    if (e.next && !e.stop) {\r\n                        runAnimation(e.anim, e.el, e.next, null, e.totalOrigin, e.repeat);\r\n                    }\r\n                }\r\n            }\r\n            animationElements.length && requestAnimFrame(animation);\r\n        },\r\n        upto255 = function (color) {\r\n            return color > 255 ? 255 : color < 0 ? 0 : color;\r\n        };\r\n    /*\\\r\n     * Element.animateWith\r\n     [ method ]\r\n     **\r\n     * Acts similar to @Element.animate, but ensure that given animation runs in sync with another given element.\r\n     **\r\n     > Parameters\r\n     **\r\n     - el (object) element to sync with\r\n     - anim (object) animation to sync with\r\n     - params (object) #optional final attributes for the element, see also @Element.attr\r\n     - ms (number) #optional number of milliseconds for animation to run\r\n     - easing (string) #optional easing type. Accept on of @Raphael.easing_formulas or CSS format: `cubic&#x2010;bezier(XX,&#160;XX,&#160;XX,&#160;XX)`\r\n     - callback (function) #optional callback function. Will be called at the end of animation.\r\n     * or\r\n     - element (object) element to sync with\r\n     - anim (object) animation to sync with\r\n     - animation (object) #optional animation object, see @Raphael.animation\r\n     **\r\n     = (object) original element\r\n    \\*/\r\n    elproto.animateWith = function (el, anim, params, ms, easing, callback) {\r\n        var element = this;\r\n        if (element.removed) {\r\n            callback && callback.call(element);\r\n            return element;\r\n        }\r\n        var a = params instanceof Animation ? params : R.animation(params, ms, easing, callback),\r\n            x, y;\r\n        runAnimation(a, element, a.percents[0], null, element.attr());\r\n        for (var i = 0, ii = animationElements.length; i < ii; i++) {\r\n            if (animationElements[i].anim == anim && animationElements[i].el == el) {\r\n                animationElements[ii - 1].start = animationElements[i].start;\r\n                break;\r\n            }\r\n        }\r\n        return element;\r\n        //\r\n        //\r\n        // var a = params ? R.animation(params, ms, easing, callback) : anim,\r\n        //     status = element.status(anim);\r\n        // return this.animate(a).status(a, status * anim.ms / a.ms);\r\n    };\r\n    function CubicBezierAtTime(t, p1x, p1y, p2x, p2y, duration) {\r\n        var cx = 3 * p1x,\r\n            bx = 3 * (p2x - p1x) - cx,\r\n            ax = 1 - cx - bx,\r\n            cy = 3 * p1y,\r\n            by = 3 * (p2y - p1y) - cy,\r\n            ay = 1 - cy - by;\r\n        function sampleCurveX(t) {\r\n            return ((ax * t + bx) * t + cx) * t;\r\n        }\r\n        function solve(x, epsilon) {\r\n            var t = solveCurveX(x, epsilon);\r\n            return ((ay * t + by) * t + cy) * t;\r\n        }\r\n        function solveCurveX(x, epsilon) {\r\n            var t0, t1, t2, x2, d2, i;\r\n            for(t2 = x, i = 0; i < 8; i++) {\r\n                x2 = sampleCurveX(t2) - x;\r\n                if (abs(x2) < epsilon) {\r\n                    return t2;\r\n                }\r\n                d2 = (3 * ax * t2 + 2 * bx) * t2 + cx;\r\n                if (abs(d2) < 1e-6) {\r\n                    break;\r\n                }\r\n                t2 = t2 - x2 / d2;\r\n            }\r\n            t0 = 0;\r\n            t1 = 1;\r\n            t2 = x;\r\n            if (t2 < t0) {\r\n                return t0;\r\n            }\r\n            if (t2 > t1) {\r\n                return t1;\r\n            }\r\n            while (t0 < t1) {\r\n                x2 = sampleCurveX(t2);\r\n                if (abs(x2 - x) < epsilon) {\r\n                    return t2;\r\n                }\r\n                if (x > x2) {\r\n                    t0 = t2;\r\n                } else {\r\n                    t1 = t2;\r\n                }\r\n                t2 = (t1 - t0) / 2 + t0;\r\n            }\r\n            return t2;\r\n        }\r\n        return solve(t, 1 / (200 * duration));\r\n    }\r\n    elproto.onAnimation = function (f) {\r\n        f ? eve.on(\"raphael.anim.frame.\" + this.id, f) : eve.unbind(\"raphael.anim.frame.\" + this.id);\r\n        return this;\r\n    };\r\n    function Animation(anim, ms) {\r\n        var percents = [],\r\n            newAnim = {};\r\n        this.ms = ms;\r\n        this.times = 1;\r\n        if (anim) {\r\n            for (var attr in anim) if (anim[has](attr)) {\r\n                newAnim[toFloat(attr)] = anim[attr];\r\n                percents.push(toFloat(attr));\r\n            }\r\n            percents.sort(sortByNumber);\r\n        }\r\n        this.anim = newAnim;\r\n        this.top = percents[percents.length - 1];\r\n        this.percents = percents;\r\n    }\r\n    /*\\\r\n     * Animation.delay\r\n     [ method ]\r\n     **\r\n     * Creates a copy of existing animation object with given delay.\r\n     **\r\n     > Parameters\r\n     **\r\n     - delay (number) number of ms to pass between animation start and actual animation\r\n     **\r\n     = (object) new altered Animation object\r\n     | var anim = Raphael.animation({cx: 10, cy: 20}, 2e3);\r\n     | circle1.animate(anim); // run the given animation immediately\r\n     | circle2.animate(anim.delay(500)); // run the given animation after 500 ms\r\n    \\*/\r\n    Animation.prototype.delay = function (delay) {\r\n        var a = new Animation(this.anim, this.ms);\r\n        a.times = this.times;\r\n        a.del = +delay || 0;\r\n        return a;\r\n    };\r\n    /*\\\r\n     * Animation.repeat\r\n     [ method ]\r\n     **\r\n     * Creates a copy of existing animation object with given repetition.\r\n     **\r\n     > Parameters\r\n     **\r\n     - repeat (number) number iterations of animation. For infinite animation pass `Infinity`\r\n     **\r\n     = (object) new altered Animation object\r\n    \\*/\r\n    Animation.prototype.repeat = function (times) {\r\n        var a = new Animation(this.anim, this.ms);\r\n        a.del = this.del;\r\n        a.times = math.floor(mmax(times, 0)) || 1;\r\n        return a;\r\n    };\r\n    function runAnimation(anim, element, percent, status, totalOrigin, times) {\r\n        percent = toFloat(percent);\r\n        var params,\r\n            isInAnim,\r\n            isInAnimSet,\r\n            percents = [],\r\n            next,\r\n            prev,\r\n            timestamp,\r\n            ms = anim.ms,\r\n            from = {},\r\n            to = {},\r\n            diff = {};\r\n        if (status) {\r\n            for (i = 0, ii = animationElements.length; i < ii; i++) {\r\n                var e = animationElements[i];\r\n                if (e.el.id == element.id && e.anim == anim) {\r\n                    if (e.percent != percent) {\r\n                        animationElements.splice(i, 1);\r\n                        isInAnimSet = 1;\r\n                    } else {\r\n                        isInAnim = e;\r\n                    }\r\n                    element.attr(e.totalOrigin);\r\n                    break;\r\n                }\r\n            }\r\n        } else {\r\n            status = +to; // NaN\r\n        }\r\n        for (var i = 0, ii = anim.percents.length; i < ii; i++) {\r\n            if (anim.percents[i] == percent || anim.percents[i] > status * anim.top) {\r\n                percent = anim.percents[i];\r\n                prev = anim.percents[i - 1] || 0;\r\n                ms = ms / anim.top * (percent - prev);\r\n                next = anim.percents[i + 1];\r\n                params = anim.anim[percent];\r\n                break;\r\n            } else if (status) {\r\n                element.attr(anim.anim[anim.percents[i]]);\r\n            }\r\n        }\r\n        if (!params) {\r\n            return;\r\n        }\r\n        if (!isInAnim) {\r\n            for (var attr in params) if (params[has](attr)) {\r\n                if (availableAnimAttrs[has](attr) || element.paper.customAttributes[has](attr)) {\r\n                    from[attr] = element.attr(attr);\r\n                    (from[attr] == null) && (from[attr] = availableAttrs[attr]);\r\n                    to[attr] = params[attr];\r\n                    switch (availableAnimAttrs[attr]) {\r\n                        case nu:\r\n                            diff[attr] = (to[attr] - from[attr]) / ms;\r\n                            break;\r\n                        case \"colour\":\r\n                            from[attr] = R.getRGB(from[attr]);\r\n                            var toColour = R.getRGB(to[attr]);\r\n                            diff[attr] = {\r\n                                r: (toColour.r - from[attr].r) / ms,\r\n                                g: (toColour.g - from[attr].g) / ms,\r\n                                b: (toColour.b - from[attr].b) / ms\r\n                            };\r\n                            break;\r\n                        case \"path\":\r\n                            var pathes = path2curve(from[attr], to[attr]),\r\n                                toPath = pathes[1];\r\n                            from[attr] = pathes[0];\r\n                            diff[attr] = [];\r\n                            for (i = 0, ii = from[attr].length; i < ii; i++) {\r\n                                diff[attr][i] = [0];\r\n                                for (var j = 1, jj = from[attr][i].length; j < jj; j++) {\r\n                                    diff[attr][i][j] = (toPath[i][j] - from[attr][i][j]) / ms;\r\n                                }\r\n                            }\r\n                            break;\r\n                        case \"transform\":\r\n                            var _ = element._,\r\n                                eq = equaliseTransform(_[attr], to[attr]);\r\n                            if (eq) {\r\n                                from[attr] = eq.from;\r\n                                to[attr] = eq.to;\r\n                                diff[attr] = [];\r\n                                diff[attr].real = true;\r\n                                for (i = 0, ii = from[attr].length; i < ii; i++) {\r\n                                    diff[attr][i] = [from[attr][i][0]];\r\n                                    for (j = 1, jj = from[attr][i].length; j < jj; j++) {\r\n                                        diff[attr][i][j] = (to[attr][i][j] - from[attr][i][j]) / ms;\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                var m = (element.matrix || new Matrix),\r\n                                    to2 = {\r\n                                        _: {transform: _.transform},\r\n                                        getBBox: function () {\r\n                                            return element.getBBox(1);\r\n                                        }\r\n                                    };\r\n                                from[attr] = [\r\n                                    m.a,\r\n                                    m.b,\r\n                                    m.c,\r\n                                    m.d,\r\n                                    m.e,\r\n                                    m.f\r\n                                ];\r\n                                extractTransform(to2, to[attr]);\r\n                                to[attr] = to2._.transform;\r\n                                diff[attr] = [\r\n                                    (to2.matrix.a - m.a) / ms,\r\n                                    (to2.matrix.b - m.b) / ms,\r\n                                    (to2.matrix.c - m.c) / ms,\r\n                                    (to2.matrix.d - m.d) / ms,\r\n                                    (to2.matrix.e - m.e) / ms,\r\n                                    (to2.matrix.f - m.f) / ms\r\n                                ];\r\n                                // from[attr] = [_.sx, _.sy, _.deg, _.dx, _.dy];\r\n                                // var to2 = {_:{}, getBBox: function () { return element.getBBox(); }};\r\n                                // extractTransform(to2, to[attr]);\r\n                                // diff[attr] = [\r\n                                //     (to2._.sx - _.sx) / ms,\r\n                                //     (to2._.sy - _.sy) / ms,\r\n                                //     (to2._.deg - _.deg) / ms,\r\n                                //     (to2._.dx - _.dx) / ms,\r\n                                //     (to2._.dy - _.dy) / ms\r\n                                // ];\r\n                            }\r\n                            break;\r\n                        case \"csv\":\r\n                            var values = Str(params[attr])[split](separator),\r\n                                from2 = Str(from[attr])[split](separator);\r\n                            if (attr == \"clip-rect\") {\r\n                                from[attr] = from2;\r\n                                diff[attr] = [];\r\n                                i = from2.length;\r\n                                while (i--) {\r\n                                    diff[attr][i] = (values[i] - from[attr][i]) / ms;\r\n                                }\r\n                            }\r\n                            to[attr] = values;\r\n                            break;\r\n                        default:\r\n                            values = [][concat](params[attr]);\r\n                            from2 = [][concat](from[attr]);\r\n                            diff[attr] = [];\r\n                            i = element.paper.customAttributes[attr].length;\r\n                            while (i--) {\r\n                                diff[attr][i] = ((values[i] || 0) - (from2[i] || 0)) / ms;\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            var easing = params.easing,\r\n                easyeasy = R.easing_formulas[easing];\r\n            if (!easyeasy) {\r\n                easyeasy = Str(easing).match(bezierrg);\r\n                if (easyeasy && easyeasy.length == 5) {\r\n                    var curve = easyeasy;\r\n                    easyeasy = function (t) {\r\n                        return CubicBezierAtTime(t, +curve[1], +curve[2], +curve[3], +curve[4], ms);\r\n                    };\r\n                } else {\r\n                    easyeasy = pipe;\r\n                }\r\n            }\r\n            timestamp = params.start || anim.start || +new Date;\r\n            e = {\r\n                anim: anim,\r\n                percent: percent,\r\n                timestamp: timestamp,\r\n                start: timestamp + (anim.del || 0),\r\n                status: 0,\r\n                initstatus: status || 0,\r\n                stop: false,\r\n                ms: ms,\r\n                easing: easyeasy,\r\n                from: from,\r\n                diff: diff,\r\n                to: to,\r\n                el: element,\r\n                callback: params.callback,\r\n                prev: prev,\r\n                next: next,\r\n                repeat: times || anim.times,\r\n                origin: element.attr(),\r\n                totalOrigin: totalOrigin\r\n            };\r\n            animationElements.push(e);\r\n            if (status && !isInAnim && !isInAnimSet) {\r\n                e.stop = true;\r\n                e.start = new Date - ms * status;\r\n                if (animationElements.length == 1) {\r\n                    return animation();\r\n                }\r\n            }\r\n            if (isInAnimSet) {\r\n                e.start = new Date - e.ms * status;\r\n            }\r\n            animationElements.length == 1 && requestAnimFrame(animation);\r\n        } else {\r\n            isInAnim.initstatus = status;\r\n            isInAnim.start = new Date - isInAnim.ms * status;\r\n        }\r\n        eve(\"raphael.anim.start.\" + element.id, element, anim);\r\n    }\r\n    /*\\\r\n     * Raphael.animation\r\n     [ method ]\r\n     **\r\n     * Creates an animation object that can be passed to the @Element.animate or @Element.animateWith methods.\r\n     * See also @Animation.delay and @Animation.repeat methods.\r\n     **\r\n     > Parameters\r\n     **\r\n     - params (object) final attributes for the element, see also @Element.attr\r\n     - ms (number) number of milliseconds for animation to run\r\n     - easing (string) #optional easing type. Accept one of @Raphael.easing_formulas or CSS format: `cubic&#x2010;bezier(XX,&#160;XX,&#160;XX,&#160;XX)`\r\n     - callback (function) #optional callback function. Will be called at the end of animation.\r\n     **\r\n     = (object) @Animation\r\n    \\*/\r\n    R.animation = function (params, ms, easing, callback) {\r\n        if (params instanceof Animation) {\r\n            return params;\r\n        }\r\n        if (R.is(easing, \"function\") || !easing) {\r\n            callback = callback || easing || null;\r\n            easing = null;\r\n        }\r\n        params = Object(params);\r\n        ms = +ms || 0;\r\n        var p = {},\r\n            json,\r\n            attr;\r\n        for (attr in params) if (params[has](attr) && toFloat(attr) != attr && toFloat(attr) + \"%\" != attr) {\r\n            json = true;\r\n            p[attr] = params[attr];\r\n        }\r\n        if (!json) {\r\n            // if percent-like syntax is used and end-of-all animation callback used\r\n            if(callback){\r\n                // find the last one\r\n                var lastKey = 0;\r\n                for(var i in params){\r\n                    var percent = toInt(i);\r\n                    if(params[has](i) && percent > lastKey){\r\n                        lastKey = percent;\r\n                    }\r\n                }\r\n                lastKey += '%';\r\n                // if already defined callback in the last keyframe, skip\r\n                !params[lastKey].callback && (params[lastKey].callback = callback);\r\n            }\r\n          return new Animation(params, ms);\r\n        } else {\r\n            easing && (p.easing = easing);\r\n            callback && (p.callback = callback);\r\n            return new Animation({100: p}, ms);\r\n        }\r\n    };\r\n    /*\\\r\n     * Element.animate\r\n     [ method ]\r\n     **\r\n     * Creates and starts animation for given element.\r\n     **\r\n     > Parameters\r\n     **\r\n     - params (object) final attributes for the element, see also @Element.attr\r\n     - ms (number) number of milliseconds for animation to run\r\n     - easing (string) #optional easing type. Accept one of @Raphael.easing_formulas or CSS format: `cubic&#x2010;bezier(XX,&#160;XX,&#160;XX,&#160;XX)`\r\n     - callback (function) #optional callback function. Will be called at the end of animation.\r\n     * or\r\n     - animation (object) animation object, see @Raphael.animation\r\n     **\r\n     = (object) original element\r\n    \\*/\r\n    elproto.animate = function (params, ms, easing, callback) {\r\n        var element = this;\r\n        if (element.removed) {\r\n            callback && callback.call(element);\r\n            return element;\r\n        }\r\n        var anim = params instanceof Animation ? params : R.animation(params, ms, easing, callback);\r\n        runAnimation(anim, element, anim.percents[0], null, element.attr());\r\n        return element;\r\n    };\r\n    /*\\\r\n     * Element.setTime\r\n     [ method ]\r\n     **\r\n     * Sets the status of animation of the element in milliseconds. Similar to @Element.status method.\r\n     **\r\n     > Parameters\r\n     **\r\n     - anim (object) animation object\r\n     - value (number) number of milliseconds from the beginning of the animation\r\n     **\r\n     = (object) original element if `value` is specified\r\n     * Note, that during animation following events are triggered:\r\n     *\r\n     * On each animation frame event `anim.frame.<id>`, on start `anim.start.<id>` and on end `anim.finish.<id>`.\r\n    \\*/\r\n    elproto.setTime = function (anim, value) {\r\n        if (anim && value != null) {\r\n            this.status(anim, mmin(value, anim.ms) / anim.ms);\r\n        }\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.status\r\n     [ method ]\r\n     **\r\n     * Gets or sets the status of animation of the element.\r\n     **\r\n     > Parameters\r\n     **\r\n     - anim (object) #optional animation object\r\n     - value (number) #optional 0 – 1. If specified, method works like a setter and sets the status of a given animation to the value. This will cause animation to jump to the given position.\r\n     **\r\n     = (number) status\r\n     * or\r\n     = (array) status if `anim` is not specified. Array of objects in format:\r\n     o {\r\n     o     anim: (object) animation object\r\n     o     status: (number) status\r\n     o }\r\n     * or\r\n     = (object) original element if `value` is specified\r\n    \\*/\r\n    elproto.status = function (anim, value) {\r\n        var out = [],\r\n            i = 0,\r\n            len,\r\n            e;\r\n        if (value != null) {\r\n            runAnimation(anim, this, -1, mmin(value, 1));\r\n            return this;\r\n        } else {\r\n            len = animationElements.length;\r\n            for (; i < len; i++) {\r\n                e = animationElements[i];\r\n                if (e.el.id == this.id && (!anim || e.anim == anim)) {\r\n                    if (anim) {\r\n                        return e.status;\r\n                    }\r\n                    out.push({\r\n                        anim: e.anim,\r\n                        status: e.status\r\n                    });\r\n                }\r\n            }\r\n            if (anim) {\r\n                return 0;\r\n            }\r\n            return out;\r\n        }\r\n    };\r\n    /*\\\r\n     * Element.pause\r\n     [ method ]\r\n     **\r\n     * Stops animation of the element with ability to resume it later on.\r\n     **\r\n     > Parameters\r\n     **\r\n     - anim (object) #optional animation object\r\n     **\r\n     = (object) original element\r\n    \\*/\r\n    elproto.pause = function (anim) {\r\n        for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.id == this.id && (!anim || animationElements[i].anim == anim)) {\r\n            if (eve(\"raphael.anim.pause.\" + this.id, this, animationElements[i].anim) !== false) {\r\n                animationElements[i].paused = true;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.resume\r\n     [ method ]\r\n     **\r\n     * Resumes animation if it was paused with @Element.pause method.\r\n     **\r\n     > Parameters\r\n     **\r\n     - anim (object) #optional animation object\r\n     **\r\n     = (object) original element\r\n    \\*/\r\n    elproto.resume = function (anim) {\r\n        for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.id == this.id && (!anim || animationElements[i].anim == anim)) {\r\n            var e = animationElements[i];\r\n            if (eve(\"raphael.anim.resume.\" + this.id, this, e.anim) !== false) {\r\n                delete e.paused;\r\n                this.status(e.anim, e.status);\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.stop\r\n     [ method ]\r\n     **\r\n     * Stops animation of the element.\r\n     **\r\n     > Parameters\r\n     **\r\n     - anim (object) #optional animation object\r\n     **\r\n     = (object) original element\r\n    \\*/\r\n    elproto.stop = function (anim) {\r\n        for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.id == this.id && (!anim || animationElements[i].anim == anim)) {\r\n            if (eve(\"raphael.anim.stop.\" + this.id, this, animationElements[i].anim) !== false) {\r\n                animationElements.splice(i--, 1);\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    function stopAnimation(paper) {\r\n        for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.paper == paper) {\r\n            animationElements.splice(i--, 1);\r\n        }\r\n    }\r\n    eve.on(\"raphael.remove\", stopAnimation);\r\n    eve.on(\"raphael.clear\", stopAnimation);\r\n    elproto.toString = function () {\r\n        return \"Rapha\\xebl\\u2019s object\";\r\n    };\r\n\r\n    // Set\r\n    var Set = function (items) {\r\n        this.items = [];\r\n        this.length = 0;\r\n        this.type = \"set\";\r\n        if (items) {\r\n            for (var i = 0, ii = items.length; i < ii; i++) {\r\n                if (items[i] && (items[i].constructor == elproto.constructor || items[i].constructor == Set)) {\r\n                    this[this.items.length] = this.items[this.items.length] = items[i];\r\n                    this.length++;\r\n                }\r\n            }\r\n        }\r\n    },\r\n    setproto = Set.prototype;\r\n    /*\\\r\n     * Set.push\r\n     [ method ]\r\n     **\r\n     * Adds each argument to the current set.\r\n     = (object) original element\r\n    \\*/\r\n    setproto.push = function () {\r\n        var item,\r\n            len;\r\n        for (var i = 0, ii = arguments.length; i < ii; i++) {\r\n            item = arguments[i];\r\n            if (item && (item.constructor == elproto.constructor || item.constructor == Set)) {\r\n                len = this.items.length;\r\n                this[len] = this.items[len] = item;\r\n                this.length++;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Set.pop\r\n     [ method ]\r\n     **\r\n     * Removes last element and returns it.\r\n     = (object) element\r\n    \\*/\r\n    setproto.pop = function () {\r\n        this.length && delete this[this.length--];\r\n        return this.items.pop();\r\n    };\r\n    /*\\\r\n     * Set.forEach\r\n     [ method ]\r\n     **\r\n     * Executes given function for each element in the set.\r\n     *\r\n     * If function returns `false` it will stop loop running.\r\n     **\r\n     > Parameters\r\n     **\r\n     - callback (function) function to run\r\n     - thisArg (object) context object for the callback\r\n     = (object) Set object\r\n    \\*/\r\n    setproto.forEach = function (callback, thisArg) {\r\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\r\n            if (callback.call(thisArg, this.items[i], i) === false) {\r\n                return this;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    for (var method in elproto) if (elproto[has](method)) {\r\n        setproto[method] = (function (methodname) {\r\n            return function () {\r\n                var arg = arguments;\r\n                return this.forEach(function (el) {\r\n                    el[methodname][apply](el, arg);\r\n                });\r\n            };\r\n        })(method);\r\n    }\r\n    setproto.attr = function (name, value) {\r\n        if (name && R.is(name, array) && R.is(name[0], \"object\")) {\r\n            for (var j = 0, jj = name.length; j < jj; j++) {\r\n                this.items[j].attr(name[j]);\r\n            }\r\n        } else {\r\n            for (var i = 0, ii = this.items.length; i < ii; i++) {\r\n                this.items[i].attr(name, value);\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Set.clear\r\n     [ method ]\r\n     **\r\n     * Removes all elements from the set\r\n    \\*/\r\n    setproto.clear = function () {\r\n        while (this.length) {\r\n            this.pop();\r\n        }\r\n    };\r\n    /*\\\r\n     * Set.splice\r\n     [ method ]\r\n     **\r\n     * Removes given element from the set\r\n     **\r\n     > Parameters\r\n     **\r\n     - index (number) position of the deletion\r\n     - count (number) number of element to remove\r\n     - insertion… (object) #optional elements to insert\r\n     = (object) set elements that were deleted\r\n    \\*/\r\n    setproto.splice = function (index, count, insertion) {\r\n        index = index < 0 ? mmax(this.length + index, 0) : index;\r\n        count = mmax(0, mmin(this.length - index, count));\r\n        var tail = [],\r\n            todel = [],\r\n            args = [],\r\n            i;\r\n        for (i = 2; i < arguments.length; i++) {\r\n            args.push(arguments[i]);\r\n        }\r\n        for (i = 0; i < count; i++) {\r\n            todel.push(this[index + i]);\r\n        }\r\n        for (; i < this.length - index; i++) {\r\n            tail.push(this[index + i]);\r\n        }\r\n        var arglen = args.length;\r\n        for (i = 0; i < arglen + tail.length; i++) {\r\n            this.items[index + i] = this[index + i] = i < arglen ? args[i] : tail[i - arglen];\r\n        }\r\n        i = this.items.length = this.length -= count - arglen;\r\n        while (this[i]) {\r\n            delete this[i++];\r\n        }\r\n        return new Set(todel);\r\n    };\r\n    /*\\\r\n     * Set.exclude\r\n     [ method ]\r\n     **\r\n     * Removes given element from the set\r\n     **\r\n     > Parameters\r\n     **\r\n     - element (object) element to remove\r\n     = (boolean) `true` if object was found & removed from the set\r\n    \\*/\r\n    setproto.exclude = function (el) {\r\n        for (var i = 0, ii = this.length; i < ii; i++) if (this[i] == el) {\r\n            this.splice(i, 1);\r\n            return true;\r\n        }\r\n    };\r\n    setproto.animate = function (params, ms, easing, callback) {\r\n        (R.is(easing, \"function\") || !easing) && (callback = easing || null);\r\n        var len = this.items.length,\r\n            i = len,\r\n            item,\r\n            set = this,\r\n            collector;\r\n        if (!len) {\r\n            return this;\r\n        }\r\n        callback && (collector = function () {\r\n            !--len && callback.call(set);\r\n        });\r\n        easing = R.is(easing, string) ? easing : collector;\r\n        var anim = R.animation(params, ms, easing, collector);\r\n        item = this.items[--i].animate(anim);\r\n        while (i--) {\r\n            this.items[i] && !this.items[i].removed && this.items[i].animateWith(item, anim, anim);\r\n            (this.items[i] && !this.items[i].removed) || len--;\r\n        }\r\n        return this;\r\n    };\r\n    setproto.insertAfter = function (el) {\r\n        var i = this.items.length;\r\n        while (i--) {\r\n            this.items[i].insertAfter(el);\r\n        }\r\n        return this;\r\n    };\r\n    setproto.getBBox = function () {\r\n        var x = [],\r\n            y = [],\r\n            x2 = [],\r\n            y2 = [];\r\n        for (var i = this.items.length; i--;) if (!this.items[i].removed) {\r\n            var box = this.items[i].getBBox();\r\n            x.push(box.x);\r\n            y.push(box.y);\r\n            x2.push(box.x + box.width);\r\n            y2.push(box.y + box.height);\r\n        }\r\n        x = mmin[apply](0, x);\r\n        y = mmin[apply](0, y);\r\n        x2 = mmax[apply](0, x2);\r\n        y2 = mmax[apply](0, y2);\r\n        return {\r\n            x: x,\r\n            y: y,\r\n            x2: x2,\r\n            y2: y2,\r\n            width: x2 - x,\r\n            height: y2 - y\r\n        };\r\n    };\r\n    setproto.clone = function (s) {\r\n        s = this.paper.set();\r\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\r\n            s.push(this.items[i].clone());\r\n        }\r\n        return s;\r\n    };\r\n    setproto.toString = function () {\r\n        return \"Rapha\\xebl\\u2018s set\";\r\n    };\r\n\r\n    setproto.glow = function(glowConfig) {\r\n        var ret = this.paper.set();\r\n        this.forEach(function(shape, index){\r\n            var g = shape.glow(glowConfig);\r\n            if(g != null){\r\n                g.forEach(function(shape2, index2){\r\n                    ret.push(shape2);\r\n                });\r\n            }\r\n        });\r\n        return ret;\r\n    };\r\n\r\n\r\n    /*\\\r\n     * Set.isPointInside\r\n     [ method ]\r\n     **\r\n     * Determine if given point is inside this set’s elements\r\n     **\r\n     > Parameters\r\n     **\r\n     - x (number) x coordinate of the point\r\n     - y (number) y coordinate of the point\r\n     = (boolean) `true` if point is inside any of the set's elements\r\n     \\*/\r\n    setproto.isPointInside = function (x, y) {\r\n        var isPointInside = false;\r\n        this.forEach(function (el) {\r\n            if (el.isPointInside(x, y)) {\r\n                isPointInside = true;\r\n                return false; // stop loop\r\n            }\r\n        });\r\n        return isPointInside;\r\n    };\r\n\r\n    /*\\\r\n     * Raphael.registerFont\r\n     [ method ]\r\n     **\r\n     * Adds given font to the registered set of fonts for Raphaël. Should be used as an internal call from within Cufón’s font file.\r\n     * Returns original parameter, so it could be used with chaining.\r\n     # <a href=\"http://wiki.github.com/sorccu/cufon/about\">More about Cufón and how to convert your font form TTF, OTF, etc to JavaScript file.</a>\r\n     **\r\n     > Parameters\r\n     **\r\n     - font (object) the font to register\r\n     = (object) the font you passed in\r\n     > Usage\r\n     | Cufon.registerFont(Raphael.registerFont({…}));\r\n    \\*/\r\n    R.registerFont = function (font) {\r\n        if (!font.face) {\r\n            return font;\r\n        }\r\n        this.fonts = this.fonts || {};\r\n        var fontcopy = {\r\n                w: font.w,\r\n                face: {},\r\n                glyphs: {}\r\n            },\r\n            family = font.face[\"font-family\"];\r\n        for (var prop in font.face) if (font.face[has](prop)) {\r\n            fontcopy.face[prop] = font.face[prop];\r\n        }\r\n        if (this.fonts[family]) {\r\n            this.fonts[family].push(fontcopy);\r\n        } else {\r\n            this.fonts[family] = [fontcopy];\r\n        }\r\n        if (!font.svg) {\r\n            fontcopy.face[\"units-per-em\"] = toInt(font.face[\"units-per-em\"], 10);\r\n            for (var glyph in font.glyphs) if (font.glyphs[has](glyph)) {\r\n                var path = font.glyphs[glyph];\r\n                fontcopy.glyphs[glyph] = {\r\n                    w: path.w,\r\n                    k: {},\r\n                    d: path.d && \"M\" + path.d.replace(/[mlcxtrv]/g, function (command) {\r\n                            return {l: \"L\", c: \"C\", x: \"z\", t: \"m\", r: \"l\", v: \"c\"}[command] || \"M\";\r\n                        }) + \"z\"\r\n                };\r\n                if (path.k) {\r\n                    for (var k in path.k) if (path[has](k)) {\r\n                        fontcopy.glyphs[glyph].k[k] = path.k[k];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return font;\r\n    };\r\n    /*\\\r\n     * Paper.getFont\r\n     [ method ]\r\n     **\r\n     * Finds font object in the registered fonts by given parameters. You could specify only one word from the font name, like “Myriad” for “Myriad Pro”.\r\n     **\r\n     > Parameters\r\n     **\r\n     - family (string) font family name or any word from it\r\n     - weight (string) #optional font weight\r\n     - style (string) #optional font style\r\n     - stretch (string) #optional font stretch\r\n     = (object) the font object\r\n     > Usage\r\n     | paper.print(100, 100, \"Test string\", paper.getFont(\"Times\", 800), 30);\r\n    \\*/\r\n    paperproto.getFont = function (family, weight, style, stretch) {\r\n        stretch = stretch || \"normal\";\r\n        style = style || \"normal\";\r\n        weight = +weight || {normal: 400, bold: 700, lighter: 300, bolder: 800}[weight] || 400;\r\n        if (!R.fonts) {\r\n            return;\r\n        }\r\n        var font = R.fonts[family];\r\n        if (!font) {\r\n            var name = new RegExp(\"(^|\\\\s)\" + family.replace(/[^\\w\\d\\s+!~.:_-]/g, E) + \"(\\\\s|$)\", \"i\");\r\n            for (var fontName in R.fonts) if (R.fonts[has](fontName)) {\r\n                if (name.test(fontName)) {\r\n                    font = R.fonts[fontName];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        var thefont;\r\n        if (font) {\r\n            for (var i = 0, ii = font.length; i < ii; i++) {\r\n                thefont = font[i];\r\n                if (thefont.face[\"font-weight\"] == weight && (thefont.face[\"font-style\"] == style || !thefont.face[\"font-style\"]) && thefont.face[\"font-stretch\"] == stretch) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return thefont;\r\n    };\r\n    /*\\\r\n     * Paper.print\r\n     [ method ]\r\n     **\r\n     * Creates path that represent given text written using given font at given position with given size.\r\n     * Result of the method is path element that contains whole text as a separate path.\r\n     **\r\n     > Parameters\r\n     **\r\n     - x (number) x position of the text\r\n     - y (number) y position of the text\r\n     - string (string) text to print\r\n     - font (object) font object, see @Paper.getFont\r\n     - size (number) #optional size of the font, default is `16`\r\n     - origin (string) #optional could be `\"baseline\"` or `\"middle\"`, default is `\"middle\"`\r\n     - letter_spacing (number) #optional number in range `-1..1`, default is `0`\r\n     - line_spacing (number) #optional number in range `1..3`, default is `1`\r\n     = (object) resulting path element, which consist of all letters\r\n     > Usage\r\n     | var txt = r.print(10, 50, \"print\", r.getFont(\"Museo\"), 30).attr({fill: \"#fff\"});\r\n    \\*/\r\n    paperproto.print = function (x, y, string, font, size, origin, letter_spacing, line_spacing) {\r\n        origin = origin || \"middle\"; // baseline|middle\r\n        letter_spacing = mmax(mmin(letter_spacing || 0, 1), -1);\r\n        line_spacing = mmax(mmin(line_spacing || 1, 3), 1);\r\n        var letters = Str(string)[split](E),\r\n            shift = 0,\r\n            notfirst = 0,\r\n            path = E,\r\n            scale;\r\n        R.is(font, \"string\") && (font = this.getFont(font));\r\n        if (font) {\r\n            scale = (size || 16) / font.face[\"units-per-em\"];\r\n            var bb = font.face.bbox[split](separator),\r\n                top = +bb[0],\r\n                lineHeight = bb[3] - bb[1],\r\n                shifty = 0,\r\n                height = +bb[1] + (origin == \"baseline\" ? lineHeight + (+font.face.descent) : lineHeight / 2);\r\n            for (var i = 0, ii = letters.length; i < ii; i++) {\r\n                if (letters[i] == \"\\n\") {\r\n                    shift = 0;\r\n                    curr = 0;\r\n                    notfirst = 0;\r\n                    shifty += lineHeight * line_spacing;\r\n                } else {\r\n                    var prev = notfirst && font.glyphs[letters[i - 1]] || {},\r\n                        curr = font.glyphs[letters[i]];\r\n                    shift += notfirst ? (prev.w || font.w) + (prev.k && prev.k[letters[i]] || 0) + (font.w * letter_spacing) : 0;\r\n                    notfirst = 1;\r\n                }\r\n                if (curr && curr.d) {\r\n                    path += R.transformPath(curr.d, [\"t\", shift * scale, shifty * scale, \"s\", scale, scale, top, height, \"t\", (x - top) / scale, (y - height) / scale]);\r\n                }\r\n            }\r\n        }\r\n        return this.path(path).attr({\r\n            fill: \"#000\",\r\n            stroke: \"none\"\r\n        });\r\n    };\r\n\r\n    /*\\\r\n     * Paper.add\r\n     [ method ]\r\n     **\r\n     * Imports elements in JSON array in format `{type: type, <attributes>}`\r\n     **\r\n     > Parameters\r\n     **\r\n     - json (array)\r\n     = (object) resulting set of imported elements\r\n     > Usage\r\n     | paper.add([\r\n     |     {\r\n     |         type: \"circle\",\r\n     |         cx: 10,\r\n     |         cy: 10,\r\n     |         r: 5\r\n     |     },\r\n     |     {\r\n     |         type: \"rect\",\r\n     |         x: 10,\r\n     |         y: 10,\r\n     |         width: 10,\r\n     |         height: 10,\r\n     |         fill: \"#fc0\"\r\n     |     }\r\n     | ]);\r\n    \\*/\r\n    paperproto.add = function (json) {\r\n        if (R.is(json, \"array\")) {\r\n            var res = this.set(),\r\n                i = 0,\r\n                ii = json.length,\r\n                j;\r\n            for (; i < ii; i++) {\r\n                j = json[i] || {};\r\n                elements[has](j.type) && res.push(this[j.type]().attr(j));\r\n            }\r\n        }\r\n        return res;\r\n    };\r\n\r\n    /*\\\r\n     * Raphael.format\r\n     [ method ]\r\n     **\r\n     * Simple format function. Replaces construction of type “`{<number>}`” to the corresponding argument.\r\n     **\r\n     > Parameters\r\n     **\r\n     - token (string) string to format\r\n     - … (string) rest of arguments will be treated as parameters for replacement\r\n     = (string) formated string\r\n     > Usage\r\n     | var x = 10,\r\n     |     y = 20,\r\n     |     width = 40,\r\n     |     height = 50;\r\n     | // this will draw a rectangular shape equivalent to \"M10,20h40v50h-40z\"\r\n     | paper.path(Raphael.format(\"M{0},{1}h{2}v{3}h{4}z\", x, y, width, height, -width));\r\n    \\*/\r\n    R.format = function (token, params) {\r\n        var args = R.is(params, array) ? [0][concat](params) : arguments;\r\n        token && R.is(token, string) && args.length - 1 && (token = token.replace(formatrg, function (str, i) {\r\n            return args[++i] == null ? E : args[i];\r\n        }));\r\n        return token || E;\r\n    };\r\n    /*\\\r\n     * Raphael.fullfill\r\n     [ method ]\r\n     **\r\n     * A little bit more advanced format function than @Raphael.format. Replaces construction of type “`{<name>}`” to the corresponding argument.\r\n     **\r\n     > Parameters\r\n     **\r\n     - token (string) string to format\r\n     - json (object) object which properties will be used as a replacement\r\n     = (string) formated string\r\n     > Usage\r\n     | // this will draw a rectangular shape equivalent to \"M10,20h40v50h-40z\"\r\n     | paper.path(Raphael.fullfill(\"M{x},{y}h{dim.width}v{dim.height}h{dim['negative width']}z\", {\r\n     |     x: 10,\r\n     |     y: 20,\r\n     |     dim: {\r\n     |         width: 40,\r\n     |         height: 50,\r\n     |         \"negative width\": -40\r\n     |     }\r\n     | }));\r\n    \\*/\r\n    R.fullfill = (function () {\r\n        var tokenRegex = /\\{([^\\}]+)\\}/g,\r\n            objNotationRegex = /(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g, // matches .xxxxx or [\"xxxxx\"] to run over object properties\r\n            replacer = function (all, key, obj) {\r\n                var res = obj;\r\n                key.replace(objNotationRegex, function (all, name, quote, quotedName, isFunc) {\r\n                    name = name || quotedName;\r\n                    if (res) {\r\n                        if (name in res) {\r\n                            res = res[name];\r\n                        }\r\n                        typeof res == \"function\" && isFunc && (res = res());\r\n                    }\r\n                });\r\n                res = (res == null || res == obj ? all : res) + \"\";\r\n                return res;\r\n            };\r\n        return function (str, obj) {\r\n            return String(str).replace(tokenRegex, function (all, key) {\r\n                return replacer(all, key, obj);\r\n            });\r\n        };\r\n    })();\r\n    /*\\\r\n     * Raphael.ninja\r\n     [ method ]\r\n     **\r\n     * If you want to leave no trace of Raphaël (Well, Raphaël creates only one global variable `Raphael`, but anyway.) You can use `ninja` method.\r\n     * Beware, that in this case plugins could stop working, because they are depending on global variable existance.\r\n     **\r\n     = (object) Raphael object\r\n     > Usage\r\n     | (function (local_raphael) {\r\n     |     var paper = local_raphael(10, 10, 320, 200);\r\n     |     …\r\n     | })(Raphael.ninja());\r\n    \\*/\r\n    R.ninja = function () {\r\n        oldRaphael.was ? (g.win.Raphael = oldRaphael.is) : delete Raphael;\r\n        return R;\r\n    };\r\n    /*\\\r\n     * Raphael.st\r\n     [ property (object) ]\r\n     **\r\n     * You can add your own method to elements and sets. It is wise to add a set method for each element method\r\n     * you added, so you will be able to call the same method on sets too.\r\n     **\r\n     * See also @Raphael.el.\r\n     > Usage\r\n     | Raphael.el.red = function () {\r\n     |     this.attr({fill: \"#f00\"});\r\n     | };\r\n     | Raphael.st.red = function () {\r\n     |     this.forEach(function (el) {\r\n     |         el.red();\r\n     |     });\r\n     | };\r\n     | // then use it\r\n     | paper.set(paper.circle(100, 100, 20), paper.circle(110, 100, 20)).red();\r\n    \\*/\r\n    R.st = setproto;\r\n\r\n    eve.on(\"raphael.DOMload\", function () {\r\n        loaded = true;\r\n    });\r\n\r\n    // Firefox <3.6 fix: http://webreflection.blogspot.com/2009/11/195-chars-to-help-lazy-loading.html\r\n    (function (doc, loaded, f) {\r\n        if (doc.readyState == null && doc.addEventListener){\r\n            doc.addEventListener(loaded, f = function () {\r\n                doc.removeEventListener(loaded, f, false);\r\n                doc.readyState = \"complete\";\r\n            }, false);\r\n            doc.readyState = \"loading\";\r\n        }\r\n        function isLoaded() {\r\n            (/in/).test(doc.readyState) ? setTimeout(isLoaded, 9) : R.eve(\"raphael.DOMload\");\r\n        }\r\n        isLoaded();\r\n    })(document, \"DOMContentLoaded\");\r\n\r\n// ┌─────────────────────────────────────────────────────────────────────┐ \\\\\r\n// │ Raphaël - JavaScript Vector Library                                 │ \\\\\r\n// ├─────────────────────────────────────────────────────────────────────┤ \\\\\r\n// │ SVG Module                                                          │ \\\\\r\n// ├─────────────────────────────────────────────────────────────────────┤ \\\\\r\n// │ Copyright (c) 2008-2011 Dmitry Baranovskiy (http://raphaeljs.com)   │ \\\\\r\n// │ Copyright (c) 2008-2011 Sencha Labs (http://sencha.com)             │ \\\\\r\n// │ Licensed under the MIT (http://raphaeljs.com/license.html) license. │ \\\\\r\n// └─────────────────────────────────────────────────────────────────────┘ \\\\\r\n\r\n(function(){\r\n    if (!R.svg) {\r\n        return;\r\n    }\r\n    var has = \"hasOwnProperty\",\r\n        Str = String,\r\n        toFloat = parseFloat,\r\n        toInt = parseInt,\r\n        math = Math,\r\n        mmax = math.max,\r\n        abs = math.abs,\r\n        pow = math.pow,\r\n        separator = /[, ]+/,\r\n        eve = R.eve,\r\n        E = \"\",\r\n        S = \" \";\r\n    var xlink = \"http://www.w3.org/1999/xlink\",\r\n        markers = {\r\n            block: \"M5,0 0,2.5 5,5z\",\r\n            classic: \"M5,0 0,2.5 5,5 3.5,3 3.5,2z\",\r\n            diamond: \"M2.5,0 5,2.5 2.5,5 0,2.5z\",\r\n            open: \"M6,1 1,3.5 6,6\",\r\n            oval: \"M2.5,0A2.5,2.5,0,0,1,2.5,5 2.5,2.5,0,0,1,2.5,0z\"\r\n        },\r\n        markerCounter = {};\r\n    R.toString = function () {\r\n        return  \"Your browser supports SVG.\\nYou are running Rapha\\xebl \" + this.version;\r\n    };\r\n    var $ = function (el, attr) {\r\n        if (attr) {\r\n            if (typeof el == \"string\") {\r\n                el = $(el);\r\n            }\r\n            for (var key in attr) if (attr[has](key)) {\r\n                if (key.substring(0, 6) == \"xlink:\") {\r\n                    el.setAttributeNS(xlink, key.substring(6), Str(attr[key]));\r\n                } else {\r\n                    el.setAttribute(key, Str(attr[key]));\r\n                }\r\n            }\r\n        } else {\r\n            el = R._g.doc.createElementNS(\"http://www.w3.org/2000/svg\", el);\r\n            el.style && (el.style.webkitTapHighlightColor = \"rgba(0,0,0,0)\");\r\n        }\r\n        return el;\r\n    },\r\n    addGradientFill = function (element, gradient) {\r\n        var type = \"linear\",\r\n            id = element.id + gradient,\r\n            fx = .5, fy = .5,\r\n            o = element.node,\r\n            SVG = element.paper,\r\n            s = o.style,\r\n            el = R._g.doc.getElementById(id);\r\n        if (!el) {\r\n            gradient = Str(gradient).replace(R._radial_gradient, function (all, _fx, _fy) {\r\n                type = \"radial\";\r\n                if (_fx && _fy) {\r\n                    fx = toFloat(_fx);\r\n                    fy = toFloat(_fy);\r\n                    var dir = ((fy > .5) * 2 - 1);\r\n                    pow(fx - .5, 2) + pow(fy - .5, 2) > .25 &&\r\n                        (fy = math.sqrt(.25 - pow(fx - .5, 2)) * dir + .5) &&\r\n                        fy != .5 &&\r\n                        (fy = fy.toFixed(5) - 1e-5 * dir);\r\n                }\r\n                return E;\r\n            });\r\n            gradient = gradient.split(/\\s*\\-\\s*/);\r\n            if (type == \"linear\") {\r\n                var angle = gradient.shift();\r\n                angle = -toFloat(angle);\r\n                if (isNaN(angle)) {\r\n                    return null;\r\n                }\r\n                var vector = [0, 0, math.cos(R.rad(angle)), math.sin(R.rad(angle))],\r\n                    max = 1 / (mmax(abs(vector[2]), abs(vector[3])) || 1);\r\n                vector[2] *= max;\r\n                vector[3] *= max;\r\n                if (vector[2] < 0) {\r\n                    vector[0] = -vector[2];\r\n                    vector[2] = 0;\r\n                }\r\n                if (vector[3] < 0) {\r\n                    vector[1] = -vector[3];\r\n                    vector[3] = 0;\r\n                }\r\n            }\r\n            var dots = R._parseDots(gradient);\r\n            if (!dots) {\r\n                return null;\r\n            }\r\n            id = id.replace(/[\\(\\)\\s,\\xb0#]/g, \"_\");\r\n\r\n            if (element.gradient && id != element.gradient.id) {\r\n                SVG.defs.removeChild(element.gradient);\r\n                delete element.gradient;\r\n            }\r\n\r\n            if (!element.gradient) {\r\n                el = $(type + \"Gradient\", {id: id});\r\n                element.gradient = el;\r\n                $(el, type == \"radial\" ? {\r\n                    fx: fx,\r\n                    fy: fy\r\n                } : {\r\n                    x1: vector[0],\r\n                    y1: vector[1],\r\n                    x2: vector[2],\r\n                    y2: vector[3],\r\n                    gradientTransform: element.matrix.invert()\r\n                });\r\n                SVG.defs.appendChild(el);\r\n                for (var i = 0, ii = dots.length; i < ii; i++) {\r\n                    el.appendChild($(\"stop\", {\r\n                        offset: dots[i].offset ? dots[i].offset : i ? \"100%\" : \"0%\",\r\n                        \"stop-color\": dots[i].color || \"#fff\"\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n        $(o, {\r\n            fill: \"url('\" + document.location + \"#\" + id + \"')\",\r\n            opacity: 1,\r\n            \"fill-opacity\": 1\r\n        });\r\n        s.fill = E;\r\n        s.opacity = 1;\r\n        s.fillOpacity = 1;\r\n        return 1;\r\n    },\r\n    updatePosition = function (o) {\r\n        var bbox = o.getBBox(1);\r\n        $(o.pattern, {patternTransform: o.matrix.invert() + \" translate(\" + bbox.x + \",\" + bbox.y + \")\"});\r\n    },\r\n    addArrow = function (o, value, isEnd) {\r\n        if (o.type == \"path\") {\r\n            var values = Str(value).toLowerCase().split(\"-\"),\r\n                p = o.paper,\r\n                se = isEnd ? \"end\" : \"start\",\r\n                node = o.node,\r\n                attrs = o.attrs,\r\n                stroke = attrs[\"stroke-width\"],\r\n                i = values.length,\r\n                type = \"classic\",\r\n                from,\r\n                to,\r\n                dx,\r\n                refX,\r\n                attr,\r\n                w = 3,\r\n                h = 3,\r\n                t = 5;\r\n            while (i--) {\r\n                switch (values[i]) {\r\n                    case \"block\":\r\n                    case \"classic\":\r\n                    case \"oval\":\r\n                    case \"diamond\":\r\n                    case \"open\":\r\n                    case \"none\":\r\n                        type = values[i];\r\n                        break;\r\n                    case \"wide\": h = 5; break;\r\n                    case \"narrow\": h = 2; break;\r\n                    case \"long\": w = 5; break;\r\n                    case \"short\": w = 2; break;\r\n                }\r\n            }\r\n            if (type == \"open\") {\r\n                w += 2;\r\n                h += 2;\r\n                t += 2;\r\n                dx = 1;\r\n                refX = isEnd ? 4 : 1;\r\n                attr = {\r\n                    fill: \"none\",\r\n                    stroke: attrs.stroke\r\n                };\r\n            } else {\r\n                refX = dx = w / 2;\r\n                attr = {\r\n                    fill: attrs.stroke,\r\n                    stroke: \"none\"\r\n                };\r\n            }\r\n            if (o._.arrows) {\r\n                if (isEnd) {\r\n                    o._.arrows.endPath && markerCounter[o._.arrows.endPath]--;\r\n                    o._.arrows.endMarker && markerCounter[o._.arrows.endMarker]--;\r\n                } else {\r\n                    o._.arrows.startPath && markerCounter[o._.arrows.startPath]--;\r\n                    o._.arrows.startMarker && markerCounter[o._.arrows.startMarker]--;\r\n                }\r\n            } else {\r\n                o._.arrows = {};\r\n            }\r\n            if (type != \"none\") {\r\n                var pathId = \"raphael-marker-\" + type,\r\n                    markerId = \"raphael-marker-\" + se + type + w + h + \"-obj\" + o.id;\r\n                if (!R._g.doc.getElementById(pathId)) {\r\n                    p.defs.appendChild($($(\"path\"), {\r\n                        \"stroke-linecap\": \"round\",\r\n                        d: markers[type],\r\n                        id: pathId\r\n                    }));\r\n                    markerCounter[pathId] = 1;\r\n                } else {\r\n                    markerCounter[pathId]++;\r\n                }\r\n                var marker = R._g.doc.getElementById(markerId),\r\n                    use;\r\n                if (!marker) {\r\n                    marker = $($(\"marker\"), {\r\n                        id: markerId,\r\n                        markerHeight: h,\r\n                        markerWidth: w,\r\n                        orient: \"auto\",\r\n                        refX: refX,\r\n                        refY: h / 2\r\n                    });\r\n                    use = $($(\"use\"), {\r\n                        \"xlink:href\": \"#\" + pathId,\r\n                        transform: (isEnd ? \"rotate(180 \" + w / 2 + \" \" + h / 2 + \") \" : E) + \"scale(\" + w / t + \",\" + h / t + \")\",\r\n                        \"stroke-width\": (1 / ((w / t + h / t) / 2)).toFixed(4)\r\n                    });\r\n                    marker.appendChild(use);\r\n                    p.defs.appendChild(marker);\r\n                    markerCounter[markerId] = 1;\r\n                } else {\r\n                    markerCounter[markerId]++;\r\n                    use = marker.getElementsByTagName(\"use\")[0];\r\n                }\r\n                $(use, attr);\r\n                var delta = dx * (type != \"diamond\" && type != \"oval\");\r\n                if (isEnd) {\r\n                    from = o._.arrows.startdx * stroke || 0;\r\n                    to = R.getTotalLength(attrs.path) - delta * stroke;\r\n                } else {\r\n                    from = delta * stroke;\r\n                    to = R.getTotalLength(attrs.path) - (o._.arrows.enddx * stroke || 0);\r\n                }\r\n                attr = {};\r\n                attr[\"marker-\" + se] = \"url(#\" + markerId + \")\";\r\n                if (to || from) {\r\n                    attr.d = R.getSubpath(attrs.path, from, to);\r\n                }\r\n                $(node, attr);\r\n                o._.arrows[se + \"Path\"] = pathId;\r\n                o._.arrows[se + \"Marker\"] = markerId;\r\n                o._.arrows[se + \"dx\"] = delta;\r\n                o._.arrows[se + \"Type\"] = type;\r\n                o._.arrows[se + \"String\"] = value;\r\n            } else {\r\n                if (isEnd) {\r\n                    from = o._.arrows.startdx * stroke || 0;\r\n                    to = R.getTotalLength(attrs.path) - from;\r\n                } else {\r\n                    from = 0;\r\n                    to = R.getTotalLength(attrs.path) - (o._.arrows.enddx * stroke || 0);\r\n                }\r\n                o._.arrows[se + \"Path\"] && $(node, {d: R.getSubpath(attrs.path, from, to)});\r\n                delete o._.arrows[se + \"Path\"];\r\n                delete o._.arrows[se + \"Marker\"];\r\n                delete o._.arrows[se + \"dx\"];\r\n                delete o._.arrows[se + \"Type\"];\r\n                delete o._.arrows[se + \"String\"];\r\n            }\r\n            for (attr in markerCounter) if (markerCounter[has](attr) && !markerCounter[attr]) {\r\n                var item = R._g.doc.getElementById(attr);\r\n                item && item.parentNode.removeChild(item);\r\n            }\r\n        }\r\n    },\r\n    dasharray = {\r\n        \"-\": [3, 1],\r\n        \".\": [1, 1],\r\n        \"-.\": [3, 1, 1, 1],\r\n        \"-..\": [3, 1, 1, 1, 1, 1],\r\n        \". \": [1, 3],\r\n        \"- \": [4, 3],\r\n        \"--\": [8, 3],\r\n        \"- .\": [4, 3, 1, 3],\r\n        \"--.\": [8, 3, 1, 3],\r\n        \"--..\": [8, 3, 1, 3, 1, 3]\r\n    },\r\n    addDashes = function (o, value, params) {\r\n        value = dasharray[Str(value).toLowerCase()];\r\n        if (value) {\r\n            var width = o.attrs[\"stroke-width\"] || \"1\",\r\n                butt = {round: width, square: width, butt: 0}[o.attrs[\"stroke-linecap\"] || params[\"stroke-linecap\"]] || 0,\r\n                dashes = [],\r\n                i = value.length;\r\n            while (i--) {\r\n                dashes[i] = value[i] * width + ((i % 2) ? 1 : -1) * butt;\r\n            }\r\n            $(o.node, {\"stroke-dasharray\": dashes.join(\",\")});\r\n        }\r\n        else {\r\n          $(o.node, {\"stroke-dasharray\": \"none\"});\r\n        }\r\n    },\r\n    setFillAndStroke = function (o, params) {\r\n        var node = o.node,\r\n            attrs = o.attrs,\r\n            vis = node.style.visibility;\r\n        node.style.visibility = \"hidden\";\r\n        for (var att in params) {\r\n            if (params[has](att)) {\r\n                if (!R._availableAttrs[has](att)) {\r\n                    continue;\r\n                }\r\n                var value = params[att];\r\n                attrs[att] = value;\r\n                switch (att) {\r\n                    case \"blur\":\r\n                        o.blur(value);\r\n                        break;\r\n                    case \"title\":\r\n                        var title = node.getElementsByTagName(\"title\");\r\n\r\n                        // Use the existing <title>.\r\n                        if (title.length && (title = title[0])) {\r\n                          title.firstChild.nodeValue = value;\r\n                        } else {\r\n                          title = $(\"title\");\r\n                          var val = R._g.doc.createTextNode(value);\r\n                          title.appendChild(val);\r\n                          node.appendChild(title);\r\n                        }\r\n                        break;\r\n                    case \"href\":\r\n                    case \"target\":\r\n                        var pn = node.parentNode;\r\n                        if (pn.tagName.toLowerCase() != \"a\") {\r\n                            var hl = $(\"a\");\r\n                            pn.insertBefore(hl, node);\r\n                            hl.appendChild(node);\r\n                            pn = hl;\r\n                        }\r\n                        if (att == \"target\") {\r\n                            pn.setAttributeNS(xlink, \"show\", value == \"blank\" ? \"new\" : value);\r\n                        } else {\r\n                            pn.setAttributeNS(xlink, att, value);\r\n                        }\r\n                        break;\r\n                    case \"cursor\":\r\n                        node.style.cursor = value;\r\n                        break;\r\n                    case \"transform\":\r\n                        o.transform(value);\r\n                        break;\r\n                    case \"arrow-start\":\r\n                        addArrow(o, value);\r\n                        break;\r\n                    case \"arrow-end\":\r\n                        addArrow(o, value, 1);\r\n                        break;\r\n                    case \"clip-rect\":\r\n                        var rect = Str(value).split(separator);\r\n                        if (rect.length == 4) {\r\n                            o.clip && o.clip.parentNode.parentNode.removeChild(o.clip.parentNode);\r\n                            var el = $(\"clipPath\"),\r\n                                rc = $(\"rect\");\r\n                            el.id = R.createUUID();\r\n                            $(rc, {\r\n                                x: rect[0],\r\n                                y: rect[1],\r\n                                width: rect[2],\r\n                                height: rect[3]\r\n                            });\r\n                            el.appendChild(rc);\r\n                            o.paper.defs.appendChild(el);\r\n                            $(node, {\"clip-path\": \"url(#\" + el.id + \")\"});\r\n                            o.clip = rc;\r\n                        }\r\n                        if (!value) {\r\n                            var path = node.getAttribute(\"clip-path\");\r\n                            if (path) {\r\n                                var clip = R._g.doc.getElementById(path.replace(/(^url\\(#|\\)$)/g, E));\r\n                                clip && clip.parentNode.removeChild(clip);\r\n                                $(node, {\"clip-path\": E});\r\n                                delete o.clip;\r\n                            }\r\n                        }\r\n                    break;\r\n                    case \"path\":\r\n                        if (o.type == \"path\") {\r\n                            $(node, {d: value ? attrs.path = R._pathToAbsolute(value) : \"M0,0\"});\r\n                            o._.dirty = 1;\r\n                            if (o._.arrows) {\r\n                                \"startString\" in o._.arrows && addArrow(o, o._.arrows.startString);\r\n                                \"endString\" in o._.arrows && addArrow(o, o._.arrows.endString, 1);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"width\":\r\n                        node.setAttribute(att, value);\r\n                        o._.dirty = 1;\r\n                        if (attrs.fx) {\r\n                            att = \"x\";\r\n                            value = attrs.x;\r\n                        } else {\r\n                            break;\r\n                        }\r\n                    case \"x\":\r\n                        if (attrs.fx) {\r\n                            value = -attrs.x - (attrs.width || 0);\r\n                        }\r\n                    case \"rx\":\r\n                        if (att == \"rx\" && o.type == \"rect\") {\r\n                            break;\r\n                        }\r\n                    case \"cx\":\r\n                        node.setAttribute(att, value);\r\n                        o.pattern && updatePosition(o);\r\n                        o._.dirty = 1;\r\n                        break;\r\n                    case \"height\":\r\n                        node.setAttribute(att, value);\r\n                        o._.dirty = 1;\r\n                        if (attrs.fy) {\r\n                            att = \"y\";\r\n                            value = attrs.y;\r\n                        } else {\r\n                            break;\r\n                        }\r\n                    case \"y\":\r\n                        if (attrs.fy) {\r\n                            value = -attrs.y - (attrs.height || 0);\r\n                        }\r\n                    case \"ry\":\r\n                        if (att == \"ry\" && o.type == \"rect\") {\r\n                            break;\r\n                        }\r\n                    case \"cy\":\r\n                        node.setAttribute(att, value);\r\n                        o.pattern && updatePosition(o);\r\n                        o._.dirty = 1;\r\n                        break;\r\n                    case \"r\":\r\n                        if (o.type == \"rect\") {\r\n                            $(node, {rx: value, ry: value});\r\n                        } else {\r\n                            node.setAttribute(att, value);\r\n                        }\r\n                        o._.dirty = 1;\r\n                        break;\r\n                    case \"src\":\r\n                        if (o.type == \"image\") {\r\n                            node.setAttributeNS(xlink, \"href\", value);\r\n                        }\r\n                        break;\r\n                    case \"stroke-width\":\r\n                        if (o._.sx != 1 || o._.sy != 1) {\r\n                            value /= mmax(abs(o._.sx), abs(o._.sy)) || 1;\r\n                        }\r\n                        node.setAttribute(att, value);\r\n                        if (attrs[\"stroke-dasharray\"]) {\r\n                            addDashes(o, attrs[\"stroke-dasharray\"], params);\r\n                        }\r\n                        if (o._.arrows) {\r\n                            \"startString\" in o._.arrows && addArrow(o, o._.arrows.startString);\r\n                            \"endString\" in o._.arrows && addArrow(o, o._.arrows.endString, 1);\r\n                        }\r\n                        break;\r\n                    case \"stroke-dasharray\":\r\n                        addDashes(o, value, params);\r\n                        break;\r\n                    case \"fill\":\r\n                        var isURL = Str(value).match(R._ISURL);\r\n                        if (isURL) {\r\n                            el = $(\"pattern\");\r\n                            var ig = $(\"image\");\r\n                            el.id = R.createUUID();\r\n                            $(el, {x: 0, y: 0, patternUnits: \"userSpaceOnUse\", height: 1, width: 1});\r\n                            $(ig, {x: 0, y: 0, \"xlink:href\": isURL[1]});\r\n                            el.appendChild(ig);\r\n\r\n                            (function (el) {\r\n                                R._preload(isURL[1], function () {\r\n                                    var w = this.offsetWidth,\r\n                                        h = this.offsetHeight;\r\n                                    $(el, {width: w, height: h});\r\n                                    $(ig, {width: w, height: h});\r\n                                });\r\n                            })(el);\r\n                            o.paper.defs.appendChild(el);\r\n                            $(node, {fill: \"url(#\" + el.id + \")\"});\r\n                            o.pattern = el;\r\n                            o.pattern && updatePosition(o);\r\n                            break;\r\n                        }\r\n                        var clr = R.getRGB(value);\r\n                        if (!clr.error) {\r\n                            delete params.gradient;\r\n                            delete attrs.gradient;\r\n                            !R.is(attrs.opacity, \"undefined\") &&\r\n                                R.is(params.opacity, \"undefined\") &&\r\n                                $(node, {opacity: attrs.opacity});\r\n                            !R.is(attrs[\"fill-opacity\"], \"undefined\") &&\r\n                                R.is(params[\"fill-opacity\"], \"undefined\") &&\r\n                                $(node, {\"fill-opacity\": attrs[\"fill-opacity\"]});\r\n                        } else if ((o.type == \"circle\" || o.type == \"ellipse\" || Str(value).charAt() != \"r\") && addGradientFill(o, value)) {\r\n                            if (\"opacity\" in attrs || \"fill-opacity\" in attrs) {\r\n                                var gradient = R._g.doc.getElementById(node.getAttribute(\"fill\").replace(/^url\\(#|\\)$/g, E));\r\n                                if (gradient) {\r\n                                    var stops = gradient.getElementsByTagName(\"stop\");\r\n                                    $(stops[stops.length - 1], {\"stop-opacity\": (\"opacity\" in attrs ? attrs.opacity : 1) * (\"fill-opacity\" in attrs ? attrs[\"fill-opacity\"] : 1)});\r\n                                }\r\n                            }\r\n                            attrs.gradient = value;\r\n                            attrs.fill = \"none\";\r\n                            break;\r\n                        }\r\n                        clr[has](\"opacity\") && $(node, {\"fill-opacity\": clr.opacity > 1 ? clr.opacity / 100 : clr.opacity});\r\n                    case \"stroke\":\r\n                        clr = R.getRGB(value);\r\n                        node.setAttribute(att, clr.hex);\r\n                        att == \"stroke\" && clr[has](\"opacity\") && $(node, {\"stroke-opacity\": clr.opacity > 1 ? clr.opacity / 100 : clr.opacity});\r\n                        if (att == \"stroke\" && o._.arrows) {\r\n                            \"startString\" in o._.arrows && addArrow(o, o._.arrows.startString);\r\n                            \"endString\" in o._.arrows && addArrow(o, o._.arrows.endString, 1);\r\n                        }\r\n                        break;\r\n                    case \"gradient\":\r\n                        (o.type == \"circle\" || o.type == \"ellipse\" || Str(value).charAt() != \"r\") && addGradientFill(o, value);\r\n                        break;\r\n                    case \"opacity\":\r\n                        if (attrs.gradient && !attrs[has](\"stroke-opacity\")) {\r\n                            $(node, {\"stroke-opacity\": value > 1 ? value / 100 : value});\r\n                        }\r\n                        // fall\r\n                    case \"fill-opacity\":\r\n                        if (attrs.gradient) {\r\n                            gradient = R._g.doc.getElementById(node.getAttribute(\"fill\").replace(/^url\\(#|\\)$/g, E));\r\n                            if (gradient) {\r\n                                stops = gradient.getElementsByTagName(\"stop\");\r\n                                $(stops[stops.length - 1], {\"stop-opacity\": value});\r\n                            }\r\n                            break;\r\n                        }\r\n                    default:\r\n                        att == \"font-size\" && (value = toInt(value, 10) + \"px\");\r\n                        var cssrule = att.replace(/(\\-.)/g, function (w) {\r\n                            return w.substring(1).toUpperCase();\r\n                        });\r\n                        node.style[cssrule] = value;\r\n                        o._.dirty = 1;\r\n                        node.setAttribute(att, value);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        tuneText(o, params);\r\n        node.style.visibility = vis;\r\n    },\r\n    leading = 1.2,\r\n    tuneText = function (el, params) {\r\n        if (el.type != \"text\" || !(params[has](\"text\") || params[has](\"font\") || params[has](\"font-size\") || params[has](\"x\") || params[has](\"y\"))) {\r\n            return;\r\n        }\r\n        var a = el.attrs,\r\n            node = el.node,\r\n            fontSize = node.firstChild ? toInt(R._g.doc.defaultView.getComputedStyle(node.firstChild, E).getPropertyValue(\"font-size\"), 10) : 10;\r\n\r\n        if (params[has](\"text\")) {\r\n            a.text = params.text;\r\n            while (node.firstChild) {\r\n                node.removeChild(node.firstChild);\r\n            }\r\n            var texts = Str(params.text).split(\"\\n\"),\r\n                tspans = [],\r\n                tspan;\r\n            for (var i = 0, ii = texts.length; i < ii; i++) {\r\n                tspan = $(\"tspan\");\r\n                i && $(tspan, {dy: fontSize * leading, x: a.x});\r\n                tspan.appendChild(R._g.doc.createTextNode(texts[i]));\r\n                node.appendChild(tspan);\r\n                tspans[i] = tspan;\r\n            }\r\n        } else {\r\n            tspans = node.getElementsByTagName(\"tspan\");\r\n            for (i = 0, ii = tspans.length; i < ii; i++) if (i) {\r\n                $(tspans[i], {dy: fontSize * leading, x: a.x});\r\n            } else {\r\n                $(tspans[0], {dy: 0});\r\n            }\r\n        }\r\n        $(node, {x: a.x, y: a.y});\r\n        el._.dirty = 1;\r\n        var bb = el._getBBox(),\r\n            dif = a.y - (bb.y + bb.height / 2);\r\n        dif && R.is(dif, \"finite\") && $(tspans[0], {dy: dif});\r\n    },\r\n    getRealNode = function (node) {\r\n        if (node.parentNode && node.parentNode.tagName.toLowerCase() === \"a\") {\r\n            return node.parentNode;\r\n        } else {\r\n            return node;\r\n        }\r\n    },\r\n    Element = function (node, svg) {\r\n        var X = 0,\r\n            Y = 0;\r\n        /*\\\r\n         * Element.node\r\n         [ property (object) ]\r\n         **\r\n         * Gives you a reference to the DOM object, so you can assign event handlers or just mess around.\r\n         **\r\n         * Note: Don’t mess with it.\r\n         > Usage\r\n         | // draw a circle at coordinate 10,10 with radius of 10\r\n         | var c = paper.circle(10, 10, 10);\r\n         | c.node.onclick = function () {\r\n         |     c.attr(\"fill\", \"red\");\r\n         | };\r\n        \\*/\r\n        this[0] = this.node = node;\r\n        /*\\\r\n         * Element.raphael\r\n         [ property (object) ]\r\n         **\r\n         * Internal reference to @Raphael object. In case it is not available.\r\n         > Usage\r\n         | Raphael.el.red = function () {\r\n         |     var hsb = this.paper.raphael.rgb2hsb(this.attr(\"fill\"));\r\n         |     hsb.h = 1;\r\n         |     this.attr({fill: this.paper.raphael.hsb2rgb(hsb).hex});\r\n         | }\r\n        \\*/\r\n        node.raphael = true;\r\n        /*\\\r\n         * Element.id\r\n         [ property (number) ]\r\n         **\r\n         * Unique id of the element. Especially useful when you want to listen to events of the element,\r\n         * because all events are fired in format `<module>.<action>.<id>`. Also useful for @Paper.getById method.\r\n        \\*/\r\n        this.id = R._oid++;\r\n        node.raphaelid = this.id;\r\n        this.matrix = R.matrix();\r\n        this.realPath = null;\r\n        /*\\\r\n         * Element.paper\r\n         [ property (object) ]\r\n         **\r\n         * Internal reference to “paper” where object drawn. Mainly for use in plugins and element extensions.\r\n         > Usage\r\n         | Raphael.el.cross = function () {\r\n         |     this.attr({fill: \"red\"});\r\n         |     this.paper.path(\"M10,10L50,50M50,10L10,50\")\r\n         |         .attr({stroke: \"red\"});\r\n         | }\r\n        \\*/\r\n        this.paper = svg;\r\n        this.attrs = this.attrs || {};\r\n        this._ = {\r\n            transform: [],\r\n            sx: 1,\r\n            sy: 1,\r\n            deg: 0,\r\n            dx: 0,\r\n            dy: 0,\r\n            dirty: 1\r\n        };\r\n        !svg.bottom && (svg.bottom = this);\r\n        /*\\\r\n         * Element.prev\r\n         [ property (object) ]\r\n         **\r\n         * Reference to the previous element in the hierarchy.\r\n        \\*/\r\n        this.prev = svg.top;\r\n        svg.top && (svg.top.next = this);\r\n        svg.top = this;\r\n        /*\\\r\n         * Element.next\r\n         [ property (object) ]\r\n         **\r\n         * Reference to the next element in the hierarchy.\r\n        \\*/\r\n        this.next = null;\r\n    },\r\n    elproto = R.el;\r\n\r\n    Element.prototype = elproto;\r\n    elproto.constructor = Element;\r\n\r\n    R._engine.path = function (pathString, SVG) {\r\n        var el = $(\"path\");\r\n        SVG.canvas && SVG.canvas.appendChild(el);\r\n        var p = new Element(el, SVG);\r\n        p.type = \"path\";\r\n        setFillAndStroke(p, {\r\n            fill: \"none\",\r\n            stroke: \"#000\",\r\n            path: pathString\r\n        });\r\n        return p;\r\n    };\r\n    /*\\\r\n     * Element.rotate\r\n     [ method ]\r\n     **\r\n     * Deprecated! Use @Element.transform instead.\r\n     * Adds rotation by given angle around given point to the list of\r\n     * transformations of the element.\r\n     > Parameters\r\n     - deg (number) angle in degrees\r\n     - cx (number) #optional x coordinate of the centre of rotation\r\n     - cy (number) #optional y coordinate of the centre of rotation\r\n     * If cx & cy aren’t specified centre of the shape is used as a point of rotation.\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.rotate = function (deg, cx, cy) {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        deg = Str(deg).split(separator);\r\n        if (deg.length - 1) {\r\n            cx = toFloat(deg[1]);\r\n            cy = toFloat(deg[2]);\r\n        }\r\n        deg = toFloat(deg[0]);\r\n        (cy == null) && (cx = cy);\r\n        if (cx == null || cy == null) {\r\n            var bbox = this.getBBox(1);\r\n            cx = bbox.x + bbox.width / 2;\r\n            cy = bbox.y + bbox.height / 2;\r\n        }\r\n        this.transform(this._.transform.concat([[\"r\", deg, cx, cy]]));\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.scale\r\n     [ method ]\r\n     **\r\n     * Deprecated! Use @Element.transform instead.\r\n     * Adds scale by given amount relative to given point to the list of\r\n     * transformations of the element.\r\n     > Parameters\r\n     - sx (number) horisontal scale amount\r\n     - sy (number) vertical scale amount\r\n     - cx (number) #optional x coordinate of the centre of scale\r\n     - cy (number) #optional y coordinate of the centre of scale\r\n     * If cx & cy aren’t specified centre of the shape is used instead.\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.scale = function (sx, sy, cx, cy) {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        sx = Str(sx).split(separator);\r\n        if (sx.length - 1) {\r\n            sy = toFloat(sx[1]);\r\n            cx = toFloat(sx[2]);\r\n            cy = toFloat(sx[3]);\r\n        }\r\n        sx = toFloat(sx[0]);\r\n        (sy == null) && (sy = sx);\r\n        (cy == null) && (cx = cy);\r\n        if (cx == null || cy == null) {\r\n            var bbox = this.getBBox(1);\r\n        }\r\n        cx = cx == null ? bbox.x + bbox.width / 2 : cx;\r\n        cy = cy == null ? bbox.y + bbox.height / 2 : cy;\r\n        this.transform(this._.transform.concat([[\"s\", sx, sy, cx, cy]]));\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.translate\r\n     [ method ]\r\n     **\r\n     * Deprecated! Use @Element.transform instead.\r\n     * Adds translation by given amount to the list of transformations of the element.\r\n     > Parameters\r\n     - dx (number) horisontal shift\r\n     - dy (number) vertical shift\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.translate = function (dx, dy) {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        dx = Str(dx).split(separator);\r\n        if (dx.length - 1) {\r\n            dy = toFloat(dx[1]);\r\n        }\r\n        dx = toFloat(dx[0]) || 0;\r\n        dy = +dy || 0;\r\n        this.transform(this._.transform.concat([[\"t\", dx, dy]]));\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.transform\r\n     [ method ]\r\n     **\r\n     * Adds transformation to the element which is separate to other attributes,\r\n     * i.e. translation doesn’t change `x` or `y` of the rectange. The format\r\n     * of transformation string is similar to the path string syntax:\r\n     | \"t100,100r30,100,100s2,2,100,100r45s1.5\"\r\n     * Each letter is a command. There are four commands: `t` is for translate, `r` is for rotate, `s` is for\r\n     * scale and `m` is for matrix.\r\n     *\r\n     * There are also alternative “absolute” translation, rotation and scale: `T`, `R` and `S`. They will not take previous transformation into account. For example, `...T100,0` will always move element 100 px horisontally, while `...t100,0` could move it vertically if there is `r90` before. Just compare results of `r90t100,0` and `r90T100,0`.\r\n     *\r\n     * So, the example line above could be read like “translate by 100, 100; rotate 30° around 100, 100; scale twice around 100, 100;\r\n     * rotate 45° around centre; scale 1.5 times relative to centre”. As you can see rotate and scale commands have origin\r\n     * coordinates as optional parameters, the default is the centre point of the element.\r\n     * Matrix accepts six parameters.\r\n     > Usage\r\n     | var el = paper.rect(10, 20, 300, 200);\r\n     | // translate 100, 100, rotate 45°, translate -100, 0\r\n     | el.transform(\"t100,100r45t-100,0\");\r\n     | // if you want you can append or prepend transformations\r\n     | el.transform(\"...t50,50\");\r\n     | el.transform(\"s2...\");\r\n     | // or even wrap\r\n     | el.transform(\"t50,50...t-50-50\");\r\n     | // to reset transformation call method with empty string\r\n     | el.transform(\"\");\r\n     | // to get current value call it without parameters\r\n     | console.log(el.transform());\r\n     > Parameters\r\n     - tstr (string) #optional transformation string\r\n     * If tstr isn’t specified\r\n     = (string) current transformation string\r\n     * else\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.transform = function (tstr) {\r\n        var _ = this._;\r\n        if (tstr == null) {\r\n            return _.transform;\r\n        }\r\n        R._extractTransform(this, tstr);\r\n\r\n        this.clip && $(this.clip, {transform: this.matrix.invert()});\r\n        this.pattern && updatePosition(this);\r\n        this.node && $(this.node, {transform: this.matrix});\r\n\r\n        if (_.sx != 1 || _.sy != 1) {\r\n            var sw = this.attrs[has](\"stroke-width\") ? this.attrs[\"stroke-width\"] : 1;\r\n            this.attr({\"stroke-width\": sw});\r\n        }\r\n\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.hide\r\n     [ method ]\r\n     **\r\n     * Makes element invisible. See @Element.show.\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.hide = function () {\r\n        if(!this.removed) this.node.style.display = \"none\";\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.show\r\n     [ method ]\r\n     **\r\n     * Makes element visible. See @Element.hide.\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.show = function () {\r\n        if(!this.removed) this.node.style.display = \"\";\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.remove\r\n     [ method ]\r\n     **\r\n     * Removes element from the paper.\r\n    \\*/\r\n    elproto.remove = function () {\r\n        var node = getRealNode(this.node);\r\n        if (this.removed || !node.parentNode) {\r\n            return;\r\n        }\r\n        var paper = this.paper;\r\n        paper.__set__ && paper.__set__.exclude(this);\r\n        eve.unbind(\"raphael.*.*.\" + this.id);\r\n        if (this.gradient) {\r\n            paper.defs.removeChild(this.gradient);\r\n        }\r\n        R._tear(this, paper);\r\n\r\n        node.parentNode.removeChild(node);\r\n\r\n        // Remove custom data for element\r\n        this.removeData();\r\n\r\n        for (var i in this) {\r\n            this[i] = typeof this[i] == \"function\" ? R._removedFactory(i) : null;\r\n        }\r\n        this.removed = true;\r\n    };\r\n    elproto._getBBox = function () {\r\n        if (this.node.style.display == \"none\") {\r\n            this.show();\r\n            var hide = true;\r\n        }\r\n        var canvasHidden = false,\r\n            containerStyle;\r\n        if (this.paper.canvas.parentElement) {\r\n          containerStyle = this.paper.canvas.parentElement.style;\r\n        } //IE10+ can't find parentElement\r\n        else if (this.paper.canvas.parentNode) {\r\n          containerStyle = this.paper.canvas.parentNode.style;\r\n        }\r\n\r\n        if(containerStyle && containerStyle.display == \"none\") {\r\n          canvasHidden = true;\r\n          containerStyle.display = \"\";\r\n        }\r\n        var bbox = {};\r\n        try {\r\n            bbox = this.node.getBBox();\r\n        } catch(e) {\r\n            // Firefox 3.0.x, 25.0.1 (probably more versions affected) play badly here - possible fix\r\n            bbox = {\r\n                x: this.node.clientLeft,\r\n                y: this.node.clientTop,\r\n                width: this.node.clientWidth,\r\n                height: this.node.clientHeight\r\n            }\r\n        } finally {\r\n            bbox = bbox || {};\r\n            if(canvasHidden){\r\n              containerStyle.display = \"none\";\r\n            }\r\n        }\r\n        hide && this.hide();\r\n        return bbox;\r\n    };\r\n    /*\\\r\n     * Element.attr\r\n     [ method ]\r\n     **\r\n     * Sets the attributes of the element.\r\n     > Parameters\r\n     - attrName (string) attribute’s name\r\n     - value (string) value\r\n     * or\r\n     - params (object) object of name/value pairs\r\n     * or\r\n     - attrName (string) attribute’s name\r\n     * or\r\n     - attrNames (array) in this case method returns array of current values for given attribute names\r\n     = (object) @Element if attrsName & value or params are passed in.\r\n     = (...) value of the attribute if only attrsName is passed in.\r\n     = (array) array of values of the attribute if attrsNames is passed in.\r\n     = (object) object of attributes if nothing is passed in.\r\n     > Possible parameters\r\n     # <p>Please refer to the <a href=\"http://www.w3.org/TR/SVG/\" title=\"The W3C Recommendation for the SVG language describes these properties in detail.\">SVG specification</a> for an explanation of these parameters.</p>\r\n     o arrow-end (string) arrowhead on the end of the path. The format for string is `<type>[-<width>[-<length>]]`. Possible types: `classic`, `block`, `open`, `oval`, `diamond`, `none`, width: `wide`, `narrow`, `medium`, length: `long`, `short`, `midium`.\r\n     o clip-rect (string) comma or space separated values: x, y, width and height\r\n     o cursor (string) CSS type of the cursor\r\n     o cx (number) the x-axis coordinate of the center of the circle, or ellipse\r\n     o cy (number) the y-axis coordinate of the center of the circle, or ellipse\r\n     o fill (string) colour, gradient or image\r\n     o fill-opacity (number)\r\n     o font (string)\r\n     o font-family (string)\r\n     o font-size (number) font size in pixels\r\n     o font-weight (string)\r\n     o height (number)\r\n     o href (string) URL, if specified element behaves as hyperlink\r\n     o opacity (number)\r\n     o path (string) SVG path string format\r\n     o r (number) radius of the circle, ellipse or rounded corner on the rect\r\n     o rx (number) horisontal radius of the ellipse\r\n     o ry (number) vertical radius of the ellipse\r\n     o src (string) image URL, only works for @Element.image element\r\n     o stroke (string) stroke colour\r\n     o stroke-dasharray (string) [“”, “none”, “`-`”, “`.`”, “`-.`”, “`-..`”, “`. `”, “`- `”, “`--`”, “`- .`”, “`--.`”, “`--..`”]\r\n     o stroke-linecap (string) [“`butt`”, “`square`”, “`round`”]\r\n     o stroke-linejoin (string) [“`bevel`”, “`round`”, “`miter`”]\r\n     o stroke-miterlimit (number)\r\n     o stroke-opacity (number)\r\n     o stroke-width (number) stroke width in pixels, default is '1'\r\n     o target (string) used with href\r\n     o text (string) contents of the text element. Use `\\n` for multiline text\r\n     o text-anchor (string) [“`start`”, “`middle`”, “`end`”], default is “`middle`”\r\n     o title (string) will create tooltip with a given text\r\n     o transform (string) see @Element.transform\r\n     o width (number)\r\n     o x (number)\r\n     o y (number)\r\n     > Gradients\r\n     * Linear gradient format: “`‹angle›-‹colour›[-‹colour›[:‹offset›]]*-‹colour›`”, example: “`90-#fff-#000`” – 90°\r\n     * gradient from white to black or “`0-#fff-#f00:20-#000`” – 0° gradient from white via red (at 20%) to black.\r\n     *\r\n     * radial gradient: “`r[(‹fx›, ‹fy›)]‹colour›[-‹colour›[:‹offset›]]*-‹colour›`”, example: “`r#fff-#000`” –\r\n     * gradient from white to black or “`r(0.25, 0.75)#fff-#000`” – gradient from white to black with focus point\r\n     * at 0.25, 0.75. Focus point coordinates are in 0..1 range. Radial gradients can only be applied to circles and ellipses.\r\n     > Path String\r\n     # <p>Please refer to <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path’s data attribute’s format are described in the SVG specification.\">SVG documentation regarding path string</a>. Raphaël fully supports it.</p>\r\n     > Colour Parsing\r\n     # <ul>\r\n     #     <li>Colour name (“<code>red</code>”, “<code>green</code>”, “<code>cornflowerblue</code>”, etc)</li>\r\n     #     <li>#••• — shortened HTML colour: (“<code>#000</code>”, “<code>#fc0</code>”, etc)</li>\r\n     #     <li>#•••••• — full length HTML colour: (“<code>#000000</code>”, “<code>#bd2300</code>”)</li>\r\n     #     <li>rgb(•••, •••, •••) — red, green and blue channels’ values: (“<code>rgb(200,&nbsp;100,&nbsp;0)</code>”)</li>\r\n     #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (“<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>”)</li>\r\n     #     <li>rgba(•••, •••, •••, •••) — red, green and blue channels’ values: (“<code>rgba(200,&nbsp;100,&nbsp;0, .5)</code>”)</li>\r\n     #     <li>rgba(•••%, •••%, •••%, •••%) — same as above, but in %: (“<code>rgba(100%,&nbsp;175%,&nbsp;0%, 50%)</code>”)</li>\r\n     #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (“<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>”)</li>\r\n     #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\r\n     #     <li>hsba(•••, •••, •••, •••) — same as above, but with opacity</li>\r\n     #     <li>hsl(•••, •••, •••) — almost the same as hsb, see <a href=\"http://en.wikipedia.org/wiki/HSL_and_HSV\" title=\"HSL and HSV - Wikipedia, the free encyclopedia\">Wikipedia page</a></li>\r\n     #     <li>hsl(•••%, •••%, •••%) — same as above, but in %</li>\r\n     #     <li>hsla(•••, •••, •••, •••) — same as above, but with opacity</li>\r\n     #     <li>Optionally for hsb and hsl you could specify hue as a degree: “<code>hsl(240deg,&nbsp;1,&nbsp;.5)</code>” or, if you want to go fancy, “<code>hsl(240°,&nbsp;1,&nbsp;.5)</code>”</li>\r\n     # </ul>\r\n    \\*/\r\n    elproto.attr = function (name, value) {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        if (name == null) {\r\n            var res = {};\r\n            for (var a in this.attrs) if (this.attrs[has](a)) {\r\n                res[a] = this.attrs[a];\r\n            }\r\n            res.gradient && res.fill == \"none\" && (res.fill = res.gradient) && delete res.gradient;\r\n            res.transform = this._.transform;\r\n            return res;\r\n        }\r\n        if (value == null && R.is(name, \"string\")) {\r\n            if (name == \"fill\" && this.attrs.fill == \"none\" && this.attrs.gradient) {\r\n                return this.attrs.gradient;\r\n            }\r\n            if (name == \"transform\") {\r\n                return this._.transform;\r\n            }\r\n            var names = name.split(separator),\r\n                out = {};\r\n            for (var i = 0, ii = names.length; i < ii; i++) {\r\n                name = names[i];\r\n                if (name in this.attrs) {\r\n                    out[name] = this.attrs[name];\r\n                } else if (R.is(this.paper.customAttributes[name], \"function\")) {\r\n                    out[name] = this.paper.customAttributes[name].def;\r\n                } else {\r\n                    out[name] = R._availableAttrs[name];\r\n                }\r\n            }\r\n            return ii - 1 ? out : out[names[0]];\r\n        }\r\n        if (value == null && R.is(name, \"array\")) {\r\n            out = {};\r\n            for (i = 0, ii = name.length; i < ii; i++) {\r\n                out[name[i]] = this.attr(name[i]);\r\n            }\r\n            return out;\r\n        }\r\n        if (value != null) {\r\n            var params = {};\r\n            params[name] = value;\r\n        } else if (name != null && R.is(name, \"object\")) {\r\n            params = name;\r\n        }\r\n        for (var key in params) {\r\n            eve(\"raphael.attr.\" + key + \".\" + this.id, this, params[key]);\r\n        }\r\n        for (key in this.paper.customAttributes) if (this.paper.customAttributes[has](key) && params[has](key) && R.is(this.paper.customAttributes[key], \"function\")) {\r\n            var par = this.paper.customAttributes[key].apply(this, [].concat(params[key]));\r\n            this.attrs[key] = params[key];\r\n            for (var subkey in par) if (par[has](subkey)) {\r\n                params[subkey] = par[subkey];\r\n            }\r\n        }\r\n        setFillAndStroke(this, params);\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.toFront\r\n     [ method ]\r\n     **\r\n     * Moves the element so it is the closest to the viewer’s eyes, on top of other elements.\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.toFront = function () {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        var node = getRealNode(this.node);\r\n        node.parentNode.appendChild(node);\r\n        var svg = this.paper;\r\n        svg.top != this && R._tofront(this, svg);\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.toBack\r\n     [ method ]\r\n     **\r\n     * Moves the element so it is the furthest from the viewer’s eyes, behind other elements.\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.toBack = function () {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        var node = getRealNode(this.node);\r\n        var parentNode = node.parentNode;\r\n        parentNode.insertBefore(node, parentNode.firstChild);\r\n        R._toback(this, this.paper);\r\n        var svg = this.paper;\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.insertAfter\r\n     [ method ]\r\n     **\r\n     * Inserts current object after the given one.\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.insertAfter = function (element) {\r\n        if (this.removed || !element) {\r\n            return this;\r\n        }\r\n\r\n        var node = getRealNode(this.node);\r\n        var afterNode = getRealNode(element.node || element[element.length - 1].node);\r\n        if (afterNode.nextSibling) {\r\n            afterNode.parentNode.insertBefore(node, afterNode.nextSibling);\r\n        } else {\r\n            afterNode.parentNode.appendChild(node);\r\n        }\r\n        R._insertafter(this, element, this.paper);\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.insertBefore\r\n     [ method ]\r\n     **\r\n     * Inserts current object before the given one.\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.insertBefore = function (element) {\r\n        if (this.removed || !element) {\r\n            return this;\r\n        }\r\n\r\n        var node = getRealNode(this.node);\r\n        var beforeNode = getRealNode(element.node || element[0].node);\r\n        beforeNode.parentNode.insertBefore(node, beforeNode);\r\n        R._insertbefore(this, element, this.paper);\r\n        return this;\r\n    };\r\n    elproto.blur = function (size) {\r\n        // Experimental. No Safari support. Use it on your own risk.\r\n        var t = this;\r\n        if (+size !== 0) {\r\n            var fltr = $(\"filter\"),\r\n                blur = $(\"feGaussianBlur\");\r\n            t.attrs.blur = size;\r\n            fltr.id = R.createUUID();\r\n            $(blur, {stdDeviation: +size || 1.5});\r\n            fltr.appendChild(blur);\r\n            t.paper.defs.appendChild(fltr);\r\n            t._blur = fltr;\r\n            $(t.node, {filter: \"url(#\" + fltr.id + \")\"});\r\n        } else {\r\n            if (t._blur) {\r\n                t._blur.parentNode.removeChild(t._blur);\r\n                delete t._blur;\r\n                delete t.attrs.blur;\r\n            }\r\n            t.node.removeAttribute(\"filter\");\r\n        }\r\n        return t;\r\n    };\r\n    R._engine.circle = function (svg, x, y, r) {\r\n        var el = $(\"circle\");\r\n        svg.canvas && svg.canvas.appendChild(el);\r\n        var res = new Element(el, svg);\r\n        res.attrs = {cx: x, cy: y, r: r, fill: \"none\", stroke: \"#000\"};\r\n        res.type = \"circle\";\r\n        $(el, res.attrs);\r\n        return res;\r\n    };\r\n    R._engine.rect = function (svg, x, y, w, h, r) {\r\n        var el = $(\"rect\");\r\n        svg.canvas && svg.canvas.appendChild(el);\r\n        var res = new Element(el, svg);\r\n        res.attrs = {x: x, y: y, width: w, height: h, rx: r || 0, ry: r || 0, fill: \"none\", stroke: \"#000\"};\r\n        res.type = \"rect\";\r\n        $(el, res.attrs);\r\n        return res;\r\n    };\r\n    R._engine.ellipse = function (svg, x, y, rx, ry) {\r\n        var el = $(\"ellipse\");\r\n        svg.canvas && svg.canvas.appendChild(el);\r\n        var res = new Element(el, svg);\r\n        res.attrs = {cx: x, cy: y, rx: rx, ry: ry, fill: \"none\", stroke: \"#000\"};\r\n        res.type = \"ellipse\";\r\n        $(el, res.attrs);\r\n        return res;\r\n    };\r\n    R._engine.image = function (svg, src, x, y, w, h) {\r\n        var el = $(\"image\");\r\n        $(el, {x: x, y: y, width: w, height: h, preserveAspectRatio: \"none\"});\r\n        el.setAttributeNS(xlink, \"href\", src);\r\n        svg.canvas && svg.canvas.appendChild(el);\r\n        var res = new Element(el, svg);\r\n        res.attrs = {x: x, y: y, width: w, height: h, src: src};\r\n        res.type = \"image\";\r\n        return res;\r\n    };\r\n    R._engine.text = function (svg, x, y, text) {\r\n        var el = $(\"text\");\r\n        svg.canvas && svg.canvas.appendChild(el);\r\n        var res = new Element(el, svg);\r\n        res.attrs = {\r\n            x: x,\r\n            y: y,\r\n            \"text-anchor\": \"middle\",\r\n            text: text,\r\n            \"font-family\": R._availableAttrs[\"font-family\"],\r\n            \"font-size\": R._availableAttrs[\"font-size\"],\r\n            stroke: \"none\",\r\n            fill: \"#000\"\r\n        };\r\n        res.type = \"text\";\r\n        setFillAndStroke(res, res.attrs);\r\n        return res;\r\n    };\r\n    R._engine.setSize = function (width, height) {\r\n        this.width = width || this.width;\r\n        this.height = height || this.height;\r\n        this.canvas.setAttribute(\"width\", this.width);\r\n        this.canvas.setAttribute(\"height\", this.height);\r\n        if (this._viewBox) {\r\n            this.setViewBox.apply(this, this._viewBox);\r\n        }\r\n        return this;\r\n    };\r\n    R._engine.create = function () {\r\n        var con = R._getContainer.apply(0, arguments),\r\n            container = con && con.container,\r\n            x = con.x,\r\n            y = con.y,\r\n            width = con.width,\r\n            height = con.height;\r\n        if (!container) {\r\n            throw new Error(\"SVG container not found.\");\r\n        }\r\n        var cnvs = $(\"svg\"),\r\n            css = \"overflow:hidden;\",\r\n            isFloating;\r\n        x = x || 0;\r\n        y = y || 0;\r\n        width = width || 512;\r\n        height = height || 342;\r\n        $(cnvs, {\r\n            height: height,\r\n            version: 1.1,\r\n            width: width,\r\n            xmlns: \"http://www.w3.org/2000/svg\",\r\n            \"xmlns:xlink\": \"http://www.w3.org/1999/xlink\"\r\n        });\r\n        if (container == 1) {\r\n            cnvs.style.cssText = css + \"position:absolute;left:\" + x + \"px;top:\" + y + \"px\";\r\n            R._g.doc.body.appendChild(cnvs);\r\n            isFloating = 1;\r\n        } else {\r\n            cnvs.style.cssText = css + \"position:relative\";\r\n            if (container.firstChild) {\r\n                container.insertBefore(cnvs, container.firstChild);\r\n            } else {\r\n                container.appendChild(cnvs);\r\n            }\r\n        }\r\n        container = new R._Paper;\r\n        container.width = width;\r\n        container.height = height;\r\n        container.canvas = cnvs;\r\n        container.clear();\r\n        container._left = container._top = 0;\r\n        isFloating && (container.renderfix = function () {});\r\n        container.renderfix();\r\n        return container;\r\n    };\r\n    R._engine.setViewBox = function (x, y, w, h, fit) {\r\n        eve(\"raphael.setViewBox\", this, this._viewBox, [x, y, w, h, fit]);\r\n        var paperSize = this.getSize(),\r\n            size = mmax(w / paperSize.width, h / paperSize.height),\r\n            top = this.top,\r\n            aspectRatio = fit ? \"xMidYMid meet\" : \"xMinYMin\",\r\n            vb,\r\n            sw;\r\n        if (x == null) {\r\n            if (this._vbSize) {\r\n                size = 1;\r\n            }\r\n            delete this._vbSize;\r\n            vb = \"0 0 \" + this.width + S + this.height;\r\n        } else {\r\n            this._vbSize = size;\r\n            vb = x + S + y + S + w + S + h;\r\n        }\r\n        $(this.canvas, {\r\n            viewBox: vb,\r\n            preserveAspectRatio: aspectRatio\r\n        });\r\n        while (size && top) {\r\n            sw = \"stroke-width\" in top.attrs ? top.attrs[\"stroke-width\"] : 1;\r\n            top.attr({\"stroke-width\": sw});\r\n            top._.dirty = 1;\r\n            top._.dirtyT = 1;\r\n            top = top.prev;\r\n        }\r\n        this._viewBox = [x, y, w, h, !!fit];\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Paper.renderfix\r\n     [ method ]\r\n     **\r\n     * Fixes the issue of Firefox and IE9 regarding subpixel rendering. If paper is dependant\r\n     * on other elements after reflow it could shift half pixel which cause for lines to lost their crispness.\r\n     * This method fixes the issue.\r\n     **\r\n       Special thanks to Mariusz Nowak (http://www.medikoo.com/) for this method.\r\n    \\*/\r\n    R.prototype.renderfix = function () {\r\n        var cnvs = this.canvas,\r\n            s = cnvs.style,\r\n            pos;\r\n        try {\r\n            pos = cnvs.getScreenCTM() || cnvs.createSVGMatrix();\r\n        } catch (e) {\r\n            pos = cnvs.createSVGMatrix();\r\n        }\r\n        var left = -pos.e % 1,\r\n            top = -pos.f % 1;\r\n        if (left || top) {\r\n            if (left) {\r\n                this._left = (this._left + left) % 1;\r\n                s.left = this._left + \"px\";\r\n            }\r\n            if (top) {\r\n                this._top = (this._top + top) % 1;\r\n                s.top = this._top + \"px\";\r\n            }\r\n        }\r\n    };\r\n    /*\\\r\n     * Paper.clear\r\n     [ method ]\r\n     **\r\n     * Clears the paper, i.e. removes all the elements.\r\n    \\*/\r\n    R.prototype.clear = function () {\r\n        R.eve(\"raphael.clear\", this);\r\n        var c = this.canvas;\r\n        while (c.firstChild) {\r\n            c.removeChild(c.firstChild);\r\n        }\r\n        this.bottom = this.top = null;\r\n        (this.desc = $(\"desc\")).appendChild(R._g.doc.createTextNode(\"Created with Rapha\\xebl \" + R.version));\r\n        c.appendChild(this.desc);\r\n        c.appendChild(this.defs = $(\"defs\"));\r\n    };\r\n    /*\\\r\n     * Paper.remove\r\n     [ method ]\r\n     **\r\n     * Removes the paper from the DOM.\r\n    \\*/\r\n    R.prototype.remove = function () {\r\n        eve(\"raphael.remove\", this);\r\n        this.canvas.parentNode && this.canvas.parentNode.removeChild(this.canvas);\r\n        for (var i in this) {\r\n            this[i] = typeof this[i] == \"function\" ? R._removedFactory(i) : null;\r\n        }\r\n    };\r\n    var setproto = R.st;\r\n    for (var method in elproto) if (elproto[has](method) && !setproto[has](method)) {\r\n        setproto[method] = (function (methodname) {\r\n            return function () {\r\n                var arg = arguments;\r\n                return this.forEach(function (el) {\r\n                    el[methodname].apply(el, arg);\r\n                });\r\n            };\r\n        })(method);\r\n    }\r\n})();\r\n\r\n// ┌─────────────────────────────────────────────────────────────────────┐ \\\\\r\n// │ Raphaël - JavaScript Vector Library                                 │ \\\\\r\n// ├─────────────────────────────────────────────────────────────────────┤ \\\\\r\n// │ VML Module                                                          │ \\\\\r\n// ├─────────────────────────────────────────────────────────────────────┤ \\\\\r\n// │ Copyright (c) 2008-2011 Dmitry Baranovskiy (http://raphaeljs.com)   │ \\\\\r\n// │ Copyright (c) 2008-2011 Sencha Labs (http://sencha.com)             │ \\\\\r\n// │ Licensed under the MIT (http://raphaeljs.com/license.html) license. │ \\\\\r\n// └─────────────────────────────────────────────────────────────────────┘ \\\\\r\n\r\n(function(){\r\n    if (!R.vml) {\r\n        return;\r\n    }\r\n    var has = \"hasOwnProperty\",\r\n        Str = String,\r\n        toFloat = parseFloat,\r\n        math = Math,\r\n        round = math.round,\r\n        mmax = math.max,\r\n        mmin = math.min,\r\n        abs = math.abs,\r\n        fillString = \"fill\",\r\n        separator = /[, ]+/,\r\n        eve = R.eve,\r\n        ms = \" progid:DXImageTransform.Microsoft\",\r\n        S = \" \",\r\n        E = \"\",\r\n        map = {M: \"m\", L: \"l\", C: \"c\", Z: \"x\", m: \"t\", l: \"r\", c: \"v\", z: \"x\"},\r\n        bites = /([clmz]),?([^clmz]*)/gi,\r\n        blurregexp = / progid:\\S+Blur\\([^\\)]+\\)/g,\r\n        val = /-?[^,\\s-]+/g,\r\n        cssDot = \"position:absolute;left:0;top:0;width:1px;height:1px;behavior:url(#default#VML)\",\r\n        zoom = 21600,\r\n        pathTypes = {path: 1, rect: 1, image: 1},\r\n        ovalTypes = {circle: 1, ellipse: 1},\r\n        path2vml = function (path) {\r\n            var total =  /[ahqstv]/ig,\r\n                command = R._pathToAbsolute;\r\n            Str(path).match(total) && (command = R._path2curve);\r\n            total = /[clmz]/g;\r\n            if (command == R._pathToAbsolute && !Str(path).match(total)) {\r\n                var res = Str(path).replace(bites, function (all, command, args) {\r\n                    var vals = [],\r\n                        isMove = command.toLowerCase() == \"m\",\r\n                        res = map[command];\r\n                    args.replace(val, function (value) {\r\n                        if (isMove && vals.length == 2) {\r\n                            res += vals + map[command == \"m\" ? \"l\" : \"L\"];\r\n                            vals = [];\r\n                        }\r\n                        vals.push(round(value * zoom));\r\n                    });\r\n                    return res + vals;\r\n                });\r\n                return res;\r\n            }\r\n            var pa = command(path), p, r;\r\n            res = [];\r\n            for (var i = 0, ii = pa.length; i < ii; i++) {\r\n                p = pa[i];\r\n                r = pa[i][0].toLowerCase();\r\n                r == \"z\" && (r = \"x\");\r\n                for (var j = 1, jj = p.length; j < jj; j++) {\r\n                    r += round(p[j] * zoom) + (j != jj - 1 ? \",\" : E);\r\n                }\r\n                res.push(r);\r\n            }\r\n            return res.join(S);\r\n        },\r\n        compensation = function (deg, dx, dy) {\r\n            var m = R.matrix();\r\n            m.rotate(-deg, .5, .5);\r\n            return {\r\n                dx: m.x(dx, dy),\r\n                dy: m.y(dx, dy)\r\n            };\r\n        },\r\n        setCoords = function (p, sx, sy, dx, dy, deg) {\r\n            var _ = p._,\r\n                m = p.matrix,\r\n                fillpos = _.fillpos,\r\n                o = p.node,\r\n                s = o.style,\r\n                y = 1,\r\n                flip = \"\",\r\n                dxdy,\r\n                kx = zoom / sx,\r\n                ky = zoom / sy;\r\n            s.visibility = \"hidden\";\r\n            if (!sx || !sy) {\r\n                return;\r\n            }\r\n            o.coordsize = abs(kx) + S + abs(ky);\r\n            s.rotation = deg * (sx * sy < 0 ? -1 : 1);\r\n            if (deg) {\r\n                var c = compensation(deg, dx, dy);\r\n                dx = c.dx;\r\n                dy = c.dy;\r\n            }\r\n            sx < 0 && (flip += \"x\");\r\n            sy < 0 && (flip += \" y\") && (y = -1);\r\n            s.flip = flip;\r\n            o.coordorigin = (dx * -kx) + S + (dy * -ky);\r\n            if (fillpos || _.fillsize) {\r\n                var fill = o.getElementsByTagName(fillString);\r\n                fill = fill && fill[0];\r\n                o.removeChild(fill);\r\n                if (fillpos) {\r\n                    c = compensation(deg, m.x(fillpos[0], fillpos[1]), m.y(fillpos[0], fillpos[1]));\r\n                    fill.position = c.dx * y + S + c.dy * y;\r\n                }\r\n                if (_.fillsize) {\r\n                    fill.size = _.fillsize[0] * abs(sx) + S + _.fillsize[1] * abs(sy);\r\n                }\r\n                o.appendChild(fill);\r\n            }\r\n            s.visibility = \"visible\";\r\n        };\r\n    R.toString = function () {\r\n        return  \"Your browser doesn\\u2019t support SVG. Falling down to VML.\\nYou are running Rapha\\xebl \" + this.version;\r\n    };\r\n    var addArrow = function (o, value, isEnd) {\r\n        var values = Str(value).toLowerCase().split(\"-\"),\r\n            se = isEnd ? \"end\" : \"start\",\r\n            i = values.length,\r\n            type = \"classic\",\r\n            w = \"medium\",\r\n            h = \"medium\";\r\n        while (i--) {\r\n            switch (values[i]) {\r\n                case \"block\":\r\n                case \"classic\":\r\n                case \"oval\":\r\n                case \"diamond\":\r\n                case \"open\":\r\n                case \"none\":\r\n                    type = values[i];\r\n                    break;\r\n                case \"wide\":\r\n                case \"narrow\": h = values[i]; break;\r\n                case \"long\":\r\n                case \"short\": w = values[i]; break;\r\n            }\r\n        }\r\n        var stroke = o.node.getElementsByTagName(\"stroke\")[0];\r\n        stroke[se + \"arrow\"] = type;\r\n        stroke[se + \"arrowlength\"] = w;\r\n        stroke[se + \"arrowwidth\"] = h;\r\n    },\r\n    setFillAndStroke = function (o, params) {\r\n        // o.paper.canvas.style.display = \"none\";\r\n        o.attrs = o.attrs || {};\r\n        var node = o.node,\r\n            a = o.attrs,\r\n            s = node.style,\r\n            xy,\r\n            newpath = pathTypes[o.type] && (params.x != a.x || params.y != a.y || params.width != a.width || params.height != a.height || params.cx != a.cx || params.cy != a.cy || params.rx != a.rx || params.ry != a.ry || params.r != a.r),\r\n            isOval = ovalTypes[o.type] && (a.cx != params.cx || a.cy != params.cy || a.r != params.r || a.rx != params.rx || a.ry != params.ry),\r\n            res = o;\r\n\r\n\r\n        for (var par in params) if (params[has](par)) {\r\n            a[par] = params[par];\r\n        }\r\n        if (newpath) {\r\n            a.path = R._getPath[o.type](o);\r\n            o._.dirty = 1;\r\n        }\r\n        params.href && (node.href = params.href);\r\n        params.title && (node.title = params.title);\r\n        params.target && (node.target = params.target);\r\n        params.cursor && (s.cursor = params.cursor);\r\n        \"blur\" in params && o.blur(params.blur);\r\n        if (params.path && o.type == \"path\" || newpath) {\r\n            node.path = path2vml(~Str(a.path).toLowerCase().indexOf(\"r\") ? R._pathToAbsolute(a.path) : a.path);\r\n            o._.dirty = 1;\r\n            if (o.type == \"image\") {\r\n                o._.fillpos = [a.x, a.y];\r\n                o._.fillsize = [a.width, a.height];\r\n                setCoords(o, 1, 1, 0, 0, 0);\r\n            }\r\n        }\r\n        \"transform\" in params && o.transform(params.transform);\r\n        if (isOval) {\r\n            var cx = +a.cx,\r\n                cy = +a.cy,\r\n                rx = +a.rx || +a.r || 0,\r\n                ry = +a.ry || +a.r || 0;\r\n            node.path = R.format(\"ar{0},{1},{2},{3},{4},{1},{4},{1}x\", round((cx - rx) * zoom), round((cy - ry) * zoom), round((cx + rx) * zoom), round((cy + ry) * zoom), round(cx * zoom));\r\n            o._.dirty = 1;\r\n        }\r\n        if (\"clip-rect\" in params) {\r\n            var rect = Str(params[\"clip-rect\"]).split(separator);\r\n            if (rect.length == 4) {\r\n                rect[2] = +rect[2] + (+rect[0]);\r\n                rect[3] = +rect[3] + (+rect[1]);\r\n                var div = node.clipRect || R._g.doc.createElement(\"div\"),\r\n                    dstyle = div.style;\r\n                dstyle.clip = R.format(\"rect({1}px {2}px {3}px {0}px)\", rect);\r\n                if (!node.clipRect) {\r\n                    dstyle.position = \"absolute\";\r\n                    dstyle.top = 0;\r\n                    dstyle.left = 0;\r\n                    dstyle.width = o.paper.width + \"px\";\r\n                    dstyle.height = o.paper.height + \"px\";\r\n                    node.parentNode.insertBefore(div, node);\r\n                    div.appendChild(node);\r\n                    node.clipRect = div;\r\n                }\r\n            }\r\n            if (!params[\"clip-rect\"]) {\r\n                node.clipRect && (node.clipRect.style.clip = \"auto\");\r\n            }\r\n        }\r\n        if (o.textpath) {\r\n            var textpathStyle = o.textpath.style;\r\n            params.font && (textpathStyle.font = params.font);\r\n            params[\"font-family\"] && (textpathStyle.fontFamily = '\"' + params[\"font-family\"].split(\",\")[0].replace(/^['\"]+|['\"]+$/g, E) + '\"');\r\n            params[\"font-size\"] && (textpathStyle.fontSize = params[\"font-size\"]);\r\n            params[\"font-weight\"] && (textpathStyle.fontWeight = params[\"font-weight\"]);\r\n            params[\"font-style\"] && (textpathStyle.fontStyle = params[\"font-style\"]);\r\n        }\r\n        if (\"arrow-start\" in params) {\r\n            addArrow(res, params[\"arrow-start\"]);\r\n        }\r\n        if (\"arrow-end\" in params) {\r\n            addArrow(res, params[\"arrow-end\"], 1);\r\n        }\r\n        if (params.opacity != null || \r\n            params[\"stroke-width\"] != null ||\r\n            params.fill != null ||\r\n            params.src != null ||\r\n            params.stroke != null ||\r\n            params[\"stroke-width\"] != null ||\r\n            params[\"stroke-opacity\"] != null ||\r\n            params[\"fill-opacity\"] != null ||\r\n            params[\"stroke-dasharray\"] != null ||\r\n            params[\"stroke-miterlimit\"] != null ||\r\n            params[\"stroke-linejoin\"] != null ||\r\n            params[\"stroke-linecap\"] != null) {\r\n            var fill = node.getElementsByTagName(fillString),\r\n                newfill = false;\r\n            fill = fill && fill[0];\r\n            !fill && (newfill = fill = createNode(fillString));\r\n            if (o.type == \"image\" && params.src) {\r\n                fill.src = params.src;\r\n            }\r\n            params.fill && (fill.on = true);\r\n            if (fill.on == null || params.fill == \"none\" || params.fill === null) {\r\n                fill.on = false;\r\n            }\r\n            if (fill.on && params.fill) {\r\n                var isURL = Str(params.fill).match(R._ISURL);\r\n                if (isURL) {\r\n                    fill.parentNode == node && node.removeChild(fill);\r\n                    fill.rotate = true;\r\n                    fill.src = isURL[1];\r\n                    fill.type = \"tile\";\r\n                    var bbox = o.getBBox(1);\r\n                    fill.position = bbox.x + S + bbox.y;\r\n                    o._.fillpos = [bbox.x, bbox.y];\r\n\r\n                    R._preload(isURL[1], function () {\r\n                        o._.fillsize = [this.offsetWidth, this.offsetHeight];\r\n                    });\r\n                } else {\r\n                    fill.color = R.getRGB(params.fill).hex;\r\n                    fill.src = E;\r\n                    fill.type = \"solid\";\r\n                    if (R.getRGB(params.fill).error && (res.type in {circle: 1, ellipse: 1} || Str(params.fill).charAt() != \"r\") && addGradientFill(res, params.fill, fill)) {\r\n                        a.fill = \"none\";\r\n                        a.gradient = params.fill;\r\n                        fill.rotate = false;\r\n                    }\r\n                }\r\n            }\r\n            if (\"fill-opacity\" in params || \"opacity\" in params) {\r\n                var opacity = ((+a[\"fill-opacity\"] + 1 || 2) - 1) * ((+a.opacity + 1 || 2) - 1) * ((+R.getRGB(params.fill).o + 1 || 2) - 1);\r\n                opacity = mmin(mmax(opacity, 0), 1);\r\n                fill.opacity = opacity;\r\n                if (fill.src) {\r\n                    fill.color = \"none\";\r\n                }\r\n            }\r\n            node.appendChild(fill);\r\n            var stroke = (node.getElementsByTagName(\"stroke\") && node.getElementsByTagName(\"stroke\")[0]),\r\n            newstroke = false;\r\n            !stroke && (newstroke = stroke = createNode(\"stroke\"));\r\n            if ((params.stroke && params.stroke != \"none\") ||\r\n                params[\"stroke-width\"] ||\r\n                params[\"stroke-opacity\"] != null ||\r\n                params[\"stroke-dasharray\"] ||\r\n                params[\"stroke-miterlimit\"] ||\r\n                params[\"stroke-linejoin\"] ||\r\n                params[\"stroke-linecap\"]) {\r\n                stroke.on = true;\r\n            }\r\n            (params.stroke == \"none\" || params.stroke === null || stroke.on == null || params.stroke == 0 || params[\"stroke-width\"] == 0) && (stroke.on = false);\r\n            var strokeColor = R.getRGB(params.stroke);\r\n            stroke.on && params.stroke && (stroke.color = strokeColor.hex);\r\n            opacity = ((+a[\"stroke-opacity\"] + 1 || 2) - 1) * ((+a.opacity + 1 || 2) - 1) * ((+strokeColor.o + 1 || 2) - 1);\r\n            var width = (toFloat(params[\"stroke-width\"]) || 1) * .75;\r\n            opacity = mmin(mmax(opacity, 0), 1);\r\n            params[\"stroke-width\"] == null && (width = a[\"stroke-width\"]);\r\n            params[\"stroke-width\"] && (stroke.weight = width);\r\n            width && width < 1 && (opacity *= width) && (stroke.weight = 1);\r\n            stroke.opacity = opacity;\r\n        \r\n            params[\"stroke-linejoin\"] && (stroke.joinstyle = params[\"stroke-linejoin\"] || \"miter\");\r\n            stroke.miterlimit = params[\"stroke-miterlimit\"] || 8;\r\n            params[\"stroke-linecap\"] && (stroke.endcap = params[\"stroke-linecap\"] == \"butt\" ? \"flat\" : params[\"stroke-linecap\"] == \"square\" ? \"square\" : \"round\");\r\n            if (\"stroke-dasharray\" in params) {\r\n                var dasharray = {\r\n                    \"-\": \"shortdash\",\r\n                    \".\": \"shortdot\",\r\n                    \"-.\": \"shortdashdot\",\r\n                    \"-..\": \"shortdashdotdot\",\r\n                    \". \": \"dot\",\r\n                    \"- \": \"dash\",\r\n                    \"--\": \"longdash\",\r\n                    \"- .\": \"dashdot\",\r\n                    \"--.\": \"longdashdot\",\r\n                    \"--..\": \"longdashdotdot\"\r\n                };\r\n                stroke.dashstyle = dasharray[has](params[\"stroke-dasharray\"]) ? dasharray[params[\"stroke-dasharray\"]] : E;\r\n            }\r\n            newstroke && node.appendChild(stroke);\r\n        }\r\n        if (res.type == \"text\") {\r\n            res.paper.canvas.style.display = E;\r\n            var span = res.paper.span,\r\n                m = 100,\r\n                fontSize = a.font && a.font.match(/\\d+(?:\\.\\d*)?(?=px)/);\r\n            s = span.style;\r\n            a.font && (s.font = a.font);\r\n            a[\"font-family\"] && (s.fontFamily = a[\"font-family\"]);\r\n            a[\"font-weight\"] && (s.fontWeight = a[\"font-weight\"]);\r\n            a[\"font-style\"] && (s.fontStyle = a[\"font-style\"]);\r\n            fontSize = toFloat(a[\"font-size\"] || fontSize && fontSize[0]) || 10;\r\n            s.fontSize = fontSize * m + \"px\";\r\n            res.textpath.string && (span.innerHTML = Str(res.textpath.string).replace(/</g, \"&#60;\").replace(/&/g, \"&#38;\").replace(/\\n/g, \"<br>\"));\r\n            var brect = span.getBoundingClientRect();\r\n            res.W = a.w = (brect.right - brect.left) / m;\r\n            res.H = a.h = (brect.bottom - brect.top) / m;\r\n            // res.paper.canvas.style.display = \"none\";\r\n            res.X = a.x;\r\n            res.Y = a.y + res.H / 2;\r\n\r\n            (\"x\" in params || \"y\" in params) && (res.path.v = R.format(\"m{0},{1}l{2},{1}\", round(a.x * zoom), round(a.y * zoom), round(a.x * zoom) + 1));\r\n            var dirtyattrs = [\"x\", \"y\", \"text\", \"font\", \"font-family\", \"font-weight\", \"font-style\", \"font-size\"];\r\n            for (var d = 0, dd = dirtyattrs.length; d < dd; d++) if (dirtyattrs[d] in params) {\r\n                res._.dirty = 1;\r\n                break;\r\n            }\r\n        \r\n            // text-anchor emulation\r\n            switch (a[\"text-anchor\"]) {\r\n                case \"start\":\r\n                    res.textpath.style[\"v-text-align\"] = \"left\";\r\n                    res.bbx = res.W / 2;\r\n                break;\r\n                case \"end\":\r\n                    res.textpath.style[\"v-text-align\"] = \"right\";\r\n                    res.bbx = -res.W / 2;\r\n                break;\r\n                default:\r\n                    res.textpath.style[\"v-text-align\"] = \"center\";\r\n                    res.bbx = 0;\r\n                break;\r\n            }\r\n            res.textpath.style[\"v-text-kern\"] = true;\r\n        }\r\n        // res.paper.canvas.style.display = E;\r\n    },\r\n    addGradientFill = function (o, gradient, fill) {\r\n        o.attrs = o.attrs || {};\r\n        var attrs = o.attrs,\r\n            pow = Math.pow,\r\n            opacity,\r\n            oindex,\r\n            type = \"linear\",\r\n            fxfy = \".5 .5\";\r\n        o.attrs.gradient = gradient;\r\n        gradient = Str(gradient).replace(R._radial_gradient, function (all, fx, fy) {\r\n            type = \"radial\";\r\n            if (fx && fy) {\r\n                fx = toFloat(fx);\r\n                fy = toFloat(fy);\r\n                pow(fx - .5, 2) + pow(fy - .5, 2) > .25 && (fy = math.sqrt(.25 - pow(fx - .5, 2)) * ((fy > .5) * 2 - 1) + .5);\r\n                fxfy = fx + S + fy;\r\n            }\r\n            return E;\r\n        });\r\n        gradient = gradient.split(/\\s*\\-\\s*/);\r\n        if (type == \"linear\") {\r\n            var angle = gradient.shift();\r\n            angle = -toFloat(angle);\r\n            if (isNaN(angle)) {\r\n                return null;\r\n            }\r\n        }\r\n        var dots = R._parseDots(gradient);\r\n        if (!dots) {\r\n            return null;\r\n        }\r\n        o = o.shape || o.node;\r\n        if (dots.length) {\r\n            o.removeChild(fill);\r\n            fill.on = true;\r\n            fill.method = \"none\";\r\n            fill.color = dots[0].color;\r\n            fill.color2 = dots[dots.length - 1].color;\r\n            var clrs = [];\r\n            for (var i = 0, ii = dots.length; i < ii; i++) {\r\n                dots[i].offset && clrs.push(dots[i].offset + S + dots[i].color);\r\n            }\r\n            fill.colors = clrs.length ? clrs.join() : \"0% \" + fill.color;\r\n            if (type == \"radial\") {\r\n                fill.type = \"gradientTitle\";\r\n                fill.focus = \"100%\";\r\n                fill.focussize = \"0 0\";\r\n                fill.focusposition = fxfy;\r\n                fill.angle = 0;\r\n            } else {\r\n                // fill.rotate= true;\r\n                fill.type = \"gradient\";\r\n                fill.angle = (270 - angle) % 360;\r\n            }\r\n            o.appendChild(fill);\r\n        }\r\n        return 1;\r\n    },\r\n    Element = function (node, vml) {\r\n        this[0] = this.node = node;\r\n        node.raphael = true;\r\n        this.id = R._oid++;\r\n        node.raphaelid = this.id;\r\n        this.X = 0;\r\n        this.Y = 0;\r\n        this.attrs = {};\r\n        this.paper = vml;\r\n        this.matrix = R.matrix();\r\n        this._ = {\r\n            transform: [],\r\n            sx: 1,\r\n            sy: 1,\r\n            dx: 0,\r\n            dy: 0,\r\n            deg: 0,\r\n            dirty: 1,\r\n            dirtyT: 1\r\n        };\r\n        !vml.bottom && (vml.bottom = this);\r\n        this.prev = vml.top;\r\n        vml.top && (vml.top.next = this);\r\n        vml.top = this;\r\n        this.next = null;\r\n    };\r\n    var elproto = R.el;\r\n\r\n    Element.prototype = elproto;\r\n    elproto.constructor = Element;\r\n    elproto.transform = function (tstr) {\r\n        if (tstr == null) {\r\n            return this._.transform;\r\n        }\r\n        var vbs = this.paper._viewBoxShift,\r\n            vbt = vbs ? \"s\" + [vbs.scale, vbs.scale] + \"-1-1t\" + [vbs.dx, vbs.dy] : E,\r\n            oldt;\r\n        if (vbs) {\r\n            oldt = tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, this._.transform || E);\r\n        }\r\n        R._extractTransform(this, vbt + tstr);\r\n        var matrix = this.matrix.clone(),\r\n            skew = this.skew,\r\n            o = this.node,\r\n            split,\r\n            isGrad = ~Str(this.attrs.fill).indexOf(\"-\"),\r\n            isPatt = !Str(this.attrs.fill).indexOf(\"url(\");\r\n        matrix.translate(1, 1);\r\n        if (isPatt || isGrad || this.type == \"image\") {\r\n            skew.matrix = \"1 0 0 1\";\r\n            skew.offset = \"0 0\";\r\n            split = matrix.split();\r\n            if ((isGrad && split.noRotation) || !split.isSimple) {\r\n                o.style.filter = matrix.toFilter();\r\n                var bb = this.getBBox(),\r\n                    bbt = this.getBBox(1),\r\n                    dx = bb.x - bbt.x,\r\n                    dy = bb.y - bbt.y;\r\n                o.coordorigin = (dx * -zoom) + S + (dy * -zoom);\r\n                setCoords(this, 1, 1, dx, dy, 0);\r\n            } else {\r\n                o.style.filter = E;\r\n                setCoords(this, split.scalex, split.scaley, split.dx, split.dy, split.rotate);\r\n            }\r\n        } else {\r\n            o.style.filter = E;\r\n            skew.matrix = Str(matrix);\r\n            skew.offset = matrix.offset();\r\n        }\r\n        if (oldt !== null) { // empty string value is true as well\r\n            this._.transform = oldt;\r\n            R._extractTransform(this, oldt);\r\n        }\r\n        return this;\r\n    };\r\n    elproto.rotate = function (deg, cx, cy) {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        if (deg == null) {\r\n            return;\r\n        }\r\n        deg = Str(deg).split(separator);\r\n        if (deg.length - 1) {\r\n            cx = toFloat(deg[1]);\r\n            cy = toFloat(deg[2]);\r\n        }\r\n        deg = toFloat(deg[0]);\r\n        (cy == null) && (cx = cy);\r\n        if (cx == null || cy == null) {\r\n            var bbox = this.getBBox(1);\r\n            cx = bbox.x + bbox.width / 2;\r\n            cy = bbox.y + bbox.height / 2;\r\n        }\r\n        this._.dirtyT = 1;\r\n        this.transform(this._.transform.concat([[\"r\", deg, cx, cy]]));\r\n        return this;\r\n    };\r\n    elproto.translate = function (dx, dy) {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        dx = Str(dx).split(separator);\r\n        if (dx.length - 1) {\r\n            dy = toFloat(dx[1]);\r\n        }\r\n        dx = toFloat(dx[0]) || 0;\r\n        dy = +dy || 0;\r\n        if (this._.bbox) {\r\n            this._.bbox.x += dx;\r\n            this._.bbox.y += dy;\r\n        }\r\n        this.transform(this._.transform.concat([[\"t\", dx, dy]]));\r\n        return this;\r\n    };\r\n    elproto.scale = function (sx, sy, cx, cy) {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        sx = Str(sx).split(separator);\r\n        if (sx.length - 1) {\r\n            sy = toFloat(sx[1]);\r\n            cx = toFloat(sx[2]);\r\n            cy = toFloat(sx[3]);\r\n            isNaN(cx) && (cx = null);\r\n            isNaN(cy) && (cy = null);\r\n        }\r\n        sx = toFloat(sx[0]);\r\n        (sy == null) && (sy = sx);\r\n        (cy == null) && (cx = cy);\r\n        if (cx == null || cy == null) {\r\n            var bbox = this.getBBox(1);\r\n        }\r\n        cx = cx == null ? bbox.x + bbox.width / 2 : cx;\r\n        cy = cy == null ? bbox.y + bbox.height / 2 : cy;\r\n    \r\n        this.transform(this._.transform.concat([[\"s\", sx, sy, cx, cy]]));\r\n        this._.dirtyT = 1;\r\n        return this;\r\n    };\r\n    elproto.hide = function () {\r\n        !this.removed && (this.node.style.display = \"none\");\r\n        return this;\r\n    };\r\n    elproto.show = function () {\r\n        !this.removed && (this.node.style.display = E);\r\n        return this;\r\n    };\r\n    // Needed to fix the vml setViewBox issues\r\n    elproto.auxGetBBox = R.el.getBBox;\r\n    elproto.getBBox = function(){\r\n      var b = this.auxGetBBox();\r\n      if (this.paper && this.paper._viewBoxShift)\r\n      {\r\n        var c = {};\r\n        var z = 1/this.paper._viewBoxShift.scale;\r\n        c.x = b.x - this.paper._viewBoxShift.dx;\r\n        c.x *= z;\r\n        c.y = b.y - this.paper._viewBoxShift.dy;\r\n        c.y *= z;\r\n        c.width  = b.width  * z;\r\n        c.height = b.height * z;\r\n        c.x2 = c.x + c.width;\r\n        c.y2 = c.y + c.height;\r\n        return c;\r\n      }\r\n      return b;\r\n    };\r\n    elproto._getBBox = function () {\r\n        if (this.removed) {\r\n            return {};\r\n        }\r\n        return {\r\n            x: this.X + (this.bbx || 0) - this.W / 2,\r\n            y: this.Y - this.H,\r\n            width: this.W,\r\n            height: this.H\r\n        };\r\n    };\r\n    elproto.remove = function () {\r\n        if (this.removed || !this.node.parentNode) {\r\n            return;\r\n        }\r\n        this.paper.__set__ && this.paper.__set__.exclude(this);\r\n        R.eve.unbind(\"raphael.*.*.\" + this.id);\r\n        R._tear(this, this.paper);\r\n        this.node.parentNode.removeChild(this.node);\r\n        this.shape && this.shape.parentNode.removeChild(this.shape);\r\n        for (var i in this) {\r\n            this[i] = typeof this[i] == \"function\" ? R._removedFactory(i) : null;\r\n        }\r\n        this.removed = true;\r\n    };\r\n    elproto.attr = function (name, value) {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        if (name == null) {\r\n            var res = {};\r\n            for (var a in this.attrs) if (this.attrs[has](a)) {\r\n                res[a] = this.attrs[a];\r\n            }\r\n            res.gradient && res.fill == \"none\" && (res.fill = res.gradient) && delete res.gradient;\r\n            res.transform = this._.transform;\r\n            return res;\r\n        }\r\n        if (value == null && R.is(name, \"string\")) {\r\n            if (name == fillString && this.attrs.fill == \"none\" && this.attrs.gradient) {\r\n                return this.attrs.gradient;\r\n            }\r\n            var names = name.split(separator),\r\n                out = {};\r\n            for (var i = 0, ii = names.length; i < ii; i++) {\r\n                name = names[i];\r\n                if (name in this.attrs) {\r\n                    out[name] = this.attrs[name];\r\n                } else if (R.is(this.paper.customAttributes[name], \"function\")) {\r\n                    out[name] = this.paper.customAttributes[name].def;\r\n                } else {\r\n                    out[name] = R._availableAttrs[name];\r\n                }\r\n            }\r\n            return ii - 1 ? out : out[names[0]];\r\n        }\r\n        if (this.attrs && value == null && R.is(name, \"array\")) {\r\n            out = {};\r\n            for (i = 0, ii = name.length; i < ii; i++) {\r\n                out[name[i]] = this.attr(name[i]);\r\n            }\r\n            return out;\r\n        }\r\n        var params;\r\n        if (value != null) {\r\n            params = {};\r\n            params[name] = value;\r\n        }\r\n        value == null && R.is(name, \"object\") && (params = name);\r\n        for (var key in params) {\r\n            eve(\"raphael.attr.\" + key + \".\" + this.id, this, params[key]);\r\n        }\r\n        if (params) {\r\n            for (key in this.paper.customAttributes) if (this.paper.customAttributes[has](key) && params[has](key) && R.is(this.paper.customAttributes[key], \"function\")) {\r\n                var par = this.paper.customAttributes[key].apply(this, [].concat(params[key]));\r\n                this.attrs[key] = params[key];\r\n                for (var subkey in par) if (par[has](subkey)) {\r\n                    params[subkey] = par[subkey];\r\n                }\r\n            }\r\n            // this.paper.canvas.style.display = \"none\";\r\n            if (params.text && this.type == \"text\") {\r\n                this.textpath.string = params.text;\r\n            }\r\n            setFillAndStroke(this, params);\r\n            // this.paper.canvas.style.display = E;\r\n        }\r\n        return this;\r\n    };\r\n    elproto.toFront = function () {\r\n        !this.removed && this.node.parentNode.appendChild(this.node);\r\n        this.paper && this.paper.top != this && R._tofront(this, this.paper);\r\n        return this;\r\n    };\r\n    elproto.toBack = function () {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        if (this.node.parentNode.firstChild != this.node) {\r\n            this.node.parentNode.insertBefore(this.node, this.node.parentNode.firstChild);\r\n            R._toback(this, this.paper);\r\n        }\r\n        return this;\r\n    };\r\n    elproto.insertAfter = function (element) {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        if (element.constructor == R.st.constructor) {\r\n            element = element[element.length - 1];\r\n        }\r\n        if (element.node.nextSibling) {\r\n            element.node.parentNode.insertBefore(this.node, element.node.nextSibling);\r\n        } else {\r\n            element.node.parentNode.appendChild(this.node);\r\n        }\r\n        R._insertafter(this, element, this.paper);\r\n        return this;\r\n    };\r\n    elproto.insertBefore = function (element) {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        if (element.constructor == R.st.constructor) {\r\n            element = element[0];\r\n        }\r\n        element.node.parentNode.insertBefore(this.node, element.node);\r\n        R._insertbefore(this, element, this.paper);\r\n        return this;\r\n    };\r\n    elproto.blur = function (size) {\r\n        var s = this.node.runtimeStyle,\r\n            f = s.filter;\r\n        f = f.replace(blurregexp, E);\r\n        if (+size !== 0) {\r\n            this.attrs.blur = size;\r\n            s.filter = f + S + ms + \".Blur(pixelradius=\" + (+size || 1.5) + \")\";\r\n            s.margin = R.format(\"-{0}px 0 0 -{0}px\", round(+size || 1.5));\r\n        } else {\r\n            s.filter = f;\r\n            s.margin = 0;\r\n            delete this.attrs.blur;\r\n        }\r\n        return this;\r\n    };\r\n\r\n    R._engine.path = function (pathString, vml) {\r\n        var el = createNode(\"shape\");\r\n        el.style.cssText = cssDot;\r\n        el.coordsize = zoom + S + zoom;\r\n        el.coordorigin = vml.coordorigin;\r\n        var p = new Element(el, vml),\r\n            attr = {fill: \"none\", stroke: \"#000\"};\r\n        pathString && (attr.path = pathString);\r\n        p.type = \"path\";\r\n        p.path = [];\r\n        p.Path = E;\r\n        setFillAndStroke(p, attr);\r\n        vml.canvas.appendChild(el);\r\n        var skew = createNode(\"skew\");\r\n        skew.on = true;\r\n        el.appendChild(skew);\r\n        p.skew = skew;\r\n        p.transform(E);\r\n        return p;\r\n    };\r\n    R._engine.rect = function (vml, x, y, w, h, r) {\r\n        var path = R._rectPath(x, y, w, h, r),\r\n            res = vml.path(path),\r\n            a = res.attrs;\r\n        res.X = a.x = x;\r\n        res.Y = a.y = y;\r\n        res.W = a.width = w;\r\n        res.H = a.height = h;\r\n        a.r = r;\r\n        a.path = path;\r\n        res.type = \"rect\";\r\n        return res;\r\n    };\r\n    R._engine.ellipse = function (vml, x, y, rx, ry) {\r\n        var res = vml.path(),\r\n            a = res.attrs;\r\n        res.X = x - rx;\r\n        res.Y = y - ry;\r\n        res.W = rx * 2;\r\n        res.H = ry * 2;\r\n        res.type = \"ellipse\";\r\n        setFillAndStroke(res, {\r\n            cx: x,\r\n            cy: y,\r\n            rx: rx,\r\n            ry: ry\r\n        });\r\n        return res;\r\n    };\r\n    R._engine.circle = function (vml, x, y, r) {\r\n        var res = vml.path(),\r\n            a = res.attrs;\r\n        res.X = x - r;\r\n        res.Y = y - r;\r\n        res.W = res.H = r * 2;\r\n        res.type = \"circle\";\r\n        setFillAndStroke(res, {\r\n            cx: x,\r\n            cy: y,\r\n            r: r\r\n        });\r\n        return res;\r\n    };\r\n    R._engine.image = function (vml, src, x, y, w, h) {\r\n        var path = R._rectPath(x, y, w, h),\r\n            res = vml.path(path).attr({stroke: \"none\"}),\r\n            a = res.attrs,\r\n            node = res.node,\r\n            fill = node.getElementsByTagName(fillString)[0];\r\n        a.src = src;\r\n        res.X = a.x = x;\r\n        res.Y = a.y = y;\r\n        res.W = a.width = w;\r\n        res.H = a.height = h;\r\n        a.path = path;\r\n        res.type = \"image\";\r\n        fill.parentNode == node && node.removeChild(fill);\r\n        fill.rotate = true;\r\n        fill.src = src;\r\n        fill.type = \"tile\";\r\n        res._.fillpos = [x, y];\r\n        res._.fillsize = [w, h];\r\n        node.appendChild(fill);\r\n        setCoords(res, 1, 1, 0, 0, 0);\r\n        return res;\r\n    };\r\n    R._engine.text = function (vml, x, y, text) {\r\n        var el = createNode(\"shape\"),\r\n            path = createNode(\"path\"),\r\n            o = createNode(\"textpath\");\r\n        x = x || 0;\r\n        y = y || 0;\r\n        text = text || \"\";\r\n        path.v = R.format(\"m{0},{1}l{2},{1}\", round(x * zoom), round(y * zoom), round(x * zoom) + 1);\r\n        path.textpathok = true;\r\n        o.string = Str(text);\r\n        o.on = true;\r\n        el.style.cssText = cssDot;\r\n        el.coordsize = zoom + S + zoom;\r\n        el.coordorigin = \"0 0\";\r\n        var p = new Element(el, vml),\r\n            attr = {\r\n                fill: \"#000\",\r\n                stroke: \"none\",\r\n                font: R._availableAttrs.font,\r\n                text: text\r\n            };\r\n        p.shape = el;\r\n        p.path = path;\r\n        p.textpath = o;\r\n        p.type = \"text\";\r\n        p.attrs.text = Str(text);\r\n        p.attrs.x = x;\r\n        p.attrs.y = y;\r\n        p.attrs.w = 1;\r\n        p.attrs.h = 1;\r\n        setFillAndStroke(p, attr);\r\n        el.appendChild(o);\r\n        el.appendChild(path);\r\n        vml.canvas.appendChild(el);\r\n        var skew = createNode(\"skew\");\r\n        skew.on = true;\r\n        el.appendChild(skew);\r\n        p.skew = skew;\r\n        p.transform(E);\r\n        return p;\r\n    };\r\n    R._engine.setSize = function (width, height) {\r\n        var cs = this.canvas.style;\r\n        this.width = width;\r\n        this.height = height;\r\n        width == +width && (width += \"px\");\r\n        height == +height && (height += \"px\");\r\n        cs.width = width;\r\n        cs.height = height;\r\n        cs.clip = \"rect(0 \" + width + \" \" + height + \" 0)\";\r\n        if (this._viewBox) {\r\n            R._engine.setViewBox.apply(this, this._viewBox);\r\n        }\r\n        return this;\r\n    };\r\n    R._engine.setViewBox = function (x, y, w, h, fit) {\r\n        R.eve(\"raphael.setViewBox\", this, this._viewBox, [x, y, w, h, fit]);\r\n        var paperSize = this.getSize(),\r\n            width = paperSize.width,\r\n            height = paperSize.height,\r\n            H, W;\r\n        if (fit) {\r\n            H = height / h;\r\n            W = width / w;\r\n            if (w * H < width) {\r\n                x -= (width - w * H) / 2 / H;\r\n            }\r\n            if (h * W < height) {\r\n                y -= (height - h * W) / 2 / W;\r\n            }\r\n        }\r\n        this._viewBox = [x, y, w, h, !!fit];\r\n        this._viewBoxShift = {\r\n            dx: -x,\r\n            dy: -y,\r\n            scale: paperSize\r\n        };\r\n        this.forEach(function (el) {\r\n            el.transform(\"...\");\r\n        });\r\n        return this;\r\n    };\r\n    var createNode;\r\n    R._engine.initWin = function (win) {\r\n            var doc = win.document;\r\n            if (doc.styleSheets.length < 31) {\r\n                doc.createStyleSheet().addRule(\".rvml\", \"behavior:url(#default#VML)\");\r\n            } else {\r\n                // no more room, add to the existing one\r\n                // http://msdn.microsoft.com/en-us/library/ms531194%28VS.85%29.aspx\r\n                doc.styleSheets[0].addRule(\".rvml\", \"behavior:url(#default#VML)\");\r\n            }\r\n            try {\r\n                !doc.namespaces.rvml && doc.namespaces.add(\"rvml\", \"urn:schemas-microsoft-com:vml\");\r\n                createNode = function (tagName) {\r\n                    return doc.createElement('<rvml:' + tagName + ' class=\"rvml\">');\r\n                };\r\n            } catch (e) {\r\n                createNode = function (tagName) {\r\n                    return doc.createElement('<' + tagName + ' xmlns=\"urn:schemas-microsoft.com:vml\" class=\"rvml\">');\r\n                };\r\n            }\r\n        };\r\n    R._engine.initWin(R._g.win);\r\n    R._engine.create = function () {\r\n        var con = R._getContainer.apply(0, arguments),\r\n            container = con.container,\r\n            height = con.height,\r\n            s,\r\n            width = con.width,\r\n            x = con.x,\r\n            y = con.y;\r\n        if (!container) {\r\n            throw new Error(\"VML container not found.\");\r\n        }\r\n        var res = new R._Paper,\r\n            c = res.canvas = R._g.doc.createElement(\"div\"),\r\n            cs = c.style;\r\n        x = x || 0;\r\n        y = y || 0;\r\n        width = width || 512;\r\n        height = height || 342;\r\n        res.width = width;\r\n        res.height = height;\r\n        width == +width && (width += \"px\");\r\n        height == +height && (height += \"px\");\r\n        res.coordsize = zoom * 1e3 + S + zoom * 1e3;\r\n        res.coordorigin = \"0 0\";\r\n        res.span = R._g.doc.createElement(\"span\");\r\n        res.span.style.cssText = \"position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;\";\r\n        c.appendChild(res.span);\r\n        cs.cssText = R.format(\"top:0;left:0;width:{0};height:{1};display:inline-block;position:relative;clip:rect(0 {0} {1} 0);overflow:hidden\", width, height);\r\n        if (container == 1) {\r\n            R._g.doc.body.appendChild(c);\r\n            cs.left = x + \"px\";\r\n            cs.top = y + \"px\";\r\n            cs.position = \"absolute\";\r\n        } else {\r\n            if (container.firstChild) {\r\n                container.insertBefore(c, container.firstChild);\r\n            } else {\r\n                container.appendChild(c);\r\n            }\r\n        }\r\n        res.renderfix = function () {};\r\n        return res;\r\n    };\r\n    R.prototype.clear = function () {\r\n        R.eve(\"raphael.clear\", this);\r\n        this.canvas.innerHTML = E;\r\n        this.span = R._g.doc.createElement(\"span\");\r\n        this.span.style.cssText = \"position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;display:inline;\";\r\n        this.canvas.appendChild(this.span);\r\n        this.bottom = this.top = null;\r\n    };\r\n    R.prototype.remove = function () {\r\n        R.eve(\"raphael.remove\", this);\r\n        this.canvas.parentNode.removeChild(this.canvas);\r\n        for (var i in this) {\r\n            this[i] = typeof this[i] == \"function\" ? R._removedFactory(i) : null;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    var setproto = R.st;\r\n    for (var method in elproto) if (elproto[has](method) && !setproto[has](method)) {\r\n        setproto[method] = (function (methodname) {\r\n            return function () {\r\n                var arg = arguments;\r\n                return this.forEach(function (el) {\r\n                    el[methodname].apply(el, arg);\r\n                });\r\n            };\r\n        })(method);\r\n    }\r\n})();\r\n\r\n    // EXPOSE\r\n    // SVG and VML are appended just before the EXPOSE line\r\n    // Even with AMD, Raphael should be defined globally\r\n    oldRaphael.was ? (g.win.Raphael = R) : (Raphael = R);\r\n\r\n    if(typeof exports == \"object\"){\r\n        module.exports = R;\r\n    }\r\n    return R;\r\n}));","// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\r\n// \r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n// \r\n// http://www.apache.org/licenses/LICENSE-2.0\r\n// \r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// ┌────────────────────────────────────────────────────────────┐ \\\\\r\n// │ Eve 0.5.0 - JavaScript Events Library                      │ \\\\\r\n// ├────────────────────────────────────────────────────────────┤ \\\\\r\n// │ Author Dmitry Baranovskiy (http://dmitry.baranovskiy.com/) │ \\\\\r\n// └────────────────────────────────────────────────────────────┘ \\\\\r\n\r\n(function (glob) {\r\n    var version = \"0.5.0\",\r\n        has = \"hasOwnProperty\",\r\n        separator = /[\\.\\/]/,\r\n        comaseparator = /\\s*,\\s*/,\r\n        wildcard = \"*\",\r\n        fun = function () {},\r\n        numsort = function (a, b) {\r\n            return a - b;\r\n        },\r\n        current_event,\r\n        stop,\r\n        events = {n: {}},\r\n        firstDefined = function () {\r\n            for (var i = 0, ii = this.length; i < ii; i++) {\r\n                if (typeof this[i] != \"undefined\") {\r\n                    return this[i];\r\n                }\r\n            }\r\n        },\r\n        lastDefined = function () {\r\n            var i = this.length;\r\n            while (--i) {\r\n                if (typeof this[i] != \"undefined\") {\r\n                    return this[i];\r\n                }\r\n            }\r\n        },\r\n        objtos = Object.prototype.toString,\r\n        Str = String,\r\n        isArray = Array.isArray || function (ar) {\r\n            return ar instanceof Array || objtos.call(ar) == \"[object Array]\";\r\n        };\r\n    /*\\\r\n     * eve\r\n     [ method ]\r\n\r\n     * Fires event with given `name`, given scope and other parameters.\r\n\r\n     > Arguments\r\n\r\n     - name (string) name of the *event*, dot (`.`) or slash (`/`) separated\r\n     - scope (object) context for the event handlers\r\n     - varargs (...) the rest of arguments will be sent to event handlers\r\n\r\n     = (object) array of returned values from the listeners. Array has two methods `.firstDefined()` and `.lastDefined()` to get first or last not `undefined` value.\r\n    \\*/\r\n        eve = function (name, scope) {\r\n            var e = events,\r\n                oldstop = stop,\r\n                args = Array.prototype.slice.call(arguments, 2),\r\n                listeners = eve.listeners(name),\r\n                z = 0,\r\n                f = false,\r\n                l,\r\n                indexed = [],\r\n                queue = {},\r\n                out = [],\r\n                ce = current_event,\r\n                errors = [];\r\n            out.firstDefined = firstDefined;\r\n            out.lastDefined = lastDefined;\r\n            current_event = name;\r\n            stop = 0;\r\n            for (var i = 0, ii = listeners.length; i < ii; i++) if (\"zIndex\" in listeners[i]) {\r\n                indexed.push(listeners[i].zIndex);\r\n                if (listeners[i].zIndex < 0) {\r\n                    queue[listeners[i].zIndex] = listeners[i];\r\n                }\r\n            }\r\n            indexed.sort(numsort);\r\n            while (indexed[z] < 0) {\r\n                l = queue[indexed[z++]];\r\n                out.push(l.apply(scope, args));\r\n                if (stop) {\r\n                    stop = oldstop;\r\n                    return out;\r\n                }\r\n            }\r\n            for (i = 0; i < ii; i++) {\r\n                l = listeners[i];\r\n                if (\"zIndex\" in l) {\r\n                    if (l.zIndex == indexed[z]) {\r\n                        out.push(l.apply(scope, args));\r\n                        if (stop) {\r\n                            break;\r\n                        }\r\n                        do {\r\n                            z++;\r\n                            l = queue[indexed[z]];\r\n                            l && out.push(l.apply(scope, args));\r\n                            if (stop) {\r\n                                break;\r\n                            }\r\n                        } while (l)\r\n                    } else {\r\n                        queue[l.zIndex] = l;\r\n                    }\r\n                } else {\r\n                    out.push(l.apply(scope, args));\r\n                    if (stop) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            stop = oldstop;\r\n            current_event = ce;\r\n            return out;\r\n        };\r\n        // Undocumented. Debug only.\r\n        eve._events = events;\r\n    /*\\\r\n     * eve.listeners\r\n     [ method ]\r\n\r\n     * Internal method which gives you array of all event handlers that will be triggered by the given `name`.\r\n\r\n     > Arguments\r\n\r\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated\r\n\r\n     = (array) array of event handlers\r\n    \\*/\r\n    eve.listeners = function (name) {\r\n        var names = isArray(name) ? name : name.split(separator),\r\n            e = events,\r\n            item,\r\n            items,\r\n            k,\r\n            i,\r\n            ii,\r\n            j,\r\n            jj,\r\n            nes,\r\n            es = [e],\r\n            out = [];\r\n        for (i = 0, ii = names.length; i < ii; i++) {\r\n            nes = [];\r\n            for (j = 0, jj = es.length; j < jj; j++) {\r\n                e = es[j].n;\r\n                items = [e[names[i]], e[wildcard]];\r\n                k = 2;\r\n                while (k--) {\r\n                    item = items[k];\r\n                    if (item) {\r\n                        nes.push(item);\r\n                        out = out.concat(item.f || []);\r\n                    }\r\n                }\r\n            }\r\n            es = nes;\r\n        }\r\n        return out;\r\n    };\r\n    /*\\\r\n     * eve.separator\r\n     [ method ]\r\n\r\n     * If for some reasons you don’t like default separators (`.` or `/`) you can specify yours\r\n     * here. Be aware that if you pass a string longer than one character it will be treated as\r\n     * a list of characters.\r\n\r\n     - separator (string) new separator. Empty string resets to default: `.` or `/`.\r\n    \\*/\r\n    eve.separator = function (sep) {\r\n        if (sep) {\r\n            sep = Str(sep).replace(/(?=[\\.\\^\\]\\[\\-])/g, \"\\\\\");\r\n            sep = \"[\" + sep + \"]\";\r\n            separator = new RegExp(sep);\r\n        } else {\r\n            separator = /[\\.\\/]/;\r\n        }\r\n    };\r\n    /*\\\r\n     * eve.on\r\n     [ method ]\r\n     **\r\n     * Binds given event handler with a given name. You can use wildcards “`*`” for the names:\r\n     | eve.on(\"*.under.*\", f);\r\n     | eve(\"mouse.under.floor\"); // triggers f\r\n     * Use @eve to trigger the listener.\r\n     **\r\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\r\n     - f (function) event handler function\r\n     **\r\n     - name (array) if you don’t want to use separators, you can use array of strings\r\n     - f (function) event handler function\r\n     **\r\n     = (function) returned function accepts a single numeric parameter that represents z-index of the handler. It is an optional feature and only used when you need to ensure that some subset of handlers will be invoked in a given order, despite of the order of assignment. \r\n     > Example:\r\n     | eve.on(\"mouse\", eatIt)(2);\r\n     | eve.on(\"mouse\", scream);\r\n     | eve.on(\"mouse\", catchIt)(1);\r\n     * This will ensure that `catchIt` function will be called before `eatIt`.\r\n     *\r\n     * If you want to put your handler before non-indexed handlers, specify a negative value.\r\n     * Note: I assume most of the time you don’t need to worry about z-index, but it’s nice to have this feature “just in case”.\r\n    \\*/\r\n    eve.on = function (name, f) {\r\n        if (typeof f != \"function\") {\r\n            return function () {};\r\n        }\r\n        var names = isArray(name) ? (isArray(name[0]) ? name : [name]) : Str(name).split(comaseparator);\r\n        for (var i = 0, ii = names.length; i < ii; i++) {\r\n            (function (name) {\r\n                var names = isArray(name) ? name : Str(name).split(separator),\r\n                    e = events,\r\n                    exist;\r\n                for (var i = 0, ii = names.length; i < ii; i++) {\r\n                    e = e.n;\r\n                    e = e.hasOwnProperty(names[i]) && e[names[i]] || (e[names[i]] = {n: {}});\r\n                }\r\n                e.f = e.f || [];\r\n                for (i = 0, ii = e.f.length; i < ii; i++) if (e.f[i] == f) {\r\n                    exist = true;\r\n                    break;\r\n                }\r\n                !exist && e.f.push(f);\r\n            }(names[i]));\r\n        }\r\n        return function (zIndex) {\r\n            if (+zIndex == +zIndex) {\r\n                f.zIndex = +zIndex;\r\n            }\r\n        };\r\n    };\r\n    /*\\\r\n     * eve.f\r\n     [ method ]\r\n     **\r\n     * Returns function that will fire given event with optional arguments.\r\n     * Arguments that will be passed to the result function will be also\r\n     * concated to the list of final arguments.\r\n     | el.onclick = eve.f(\"click\", 1, 2);\r\n     | eve.on(\"click\", function (a, b, c) {\r\n     |     console.log(a, b, c); // 1, 2, [event object]\r\n     | });\r\n     > Arguments\r\n     - event (string) event name\r\n     - varargs (…) and any other arguments\r\n     = (function) possible event handler function\r\n    \\*/\r\n    eve.f = function (event) {\r\n        var attrs = [].slice.call(arguments, 1);\r\n        return function () {\r\n            eve.apply(null, [event, null].concat(attrs).concat([].slice.call(arguments, 0)));\r\n        };\r\n    };\r\n    /*\\\r\n     * eve.stop\r\n     [ method ]\r\n     **\r\n     * Is used inside an event handler to stop the event, preventing any subsequent listeners from firing.\r\n    \\*/\r\n    eve.stop = function () {\r\n        stop = 1;\r\n    };\r\n    /*\\\r\n     * eve.nt\r\n     [ method ]\r\n     **\r\n     * Could be used inside event handler to figure out actual name of the event.\r\n     **\r\n     > Arguments\r\n     **\r\n     - subname (string) #optional subname of the event\r\n     **\r\n     = (string) name of the event, if `subname` is not specified\r\n     * or\r\n     = (boolean) `true`, if current event’s name contains `subname`\r\n    \\*/\r\n    eve.nt = function (subname) {\r\n        var cur = isArray(current_event) ? current_event.join(\".\") : current_event;\r\n        if (subname) {\r\n            return new RegExp(\"(?:\\\\.|\\\\/|^)\" + subname + \"(?:\\\\.|\\\\/|$)\").test(cur);\r\n        }\r\n        return cur;\r\n    };\r\n    /*\\\r\n     * eve.nts\r\n     [ method ]\r\n     **\r\n     * Could be used inside event handler to figure out actual name of the event.\r\n     **\r\n     **\r\n     = (array) names of the event\r\n    \\*/\r\n    eve.nts = function () {\r\n        return isArray(current_event) ? current_event : current_event.split(separator);\r\n    };\r\n    /*\\\r\n     * eve.off\r\n     [ method ]\r\n     **\r\n     * Removes given function from the list of event listeners assigned to given name.\r\n     * If no arguments specified all the events will be cleared.\r\n     **\r\n     > Arguments\r\n     **\r\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\r\n     - f (function) event handler function\r\n    \\*/\r\n    /*\\\r\n     * eve.unbind\r\n     [ method ]\r\n     **\r\n     * See @eve.off\r\n    \\*/\r\n    eve.off = eve.unbind = function (name, f) {\r\n        if (!name) {\r\n            eve._events = events = {n: {}};\r\n            return;\r\n        }\r\n        var names = isArray(name) ? (isArray(name[0]) ? name : [name]) : Str(name).split(comaseparator);\r\n        if (names.length > 1) {\r\n            for (var i = 0, ii = names.length; i < ii; i++) {\r\n                eve.off(names[i], f);\r\n            }\r\n            return;\r\n        }\r\n        names = isArray(name) ? name : Str(name).split(separator);\r\n        var e,\r\n            key,\r\n            splice,\r\n            i, ii, j, jj,\r\n            cur = [events];\r\n        for (i = 0, ii = names.length; i < ii; i++) {\r\n            for (j = 0; j < cur.length; j += splice.length - 2) {\r\n                splice = [j, 1];\r\n                e = cur[j].n;\r\n                if (names[i] != wildcard) {\r\n                    if (e[names[i]]) {\r\n                        splice.push(e[names[i]]);\r\n                    }\r\n                } else {\r\n                    for (key in e) if (e[has](key)) {\r\n                        splice.push(e[key]);\r\n                    }\r\n                }\r\n                cur.splice.apply(cur, splice);\r\n            }\r\n        }\r\n        for (i = 0, ii = cur.length; i < ii; i++) {\r\n            e = cur[i];\r\n            while (e.n) {\r\n                if (f) {\r\n                    if (e.f) {\r\n                        for (j = 0, jj = e.f.length; j < jj; j++) if (e.f[j] == f) {\r\n                            e.f.splice(j, 1);\r\n                            break;\r\n                        }\r\n                        !e.f.length && delete e.f;\r\n                    }\r\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\r\n                        var funcs = e.n[key].f;\r\n                        for (j = 0, jj = funcs.length; j < jj; j++) if (funcs[j] == f) {\r\n                            funcs.splice(j, 1);\r\n                            break;\r\n                        }\r\n                        !funcs.length && delete e.n[key].f;\r\n                    }\r\n                } else {\r\n                    delete e.f;\r\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\r\n                        delete e.n[key].f;\r\n                    }\r\n                }\r\n                e = e.n;\r\n            }\r\n        }\r\n    };\r\n    /*\\\r\n     * eve.once\r\n     [ method ]\r\n     **\r\n     * Binds given event handler with a given name to only run once then unbind itself.\r\n     | eve.once(\"login\", f);\r\n     | eve(\"login\"); // triggers f\r\n     | eve(\"login\"); // no listeners\r\n     * Use @eve to trigger the listener.\r\n     **\r\n     > Arguments\r\n     **\r\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\r\n     - f (function) event handler function\r\n     **\r\n     = (function) same return function as @eve.on\r\n    \\*/\r\n    eve.once = function (name, f) {\r\n        var f2 = function () {\r\n            eve.off(name, f2);\r\n            return f.apply(this, arguments);\r\n        };\r\n        return eve.on(name, f2);\r\n    };\r\n    /*\\\r\n     * eve.version\r\n     [ property (string) ]\r\n     **\r\n     * Current version of the library.\r\n    \\*/\r\n    eve.version = version;\r\n    eve.toString = function () {\r\n        return \"You are running Eve \" + version;\r\n    };\r\n    (typeof module != \"undefined\" && module.exports) ? (module.exports = eve) : (typeof define === \"function\" && define.amd ? (define(\"eve\", [], function() { return eve; })) : (glob.eve = eve));\r\n})(this);","import { GuitarString, getGuitarStrings, IGuitarString,IFretInfo} from './GuitarString';\r\nimport {hasFromObject} from './Util/Decorators';\r\nimport {MusicNoteName} from './MusicNote';\r\n// import {Strum} from './Strum';\r\nimport {GuitarStrum} from './GuitarStrum';\r\n\r\n@hasFromObject\r\nexport class Guitar {\r\n    public strings: GuitarString[] = [];\r\n    public frets: number = 21;\r\n\r\n    public get stringCount(): number {\r\n        return this.strings.length;\r\n    }\r\n\r\n    constructor() { }\r\n\r\n\r\n    toObject(): IGuitar {\r\n        return {\r\n            strings: this.strings.map(x=> x.toObject()),\r\n            frets: this.frets\r\n        }\r\n    }\r\n\r\n\r\n    getFretsWithNote(noteName: MusicNoteName):IFretInfo[]{\r\n        let results :IFretInfo[] = [];\r\n        this.strings.forEach(str =>{\r\n            str.getFretsWithNote(noteName, this.frets).forEach(x=>{results.push(x);});\r\n        });\r\n        return results;\r\n    }\r\n\r\n    getStrum(positions:number[]):GuitarStrum{\r\n        if(positions.length !== this.stringCount) throw \"String Count does not match\";\r\n\r\n        return new GuitarStrum(this, positions);\r\n    }\r\n\r\n    static fromObject(obj: IGuitar): Guitar {\r\n        var g = new Guitar();\r\n        g.strings = obj.strings.map(x=> GuitarString.fromObject(x));\r\n        return g;\r\n    }\r\n\r\n    static GetNormalGuitar(): Guitar {\r\n        var g = new Guitar();\r\n        g.strings = getGuitarStrings([\"E4\", \"B3\", \"G3\", \"D3\", \"A2\", \"E2\"]);\r\n        return g;\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport interface IGuitar {\r\n    strings: IGuitarString[]\r\n}\r\n","import { MusicNoteName, IMusicNoteAdvanced, MusicNotes, getNote} from './MusicNote';\r\n\r\n/** a single string on the guitar. */\r\nexport class GuitarString {\r\n    private _index: number;\r\n    private _note: IMusicNoteAdvanced;\r\n\r\n    public get index(): number {\r\n        return this._index;\r\n    }\r\n\r\n    public get OpenNoteName(): string {\r\n        return this._note.fullName;\r\n    }\r\n\r\n    constructor(index: number, note: IMusicNoteAdvanced) {\r\n        this._index = index;\r\n        this._note = note;\r\n    }\r\n\r\n    public frequencyAtFret(fret: number) {\r\n        var id = fret + this._note.id;\r\n        return getNote(id).frequency;\r\n    }\r\n\r\n    public noteAtFret(fret: number): IMusicNoteAdvanced {\r\n        var id = fret + this._note.id;\r\n        return getNote(id);\r\n    }\r\n\r\n    public getFretsWithNote(noteName: MusicNoteName, fretCount: number): IFretInfo[] {\r\n        let results: IFretInfo[] = [];\r\n\r\n        for (let i = 0; i < fretCount; i++) {\r\n            let note = this.noteAtFret(i);\r\n            if (note.nameId == noteName) {\r\n                results.push({\r\n                    stringIndex: this.index,\r\n                    fretIndex: i,\r\n                    note: note\r\n                });\r\n            }\r\n        }\r\n\r\n        return results;\r\n    }\r\n\r\n    toObject(): IGuitarString {\r\n        return {\r\n            index: this.index,\r\n            note: this._note\r\n        };\r\n    }\r\n\r\n    static fromObject(obj: IGuitarString) {\r\n        return new GuitarString(obj.index, obj.note);\r\n    }\r\n}\r\n\r\nexport function getGuitarStrings(names: string[]): GuitarString[] {\r\n    var strings: GuitarString[] = [];\r\n    let idx = 0;\r\n    for (var name of names) {\r\n        let note = MusicNotes.filter(x=> x.fullName == name)[0];\r\n        if (note == undefined) debugger;\r\n        strings.push(new GuitarString(idx, note));\r\n        idx++;\r\n    }\r\n\r\n    return strings;\r\n}\r\n\r\nexport interface IGuitarString {\r\n    index: number;\r\n    note: IMusicNoteAdvanced;\r\n}\r\n\r\n\r\n/**\r\n * Info about a fret on a guitar\r\n */\r\nexport interface IFretInfo {\r\n    stringIndex: number;\r\n    fretIndex: number;\r\n    note: IMusicNoteAdvanced;\r\n}\r\n","import {Strum} from './Strum';\r\nimport {Guitar} from './Guitar';\r\n\r\nexport class GuitarStrum extends Strum {\r\n    private _gutiar: Guitar;\r\n\r\n\r\n    constructor(guitar: Guitar, positions: number[]) {\r\n        super(positions);\r\n        this._gutiar = guitar;\r\n    }\r\n\r\n    public get guitar(): Guitar {\r\n        return this._gutiar;\r\n    }\r\n\r\n\r\n    getFullNames(): string[] {\r\n        let g = this.guitar;\r\n        var a = [];\r\n        let idx = 0;\r\n        for (let p of this.positions) {\r\n            if (p != undefined) {\r\n                var s = g.strings[idx];\r\n                a.push(s.noteAtFret(p).fullName);\r\n            } else {\r\n                a.push('x');\r\n            }\r\n            idx++;\r\n        }\r\n        return a;\r\n    }\r\n\r\n    getNames():string[]{\r\n        let g = this.guitar;\r\n        var a = [];\r\n        let idx = 0;\r\n        for (let p of this.positions) {\r\n            if (p != undefined) {\r\n                var s = g.strings[idx];\r\n                a.push(s.noteAtFret(p).name);\r\n            } else {\r\n                a.push('x');\r\n            }\r\n            idx++;\r\n        }\r\n        return a;\r\n    }\r\n}\r\n","export * from './Guitar';\r\nexport * from './GuitarString'\r\nexport * from './MusicNote';\r\nexport * from './TabDocument';\r\nexport * from './Strum';\r\nexport * from './Scale';\r\nexport * from './GuitarStrum';\r\nexport * from './WellKnownChords';\r\n// export * from './UI/GuitarNeck';\r\n// export * from './UI/ChordView';\r\n// export * from './UI/TabEditor';\r\n// export * from './UI/TabView';\r\nexport * from './UI/UI';\r\n\r\n\r\nimport * as u from './Util/Array';\r\n\r\nexport module util {\r\n    export var orderBy = u.orderBy;\r\n}\r\n","\r\n// Interfaces\r\nexport interface IMusicNote {\r\n    nameId: MusicNoteName;\r\n    /** 0-8 */\r\n    octive: number;\r\n}\r\n\r\nexport interface IMusicNoteAdvanced extends IMusicNote {\r\n    /** ex: A4 */\r\n    fullName: string;\r\n    frequency: number;\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\nexport enum MusicNoteName {\r\n    C = 0,\r\n    C_,\r\n    D,\r\n    D_,\r\n    E,\r\n    F,\r\n    F_,\r\n    G,\r\n    G_,\r\n    A,\r\n    A_,\r\n    B //11\r\n}\r\nvar stringNoteNames = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\r\n\r\n/** 2^(1/12) */\r\nconst A = Math.pow(2, 1 / 12);\r\n\r\n\r\nexport var MusicNotes: IMusicNoteAdvanced[] = [];\r\n\r\n\r\nexport module noteMath {\r\n\r\n    export function getFrequencyOfNoteA4(x: number): number {\r\n        return 440 * Math.pow(A, x);\r\n    }\r\n\r\n\r\n    export function getNoteNameFromID(id: number): MusicNoteName {\r\n        return MusicNoteName[MusicNoteName[(id + (12 * 4) + 9 + 1) % 12]];\r\n    }\r\n\r\n\r\n    export function getNoteDiff(name: MusicNoteName, diff: number): MusicNoteName {\r\n        let note = MusicNotes.filter(x=>x.octive == 4 && x.nameId == name)[0];\r\n        let id = note.id + diff;\r\n        return getNoteNameFromID(id);\r\n    }\r\n\r\n    export function getOctiveFromId(id: number): number {\r\n        var x = id + (12 * 4) + 9 + 1;\r\n        return Math.floor(x / 12);\r\n    }\r\n    export function getNoteNameAsString(name:MusicNoteName){\r\n        return MusicNotes.filter(x=>x.nameId == name)[0].name;\r\n    }\r\n}\r\n\r\n//Build music notes array.\r\n\r\nfor (var noteID = -57; noteID <= 68; noteID++) {\r\n\r\n    var nn = noteMath. getNoteNameFromID(noteID);\r\n    var sname = stringNoteNames[nn];\r\n    let octive = noteMath.getOctiveFromId(noteID);\r\n    if (sname === undefined) debugger;\r\n    MusicNotes.push({\r\n        frequency: noteMath.getFrequencyOfNoteA4(noteID),\r\n        nameId: nn,\r\n        fullName: sname + octive.toString(),\r\n        id: noteID,\r\n        octive: octive,\r\n        name: sname\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\nexport function getNote(id: number) {\r\n    return MusicNotes.filter(x=> x.id == id)[0]\r\n}\r\n","import {MusicNoteName, noteMath} from './MusicNote';\r\nimport {Guitar} from './Guitar';\r\nimport {GuitarStrum} from './GuitarStrum';\r\nimport {GuitarString, IFretInfo} from './GuitarString';\r\nimport {findAllPossibleCombos} from './Util/Array';\r\n\r\n\r\nexport class Scale {\r\n\r\n    constructor(protected guitar: Guitar) {\r\n\r\n    }\r\n    protected findStrings(note: MusicNoteName) {\r\n        let g = this.guitar;\r\n        return g.getFretsWithNote(note);\r\n    }\r\n}\r\n\r\nexport class MajorScale extends Scale {\r\n    constructor(guitar: Guitar) {\r\n        super(guitar);\r\n    }\r\n\r\n    getFretInfo(note: MusicNoteName) {\r\n        var major = this.findStrings(note);\r\n        var p4 = this.findStrings(noteMath.getNoteDiff(note, 4));\r\n        var p7 = this.findStrings(noteMath.getNoteDiff(note, 7));\r\n        return {\r\n            major: major,\r\n            p4: p4,\r\n            p7: p7\r\n        };\r\n    }\r\n\r\n    getStrumList(note: MusicNoteName): GuitarStrum[] {\r\n        var results: GuitarStrum[] = [];\r\n        let info = this.getFretInfo(note);\r\n\r\n        let max = 12;\r\n        info.major = info.major.filter(x=> x.fretIndex <= max);\r\n        info.p4 = info.p4.filter(x=> x.fretIndex <= max);\r\n        info.p7 = info.p7.filter(x=> x.fretIndex <= max);\r\n\r\n        //2 major\r\n        let majors = findAllPossibleCombos(info.major, 2, 3);\r\n        let p7Combos = findAllPossibleCombos(info.p7, 1, 2);\r\n\r\n        majors.forEach(m=> {\r\n            let majorFic = new StrumBuilder();\r\n            if (majorFic.addArray(m) == false) return;\r\n\r\n\r\n            // info.p7.forEach(p7=> {\r\n            //     let fic = majorFic.clone();\r\n            //     if (fic.add(p7) == false) return;\r\n            //\r\n            //     info.p4.forEach(p4=> {\r\n            //         let f = fic.clone();\r\n            //         if (f.add(p4) == false) return;\r\n            //         results.push(f.getChord(this.guitar.stringCount));\r\n            //     });\r\n            // });\r\n\r\n            p7Combos.forEach(p7=> {\r\n                let fic = majorFic.clone();\r\n                if (fic.addArray(p7) == false) return;\r\n                info.p4.forEach(p4=> {\r\n                    let f = fic.clone();\r\n                    if (f.add(p4) == false) return;\r\n                    results.push(f.getChord(this.guitar));\r\n                });\r\n            });\r\n        });\r\n\r\n        //    console.log(majors);\r\n\r\n        return results;\r\n    }\r\n}\r\n\r\nexport class StrumBuilder {\r\n    private list: IFretInfo[] = [];\r\n\r\n    add(f: IFretInfo) {\r\n        if (this.isValid(f)) {\r\n            this.list.push(f);\r\n            return true;\r\n        }\r\n        else return false;\r\n    }\r\n\r\n    isValid(f: IFretInfo): boolean {\r\n        return this.list.filter(x=> x.stringIndex == f.stringIndex).length === 0;\r\n    }\r\n\r\n    clone(): StrumBuilder {\r\n        let ret = new StrumBuilder();\r\n        this.list.forEach(x=> ret.add(x));\r\n\r\n        return ret;\r\n    }\r\n    addArray(a: IFretInfo[]): boolean {\r\n        for (let fi of a) {\r\n            if (this.add(fi) == false) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    getChord(g:Guitar): GuitarStrum {\r\n        let u = undefined;\r\n        let stringCount = g.stringCount\r\n        let results = [];\r\n        for (var x = 0; x < stringCount; x++) {\r\n            let fi = this.list.filter(y=> y.stringIndex == x);\r\n            if (fi.length === 0) {\r\n                results.push(u);\r\n            } else {\r\n                results.push(fi[0].fretIndex);\r\n            }\r\n\r\n        }\r\n\r\n        return new GuitarStrum(g,results);\r\n    }\r\n}\r\n","import {Guitar} from './Guitar';\r\n\r\n\r\n/**\r\n * Base Strum Class.\r\n * @abstract\r\n */\r\nexport class Strum {\r\n    get stringCount(): number { return this.positions.length; }\r\n    get maxFret(): number {\r\n        return Math.max(...this.positions.filter(x=> x !== undefined));\r\n    }\r\n    get minFret(): number {\r\n        return Math.min(...this.positions.filter(x=> x !== undefined && x !== 0));\r\n    }\r\n\r\n    get stringsUsed(): number {\r\n        return this.positions.filter(x=> x !== undefined).length;\r\n    }\r\n\r\n    get maxFretDistence(): number {\r\n        return this.maxFret - this.minFret;\r\n    }\r\n\r\n    get firstUsedStringIndex(): number {\r\n        let idx = 0;\r\n        let result = null;\r\n        this.positions.forEach(x=> {\r\n            if (result !== null) return;\r\n            if (x !== undefined) {\r\n                result = idx;\r\n            }\r\n            idx++;\r\n        });\r\n        return result;\r\n    }\r\n\r\n    get lastUsedStringIndex(): number {\r\n        let result = null;\r\n\r\n        for (let i = this.stringCount - 1; i >= 0; i--) {\r\n            if (this.positions[i] !== undefined) return i;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    get positions(): number[] {\r\n        return this._positions;\r\n    }\r\n    private _positions: number[];\r\n    constructor(positions: number[]) {\r\n        this._positions = positions;\r\n    }\r\n\r\n    average(g: Guitar): number {\r\n        var a = [];\r\n        let idx = 0;\r\n        for (let p of this.positions) {\r\n            if (p != undefined) {\r\n                var s = g.strings[idx];\r\n                a.push(s.frequencyAtFret(p));\r\n            }\r\n            idx++;\r\n        }\r\n        return getAverage(a);\r\n    }\r\n\r\n\r\n\r\n    get skipCount(): number {\r\n        let ret = 0;\r\n        for (let i = this.firstUsedStringIndex; i <= this.lastUsedStringIndex; i++) {\r\n            if (this.positions[i] === undefined) ret++;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    rate(): number {\r\n        let ret = 100;\r\n\r\n        //too far appart.\r\n        if (this.maxFretDistence > 5) ret -= 1000;\r\n\r\n        //all at end of neck\r\n        if (this.maxFret < 4) ret += 100;\r\n\r\n\r\n        //Less strings is easier.\r\n        ret += (this.stringCount - this.stringsUsed) * 5;\r\n\r\n        //bonus for open strings\r\n        ret += this.positions.filter(x=> x == 0).length;\r\n\r\n        let skipCount = this.skipCount;\r\n\r\n        ret -= Math.pow(skipCount, 4) * 15;\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * @deprecated\r\n     */\r\n    static New(fretPositions: number[]) {\r\n        var s = new Strum(fretPositions);\r\n        return s;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction getAverage(arry: number[]): number {\r\n    var sum = 0, count = 0;\r\n    sum = arry.reduce(function(previousValue, currentValue, index, array) {\r\n        if (isFinite(currentValue)) {\r\n            count++;\r\n            return previousValue + currentValue;\r\n        }\r\n        return previousValue;\r\n    }, sum);\r\n    return count ? sum / count : 0;\r\n}\r\n","import {Guitar, IGuitar} from './Guitar';\nimport {Strum} from './Strum';\nimport {GuitarString} from './GuitarString';\nimport {IMusicNote, IMusicNoteAdvanced, MusicNoteName, MusicNotes} from './MusicNote';\nimport {LinkedList} from './Util/Collections';\nimport {} from './Util/SimpleEvent';\n\nexport enum TabPartType {\n    Strum\n}\n\n\nexport class TabDocument {\n\n\n    parts: LinkedList<TabPart> = new LinkedList<TabPart>();\n    guitar: Guitar;\n\n    get partCount() {\n        return this.parts.count;\n    }\n\n    constructor(g: Guitar) {\n        this.guitar = g;\n    }\n\n    addStrum(s: Strum, index?: number) {\n        if (s.stringCount != this.guitar.strings.length)\n            return;\n        var ts = new TabStrum(s.positions);\n        this.parts.add(ts, index);\n    }\n\n    addPart(part: TabPart) {\n        this.parts.add(part);\n    }\n\n    toObject(): ITabDocument {\n        return {\n            gutar: this.guitar.toObject(),\n            parts: this.parts.toArray().map(x=> x.toObject())\n        }\n    }\n\n    static fromObject(obj: ITabDocument) {\n        let td = new TabDocument(Guitar.fromObject(obj.gutar));\n        obj.parts.forEach(x=> {\n            switch (x.type) {\n                case TabPartType.Strum:\n                    let strum = <ITabStrum> x;\n                    td.addPart(TabStrum.fromObject(strum));\n            }\n        });\n\n        return td;\n    }\n}\n\nexport class TabStrum extends Strum implements TabPart {\n\n    get type() {\n        return TabPartType.Strum;\n    }\n\n    toObject(): ITabStrum {\n        return {\n            type: TabPartType.Strum,\n            positions: this.positions\n        }\n    }\n\n    static fromObject(obj: ITabStrum): TabStrum {\n        var ts = new TabStrum(obj.positions);\n        return ts;\n    }\n}\n\nexport interface TabPart {\n    type: TabPartType;\n    toObject(): ITabPart;\n}\n\nexport interface ITabPart {\n    type: TabPartType;\n}\n\nexport interface ITabStrum extends ITabPart {\n    positions: number[];\n}\n\nexport interface ITabDocument {\n    gutar: IGuitar;\n    parts: ITabPart[];\n}\n","/// <reference path=\"../../typings/raphael/raphael\" />\r\n\r\nimport * as R from \"Raphael\";\r\n\r\n\r\nexport class BaseUI {\r\n    protected draw: RaphaelPaper;\r\n    protected element: HTMLElement;\r\n\r\n\r\n    constructor(ele: HTMLElement = null) {\r\n        if (ele === null)\r\n            ele = document.createElement('div');\r\n\r\n        //ele.tabIndex = 0; //this allows keyboard events\r\n        this.element = ele;\r\n    }\r\n    public appendTo(ele: HTMLElement) {\r\n        ele.appendChild(this.element);\r\n    }\r\n}\r\n\r\n\r\nexport function pathString(mx, my, lx, ly): string {\r\n    return `M${mx},${my} L${lx},${ly}`;\r\n}\r\n\r\nexport function repeat(times: number, fn: (idx: number) => void) {\r\n    for (let x = 0; x < times; x++) {\r\n        fn(x);\r\n    }\r\n}\r\n","/// <reference path=\"../../typings/raphael/raphael\" />\r\n\r\nimport * as R from \"Raphael\";\r\nimport { Guitar } from \"../Guitar\";\r\nimport {BaseUI, pathString, repeat} from './BaseUI';\r\nimport {GuitarStrum} from '../GuitarStrum';\r\n\r\n\r\nexport interface IChordViewSize {\r\n    stringSeperation: number;\r\n    fretSeperation: number;\r\n    circleRadius: number;\r\n}\r\n\r\nexport class ChordView extends BaseUI {\r\n\r\n    public static get DefaultSize(): IChordViewSize {\r\n        return {\r\n            stringSeperation: 8,\r\n            fretSeperation: 10,\r\n            circleRadius: 3\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @param  {number}            x [description]\r\n     * @param  {IChordViewSize} s defaults to the chord view.\r\n     * @return {IChordViewSize}      [description]\r\n     */\r\n    static scaleSize(x: number, s: IChordViewSize = ChordView.DefaultSize): IChordViewSize {\r\n        s.circleRadius *= x;\r\n        s.fretSeperation *= x;\r\n        s.stringSeperation *= x;\r\n\r\n        return s;\r\n    }\r\n\r\n    private _showLetters: boolean = false;\r\n\r\n    private _size: IChordViewSize; // = ChordView.DefaultSize;\r\n\r\n    private get stringCount(): number {\r\n        return this.strum.positions.length;\r\n    }\r\n\r\n    private get fretCount(): number {\r\n        let r = Math.max(5, this.strum.maxFret);\r\n        //    console.log(r);\r\n        return r + 1 /* open fret */;\r\n    }\r\n\r\n    constructor(private strum: GuitarStrum, ele: HTMLElement = null, size: IChordViewSize = ChordView.DefaultSize) {\r\n        super(ele);\r\n        this._size = size;\r\n        this.draw = Raphael(this.element, 1, 1);\r\n\r\n        this._drawParts();\r\n    }\r\n\r\n    private _drawParts() {\r\n\r\n        let d = this.draw;\r\n        let ps = [];\r\n        this._drawStrings(ps);\r\n        this._drawFrets(ps);\r\n        d.path(ps.join(' '));\r\n\r\n        this._drawFingerPositions();\r\n        this._drawLetters();\r\n\r\n        //Sizes SVG from 1x1 to correct size based on size data\r\n        this._resize();\r\n    }\r\n\r\n    private _resize() {\r\n        let s = this.lastStringX() + this._size.stringSeperation\r\n        let f = this.lastFretY() + this._size.fretSeperation;\r\n        if (this._showLetters) {\r\n            f += this._size.fretSeperation;\r\n        }\r\n        this.draw.setSize(s, f);\r\n    }\r\n\r\n    private _drawStrings(ps: string[]) {\r\n        let size = this._size;\r\n        let strum = this.strum;\r\n        let f = size.fretSeperation;\r\n        repeat(this.stringCount, s=> {\r\n            let x = this.stringX(s);\r\n            let line = pathString(x, f, x, this.lastFretY());\r\n            ps.push(line);\r\n        });\r\n    }\r\n\r\n    private _drawFrets(ps: string[]) {\r\n        let size = this._size;\r\n        let strum = this.strum;\r\n\r\n        repeat(this.fretCount, f=> {\r\n            let y = this.fretY(f);\r\n            ps.push(pathString(size.stringSeperation, y, this.lastStringX(), y));\r\n        });\r\n        //d.path(ps.join(' '));\r\n\r\n    }\r\n\r\n    private lastStringX() {\r\n        return this.stringX(0);\r\n    }\r\n\r\n    private stringX(strIdx: number) {\r\n        strIdx = (this.stringCount - 1) - strIdx;\r\n        return this._size.stringSeperation * (strIdx + 1)\r\n    }\r\n\r\n    private fretY(fretIdx: number): number {\r\n        return this._size.fretSeperation * (fretIdx + 1)\r\n    }\r\n    private fretYMiddle(fretIdx: number): number {\r\n        return this.fretY(fretIdx) - (this._size.fretSeperation / 2);\r\n    }\r\n\r\n    private lastFretY() {\r\n        return this.fretY(this.fretCount - 1);\r\n    }\r\n\r\n    private _drawFingerPositions() {\r\n        let d = this.draw;\r\n\r\n        repeat(this.stringCount, s=> {\r\n            let f = this.strum.positions[s];\r\n            if (f === undefined) return;\r\n            let x = this.stringX(s);\r\n            let circle = d.circle(x, this.fretYMiddle(f), this._size.circleRadius);\r\n            if (f !== 0) {\r\n                circle.attr('fill', 'black');\r\n            }\r\n        });\r\n    }\r\n\r\n    private _drawLetters() {\r\n        if (this._showLetters) {\r\n\r\n            let d = this.draw;\r\n            let strum = this.strum;\r\n\r\n            let names = strum.getNames();\r\n            repeat(this.stringCount, s=> {\r\n                let x = this.stringX(s);\r\n                let y = this.fretYMiddle(this.fretCount + 1);\r\n\r\n                d.text(x, y - this._size.fretSeperation, names[s]);\r\n\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    showLetters() {\r\n        this._showLetters = true;\r\n        this._drawLetters();\r\n        this._resize();\r\n    }\r\n\r\n    /**\r\n     * Scales all contents. Note that this is expensive. Try to do this in the constructor.\r\n     * @param  {number} x [description]\r\n     */\r\n    scale(x: number) {\r\n        if (x === 1) return;\r\n        this.draw.clear();\r\n        let s = this._size;\r\n        this._size = ChordView.scaleSize(x, s);\r\n        this._drawParts();\r\n    }\r\n\r\n\r\n\r\n}\r\n","/// <reference path=\"../../typings/raphael/raphael\" />\r\n/// <reference path=\"../Guitar\"/>\r\n\r\nimport * as R from \"Raphael\";\r\nimport { GuitarString, IFretInfo } from '../GuitarString';\r\nimport {BaseUI, pathString, repeat} from './BaseUI';\r\nimport {Strum} from '../Strum';\r\nimport { Guitar } from \"../Guitar\";\r\n\r\nexport interface IGuitarNeckSizing {\r\n    startStringLine: number;\r\n    firstStringHeight: number\r\n    stringSeperation: number\r\n    fretSeperation: number;\r\n    opacityToggleTime: number;\r\n    fingerPositionRadius: number;\r\n}\r\n\r\nexport class GuitarNeck extends BaseUI {\r\n\r\n\r\n    private size: IGuitarNeckSizing = {\r\n        firstStringHeight: 25,\r\n        stringSeperation: 25,\r\n        fretSeperation: 40,\r\n        startStringLine: 40,\r\n        opacityToggleTime: 500,\r\n        fingerPositionRadius: 5\r\n    };\r\n\r\n    private _maxFrets: number = 25;\r\n\r\n    /**\r\n     * the strum circles\r\n     * @type {RaphaelElement[]}\r\n     */\r\n    private _strumElements: RaphaelElement[] = [];\r\n\r\n    get fretCount(): number {\r\n        return Math.min(this._maxFrets, this.guitar.frets);\r\n    }\r\n\r\n    get stringCount(): number {\r\n        return this.guitar.strings.length;\r\n    }\r\n\r\n\r\n    constructor(public guitar: Guitar, ele: HTMLElement = document.createElement('div')) {\r\n        super(ele);\r\n        let size = this.size;\r\n        this.element = ele;\r\n        document.body.appendChild(this.element);\r\n        this.draw = R(ele, 1024, (this.size.firstStringHeight * 2) + (guitar.strings.length * size.stringSeperation));\r\n        this.drawParts();\r\n    }\r\n\r\n    //Maths\r\n    private getStringY(idx: number) {\r\n        return (idx * this.size.stringSeperation) + this.size.firstStringHeight;\r\n    }\r\n\r\n    private getLastStringY(): number {\r\n        return this.getStringY(this.stringCount - 1);\r\n    }\r\n\r\n    private getFretX(idx: number): number {\r\n        let s = this.size;\r\n        return s.fretSeperation * (idx + 1);\r\n    }\r\n\r\n    private getLastFretX() {\r\n        return this.getFretX(this.fretCount);\r\n    }\r\n\r\n    private getStringLength(): number {\r\n        let s = this.size;\r\n        return this.getFretX(this.fretCount - 1) + s.fretSeperation;\r\n        return s.fretSeperation * (this.fretCount + 1);\r\n    }\r\n\r\n    private getPointOfStringFret(str: number, fret: number): IPoint {\r\n        let size = this.size;\r\n        return {\r\n            x: 20 + (fret * size.fretSeperation),\r\n            y: size.firstStringHeight + (str * size.stringSeperation)\r\n        };\r\n    }\r\n\r\n    private getFretHorizontalCenter(fret: number): number {\r\n        let size = this.size;\r\n\r\n        return size.startStringLine + (size.fretSeperation * fret) - (size.fretSeperation / 2);\r\n    }\r\n\r\n    private drawParts() {\r\n        this.drawDoubleFretLine();\r\n        this.drawStrings();\r\n        this.drawFrets();\r\n        this.drawFretBubbles();\r\n        if (this.noteLettersDrawn == true)\r\n            this.drawNoteLetters();\r\n        this.resize();\r\n    }\r\n\r\n    private resize() {\r\n        this.draw.setSize(this.getLastFretX() + this.size.fretSeperation, this.getLastStringY() + this.size.stringSeperation);\r\n    }\r\n\r\n\r\n    private drawStrings() {\r\n        let g = this.guitar;\r\n        let d = this.draw;\r\n        let size = this.size;\r\n        let stringLength = this.getStringLength();\r\n        repeat(this.stringCount, idx=> {\r\n            let height = this.getStringY(idx);\r\n            let pth = pathString(size.startStringLine, height, stringLength, height);\r\n            d.path(pth).attr('stroke', 'solid');\r\n        });\r\n    }\r\n\r\n\r\n\r\n    private drawDoubleFretLine() {\r\n        let g = this.guitar;\r\n        let d = this.draw;\r\n        let size = this.size;\r\n        //Double Starting Line\r\n        let x = size.startStringLine - 5;\r\n        let lastString = this.getLastStringY();\r\n        let path = pathString(x, size.firstStringHeight, x, lastString);\r\n        d.path(path).attr('stroke', 'solid');\r\n    }\r\n\r\n\r\n    private drawFrets() {\r\n        let g = this.guitar;\r\n        let d = this.draw;\r\n        let size = this.size;\r\n\r\n        let lastString = this.getLastStringY();\r\n\r\n        //Draw each fret Line\r\n        repeat(g.frets + 1, f=> {\r\n            let y = size.startStringLine + (f * size.fretSeperation);\r\n            let path = pathString(y, size.firstStringHeight, y, lastString);\r\n            d.path(path).attr('stroke', 'solid');\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n    private drawFretBubbles() {\r\n        let d = this.draw;\r\n        let g = this.guitar;\r\n        let size = this.size;\r\n\r\n        let applyStyles = (ele: RaphaelElement) => { ele.attr('fill', 'solid'); };\r\n\r\n        let single = (fret: number) => {\r\n            if (this.fretCount < fret) return;\r\n            let c = d.circle(this.getFretHorizontalCenter(fret), size.firstStringHeight + (size.stringSeperation * (g.strings.length / 2)) - (size.stringSeperation / 2), 5);\r\n            applyStyles(c);\r\n        }\r\n\r\n\r\n        let double = (fret: number) => {\r\n            if (this.fretCount < fret) return;\r\n            let c = d.circle(this.getFretHorizontalCenter(fret), size.firstStringHeight + (size.stringSeperation * (1)) - (size.stringSeperation / 2), 5)\r\n            applyStyles(c);\r\n            c = d.circle(this.getFretHorizontalCenter(fret), size.firstStringHeight + (size.stringSeperation * (g.strings.length - 1)) - (size.stringSeperation / 2), 5)\r\n            applyStyles(c);\r\n        };\r\n\r\n        single(3);\r\n        single(5);\r\n        single(7);\r\n        single(9);\r\n        double(12);\r\n        single(15);\r\n        single(17);\r\n        single(19);\r\n        single(21);\r\n        double(24);\r\n\r\n    }\r\n\r\n    private _noteLetters: NoteLetterElement[] = [];\r\n    private _noteLettersSet: RaphaelSet = null;\r\n\r\n    /** Clears all of the letters from the neck */\r\n    hideAllNoteLetters() {\r\n        let s = this.size;\r\n        let nls = this._noteLettersSet;\r\n        nls.attr({ opacity: 0 });\r\n\r\n        //    nls.animate({ opacity: 0 }, s.opacityToggleTime);\r\n\r\n    }\r\n\r\n    /**\r\n     * Makes all note letters visible\r\n     */\r\n    showAllNoteLetters() {\r\n        if (this.noteLettersDrawn == false) {\r\n            this.noteLettersDrawn = true;\r\n            this.drawNoteLetters();\r\n        }\r\n        let s = this.size;\r\n        let nls = this._noteLettersSet;\r\n        nls.attr({ opacity: 1 });\r\n        //    nls.animate({ opacity: 1 }, s.opacityToggleTime);\r\n    }\r\n\r\n    noteLettersDrawn = false;\r\n\r\n    /**\r\n     * Draw all note letters on fret board\r\n     */\r\n    private drawNoteLetters() {\r\n        let d = this.draw;\r\n        let g = this.guitar;\r\n\r\n        if (this._noteLettersSet === null) {\r\n            this._noteLettersSet = d.set();\r\n        }\r\n\r\n        let nls = this._noteLettersSet;\r\n\r\n        let sIdx = 0;\r\n        for (var s of g.strings) {\r\n\r\n            for (var f = 0; f < g.frets + 1; f++) {\r\n\r\n\r\n                var noteAtFret = s.noteAtFret(f);\r\n\r\n\r\n\r\n                let point = this.getPointOfStringFret(sIdx, f);\r\n\r\n                let text = d.text(point.x, point.y, noteAtFret.name).attr({\r\n                    \"font-size\": 12,\r\n                    \"fill\": \"green\",\r\n                    \"font-weight\": \"bold\",\r\n                    opacity: 0\r\n                });\r\n\r\n                //create white background for text, uses the text to calculate size.\r\n                let box = text.getBBox();\r\n                let rect = d.rect(box.x, box.y, box.width, box.height)\r\n                    .attr('fill', 'white')\r\n                    .attr('stroke', 'white')\r\n                    .attr('opacity', 0);\r\n                text.toFront();\r\n\r\n\r\n                this._noteLetters.push(new NoteLetterElement(s, f, text, rect));\r\n                nls.push(rect, text);\r\n            }\r\n\r\n\r\n            sIdx++;\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    clearStrum() {\r\n        for (let e of this._strumElements) {\r\n            e.remove();\r\n        }\r\n        this._strumElements = [];\r\n    }\r\n\r\n    drawStrum(s: Strum, clearStrum: boolean = true) {\r\n        let d = this.draw;\r\n        let g = this.guitar;\r\n        let size = this.size;\r\n        if (clearStrum) {\r\n            this.clearStrum();\r\n        }\r\n\r\n        let idx = 0;\r\n        var added = [];\r\n        for (let p of s.positions) {\r\n            if (p !== undefined) {\r\n                let point = this.getPointOfStringFret(idx, p);\r\n                let ele = d.circle(point.x, point.y, size.fingerPositionRadius)\r\n                    .attr('fill', 'red');\r\n                this._strumElements.push(ele);\r\n                added.push(ele);\r\n            }\r\n            idx++;\r\n        }\r\n        return added;\r\n    }\r\n\r\n    addStrumMarker(fi: IFretInfo) {\r\n        let arr = [];\r\n        repeat(this.stringCount, idx=> arr.push(undefined));\r\n        arr[fi.stringIndex] = fi.fretIndex;\r\n        return this.drawStrum(Strum.New(arr), false)[0];\r\n    }\r\n\r\n    removeBar() {\r\n\r\n    }\r\n\r\n    barFret(fret: number) {\r\n        let h = this.getFretHorizontalCenter(fret);\r\n        let d = this.draw;\r\n        //todo\r\n    }\r\n\r\n    scale(x: number) {\r\n        let s = this.size;\r\n        s.startStringLine *= x;\r\n        s.firstStringHeight *= x;\r\n        s.stringSeperation *= x;\r\n        s.fretSeperation *= x;\r\n        s.opacityToggleTime *= x;\r\n        s.fingerPositionRadius *= x;\r\n        this.draw.clear();\r\n        this.drawParts();\r\n\r\n    }\r\n\r\n    setMaxFrets(n: number) {\r\n        this._maxFrets = n;\r\n        this.drawParts();\r\n    }\r\n}\r\n\r\n\r\nmodule GuitarStringMath {\r\n    /**\r\n     * @param stringLength in pixels\r\n     * @param frets total frets\r\n     */\r\n    export function getFretLengths(stringLength: number, frets: number): number[] {\r\n        var l = stringLength;\r\n        var ret = [];\r\n        for (var i = 0; i < frets; i++) {\r\n            var c = l / 18;\r\n            l = l - c;\r\n            ret.push(c);\r\n        }\r\n        return ret;\r\n    }\r\n}\r\n\r\ninterface IPoint {\r\n    x: number;\r\n    y: number;\r\n}\r\n\r\ninterface INoteLetterElement {\r\n    text: RaphaelElement;\r\n    background: RaphaelElement;\r\n    note: IFretPosition;\r\n}\r\n\r\ninterface IFretPosition {\r\n    fret: number;\r\n    stringIndex: number;\r\n}\r\n\r\n\r\nclass NoteLetterElement {\r\n    constructor(private s: GuitarString, private fret: number, private text: RaphaelElement, private bg: RaphaelElement) {\r\n        text.click(() => this.click());\r\n        bg.click(() => this.click());\r\n    }\r\n\r\n    click() {\r\n        console.log('click', this);\r\n    }\r\n}\r\n","\nimport {repeat} from './BaseUI';\nimport {KeyManager} from '../Util/KeyManager';\nimport {SimpleEvent} from '../Util/SimpleEvent';\nimport { TabView } from './TabView';\nimport { Guitar } from \"../Guitar\";\nimport {TabCell} from './Tab/TabCell';\nimport {TabColumn} from './Tab/TabColumn';\nimport {TabDocument} from '../TabDocument';\n\nexport class TabEditor extends TabView {\n    keys: KeyManager;\n    private _onChange = SimpleEvent.New();\n\n    constructor(ele: HTMLElement, td: TabDocument) {\n        super(ele, td);\n        this.keys = new KeyManager(this.element);\n        this.bindKeys();\n        this._allowSelect = true;\n    }\n\n    private bindKeys() {\n        let k = this.keys;\n\n        k.bind('up', (e) => {\n            e.preventDefault();\n            this.selectUp();\n        });\n\n        k.bind('down', (e) => {\n            e.preventDefault();\n            this.selectDown();\n        });\n\n        k.bind('left', e=> {\n            e.preventDefault();\n            this.selectedCell.left().select();\n        });\n\n        k.bind('right', e=> {\n            e.preventDefault();\n            this.selectedCell.right().select();\n        });\n\n        k.bind('del', e=> {\n            e.preventDefault();\n            this.selectedCell.setText('');\n        });\n\n        k.bind('/', e=> {\n            e.preventDefault();\n            this.selectedCell.appendText('/');\n        });\n\n        repeat(10, idx=> {\n            k.bind(idx.toString(), (e) => {\n                e.preventDefault();\n                this.selectedCell.appendText(idx.toString());\n            });\n        });\n\n\n    }\n\n    private selectUp() {\n        this.selectedCell.up().select();\n    }\n\n    private selectDown() {\n        this.selectedCell.down().select();\n    }\n\n    private setUpEvents() {\n\n    }\n\n}\n","/// <reference path=\"../../typings/raphael/raphael\" />\r\n\r\nimport * as R from \"Raphael\";\r\nimport { Guitar } from \"../Guitar\";\r\nimport {BaseUI, pathString, repeat} from './BaseUI';\r\nimport {TabViewSize} from './Tab/TabCommon';\r\nimport {TabCell} from './Tab/TabCell';\r\nimport {TabColumn} from './Tab/TabColumn';\r\n\r\nimport {SimpleEvent, ISimpleEventBase, ISimpleEvent1, ISimpleEvent2, ISimpleEvent3} from '../Util/SimpleEvent';\r\nimport {TabDocument, TabPartType, TabStrum} from '../TabDocument';\r\n\r\nimport {Strum} from '../Strum';\r\n\r\n\r\nexport class TabView extends BaseUI {\r\n\r\n    protected _allowSelect: boolean = false;\r\n\r\n    private _document: TabDocument;\r\n\r\n    public get document(): TabDocument {\r\n        return this._document;\r\n    }\r\n\r\n    size: TabViewSize = {\r\n        stringSeperation: 20,\r\n        noteSpeperation: 20\r\n    };\r\n\r\n    get stringCount(): number {\r\n        return this.guitar.strings.length;\r\n    }\r\n\r\n    get selectedCell(): TabCell {\r\n        return this.columns.filter(x=> x.hasSelectedCell)[0].cells\r\n            .filter(x=> x.isSelected)[0];\r\n    }\r\n\r\n    public get guitar(): Guitar {\r\n        return this.document.guitar;\r\n    };\r\n\r\n    public get allowSelect() {\r\n        return this._allowSelect;\r\n    }\r\n\r\n    protected _columnAdded = SimpleEvent.New<TabColumn>();\r\n\r\n    constructor(ele: HTMLElement, doc: TabDocument) {\r\n        super(ele);\r\n        this._document = doc;\r\n        this.draw = R(this.element, 300, 300);\r\n        this.draw.canvas.onclick = () => {\r\n            console.log('canvas click');\r\n            this.element.focus();\r\n        };\r\n        this._drawAllParts();\r\n    }\r\n\r\n    //math\r\n\r\n    protected getStringY(idx) {\r\n        let s = this.size;\r\n        return (idx * s.stringSeperation) + s.stringSeperation;\r\n    }\r\n\r\n    protected getStringStartX() {\r\n        return 20;\r\n    }\r\n\r\n    private _drawAllParts() {\r\n        this._drawStringLines();\r\n        this._drawStringLetters();\r\n        this._drawStringVertLines();\r\n        this._buildTabColumns();\r\n        // var firstCell = this.columns[0].cells[0];\r\n        //firstCell.setText('0');\r\n        // firstCell.select();\r\n\r\n        this._calculateSize();\r\n    }\r\n\r\n    private _drawStringLines() {\r\n        //todo: make one path, keep refrence\r\n\r\n        let d = this.draw;\r\n        let x = this.getStringStartX();\r\n        repeat(this.stringCount, idx=> {\r\n            let y = this.getStringY(idx);\r\n            let line = pathString(x, y, 1000, y);\r\n            d.path(line);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * letters on left side\r\n     */\r\n    private _drawStringLetters() {\r\n        let d = this.draw;\r\n        let x = this.getStringStartX() / 2;\r\n        let g = this.guitar;\r\n        repeat(this.stringCount, idx=> {\r\n            let y = this.getStringY(idx);\r\n            let letter = d.text(x, y, g.strings[idx].OpenNoteName);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Vertical lines at start of tab\r\n     */\r\n    private _drawStringVertLines() {\r\n        //todo: make one path, keep refrence\r\n\r\n        let d = this.draw;\r\n        let x = this.getStringStartX();\r\n        let g = this.guitar;\r\n        let length = this.size.stringSeperation / 4;\r\n        repeat(this.stringCount, idx=> {\r\n            let y = this.getStringY(idx);\r\n\r\n            let line = pathString(x, y - length, x, y + length);\r\n            d.path(line);\r\n\r\n        });\r\n    }\r\n\r\n    columns: TabColumn[] = [];\r\n\r\n    private _addColumn(c: TabColumn) {\r\n        this.columns.push(c);\r\n        this._columnAdded.trigger(c);\r\n    }\r\n\r\n    private _buildTabColumns() {\r\n        let d = this.draw;\r\n        let g = this.guitar;\r\n        let ns = this.size.noteSpeperation;\r\n        let x = ns + this.getStringStartX();\r\n\r\n        repeat(this.document.partCount, (colIndex) => {\r\n            let column = new TabColumn(this.draw, this, colIndex);\r\n            this._addColumn(column);\r\n\r\n            let part = this.document.parts.elementAtIndex(colIndex);\r\n\r\n\r\n            repeat(this.stringCount, idx=> {\r\n\r\n\r\n                let y = this.getStringY(idx);\r\n                let cell = column.defineCell(x, y, idx);\r\n\r\n                if (part.type == TabPartType.Strum) {\r\n                    let p = <TabStrum>part;\r\n                    let pos = p.positions[idx];\r\n                    if (pos != undefined) {\r\n                        cell.setText(pos.toString());\r\n                    }\r\n                }\r\n\r\n                // cell.setText('X');\r\n\r\n            });\r\n            x = x + ns;\r\n        });\r\n    }\r\n\r\n    private get rightX() {\r\n        let x = this.columns[this.columns.length - 1].topCell.x + this.size.noteSpeperation;\r\n        return x;\r\n    }\r\n\r\n    private _calculateSize() {\r\n        //note that this points to the position after the last string\r\n        let y = this.getStringY(this.stringCount);\r\n\r\n        this.draw.setSize(this.rightX, y);\r\n    }\r\n\r\n\r\n    unselectAll() {\r\n        this.columns.forEach(x=> x.unselectAll());\r\n    }\r\n\r\n    toArray(): string[][] {\r\n        let ret: string[][] = [];\r\n\r\n        this.columns.forEach(function(c) {\r\n            let col = [];\r\n            c.cells.forEach(function(c) {\r\n                col.push(c.getText());\r\n            }, this);\r\n            ret.push(col);\r\n        }, this);\r\n\r\n        return ret;\r\n    }\r\n\r\n    toString() {\r\n\r\n        let array = this.toArray();\r\n\r\n        let lines = [];\r\n\r\n        repeat(this.stringCount, idx=> lines[idx] = []);\r\n\r\n        array.forEach(a=> {\r\n            let longest = 0;\r\n            a.forEach(x=> {\r\n                if (longest < x.length)\r\n                    longest = x.length;\r\n            });\r\n\r\n            repeat(this.stringCount, idx=> {\r\n                let p = a[idx];\r\n                if (p == undefined || p==' ') p = '';\r\n                lines[idx].push(lpad(longest, '-----', p));\r\n            });\r\n\r\n            repeat(this.stringCount, idx=> {\r\n                lines[idx].push('-');\r\n            });\r\n        });\r\n        let lines2 = [];\r\n        lines.forEach(l=> lines2.push(l.join('')));\r\n        return lines2.join('\\n');\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nfunction lpad(length, pad, str) {\r\n    if (length < this.length) return str;\r\n\r\n    pad = pad || ' ';\r\n\r\n    while (str.length < length) {\r\n        str = pad + str;\r\n    }\r\n\r\n    return str.substr(-length);\r\n}\r\n","import * as R from \"Raphael\";\nimport {TabView} from '../TabView';\nimport {pathString} from '../BaseUI';\nimport {TabColumn} from './TabColumn';\n\n\n\nexport class TabCell {\n\n    private textElement: RaphaelElement = null;\n    private backgroundElement: RaphaelElement = null;\n    private clickElement: RaphaelElement = null;\n    private selectElement: RaphaelElement = null;\n\n    private get elements(): RaphaelSet {\n        return this.draw.set([\n            this.textElement,\n            this.backgroundElement,\n            this.clickElement,\n            this.selectElement\n        ]);\n    }\n\n\n    private col: TabColumn;\n\n\n    private get tabView(): TabView {\n        return this.col.tabView;\n    }\n\n    get rowIndex(): number {\n        return this.index;\n    }\n\n    get colIndex(): number {\n        return this.col.index;\n    }\n\n    constructor(\n        public x: number,\n        public y: number,\n        private draw: RaphaelPaper,\n        c: TabColumn,\n        private index: number) {\n\n\n        this.col = c;\n\n        this.createElements();\n    }\n\n    private createElements() {\n        if (this.textElement !== null) return;\n\n        let d = this.draw;\n        let x = this.x;\n        let y = this.y;\n\n\n        let text = this.textElement = d.text(x, y, \" \").attr({\n            \"font-size\": 14\n        });\n        let box = text.getBBox();\n        this.backgroundElement = d.rect(box.x, box.y, box.width, box.height)\n            .attr('fill', 'white')\n            .attr('stroke', 'white');\n        text.toFront();\n\n\n        this.createClickElement();\n        this.createSelectElement();\n        this._bindEvents();\n    }\n\n\n\n    private _bindEvents() {\n        if(this.tabView.allowSelect == false) return;\n        let onClick = () => this.click();\n        this.elements.click(onClick);\n    }\n\n    private createClickElement() {\n        let d = this.draw;\n        let x = this.x;\n        let y = this.y;\n        let s = this.col.tabView.size;\n\n        let diffNote = s.noteSpeperation / 2;\n        let diffString = s.stringSeperation / 2;\n\n        this.clickElement = d.rect(x - diffNote, y - diffString, s.noteSpeperation, s.stringSeperation)\n            .attr({\n                stroke: 'rgba(0,0,0,0)',\n                fill: 'white'\n            });\n        this.clickElement.toBack();\n        //this.clickElement.click(() => { this.click() });\n    }\n\n    private createSelectElement() {\n        let d = this.draw;\n        let x = this.x;\n        let y = this.y;\n        let s = this.col.tabView.size;\n\n        let diffNote = s.noteSpeperation / 2;\n        let diffString = s.stringSeperation / 2;\n        diffString -= 1;\n\n        let path = pathString(x - diffNote, y + diffString, x + diffNote, y + diffString);\n        this.selectElement = d.path(path)\n            .attr({ stroke: 'rgb(255,0,0)' })\n            .attr('opacity', .1);\n    }\n\n    private recalcBackground() {\n        let box = this.textElement.getBBox();\n\n        this.backgroundElement.attr({\n            x: box.x,\n            y: box.y,\n            width: box.width,\n            height: box.height\n        });\n    }\n\n    setText(str: string) {\n        this.textElement.attr({\n            text: str\n        });\n        this.recalcBackground();\n    }\n\n    getText(): string {\n        return this.textElement.attr('text');\n    }\n\n    appendText(s: string) {\n        this.setText(this.getText() + s);\n    }\n\n\n    isSelected: boolean = false;\n    select() {\n        this.tabView.unselectAll();\n        this.isSelected = true;\n        this.backgroundElement.attr('stroke', 'blue');\n        this.selectElement.attr('opacity', 1);\n    }\n\n    unselect() {\n        this.isSelected = false;\n        this.backgroundElement.attr('stroke', 'white');\n        this.selectElement.attr('opacity', '0');\n    }\n\n    private click() {\n        console.log(this);\n        console.log('click');\n        this.select();\n    }\n\n    up(): TabCell {\n        if (this.index == 0) {\n            return this.col.cells[this.col.cells.length - 1];\n        }\n        return this.col.cells[this.index - 1];\n    }\n\n    down(): TabCell {\n        if (this.index == this.col.cells.length - 1) {\n            return this.col.cells[0];\n        }\n        return this.col.cells[this.index + 1];\n    }\n\n    left(): TabCell {\n        return this.col.getLeft().cells[this.index];\n    }\n\n    right(): TabCell {\n        return this.col.getRight().cells[this.index];\n    }\n\n}\n","import * as R from \"Raphael\";\nimport {TabView} from '../TabView';\nimport {pathString} from '../BaseUI';\nimport {TabCell} from './TabCell';\nimport {TabPart} from '../../TabDocument';\n\nexport class TabColumn {\n    cells: TabCell[] = [];\n    tabView: TabView;\n    index: number;\n\n    get part():TabPart{\n        return this.tabView.document.parts.elementAtIndex(this.index);\n    }\n\n    get hasSelectedCell(): boolean {\n        return this.cells.filter(x=> x.isSelected).length !== 0;\n    }\n\n    constructor(private draw: RaphaelPaper, tv: TabView, idx: number) {\n        this.index = idx;\n        this.tabView = tv;\n    }\n\n    defineCell(x, y, idx): TabCell {\n        let tc = new TabCell(x, y, this.draw, this, idx);\n        this.cells.push(tc);\n        return tc;\n    }\n\n    unselectAll() {\n        this.cells.forEach(x=> x.unselect());\n    }\n\n    getLeft(): TabColumn {\n        return this.tabView.columns[this.index - 1];\n    }\n\n    getRight(): TabColumn {\n        return this.tabView.columns[this.index + 1];\n    }\n\nget topCell():TabCell{\n    return this.cells[0];\n}\n\n}\n","export * from './TabView';\r\nexport * from './TabEditor';\r\nexport * from './ChordView';\r\nexport * from './GuitarNeck';\r\n// export * from './BaseUI';\r\n","/// <reference path=\"../../typings/lodash/lodash.d.ts\"/>\r\nimport {sortBy} from 'lodash';\r\nexport function orderBy<T>(arr: T[], fn: (x: T) => any): T[] {\r\n    return sortBy(arr, x=> fn(x));\r\n}\r\n\r\nexport function findAllPossibleCombos<T>(a: T[], min: number, max: number = null): T[][] {\r\n    if (max === null) max = a.length;\r\n    max += 1;\r\n    var fn = function(n, src, got, all) {\r\n        if (n == 0) {\r\n            if (got.length > 0) {\r\n                all[all.length] = got;\r\n            }\r\n            return;\r\n        }\r\n        for (var j = 0; j < src.length; j++) {\r\n            fn(n - 1, src.slice(j + 1), got.concat([src[j]]), all);\r\n        }\r\n        return;\r\n    }\r\n    var all = [];\r\n    for (var i = min; i < max; i++) {\r\n        fn(i, a, [], all);\r\n    }\r\n    //all.push(a);\r\n    return all;\r\n}\r\n","// Copyright 2013 Basarat Ali Syed. All Rights Reserved.\r\n//\r\n// Licensed under MIT open source license http://opensource.org/licenses/MIT\r\n//\r\n// Orginal javascript code was by Mauricio Santos\r\n\r\n\r\n\r\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\r\nvar has = function(obj, prop) {\r\n    return _hasOwnProperty.call(obj, prop);\r\n}\r\n\r\n/**\r\n* Function signature for comparing\r\n* <0 means a is smaller\r\n* = 0 means they are equal\r\n* >0 means a is larger\r\n*/\r\nexport interface ICompareFunction<T> {\r\n    (a: T, b: T): number;\r\n}\r\n\r\n/**\r\n* Function signature for checking equality\r\n*/\r\nexport interface IEqualsFunction<T> {\r\n    (a: T, b: T): boolean;\r\n}\r\n\r\n/**\r\n* Function signature for Iterations. Return false to break from loop\r\n*/\r\nexport interface ILoopFunction<T> {\r\n    (a: T): boolean;\r\n}\r\n\r\n/**\r\n * Default function to compare element order.\r\n * @function\r\n */\r\nexport function defaultCompare<T>(a: T, b: T): number {\r\n    if (a < b) {\r\n        return -1;\r\n    } else if (a === b) {\r\n        return 0;\r\n    } else {\r\n        return 1;\r\n    }\r\n}\r\n\r\n/**\r\n * Default function to test equality.\r\n * @function\r\n */\r\nexport function defaultEquals<T>(a: T, b: T): boolean {\r\n    return a === b;\r\n}\r\n\r\n/**\r\n * Default function to convert an object to a string.\r\n * @function\r\n */\r\nexport function defaultToString(item: any): string {\r\n    if (item === null) {\r\n        return 'COLLECTION_NULL';\r\n    } else if (isUndefined(item)) {\r\n        return 'COLLECTION_UNDEFINED';\r\n    } else if (isString(item)) {\r\n        return '$s' + item;\r\n    } else {\r\n        return '$o' + item.toString();\r\n    }\r\n}\r\n\r\n/**\r\n* Joins all the properies of the object using the provided join string\r\n*/\r\nexport function makeString<T>(item: T, join: string = \",\"): string {\r\n    if (item === null) {\r\n        return 'COLLECTION_NULL';\r\n    } else if (isUndefined(item)) {\r\n        return 'COLLECTION_UNDEFINED';\r\n    } else if (isString(item)) {\r\n        return item.toString();\r\n    } else {\r\n        var toret = \"{\";\r\n        var first = true;\r\n        for (var prop in item) {\r\n            if (has(item, prop)) {\r\n                if (first)\r\n                    first = false;\r\n                else\r\n                    toret = toret + join;\r\n                toret = toret + prop + \":\" + item[prop];\r\n            }\r\n        }\r\n        return toret + \"}\";\r\n    }\r\n}\r\n\r\n/**\r\n * Checks if the given argument is a function.\r\n * @function\r\n */\r\nexport function isFunction(func: any): boolean {\r\n    return (typeof func) === 'function';\r\n}\r\n\r\n/**\r\n * Checks if the given argument is undefined.\r\n * @function\r\n */\r\nexport function isUndefined(obj: any): boolean {\r\n    return (typeof obj) === 'undefined';\r\n}\r\n\r\n/**\r\n * Checks if the given argument is a string.\r\n * @function\r\n */\r\nexport function isString(obj: any): boolean {\r\n    return Object.prototype.toString.call(obj) === '[object String]';\r\n}\r\n\r\n/**\r\n * Reverses a compare function.\r\n * @function\r\n */\r\nexport function reverseCompareFunction<T>(compareFunction: ICompareFunction<T>): ICompareFunction<T> {\r\n    if (!isFunction(compareFunction)) {\r\n        return function(a, b) {\r\n            if (a < b) {\r\n                return 1;\r\n            } else if (a === b) {\r\n                return 0;\r\n            } else {\r\n                return -1;\r\n            }\r\n        };\r\n    } else {\r\n        return function(d: T, v: T) {\r\n            return compareFunction(d, v) * -1;\r\n        };\r\n    }\r\n}\r\n\r\n/**\r\n * Returns an equal function given a compare function.\r\n * @function\r\n */\r\nexport function compareToEquals<T>(compareFunction: ICompareFunction<T>): IEqualsFunction<T> {\r\n    return function(a: T, b: T) {\r\n        return compareFunction(a, b) === 0;\r\n    };\r\n}\r\n\r\n/**\r\n * @namespace Contains various functions for manipulating arrays.\r\n */\r\nexport module arrays {\r\n\r\n    /**\r\n     * Returns the position of the first occurrence of the specified item\r\n     * within the specified array.\r\n     * @param {*} array the array in which to search the element.\r\n     * @param {Object} item the element to search.\r\n     * @param {function(Object,Object):boolean=} equalsFunction optional function used to\r\n     * check equality between 2 elements.\r\n     * @return {number} the position of the first occurrence of the specified element\r\n     * within the specified array, or -1 if not found.\r\n     */\r\n    export function indexOf<T>(array: T[], item: T, equalsFunction?: IEqualsFunction<T>): number {\r\n        var equals = equalsFunction || defaultEquals;\r\n        var length = array.length;\r\n        for (var i = 0; i < length; i++) {\r\n            if (equals(array[i], item)) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    /**\r\n     * Returns the position of the last occurrence of the specified element\r\n     * within the specified array.\r\n     * @param {*} array the array in which to search the element.\r\n     * @param {Object} item the element to search.\r\n     * @param {function(Object,Object):boolean=} equalsFunction optional function used to\r\n     * check equality between 2 elements.\r\n     * @return {number} the position of the last occurrence of the specified element\r\n     * within the specified array or -1 if not found.\r\n     */\r\n    export function lastIndexOf<T>(array: T[], item: T, equalsFunction?: IEqualsFunction<T>): number {\r\n        var equals = equalsFunction || defaultEquals;\r\n        var length = array.length;\r\n        for (var i = length - 1; i >= 0; i--) {\r\n            if (equals(array[i], item)) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    /**\r\n     * Returns true if the specified array contains the specified element.\r\n     * @param {*} array the array in which to search the element.\r\n     * @param {Object} item the element to search.\r\n     * @param {function(Object,Object):boolean=} equalsFunction optional function to\r\n     * check equality between 2 elements.\r\n     * @return {boolean} true if the specified array contains the specified element.\r\n     */\r\n    export function contains<T>(array: T[], item: T, equalsFunction?: IEqualsFunction<T>): boolean {\r\n        return arrays.indexOf(array, item, equalsFunction) >= 0;\r\n    }\r\n\r\n\r\n    /**\r\n     * Removes the first ocurrence of the specified element from the specified array.\r\n     * @param {*} array the array in which to search element.\r\n     * @param {Object} item the element to search.\r\n     * @param {function(Object,Object):boolean=} equalsFunction optional function to\r\n     * check equality between 2 elements.\r\n     * @return {boolean} true if the array changed after this call.\r\n     */\r\n    export function remove<T>(array: T[], item: T, equalsFunction?: IEqualsFunction<T>): boolean {\r\n        var index = arrays.indexOf(array, item, equalsFunction);\r\n        if (index < 0) {\r\n            return false;\r\n        }\r\n        array.splice(index, 1);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Returns the number of elements in the specified array equal\r\n     * to the specified object.\r\n     * @param {Array} array the array in which to determine the frequency of the element.\r\n     * @param {Object} item the element whose frequency is to be determined.\r\n     * @param {function(Object,Object):boolean=} equalsFunction optional function used to\r\n     * check equality between 2 elements.\r\n     * @return {number} the number of elements in the specified array\r\n     * equal to the specified object.\r\n     */\r\n    export function frequency<T>(array: T[], item: T, equalsFunction?: IEqualsFunction<T>): number {\r\n        var equals = equalsFunction || defaultEquals;\r\n        var length = array.length;\r\n        var freq = 0;\r\n        for (var i = 0; i < length; i++) {\r\n            if (equals(array[i], item)) {\r\n                freq++;\r\n            }\r\n        }\r\n        return freq;\r\n    }\r\n\r\n    /**\r\n     * Returns true if the two specified arrays are equal to one another.\r\n     * Two arrays are considered equal if both arrays contain the same number\r\n     * of elements, and all corresponding pairs of elements in the two\r\n     * arrays are equal and are in the same order.\r\n     * @param {Array} array1 one array to be tested for equality.\r\n     * @param {Array} array2 the other array to be tested for equality.\r\n     * @param {function(Object,Object):boolean=} equalsFunction optional function used to\r\n     * check equality between elemements in the arrays.\r\n     * @return {boolean} true if the two arrays are equal\r\n     */\r\n    export function equals<T>(array1: T[], array2: T[], equalsFunction?: IEqualsFunction<T>): boolean {\r\n        var equals = equalsFunction || defaultEquals;\r\n\r\n        if (array1.length !== array2.length) {\r\n            return false;\r\n        }\r\n        var length = array1.length;\r\n        for (var i = 0; i < length; i++) {\r\n            if (!equals(array1[i], array2[i])) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Returns shallow a copy of the specified array.\r\n     * @param {*} array the array to copy.\r\n     * @return {Array} a copy of the specified array\r\n     */\r\n    export function copy<T>(array: T[]): T[] {\r\n        return array.concat();\r\n    }\r\n\r\n    /**\r\n     * Swaps the elements at the specified positions in the specified array.\r\n     * @param {Array} array The array in which to swap elements.\r\n     * @param {number} i the index of one element to be swapped.\r\n     * @param {number} j the index of the other element to be swapped.\r\n     * @return {boolean} true if the array is defined and the indexes are valid.\r\n     */\r\n    export function swap<T>(array: T[], i: number, j: number): boolean {\r\n        if (i < 0 || i >= array.length || j < 0 || j >= array.length) {\r\n            return false;\r\n        }\r\n        var temp = array[i];\r\n        array[i] = array[j];\r\n        array[j] = temp;\r\n        return true;\r\n    }\r\n\r\n    export function toString<T>(array: T[]): string {\r\n        return '[' + array.toString() + ']';\r\n    }\r\n\r\n    /**\r\n     * Executes the provided function once for each element present in this array\r\n     * starting from index 0 to length - 1.\r\n     * @param {Array} array The array in which to iterate.\r\n     * @param {function(Object):*} callback function to execute, it is\r\n     * invoked with one argument: the element value, to break the iteration you can\r\n     * optionally return false.\r\n     */\r\n    export function forEach<T>(array: T[], callback: (item: T) => boolean): void {\r\n        var lenght = array.length;\r\n        for (var i = 0; i < lenght; i++) {\r\n            if (callback(array[i]) === false) {\r\n                return;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// A linked list node\r\nexport interface ILinkedListNode<T> {\r\n    element: T;\r\n    next: ILinkedListNode<T>;\r\n}\r\n\r\nexport class LinkedList<T> {\r\n\r\n    /**\r\n    * First node in the list\r\n    * @type {Object}\r\n    * @private\r\n    */\r\n    public firstNode: ILinkedListNode<T> = null;\r\n    /**\r\n    * Last node in the list\r\n    * @type {Object}\r\n    * @private\r\n    */\r\n    private lastNode: ILinkedListNode<T> = null;\r\n\r\n    /**\r\n    * Number of elements in the list\r\n    * @type {number}\r\n    * @private\r\n    */\r\n    private nElements = 0;\r\n\r\n    public get count(){\r\n        return this.nElements;\r\n    }\r\n\r\n    /**\r\n    * Creates an empty Linked List.\r\n    * @class A linked list is a data structure consisting of a group of nodes\r\n    * which together represent a sequence.\r\n    * @constructor\r\n    */\r\n    constructor() {\r\n    }\r\n\r\n    /**\r\n    * Adds an element to this list.\r\n    * @param {Object} item element to be added.\r\n    * @param {number=} index optional index to add the element. If no index is specified\r\n    * the element is added to the end of this list.\r\n    * @return {boolean} true if the element was added or false if the index is invalid\r\n    * or if the element is undefined.\r\n    */\r\n    add(item: T, index?: number): boolean {\r\n        if (isUndefined(index)) {\r\n            index = this.nElements;\r\n        }\r\n        if (index < 0 || index > this.nElements || isUndefined(item)) {\r\n            return false;\r\n        }\r\n        var newNode = this.createNode(item);\r\n        if (this.nElements === 0) {\r\n            // First node in the list.\r\n            this.firstNode = newNode;\r\n            this.lastNode = newNode;\r\n        } else if (index === this.nElements) {\r\n            // Insert at the end.\r\n            this.lastNode.next = newNode;\r\n            this.lastNode = newNode;\r\n        } else if (index === 0) {\r\n            // Change first node.\r\n            newNode.next = this.firstNode;\r\n            this.firstNode = newNode;\r\n        } else {\r\n            var prev = this.nodeAtIndex(index - 1);\r\n            newNode.next = prev.next;\r\n            prev.next = newNode;\r\n        }\r\n        this.nElements++;\r\n        return true;\r\n    }\r\n\r\n    /**\r\n    * Returns the first element in this list.\r\n    * @return {*} the first element of the list or undefined if the list is\r\n    * empty.\r\n    */\r\n    first(): T {\r\n\r\n        if (this.firstNode !== null) {\r\n            return this.firstNode.element;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n    * Returns the last element in this list.\r\n    * @return {*} the last element in the list or undefined if the list is\r\n    * empty.\r\n    */\r\n    last(): T {\r\n\r\n        if (this.lastNode !== null) {\r\n            return this.lastNode.element;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Returns the element at the specified position in this list.\r\n     * @param {number} index desired index.\r\n     * @return {*} the element at the given index or undefined if the index is\r\n     * out of bounds.\r\n     */\r\n    elementAtIndex(index: number): T {\r\n\r\n        var node = this.nodeAtIndex(index);\r\n        if (node === null) {\r\n            return undefined;\r\n        }\r\n        return node.element;\r\n    }\r\n\r\n    /**\r\n     * Returns the index in this list of the first occurrence of the\r\n     * specified element, or -1 if the List does not contain this element.\r\n     * <p>If the elements inside this list are\r\n     * not comparable with the === operator a custom equals function should be\r\n     * provided to perform searches, the function must receive two arguments and\r\n     * return true if they are equal, false otherwise. Example:</p>\r\n     *\r\n     * <pre>\r\n     * var petsAreEqualByName = function(pet1, pet2) {\r\n     *  return pet1.name === pet2.name;\r\n     * }\r\n     * </pre>\r\n     * @param {Object} item element to search for.\r\n     * @param {function(Object,Object):boolean=} equalsFunction Optional\r\n     * function used to check if two elements are equal.\r\n     * @return {number} the index in this list of the first occurrence\r\n     * of the specified element, or -1 if this list does not contain the\r\n     * element.\r\n     */\r\n    indexOf(item: T, equalsFunction?: IEqualsFunction<T>): number {\r\n\r\n        var equalsF = equalsFunction || defaultEquals;\r\n        if (isUndefined(item)) {\r\n            return -1;\r\n        }\r\n        var currentNode = this.firstNode;\r\n        var index = 0;\r\n        while (currentNode !== null) {\r\n            if (equalsF(currentNode.element, item)) {\r\n                return index;\r\n            }\r\n            index++;\r\n            currentNode = currentNode.next;\r\n        }\r\n        return -1;\r\n    }\r\n\r\n\r\n    /**\r\n       * Returns true if this list contains the specified element.\r\n       * <p>If the elements inside the list are\r\n       * not comparable with the === operator a custom equals function should be\r\n       * provided to perform searches, the function must receive two arguments and\r\n       * return true if they are equal, false otherwise. Example:</p>\r\n       *\r\n       * <pre>\r\n       * var petsAreEqualByName = function(pet1, pet2) {\r\n       *  return pet1.name === pet2.name;\r\n       * }\r\n       * </pre>\r\n       * @param {Object} item element to search for.\r\n       * @param {function(Object,Object):boolean=} equalsFunction Optional\r\n       * function used to check if two elements are equal.\r\n       * @return {boolean} true if this list contains the specified element, false\r\n       * otherwise.\r\n       */\r\n    contains(item: T, equalsFunction?: IEqualsFunction<T>): boolean {\r\n        return (this.indexOf(item, equalsFunction) >= 0);\r\n    }\r\n\r\n    /**\r\n     * Removes the first occurrence of the specified element in this list.\r\n     * <p>If the elements inside the list are\r\n     * not comparable with the === operator a custom equals function should be\r\n     * provided to perform searches, the function must receive two arguments and\r\n     * return true if they are equal, false otherwise. Example:</p>\r\n     *\r\n     * <pre>\r\n     * var petsAreEqualByName = function(pet1, pet2) {\r\n     *  return pet1.name === pet2.name;\r\n     * }\r\n     * </pre>\r\n     * @param {Object} item element to be removed from this list, if present.\r\n     * @return {boolean} true if the list contained the specified element.\r\n     */\r\n    remove(item: T, equalsFunction?: IEqualsFunction<T>): boolean {\r\n        var equalsF = equalsFunction || defaultEquals;\r\n        if (this.nElements < 1 || isUndefined(item)) {\r\n            return false;\r\n        }\r\n        var previous: ILinkedListNode<T> = null;\r\n        var currentNode: ILinkedListNode<T> = this.firstNode;\r\n\r\n        while (currentNode !== null) {\r\n            if (equalsF(currentNode.element, item)) {\r\n\r\n                if (currentNode === this.firstNode) {\r\n                    this.firstNode = this.firstNode.next;\r\n                    if (currentNode === this.lastNode) {\r\n                        this.lastNode = null;\r\n                    }\r\n                } else if (currentNode === this.lastNode) {\r\n                    this.lastNode = previous;\r\n                    previous.next = currentNode.next;\r\n                    currentNode.next = null;\r\n                } else {\r\n                    previous.next = currentNode.next;\r\n                    currentNode.next = null;\r\n                }\r\n                this.nElements--;\r\n                return true;\r\n            }\r\n            previous = currentNode;\r\n            currentNode = currentNode.next;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Removes all of the elements from this list.\r\n     */\r\n    clear(): void {\r\n        this.firstNode = null;\r\n        this.lastNode = null;\r\n        this.nElements = 0;\r\n    }\r\n\r\n    /**\r\n     * Returns true if this list is equal to the given list.\r\n     * Two lists are equal if they have the same elements in the same order.\r\n     * @param {LinkedList} other the other list.\r\n     * @param {function(Object,Object):boolean=} equalsFunction optional\r\n     * function used to check if two elements are equal. If the elements in the lists\r\n     * are custom objects you should provide a function, otherwise\r\n     * the === operator is used to check equality between elements.\r\n     * @return {boolean} true if this list is equal to the given list.\r\n     */\r\n    equals(other: LinkedList<T>, equalsFunction?: IEqualsFunction<T>): boolean {\r\n        var eqF = equalsFunction || defaultEquals;\r\n        if (!(other instanceof LinkedList)) {\r\n            return false;\r\n        }\r\n        if (this.size() !== other.size()) {\r\n            return false;\r\n        }\r\n        return this.equalsAux(this.firstNode, other.firstNode, eqF);\r\n    }\r\n\r\n    /**\r\n    * @private\r\n    */\r\n    private equalsAux(n1: ILinkedListNode<T>, n2: ILinkedListNode<T>, eqF: IEqualsFunction<T>): boolean {\r\n        while (n1 !== null) {\r\n            if (!eqF(n1.element, n2.element)) {\r\n                return false;\r\n            }\r\n            n1 = n1.next;\r\n            n2 = n2.next;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Removes the element at the specified position in this list.\r\n     * @param {number} index given index.\r\n     * @return {*} removed element or undefined if the index is out of bounds.\r\n     */\r\n    removeElementAtIndex(index: number): T {\r\n        if (index < 0 || index >= this.nElements) {\r\n            return undefined;\r\n        }\r\n        var element: T;\r\n        if (this.nElements === 1) {\r\n            //First node in the list.\r\n            element = this.firstNode.element;\r\n            this.firstNode = null;\r\n            this.lastNode = null;\r\n        } else {\r\n            var previous = this.nodeAtIndex(index - 1);\r\n            if (previous === null) {\r\n                element = this.firstNode.element;\r\n                this.firstNode = this.firstNode.next;\r\n            } else if (previous.next === this.lastNode) {\r\n                element = this.lastNode.element;\r\n                this.lastNode = previous;\r\n            }\r\n            if (previous !== null) {\r\n                element = previous.next.element;\r\n                previous.next = previous.next.next;\r\n            }\r\n        }\r\n        this.nElements--;\r\n        return element;\r\n    }\r\n\r\n    /**\r\n     * Executes the provided function once for each element present in this list in order.\r\n     * @param {function(Object):*} callback function to execute, it is\r\n     * invoked with one argument: the element value, to break the iteration you can\r\n     * optionally return false.\r\n     */\r\n    forEach(callback: (item: T) => boolean): void {\r\n        var currentNode = this.firstNode;\r\n        while (currentNode !== null) {\r\n            if (callback(currentNode.element) === false) {\r\n                break;\r\n            }\r\n            currentNode = currentNode.next;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reverses the order of the elements in this linked list (makes the last\r\n     * element first, and the first element last).\r\n     */\r\n    reverse(): void {\r\n        var previous: ILinkedListNode<T> = null;\r\n        var current: ILinkedListNode<T> = this.firstNode;\r\n        var temp: ILinkedListNode<T> = null;\r\n        while (current !== null) {\r\n            temp = current.next;\r\n            current.next = previous;\r\n            previous = current;\r\n            current = temp;\r\n        }\r\n        temp = this.firstNode;\r\n        this.firstNode = this.lastNode;\r\n        this.lastNode = temp;\r\n    }\r\n\r\n    /**\r\n     * Returns an array containing all of the elements in this list in proper\r\n     * sequence.\r\n     * @return {Array.<*>} an array containing all of the elements in this list,\r\n     * in proper sequence.\r\n     */\r\n    toArray(): T[] {\r\n        var array: T[] = [];\r\n        var currentNode: ILinkedListNode<T> = this.firstNode;\r\n        while (currentNode !== null) {\r\n            array.push(currentNode.element);\r\n            currentNode = currentNode.next;\r\n        }\r\n        return array;\r\n    }\r\n\r\n    /**\r\n     * Returns the number of elements in this list.\r\n     * @return {number} the number of elements in this list.\r\n     */\r\n    size(): number {\r\n        return this.nElements;\r\n    }\r\n\r\n    /**\r\n     * Returns true if this list contains no elements.\r\n     * @return {boolean} true if this list contains no elements.\r\n     */\r\n    isEmpty(): boolean {\r\n        return this.nElements <= 0;\r\n    }\r\n\r\n    toString(): string {\r\n        return arrays.toString(this.toArray());\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private nodeAtIndex(index: number): ILinkedListNode<T> {\r\n\r\n        if (index < 0 || index >= this.nElements) {\r\n            return null;\r\n        }\r\n        if (index === (this.nElements - 1)) {\r\n            return this.lastNode;\r\n        }\r\n        var node = this.firstNode;\r\n        for (var i = 0; i < index; i++) {\r\n            node = node.next;\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private createNode(item: T): ILinkedListNode<T> {\r\n        return {\r\n            element: item,\r\n            next: null\r\n        };\r\n    }\r\n} // End of linked list\r\n\r\n\r\n\r\n// Used internally by dictionary\r\nexport interface IDictionaryPair<K, V> {\r\n    key: K;\r\n    value: V;\r\n}\r\n\r\nexport class Dictionary<K, V>{\r\n\r\n    /**\r\n     * Object holding the key-value pairs.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    protected table: { [key: string]: IDictionaryPair<K, V> };\r\n    //: [key: K] will not work since indices can only by strings in javascript and typescript enforces this.\r\n\r\n    /**\r\n     * Number of elements in the list.\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    protected nElements: number;\r\n\r\n    /**\r\n     * Function used to convert keys to strings.\r\n     * @type {function(Object):string}\r\n     * @protected\r\n     */\r\n    protected toStr: (key: K) => string;\r\n\r\n\r\n    /**\r\n     * Creates an empty dictionary.\r\n     * @class <p>Dictionaries map keys to values; each key can map to at most one value.\r\n     * This implementation accepts any kind of objects as keys.</p>\r\n     *\r\n     * <p>If the keys are custom objects a function which converts keys to unique\r\n     * strings must be provided. Example:</p>\r\n     * <pre>\r\n     * function petToString(pet) {\r\n     *  return pet.name;\r\n     * }\r\n     * </pre>\r\n     * @constructor\r\n     * @param {function(Object):string=} toStrFunction optional function used\r\n     * to convert keys to strings. If the keys aren't strings or if toString()\r\n     * is not appropriate, a custom function which receives a key and returns a\r\n     * unique string must be provided.\r\n     */\r\n    constructor(toStrFunction?: (key: K) => string) {\r\n        this.table = {};\r\n        this.nElements = 0;\r\n        this.toStr = toStrFunction || defaultToString;\r\n    }\r\n\r\n\r\n    /**\r\n     * Returns the value to which this dictionary maps the specified key.\r\n     * Returns undefined if this dictionary contains no mapping for this key.\r\n     * @param {Object} key key whose associated value is to be returned.\r\n     * @return {*} the value to which this dictionary maps the specified key or\r\n     * undefined if the map contains no mapping for this key.\r\n     */\r\n    getValue(key: K): V {\r\n        var pair: IDictionaryPair<K, V> = this.table['$' + this.toStr(key)];\r\n        if (isUndefined(pair)) {\r\n            return undefined;\r\n        }\r\n        return pair.value;\r\n    }\r\n\r\n\r\n    /**\r\n     * Associates the specified value with the specified key in this dictionary.\r\n     * If the dictionary previously contained a mapping for this key, the old\r\n     * value is replaced by the specified value.\r\n     * @param {Object} key key with which the specified value is to be\r\n     * associated.\r\n     * @param {Object} value value to be associated with the specified key.\r\n     * @return {*} previous value associated with the specified key, or undefined if\r\n     * there was no mapping for the key or if the key/value are undefined.\r\n     */\r\n    setValue(key: K, value: V): V {\r\n\r\n        if (isUndefined(key) || isUndefined(value)) {\r\n            return undefined;\r\n        }\r\n\r\n        var ret: V;\r\n        var k = '$' + this.toStr(key);\r\n        var previousElement: IDictionaryPair<K, V> = this.table[k];\r\n        if (isUndefined(previousElement)) {\r\n            this.nElements++;\r\n            ret = undefined;\r\n        } else {\r\n            ret = previousElement.value;\r\n        }\r\n        this.table[k] = {\r\n            key: key,\r\n            value: value\r\n        };\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * Removes the mapping for this key from this dictionary if it is present.\r\n     * @param {Object} key key whose mapping is to be removed from the\r\n     * dictionary.\r\n     * @return {*} previous value associated with specified key, or undefined if\r\n     * there was no mapping for key.\r\n     */\r\n    remove(key: K): V {\r\n        var k = '$' + this.toStr(key);\r\n        var previousElement: IDictionaryPair<K, V> = this.table[k];\r\n        if (!isUndefined(previousElement)) {\r\n            delete this.table[k];\r\n            this.nElements--;\r\n            return previousElement.value;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Returns an array containing all of the keys in this dictionary.\r\n     * @return {Array} an array containing all of the keys in this dictionary.\r\n     */\r\n    keys(): K[] {\r\n        var array: K[] = [];\r\n        for (var name in this.table) {\r\n            if (has(this.table, name)) {\r\n                var pair: IDictionaryPair<K, V> = this.table[name];\r\n                array.push(pair.key);\r\n            }\r\n        }\r\n        return array;\r\n    }\r\n\r\n    /**\r\n     * Returns an array containing all of the values in this dictionary.\r\n     * @return {Array} an array containing all of the values in this dictionary.\r\n     */\r\n    values(): V[] {\r\n        var array: V[] = [];\r\n        for (var name in this.table) {\r\n            if (has(this.table, name)) {\r\n                var pair: IDictionaryPair<K, V> = this.table[name];\r\n                array.push(pair.value);\r\n            }\r\n        }\r\n        return array;\r\n    }\r\n\r\n    /**\r\n    * Executes the provided function once for each key-value pair\r\n    * present in this dictionary.\r\n    * @param {function(Object,Object):*} callback function to execute, it is\r\n    * invoked with two arguments: key and value. To break the iteration you can\r\n    * optionally return false.\r\n    */\r\n    forEach(callback: (key: K, value: V) => any): void {\r\n        for (var name in this.table) {\r\n            if (has(this.table, name)) {\r\n                var pair: IDictionaryPair<K, V> = this.table[name];\r\n                var ret = callback(pair.key, pair.value);\r\n                if (ret === false) {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns true if this dictionary contains a mapping for the specified key.\r\n     * @param {Object} key key whose presence in this dictionary is to be\r\n     * tested.\r\n     * @return {boolean} true if this dictionary contains a mapping for the\r\n     * specified key.\r\n     */\r\n    containsKey(key: K): boolean {\r\n        return !isUndefined(this.getValue(key));\r\n    }\r\n\r\n    /**\r\n    * Removes all mappings from this dictionary.\r\n    * @this {Dictionary}\r\n    */\r\n    clear() {\r\n        this.table = {};\r\n        this.nElements = 0;\r\n    }\r\n\r\n    /**\r\n     * Returns the number of keys in this dictionary.\r\n     * @return {number} the number of key-value mappings in this dictionary.\r\n     */\r\n    size(): number {\r\n        return this.nElements;\r\n    }\r\n\r\n    /**\r\n     * Returns true if this dictionary contains no mappings.\r\n     * @return {boolean} true if this dictionary contains no mappings.\r\n     */\r\n    isEmpty(): boolean {\r\n        return this.nElements <= 0;\r\n    }\r\n\r\n    toString(): string {\r\n        var toret = \"{\";\r\n        this.forEach((k, v) => {\r\n            toret = toret + \"\\n\\t\" + k.toString() + \" : \" + v.toString();\r\n        });\r\n        return toret + \"\\n}\";\r\n    }\r\n} // End of dictionary\r\n\r\n/**\r\n * This class is used by the LinkedDictionary Internally\r\n * Has to be a class, not an interface, because it needs to have\r\n * the 'unlink' function defined.\r\n */\r\nclass LinkedDictionaryPair<K, V> implements IDictionaryPair<K, V> {\r\n    prev: LinkedDictionaryPair<K, V>;\r\n    next: LinkedDictionaryPair<K, V>;\r\n\r\n    constructor(public key: K, public value: V) { }\r\n\r\n    unlink() {\r\n        this.prev.next = this.next;\r\n        this.next.prev = this.prev;\r\n    }\r\n}\r\n\r\nexport class LinkedDictionary<K, V> extends Dictionary<K, V> {\r\n    private head: LinkedDictionaryPair<K, V>; // Head Identifier of the list.  holds no Key or Value\r\n    private tail: LinkedDictionaryPair<K, V>; // Tail Identifier of the list.  holds no Key or Value\r\n\r\n    constructor(toStrFunction?: (key: K) => string) {\r\n        super(toStrFunction);\r\n        this.head = new LinkedDictionaryPair(null, null);\r\n        this.tail = new LinkedDictionaryPair(null, null);\r\n        this.head.next = this.tail;\r\n        this.tail.prev = this.head;\r\n    }\r\n\r\n    /**\r\n     * Inserts the new node to the 'tail' of the list, updating the\r\n     * neighbors, and moving 'this.tail' (the End of List indicator) that\r\n     * to the end.\r\n     */\r\n    private appendToTail(entry: LinkedDictionaryPair<K, V>) {\r\n        var lastNode = this.tail.prev;\r\n        lastNode.next = entry;\r\n        entry.prev = lastNode;\r\n        entry.next = this.tail;\r\n        this.tail.prev = entry;\r\n    }\r\n\r\n    /**\r\n     * Retrieves a linked dictionary from the table internally\r\n     */\r\n    private getLinkedDictionaryPair(key: K): LinkedDictionaryPair<K, V> {\r\n        if (isUndefined(key)) {\r\n            return undefined;\r\n        }\r\n        var k = '$' + this.toStr(key);\r\n        var pair = <LinkedDictionaryPair<K, V>>(this.table[k]);\r\n        return pair;\r\n    }\r\n\r\n    /**\r\n     * Returns the value to which this dictionary maps the specified key.\r\n     * Returns undefined if this dictionary contains no mapping for this key.\r\n     * @param {Object} key key whose associated value is to be returned.\r\n     * @return {*} the value to which this dictionary maps the specified key or\r\n     * undefined if the map contains no mapping for this key.\r\n     */\r\n    getValue(key: K): V {\r\n        var pair = this.getLinkedDictionaryPair(key);\r\n        if (!isUndefined(pair)) {\r\n            return pair.value;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Removes the mapping for this key from this dictionary if it is present.\r\n     * Also, if a value is present for this key, the entry is removed from the\r\n     * insertion ordering.\r\n     * @param {Object} key key whose mapping is to be removed from the\r\n     * dictionary.\r\n     * @return {*} previous value associated with specified key, or undefined if\r\n     * there was no mapping for key.\r\n     */\r\n    remove(key: K): V {\r\n        var pair = this.getLinkedDictionaryPair(key);\r\n        if (!isUndefined(pair)) {\r\n            super.remove(key); // This will remove it from the table\r\n            pair.unlink(); // This will unlink it from the chain\r\n            return pair.value;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n    * Removes all mappings from this LinkedDictionary.\r\n    * @this {LinkedDictionary}\r\n    */\r\n    clear() {\r\n        super.clear();\r\n        this.head.next = this.tail;\r\n        this.tail.prev = this.head;\r\n    }\r\n\r\n    /**\r\n     * Internal function used when updating an existing KeyValue pair.\r\n     * It places the new value indexed by key into the table, but maintains\r\n     * its place in the linked ordering.\r\n     */\r\n    private replace(oldPair: LinkedDictionaryPair<K, V>, newPair: LinkedDictionaryPair<K, V>) {\r\n        var k = '$' + this.toStr(newPair.key);\r\n\r\n        // set the new Pair's links to existingPair's links\r\n        newPair.next = oldPair.next;\r\n        newPair.prev = oldPair.prev;\r\n\r\n        // Delete Existing Pair from the table, unlink it from chain.\r\n        // As a result, the nElements gets decremented by this operation\r\n        this.remove(oldPair.key);\r\n\r\n        // Link new Pair in place of where oldPair was,\r\n        // by pointing the old pair's neighbors to it.\r\n        newPair.prev.next = newPair;\r\n        newPair.next.prev = newPair;\r\n\r\n        this.table[k] = newPair;\r\n\r\n        // To make up for the fact that the number of elements was decremented,\r\n        // We need to increase it by one.\r\n        ++this.nElements;\r\n\r\n    }\r\n\r\n    /**\r\n     * Associates the specified value with the specified key in this dictionary.\r\n     * If the dictionary previously contained a mapping for this key, the old\r\n     * value is replaced by the specified value.\r\n     * Updating of a key that already exists maintains its place in the\r\n     * insertion order into the map.\r\n     * @param {Object} key key with which the specified value is to be\r\n     * associated.\r\n     * @param {Object} value value to be associated with the specified key.\r\n     * @return {*} previous value associated with the specified key, or undefined if\r\n     * there was no mapping for the key or if the key/value are undefined.\r\n     */\r\n    setValue(key: K, value: V): V {\r\n\r\n        if (isUndefined(key) || isUndefined(value)) {\r\n            return undefined;\r\n        }\r\n\r\n        var existingPair = this.getLinkedDictionaryPair(key);\r\n        var newPair = new LinkedDictionaryPair<K, V>(key, value);\r\n\r\n        var k = '$' + this.toStr(key);\r\n\r\n        // If there is already an element for that key, we\r\n        // keep it's place in the LinkedList\r\n        if (!isUndefined(existingPair)) {\r\n            this.replace(existingPair, newPair);\r\n\r\n            return existingPair.value;\r\n        } else {\r\n            this.appendToTail(newPair);\r\n            this.table[k] = newPair;\r\n            ++this.nElements;\r\n\r\n            return undefined;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Returns an array containing all of the keys in this LinkedDictionary, ordered\r\n     * by insertion order.\r\n     * @return {Array} an array containing all of the keys in this LinkedDictionary,\r\n     * ordered by insertion order.\r\n     */\r\n    keys(): K[] {\r\n        var array: K[] = [];\r\n        this.forEach((key, value) => {\r\n            array.push(key);\r\n        });\r\n        return array;\r\n    }\r\n\r\n    /**\r\n     * Returns an array containing all of the values in this LinkedDictionary, ordered by\r\n     * insertion order.\r\n     * @return {Array} an array containing all of the values in this LinkedDictionary,\r\n     * ordered by insertion order.\r\n     */\r\n    values(): V[] {\r\n        var array: V[] = [];\r\n        this.forEach((key, value) => {\r\n            array.push(value);\r\n        });\r\n        return array;\r\n    }\r\n\r\n    /**\r\n    * Executes the provided function once for each key-value pair\r\n    * present in this LinkedDictionary. It is done in the order of insertion\r\n    * into the LinkedDictionary\r\n    * @param {function(Object,Object):*} callback function to execute, it is\r\n    * invoked with two arguments: key and value. To break the iteration you can\r\n    * optionally return false.\r\n    */\r\n    forEach(callback: (key: K, value: V) => any): void {\r\n        var crawlNode = this.head.next;\r\n        while (crawlNode.next != null) {\r\n            var ret = callback(crawlNode.key, crawlNode.value);\r\n            if (ret === false) {\r\n                return;\r\n            }\r\n            crawlNode = crawlNode.next;\r\n        }\r\n    }\r\n\r\n} // End of LinkedDictionary\r\n// /**\r\n//  * Returns true if this dictionary is equal to the given dictionary.\r\n//  * Two dictionaries are equal if they contain the same mappings.\r\n//  * @param {Dictionary} other the other dictionary.\r\n//  * @param {function(Object,Object):boolean=} valuesEqualFunction optional\r\n//  * function used to check if two values are equal.\r\n//  * @return {boolean} true if this dictionary is equal to the given dictionary.\r\n//  */\r\n// Dictionary.prototype.equals = function(other,valuesEqualFunction) {\r\n// \tvar eqF = valuesEqualFunction || defaultEquals;\r\n// \tif(!(other instanceof Dictionary)){\r\n// \t\treturn false;\r\n// \t}\r\n// \tif(this.size() !== other.size()){\r\n// \t\treturn false;\r\n// \t}\r\n// \treturn this.equalsAux(this.firstNode,other.firstNode,eqF);\r\n// }\r\n\r\nexport class MultiDictionary<K, V> {\r\n\r\n    // Cannot do:\r\n    // class MultiDictionary<K,V> extends Dictionary<K,Array<V>> {\r\n    // Since we want to reuse the function name setValue and types in signature become incompatible\r\n    // Therefore we are using composition instead of inheritance\r\n    private dict: Dictionary<K, Array<V>>;\r\n    private equalsF: IEqualsFunction<V>;\r\n    private allowDuplicate: boolean;\r\n\r\n    /**\r\n     * Creates an empty multi dictionary.\r\n     * @class <p>A multi dictionary is a special kind of dictionary that holds\r\n     * multiple values against each key. Setting a value into the dictionary will\r\n     * add the value to an array at that key. Getting a key will return an array,\r\n     * holding all the values set to that key.\r\n     * You can configure to allow duplicates in the values.\r\n     * This implementation accepts any kind of objects as keys.</p>\r\n     *\r\n     * <p>If the keys are custom objects a function which converts keys to strings must be\r\n     * provided. Example:</p>\r\n     *\r\n     * <pre>\r\n     * function petToString(pet) {\r\n       *  return pet.name;\r\n       * }\r\n     * </pre>\r\n     * <p>If the values are custom objects a function to check equality between values\r\n     * must be provided. Example:</p>\r\n     *\r\n     * <pre>\r\n     * function petsAreEqualByAge(pet1,pet2) {\r\n       *  return pet1.age===pet2.age;\r\n       * }\r\n     * </pre>\r\n     * @constructor\r\n     * @param {function(Object):string=} toStrFunction optional function\r\n     * to convert keys to strings. If the keys aren't strings or if toString()\r\n     * is not appropriate, a custom function which receives a key and returns a\r\n     * unique string must be provided.\r\n     * @param {function(Object,Object):boolean=} valuesEqualsFunction optional\r\n     * function to check if two values are equal.\r\n     *\r\n     * @param allowDuplicateValues\r\n     */\r\n    constructor(toStrFunction?: (key: K) => string, valuesEqualsFunction?: IEqualsFunction<V>, allowDuplicateValues = false) {\r\n        this.dict = new Dictionary<K, Array<V>>(toStrFunction);\r\n        this.equalsF = valuesEqualsFunction || defaultEquals;\r\n        this.allowDuplicate = allowDuplicateValues;\r\n    }\r\n    /**\r\n    * Returns an array holding the values to which this dictionary maps\r\n    * the specified key.\r\n    * Returns an empty array if this dictionary contains no mappings for this key.\r\n    * @param {Object} key key whose associated values are to be returned.\r\n    * @return {Array} an array holding the values to which this dictionary maps\r\n    * the specified key.\r\n    */\r\n    getValue(key: K): V[] {\r\n        var values = this.dict.getValue(key);\r\n        if (isUndefined(values)) {\r\n            return [];\r\n        }\r\n        return arrays.copy(values);\r\n    }\r\n\r\n    /**\r\n     * Adds the value to the array associated with the specified key, if\r\n     * it is not already present.\r\n     * @param {Object} key key with which the specified value is to be\r\n     * associated.\r\n     * @param {Object} value the value to add to the array at the key\r\n     * @return {boolean} true if the value was not already associated with that key.\r\n     */\r\n    setValue(key: K, value: V): boolean {\r\n\r\n        if (isUndefined(key) || isUndefined(value)) {\r\n            return false;\r\n        }\r\n        if (!this.containsKey(key)) {\r\n            this.dict.setValue(key, [value]);\r\n            return true;\r\n        }\r\n        var array = this.dict.getValue(key);\r\n        if (!this.allowDuplicate) {\r\n            if (arrays.contains(array, value, this.equalsF)) {\r\n                return false;\r\n            }\r\n        }\r\n        array.push(value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Removes the specified values from the array of values associated with the\r\n     * specified key. If a value isn't given, all values associated with the specified\r\n     * key are removed.\r\n     * @param {Object} key key whose mapping is to be removed from the\r\n     * dictionary.\r\n     * @param {Object=} value optional argument to specify the value to remove\r\n     * from the array associated with the specified key.\r\n     * @return {*} true if the dictionary changed, false if the key doesn't exist or\r\n     * if the specified value isn't associated with the specified key.\r\n     */\r\n    remove(key: K, value?: V): boolean {\r\n        if (isUndefined(value)) {\r\n            var v = this.dict.remove(key);\r\n            return !isUndefined(v);\r\n        }\r\n        var array = this.dict.getValue(key);\r\n        if (arrays.remove(array, value, this.equalsF)) {\r\n            if (array.length === 0) {\r\n                this.dict.remove(key);\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Returns an array containing all of the keys in this dictionary.\r\n     * @return {Array} an array containing all of the keys in this dictionary.\r\n     */\r\n    keys(): K[] {\r\n        return this.dict.keys();\r\n    }\r\n\r\n    /**\r\n     * Returns an array containing all of the values in this dictionary.\r\n     * @return {Array} an array containing all of the values in this dictionary.\r\n     */\r\n    values(): V[] {\r\n        var values = this.dict.values();\r\n        var array: Array<V> = [];\r\n        for (var i = 0; i < values.length; i++) {\r\n            var v = values[i];\r\n            for (var j = 0; j < v.length; j++) {\r\n                array.push(v[j]);\r\n            }\r\n        }\r\n        return array;\r\n    }\r\n\r\n    /**\r\n     * Returns true if this dictionary at least one value associatted the specified key.\r\n     * @param {Object} key key whose presence in this dictionary is to be\r\n     * tested.\r\n     * @return {boolean} true if this dictionary at least one value associatted\r\n     * the specified key.\r\n     */\r\n    containsKey(key: K): boolean {\r\n        return this.dict.containsKey(key);\r\n    }\r\n\r\n    /**\r\n     * Removes all mappings from this dictionary.\r\n     */\r\n    clear(): void {\r\n        this.dict.clear();\r\n    }\r\n\r\n    /**\r\n     * Returns the number of keys in this dictionary.\r\n     * @return {number} the number of key-value mappings in this dictionary.\r\n     */\r\n    size(): number {\r\n        return this.dict.size();\r\n    }\r\n\r\n    /**\r\n     * Returns true if this dictionary contains no mappings.\r\n     * @return {boolean} true if this dictionary contains no mappings.\r\n     */\r\n    isEmpty(): boolean {\r\n        return this.dict.isEmpty();\r\n    }\r\n}// end of multi dictionary\r\n\r\nexport class Heap<T> {\r\n    /**\r\n     * Array used to store the elements od the heap.\r\n     * @type {Array.<Object>}\r\n     * @private\r\n     */\r\n    private data: T[] = [];\r\n    /**\r\n     * Function used to compare elements.\r\n     * @type {function(Object,Object):number}\r\n     * @private\r\n     */\r\n    private compare: ICompareFunction<T>;\r\n    /**\r\n     * Creates an empty Heap.\r\n     * @class\r\n     * <p>A heap is a binary tree, where the nodes maintain the heap property:\r\n     * each node is smaller than each of its children and therefore a MinHeap\r\n     * This implementation uses an array to store elements.</p>\r\n     * <p>If the inserted elements are custom objects a compare function must be provided,\r\n     *  at construction time, otherwise the <=, === and >= operators are\r\n     * used to compare elements. Example:</p>\r\n     *\r\n     * <pre>\r\n     * function compare(a, b) {\r\n     *  if (a is less than b by some ordering criterion) {\r\n     *     return -1;\r\n     *  } if (a is greater than b by the ordering criterion) {\r\n     *     return 1;\r\n     *  }\r\n     *  // a must be equal to b\r\n     *  return 0;\r\n     * }\r\n     * </pre>\r\n     *\r\n     * <p>If a Max-Heap is wanted (greater elements on top) you can a provide a\r\n     * reverse compare function to accomplish that behavior. Example:</p>\r\n     *\r\n     * <pre>\r\n     * function reverseCompare(a, b) {\r\n     *  if (a is less than b by some ordering criterion) {\r\n     *     return 1;\r\n     *  } if (a is greater than b by the ordering criterion) {\r\n     *     return -1;\r\n     *  }\r\n     *  // a must be equal to b\r\n     *  return 0;\r\n     * }\r\n     * </pre>\r\n     *\r\n     * @constructor\r\n     * @param {function(Object,Object):number=} compareFunction optional\r\n     * function used to compare two elements. Must return a negative integer,\r\n     * zero, or a positive integer as the first argument is less than, equal to,\r\n     * or greater than the second.\r\n     */\r\n    constructor(compareFunction?: ICompareFunction<T>) {\r\n        this.compare = compareFunction || defaultCompare;\r\n    }\r\n\r\n    /**\r\n     * Returns the index of the left child of the node at the given index.\r\n     * @param {number} nodeIndex The index of the node to get the left child\r\n     * for.\r\n     * @return {number} The index of the left child.\r\n     * @private\r\n     */\r\n    private leftChildIndex(nodeIndex: number): number {\r\n        return (2 * nodeIndex) + 1;\r\n    }\r\n    /**\r\n     * Returns the index of the right child of the node at the given index.\r\n     * @param {number} nodeIndex The index of the node to get the right child\r\n     * for.\r\n     * @return {number} The index of the right child.\r\n     * @private\r\n     */\r\n    private rightChildIndex(nodeIndex: number): number {\r\n        return (2 * nodeIndex) + 2;\r\n    }\r\n    /**\r\n     * Returns the index of the parent of the node at the given index.\r\n     * @param {number} nodeIndex The index of the node to get the parent for.\r\n     * @return {number} The index of the parent.\r\n     * @private\r\n     */\r\n    private parentIndex(nodeIndex: number): number {\r\n        return Math.floor((nodeIndex - 1) / 2);\r\n    }\r\n    /**\r\n     * Returns the index of the smaller child node (if it exists).\r\n     * @param {number} leftChild left child index.\r\n     * @param {number} rightChild right child index.\r\n     * @return {number} the index with the minimum value or -1 if it doesn't\r\n     * exists.\r\n     * @private\r\n     */\r\n    private minIndex(leftChild: number, rightChild: number): number {\r\n\r\n        if (rightChild >= this.data.length) {\r\n            if (leftChild >= this.data.length) {\r\n                return -1;\r\n            } else {\r\n                return leftChild;\r\n            }\r\n        } else {\r\n            if (this.compare(this.data[leftChild], this.data[rightChild]) <= 0) {\r\n                return leftChild;\r\n            } else {\r\n                return rightChild;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Moves the node at the given index up to its proper place in the heap.\r\n     * @param {number} index The index of the node to move up.\r\n     * @private\r\n     */\r\n    private siftUp(index: number): void {\r\n\r\n        var parent = this.parentIndex(index);\r\n        while (index > 0 && this.compare(this.data[parent], this.data[index]) > 0) {\r\n            arrays.swap(this.data, parent, index);\r\n            index = parent;\r\n            parent = this.parentIndex(index);\r\n        }\r\n    }\r\n    /**\r\n     * Moves the node at the given index down to its proper place in the heap.\r\n     * @param {number} nodeIndex The index of the node to move down.\r\n     * @private\r\n     */\r\n    private siftDown(nodeIndex: number): void {\r\n\r\n        //smaller child index\r\n        var min = this.minIndex(this.leftChildIndex(nodeIndex),\r\n            this.rightChildIndex(nodeIndex));\r\n\r\n        while (min >= 0 && this.compare(this.data[nodeIndex],\r\n            this.data[min]) > 0) {\r\n            arrays.swap(this.data, min, nodeIndex);\r\n            nodeIndex = min;\r\n            min = this.minIndex(this.leftChildIndex(nodeIndex),\r\n                this.rightChildIndex(nodeIndex));\r\n        }\r\n    }\r\n    /**\r\n     * Retrieves but does not remove the root element of this heap.\r\n     * @return {*} The value at the root of the heap. Returns undefined if the\r\n     * heap is empty.\r\n     */\r\n    peek(): T {\r\n\r\n        if (this.data.length > 0) {\r\n            return this.data[0];\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n    /**\r\n     * Adds the given element into the heap.\r\n     * @param {*} element the element.\r\n     * @return true if the element was added or fals if it is undefined.\r\n     */\r\n    add(element: T): boolean {\r\n        if (isUndefined(element)) {\r\n            return undefined;\r\n        }\r\n        this.data.push(element);\r\n        this.siftUp(this.data.length - 1);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Retrieves and removes the root element of this heap.\r\n     * @return {*} The value removed from the root of the heap. Returns\r\n     * undefined if the heap is empty.\r\n     */\r\n    removeRoot(): T {\r\n\r\n        if (this.data.length > 0) {\r\n            var obj = this.data[0];\r\n            this.data[0] = this.data[this.data.length - 1];\r\n            this.data.splice(this.data.length - 1, 1);\r\n            if (this.data.length > 0) {\r\n                this.siftDown(0);\r\n            }\r\n            return obj;\r\n        }\r\n        return undefined;\r\n    }\r\n    /**\r\n     * Returns true if this heap contains the specified element.\r\n     * @param {Object} element element to search for.\r\n     * @return {boolean} true if this Heap contains the specified element, false\r\n     * otherwise.\r\n     */\r\n    contains(element: T): boolean {\r\n        var equF = compareToEquals(this.compare);\r\n        return arrays.contains(this.data, element, equF);\r\n    }\r\n    /**\r\n     * Returns the number of elements in this heap.\r\n     * @return {number} the number of elements in this heap.\r\n     */\r\n    size(): number {\r\n        return this.data.length;\r\n    }\r\n    /**\r\n     * Checks if this heap is empty.\r\n     * @return {boolean} true if and only if this heap contains no items; false\r\n     * otherwise.\r\n     */\r\n    isEmpty(): boolean {\r\n        return this.data.length <= 0;\r\n    }\r\n    /**\r\n     * Removes all of the elements from this heap.\r\n     */\r\n    clear(): void {\r\n        this.data.length = 0;\r\n    }\r\n\r\n    /**\r\n     * Executes the provided function once for each element present in this heap in\r\n     * no particular order.\r\n     * @param {function(Object):*} callback function to execute, it is\r\n     * invoked with one argument: the element value, to break the iteration you can\r\n     * optionally return false.\r\n     */\r\n    forEach(callback: (item: T) => boolean) {\r\n        arrays.forEach(this.data, callback);\r\n    }\r\n}\r\n\r\nexport class Stack<T> {\r\n    /**\r\n     * List containing the elements.\r\n     * @type LinkedList\r\n     * @private\r\n     */\r\n    private list: LinkedList<T>;\r\n    /**\r\n     * Creates an empty Stack.\r\n     * @class A Stack is a Last-In-First-Out (LIFO) data structure, the last\r\n     * element added to the stack will be the first one to be removed. This\r\n     * implementation uses a linked list as a container.\r\n     * @constructor\r\n     */\r\n    constructor() {\r\n        this.list = new LinkedList<T>();\r\n    }\r\n\r\n    /**\r\n     * Pushes an item onto the top of this stack.\r\n     * @param {Object} elem the element to be pushed onto this stack.\r\n     * @return {boolean} true if the element was pushed or false if it is undefined.\r\n     */\r\n    push(elem: T) {\r\n        return this.list.add(elem, 0);\r\n    }\r\n    /**\r\n     * Pushes an item onto the top of this stack.\r\n     * @param {Object} elem the element to be pushed onto this stack.\r\n     * @return {boolean} true if the element was pushed or false if it is undefined.\r\n     */\r\n    add(elem: T) {\r\n        return this.list.add(elem, 0);\r\n    }\r\n    /**\r\n     * Removes the object at the top of this stack and returns that object.\r\n     * @return {*} the object at the top of this stack or undefined if the\r\n     * stack is empty.\r\n     */\r\n    pop(): T {\r\n        return this.list.removeElementAtIndex(0);\r\n    }\r\n    /**\r\n     * Looks at the object at the top of this stack without removing it from the\r\n     * stack.\r\n     * @return {*} the object at the top of this stack or undefined if the\r\n     * stack is empty.\r\n     */\r\n    peek(): T {\r\n        return this.list.first();\r\n    }\r\n    /**\r\n     * Returns the number of elements in this stack.\r\n     * @return {number} the number of elements in this stack.\r\n     */\r\n    size(): number {\r\n        return this.list.size();\r\n    }\r\n\r\n    /**\r\n     * Returns true if this stack contains the specified element.\r\n     * <p>If the elements inside this stack are\r\n     * not comparable with the === operator, a custom equals function should be\r\n     * provided to perform searches, the function must receive two arguments and\r\n     * return true if they are equal, false otherwise. Example:</p>\r\n     *\r\n     * <pre>\r\n     * var petsAreEqualByName (pet1, pet2) {\r\n     *  return pet1.name === pet2.name;\r\n     * }\r\n     * </pre>\r\n     * @param {Object} elem element to search for.\r\n     * @param {function(Object,Object):boolean=} equalsFunction optional\r\n     * function to check if two elements are equal.\r\n     * @return {boolean} true if this stack contains the specified element,\r\n     * false otherwise.\r\n     */\r\n    contains(elem: T, equalsFunction?: IEqualsFunction<T>) {\r\n        return this.list.contains(elem, equalsFunction);\r\n    }\r\n    /**\r\n     * Checks if this stack is empty.\r\n     * @return {boolean} true if and only if this stack contains no items; false\r\n     * otherwise.\r\n     */\r\n    isEmpty(): boolean {\r\n        return this.list.isEmpty();\r\n    }\r\n    /**\r\n     * Removes all of the elements from this stack.\r\n     */\r\n    clear(): void {\r\n        this.list.clear();\r\n    }\r\n\r\n    /**\r\n     * Executes the provided function once for each element present in this stack in\r\n     * LIFO order.\r\n     * @param {function(Object):*} callback function to execute, it is\r\n     * invoked with one argument: the element value, to break the iteration you can\r\n     * optionally return false.\r\n     */\r\n    forEach(callback: ILoopFunction<T>) {\r\n        this.list.forEach(callback);\r\n    }\r\n} // End of stack\r\n\r\n\r\n\r\nexport class Queue<T>{\r\n\r\n    /**\r\n     * List containing the elements.\r\n     * @type LinkedList\r\n     * @private\r\n     */\r\n    private list: LinkedList<T>;\r\n\r\n    /**\r\n     * Creates an empty queue.\r\n     * @class A queue is a First-In-First-Out (FIFO) data structure, the first\r\n     * element added to the queue will be the first one to be removed. This\r\n     * implementation uses a linked list as a container.\r\n     * @constructor\r\n     */\r\n    constructor() {\r\n        this.list = new LinkedList<T>();\r\n    }\r\n\r\n\r\n    /**\r\n     * Inserts the specified element into the end of this queue.\r\n     * @param {Object} elem the element to insert.\r\n     * @return {boolean} true if the element was inserted, or false if it is undefined.\r\n     */\r\n    enqueue(elem: T): boolean {\r\n        return this.list.add(elem);\r\n    }\r\n    /**\r\n     * Inserts the specified element into the end of this queue.\r\n     * @param {Object} elem the element to insert.\r\n     * @return {boolean} true if the element was inserted, or false if it is undefined.\r\n     */\r\n    add(elem: T): boolean {\r\n        return this.list.add(elem);\r\n    }\r\n    /**\r\n     * Retrieves and removes the head of this queue.\r\n     * @return {*} the head of this queue, or undefined if this queue is empty.\r\n     */\r\n    dequeue(): T {\r\n        if (this.list.size() !== 0) {\r\n            var el = this.list.first();\r\n            this.list.removeElementAtIndex(0);\r\n            return el;\r\n        }\r\n        return undefined;\r\n    }\r\n    /**\r\n     * Retrieves, but does not remove, the head of this queue.\r\n     * @return {*} the head of this queue, or undefined if this queue is empty.\r\n     */\r\n    peek(): T {\r\n\r\n        if (this.list.size() !== 0) {\r\n            return this.list.first();\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Returns the number of elements in this queue.\r\n     * @return {number} the number of elements in this queue.\r\n     */\r\n    size(): number {\r\n        return this.list.size();\r\n    }\r\n\r\n    /**\r\n     * Returns true if this queue contains the specified element.\r\n     * <p>If the elements inside this stack are\r\n     * not comparable with the === operator, a custom equals function should be\r\n     * provided to perform searches, the function must receive two arguments and\r\n     * return true if they are equal, false otherwise. Example:</p>\r\n     *\r\n     * <pre>\r\n     * var petsAreEqualByName (pet1, pet2) {\r\n     *  return pet1.name === pet2.name;\r\n     * }\r\n     * </pre>\r\n     * @param {Object} elem element to search for.\r\n     * @param {function(Object,Object):boolean=} equalsFunction optional\r\n     * function to check if two elements are equal.\r\n     * @return {boolean} true if this queue contains the specified element,\r\n     * false otherwise.\r\n     */\r\n    contains(elem: T, equalsFunction?: IEqualsFunction<T>): boolean {\r\n        return this.list.contains(elem, equalsFunction);\r\n    }\r\n\r\n    /**\r\n     * Checks if this queue is empty.\r\n     * @return {boolean} true if and only if this queue contains no items; false\r\n     * otherwise.\r\n     */\r\n    isEmpty(): boolean {\r\n        return this.list.size() <= 0;\r\n    }\r\n\r\n    /**\r\n     * Removes all of the elements from this queue.\r\n     */\r\n    clear(): void {\r\n        this.list.clear();\r\n    }\r\n\r\n    /**\r\n     * Executes the provided function once for each element present in this queue in\r\n     * FIFO order.\r\n     * @param {function(Object):*} callback function to execute, it is\r\n     * invoked with one argument: the element value, to break the iteration you can\r\n     * optionally return false.\r\n     */\r\n    forEach(callback: ILoopFunction<T>) {\r\n        this.list.forEach(callback);\r\n    }\r\n\r\n} // End of queue\r\n\r\n\r\nexport class PriorityQueue<T> {\r\n\r\n    private heap: Heap<T>;\r\n    /**\r\n     * Creates an empty priority queue.\r\n     * @class <p>In a priority queue each element is associated with a \"priority\",\r\n     * elements are dequeued in highest-priority-first order (the elements with the\r\n     * highest priority are dequeued first). Priority Queues are implemented as heaps.\r\n     * If the inserted elements are custom objects a compare function must be provided,\r\n     * otherwise the <=, === and >= operators are used to compare object priority.</p>\r\n     * <pre>\r\n     * function compare(a, b) {\r\n     *  if (a is less than b by some ordering criterion) {\r\n     *     return -1;\r\n     *  } if (a is greater than b by the ordering criterion) {\r\n     *     return 1;\r\n     *  }\r\n     *  // a must be equal to b\r\n     *  return 0;\r\n     * }\r\n     * </pre>\r\n     * @constructor\r\n     * @param {function(Object,Object):number=} compareFunction optional\r\n     * function used to compare two element priorities. Must return a negative integer,\r\n     * zero, or a positive integer as the first argument is less than, equal to,\r\n     * or greater than the second.\r\n     */\r\n    constructor(compareFunction?: ICompareFunction<T>) {\r\n        this.heap = new Heap<T>(reverseCompareFunction(compareFunction));\r\n    }\r\n\r\n    /**\r\n     * Inserts the specified element into this priority queue.\r\n     * @param {Object} element the element to insert.\r\n     * @return {boolean} true if the element was inserted, or false if it is undefined.\r\n     */\r\n    enqueue(element: T): boolean {\r\n        return this.heap.add(element);\r\n    }\r\n\r\n    /**\r\n     * Inserts the specified element into this priority queue.\r\n     * @param {Object} element the element to insert.\r\n     * @return {boolean} true if the element was inserted, or false if it is undefined.\r\n     */\r\n    add(element: T): boolean {\r\n        return this.heap.add(element);\r\n    }\r\n\r\n    /**\r\n     * Retrieves and removes the highest priority element of this queue.\r\n     * @return {*} the the highest priority element of this queue,\r\n     *  or undefined if this queue is empty.\r\n     */\r\n    dequeue(): T {\r\n        if (this.heap.size() !== 0) {\r\n            var el = this.heap.peek();\r\n            this.heap.removeRoot();\r\n            return el;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Retrieves, but does not remove, the highest priority element of this queue.\r\n     * @return {*} the highest priority element of this queue, or undefined if this queue is empty.\r\n     */\r\n    peek(): T {\r\n        return this.heap.peek();\r\n    }\r\n\r\n    /**\r\n     * Returns true if this priority queue contains the specified element.\r\n     * @param {Object} element element to search for.\r\n     * @return {boolean} true if this priority queue contains the specified element,\r\n     * false otherwise.\r\n     */\r\n    contains(element: T): boolean {\r\n        return this.heap.contains(element);\r\n    }\r\n\r\n    /**\r\n     * Checks if this priority queue is empty.\r\n     * @return {boolean} true if and only if this priority queue contains no items; false\r\n     * otherwise.\r\n     */\r\n    isEmpty(): boolean {\r\n        return this.heap.isEmpty();\r\n    }\r\n\r\n    /**\r\n     * Returns the number of elements in this priority queue.\r\n     * @return {number} the number of elements in this priority queue.\r\n     */\r\n    size(): number {\r\n        return this.heap.size();\r\n    }\r\n\r\n    /**\r\n     * Removes all of the elements from this priority queue.\r\n     */\r\n    clear(): void {\r\n        this.heap.clear();\r\n    }\r\n\r\n    /**\r\n     * Executes the provided function once for each element present in this queue in\r\n     * no particular order.\r\n     * @param {function(Object):*} callback function to execute, it is\r\n     * invoked with one argument: the element value, to break the iteration you can\r\n     * optionally return false.\r\n     */\r\n    forEach(callback: ILoopFunction<T>) {\r\n        this.heap.forEach(callback);\r\n    }\r\n\r\n} // end of priority queue\r\n\r\n\r\n\r\n\r\nexport class Set<T>{\r\n    private dictionary: Dictionary<T, any>;\r\n\r\n    /**\r\n     * Creates an empty set.\r\n     * @class <p>A set is a data structure that contains no duplicate items.</p>\r\n     * <p>If the inserted elements are custom objects a function\r\n     * which converts elements to strings must be provided. Example:</p>\r\n     *\r\n     * <pre>\r\n     * function petToString(pet) {\r\n     *  return pet.name;\r\n     * }\r\n     * </pre>\r\n     *\r\n     * @constructor\r\n     * @param {function(Object):string=} toStringFunction optional function used\r\n     * to convert elements to strings. If the elements aren't strings or if toString()\r\n     * is not appropriate, a custom function which receives a onject and returns a\r\n     * unique string must be provided.\r\n     */\r\n    constructor(toStringFunction?: (item: T) => string) {\r\n        this.dictionary = new Dictionary<T, any>(toStringFunction);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Returns true if this set contains the specified element.\r\n     * @param {Object} element element to search for.\r\n     * @return {boolean} true if this set contains the specified element,\r\n     * false otherwise.\r\n     */\r\n    contains(element: T): boolean {\r\n        return this.dictionary.containsKey(element);\r\n    }\r\n\r\n    /**\r\n     * Adds the specified element to this set if it is not already present.\r\n     * @param {Object} element the element to insert.\r\n     * @return {boolean} true if this set did not already contain the specified element.\r\n     */\r\n    add(element: T): boolean {\r\n        if (this.contains(element) || isUndefined(element)) {\r\n            return false;\r\n        } else {\r\n            this.dictionary.setValue(element, element);\r\n            return true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Performs an intersecion between this an another set.\r\n     * Removes all values that are not present this set and the given set.\r\n     * @param {Set} otherSet other set.\r\n     */\r\n    intersection(otherSet: Set<T>): void {\r\n        var set = this;\r\n        this.forEach(function(element: T): boolean {\r\n            if (!otherSet.contains(element)) {\r\n                set.remove(element);\r\n            }\r\n            return true;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Performs a union between this an another set.\r\n     * Adds all values from the given set to this set.\r\n     * @param {Set} otherSet other set.\r\n     */\r\n    union(otherSet: Set<T>): void {\r\n        var set = this;\r\n        otherSet.forEach(function(element: T): boolean {\r\n            set.add(element);\r\n            return true;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Performs a difference between this an another set.\r\n     * Removes from this set all the values that are present in the given set.\r\n     * @param {Set} otherSet other set.\r\n     */\r\n    difference(otherSet: Set<T>): void {\r\n        var set = this;\r\n        otherSet.forEach(function(element: T): boolean {\r\n            set.remove(element);\r\n            return true;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Checks whether the given set contains all the elements in this set.\r\n     * @param {Set} otherSet other set.\r\n     * @return {boolean} true if this set is a subset of the given set.\r\n     */\r\n    isSubsetOf(otherSet: Set<T>): boolean {\r\n\r\n        if (this.size() > otherSet.size()) {\r\n            return false;\r\n        }\r\n\r\n        var isSub = true;\r\n        this.forEach(function(element) {\r\n            if (!otherSet.contains(element)) {\r\n                isSub = false;\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        return isSub;\r\n    }\r\n\r\n    /**\r\n     * Removes the specified element from this set if it is present.\r\n     * @return {boolean} true if this set contained the specified element.\r\n     */\r\n    remove(element: T): boolean {\r\n        if (!this.contains(element)) {\r\n            return false;\r\n        } else {\r\n            this.dictionary.remove(element);\r\n            return true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Executes the provided function once for each element\r\n     * present in this set.\r\n     * @param {function(Object):*} callback function to execute, it is\r\n     * invoked with one arguments: the element. To break the iteration you can\r\n     * optionally return false.\r\n     */\r\n    forEach(callback: ILoopFunction<T>): void {\r\n        this.dictionary.forEach(function(k, v) {\r\n            return callback(v);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Returns an array containing all of the elements in this set in arbitrary order.\r\n     * @return {Array} an array containing all of the elements in this set.\r\n     */\r\n    toArray(): T[] {\r\n        return this.dictionary.values();\r\n    }\r\n\r\n    /**\r\n     * Returns true if this set contains no elements.\r\n     * @return {boolean} true if this set contains no elements.\r\n     */\r\n    isEmpty(): boolean {\r\n        return this.dictionary.isEmpty();\r\n    }\r\n\r\n    /**\r\n     * Returns the number of elements in this set.\r\n     * @return {number} the number of elements in this set.\r\n     */\r\n    size(): number {\r\n        return this.dictionary.size();\r\n    }\r\n\r\n    /**\r\n     * Removes all of the elements from this set.\r\n     */\r\n    clear(): void {\r\n        this.dictionary.clear();\r\n    }\r\n\r\n    /*\r\n    * Provides a string representation for display\r\n    */\r\n    toString(): string {\r\n        return arrays.toString(this.toArray());\r\n    }\r\n}// end of Set\r\n\r\nexport class Bag<T>{\r\n\r\n    private toStrF: (item: T) => string;\r\n    private dictionary: Dictionary<T, any>;\r\n    private nElements: number;\r\n\r\n    /**\r\n     * Creates an empty bag.\r\n     * @class <p>A bag is a special kind of set in which members are\r\n     * allowed to appear more than once.</p>\r\n     * <p>If the inserted elements are custom objects a function\r\n     * which converts elements to unique strings must be provided. Example:</p>\r\n     *\r\n     * <pre>\r\n     * function petToString(pet) {\r\n     *  return pet.name;\r\n     * }\r\n     * </pre>\r\n     *\r\n     * @constructor\r\n     * @param {function(Object):string=} toStrFunction optional function used\r\n     * to convert elements to strings. If the elements aren't strings or if toString()\r\n     * is not appropriate, a custom function which receives an object and returns a\r\n     * unique string must be provided.\r\n     */\r\n    constructor(toStrFunction?: (item: T) => string) {\r\n        this.toStrF = toStrFunction || defaultToString;\r\n        this.dictionary = new Dictionary<T, any>(this.toStrF);\r\n        this.nElements = 0;\r\n    }\r\n\r\n\r\n    /**\r\n    * Adds nCopies of the specified object to this bag.\r\n    * @param {Object} element element to add.\r\n    * @param {number=} nCopies the number of copies to add, if this argument is\r\n    * undefined 1 copy is added.\r\n    * @return {boolean} true unless element is undefined.\r\n    */\r\n    add(element: T, nCopies: number = 1): boolean {\r\n\r\n        if (isUndefined(element) || nCopies <= 0) {\r\n            return false;\r\n        }\r\n\r\n        if (!this.contains(element)) {\r\n            var node = {\r\n                value: element,\r\n                copies: nCopies\r\n            };\r\n            this.dictionary.setValue(element, node);\r\n        } else {\r\n            this.dictionary.getValue(element).copies += nCopies;\r\n        }\r\n        this.nElements += nCopies;\r\n        return true;\r\n    }\r\n\r\n    /**\r\n    * Counts the number of copies of the specified object in this bag.\r\n    * @param {Object} element the object to search for..\r\n    * @return {number} the number of copies of the object, 0 if not found\r\n    */\r\n    count(element: T): number {\r\n\r\n        if (!this.contains(element)) {\r\n            return 0;\r\n        } else {\r\n            return this.dictionary.getValue(element).copies;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns true if this bag contains the specified element.\r\n     * @param {Object} element element to search for.\r\n     * @return {boolean} true if this bag contains the specified element,\r\n     * false otherwise.\r\n     */\r\n    contains(element: T): boolean {\r\n        return this.dictionary.containsKey(element);\r\n    }\r\n\r\n    /**\r\n    * Removes nCopies of the specified object to this bag.\r\n    * If the number of copies to remove is greater than the actual number\r\n    * of copies in the Bag, all copies are removed.\r\n    * @param {Object} element element to remove.\r\n    * @param {number=} nCopies the number of copies to remove, if this argument is\r\n    * undefined 1 copy is removed.\r\n    * @return {boolean} true if at least 1 element was removed.\r\n    */\r\n    remove(element: T, nCopies: number = 1) {\r\n\r\n        if (isUndefined(element) || nCopies <= 0) {\r\n            return false;\r\n        }\r\n\r\n        if (!this.contains(element)) {\r\n            return false;\r\n        } else {\r\n            var node = this.dictionary.getValue(element);\r\n            if (nCopies > node.copies) {\r\n                this.nElements -= node.copies;\r\n            } else {\r\n                this.nElements -= nCopies;\r\n            }\r\n            node.copies -= nCopies;\r\n            if (node.copies <= 0) {\r\n                this.dictionary.remove(element);\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns an array containing all of the elements in this big in arbitrary order,\r\n     * including multiple copies.\r\n     * @return {Array} an array containing all of the elements in this bag.\r\n     */\r\n    toArray(): T[] {\r\n        var a: Array<T> = [];\r\n        var values = this.dictionary.values();\r\n        var vl = values.length;\r\n        for (var i = 0; i < vl; i++) {\r\n            var node = values[i];\r\n            var element = node.value;\r\n            var copies = node.copies;\r\n            for (var j = 0; j < copies; j++) {\r\n                a.push(element);\r\n            }\r\n        }\r\n        return a;\r\n    }\r\n\r\n    /**\r\n     * Returns a set of unique elements in this bag.\r\n     * @return {Set<T>} a set of unique elements in this bag.\r\n     */\r\n    toSet(): Set<T> {\r\n        var toret = new Set<T>(this.toStrF);\r\n        var elements = this.dictionary.values();\r\n        var l = elements.length;\r\n        for (var i = 0; i < l; i++) {\r\n            var value = elements[i].value;\r\n            toret.add(value);\r\n        }\r\n        return toret;\r\n    }\r\n\r\n    /**\r\n     * Executes the provided function once for each element\r\n     * present in this bag, including multiple copies.\r\n     * @param {function(Object):*} callback function to execute, it is\r\n     * invoked with one argument: the element. To break the iteration you can\r\n     * optionally return false.\r\n     */\r\n    forEach(callback: ILoopFunction<T>) {\r\n        this.dictionary.forEach(function(k, v) {\r\n            var value = v.value;\r\n            var copies = v.copies;\r\n            for (var i = 0; i < copies; i++) {\r\n                if (callback(value) === false) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        });\r\n    }\r\n    /**\r\n     * Returns the number of elements in this bag.\r\n     * @return {number} the number of elements in this bag.\r\n     */\r\n    size(): number {\r\n        return this.nElements;\r\n    }\r\n\r\n    /**\r\n     * Returns true if this bag contains no elements.\r\n     * @return {boolean} true if this bag contains no elements.\r\n     */\r\n    isEmpty(): boolean {\r\n        return this.nElements === 0;\r\n    }\r\n\r\n    /**\r\n     * Removes all of the elements from this bag.\r\n     */\r\n    clear(): void {\r\n        this.nElements = 0;\r\n        this.dictionary.clear();\r\n    }\r\n\r\n}// End of bag\r\n\r\n\r\n// Internal interface for BST\r\ninterface BSTreeNode<T> {\r\n    element: T;\r\n    leftCh: BSTreeNode<T>;\r\n    rightCh: BSTreeNode<T>;\r\n    parent: BSTreeNode<T>;\r\n}\r\nexport class BSTree<T> {\r\n\r\n    private root: BSTreeNode<T>;\r\n    private compare: ICompareFunction<T>;\r\n    private nElements: number;\r\n    /**\r\n     * Creates an empty binary search tree.\r\n     * @class <p>A binary search tree is a binary tree in which each\r\n     * internal node stores an element such that the elements stored in the\r\n     * left subtree are less than it and the elements\r\n     * stored in the right subtree are greater.</p>\r\n     * <p>Formally, a binary search tree is a node-based binary tree data structure which\r\n     * has the following properties:</p>\r\n     * <ul>\r\n     * <li>The left subtree of a node contains only nodes with elements less\r\n     * than the node's element</li>\r\n     * <li>The right subtree of a node contains only nodes with elements greater\r\n     * than the node's element</li>\r\n     * <li>Both the left and right subtrees must also be binary search trees.</li>\r\n     * </ul>\r\n     * <p>If the inserted elements are custom objects a compare function must\r\n     * be provided at construction time, otherwise the <=, === and >= operators are\r\n     * used to compare elements. Example:</p>\r\n     * <pre>\r\n     * function compare(a, b) {\r\n     *  if (a is less than b by some ordering criterion) {\r\n     *     return -1;\r\n     *  } if (a is greater than b by the ordering criterion) {\r\n     *     return 1;\r\n     *  }\r\n     *  // a must be equal to b\r\n     *  return 0;\r\n     * }\r\n     * </pre>\r\n     * @constructor\r\n     * @param {function(Object,Object):number=} compareFunction optional\r\n     * function used to compare two elements. Must return a negative integer,\r\n     * zero, or a positive integer as the first argument is less than, equal to,\r\n     * or greater than the second.\r\n     */\r\n    constructor(compareFunction?: ICompareFunction<T>) {\r\n        this.root = null;\r\n        this.compare = compareFunction || defaultCompare;\r\n        this.nElements = 0;\r\n    }\r\n\r\n    /**\r\n     * Adds the specified element to this tree if it is not already present.\r\n     * @param {Object} element the element to insert.\r\n     * @return {boolean} true if this tree did not already contain the specified element.\r\n     */\r\n    add(element: T): boolean {\r\n        if (isUndefined(element)) {\r\n            return false;\r\n        }\r\n\r\n        if (this.insertNode(this.createNode(element)) !== null) {\r\n            this.nElements++;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Removes all of the elements from this tree.\r\n     */\r\n    clear(): void {\r\n        this.root = null;\r\n        this.nElements = 0;\r\n    }\r\n\r\n    /**\r\n     * Returns true if this tree contains no elements.\r\n     * @return {boolean} true if this tree contains no elements.\r\n     */\r\n    isEmpty(): boolean {\r\n        return this.nElements === 0;\r\n    }\r\n\r\n    /**\r\n     * Returns the number of elements in this tree.\r\n     * @return {number} the number of elements in this tree.\r\n     */\r\n    size(): number {\r\n        return this.nElements;\r\n    }\r\n\r\n    /**\r\n     * Returns true if this tree contains the specified element.\r\n     * @param {Object} element element to search for.\r\n     * @return {boolean} true if this tree contains the specified element,\r\n     * false otherwise.\r\n     */\r\n    contains(element: T): boolean {\r\n        if (isUndefined(element)) {\r\n            return false;\r\n        }\r\n        return this.searchNode(this.root, element) !== null;\r\n    }\r\n\r\n    /**\r\n     * Removes the specified element from this tree if it is present.\r\n     * @return {boolean} true if this tree contained the specified element.\r\n     */\r\n    remove(element: T): boolean {\r\n        var node = this.searchNode(this.root, element);\r\n        if (node === null) {\r\n            return false;\r\n        }\r\n        this.removeNode(node);\r\n        this.nElements--;\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Executes the provided function once for each element present in this tree in\r\n     * in-order.\r\n     * @param {function(Object):*} callback function to execute, it is invoked with one\r\n     * argument: the element value, to break the iteration you can optionally return false.\r\n     */\r\n    inorderTraversal(callback: ILoopFunction<T>): void {\r\n        this.inorderTraversalAux(this.root, callback, {\r\n            stop: false\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Executes the provided function once for each element present in this tree in pre-order.\r\n     * @param {function(Object):*} callback function to execute, it is invoked with one\r\n     * argument: the element value, to break the iteration you can optionally return false.\r\n     */\r\n    preorderTraversal(callback: ILoopFunction<T>): void {\r\n        this.preorderTraversalAux(this.root, callback, {\r\n            stop: false\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Executes the provided function once for each element present in this tree in post-order.\r\n     * @param {function(Object):*} callback function to execute, it is invoked with one\r\n     * argument: the element value, to break the iteration you can optionally return false.\r\n     */\r\n    postorderTraversal(callback: ILoopFunction<T>): void {\r\n        this.postorderTraversalAux(this.root, callback, {\r\n            stop: false\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Executes the provided function once for each element present in this tree in\r\n     * level-order.\r\n     * @param {function(Object):*} callback function to execute, it is invoked with one\r\n     * argument: the element value, to break the iteration you can optionally return false.\r\n     */\r\n    levelTraversal(callback: ILoopFunction<T>): void {\r\n        this.levelTraversalAux(this.root, callback);\r\n    }\r\n\r\n    /**\r\n     * Returns the minimum element of this tree.\r\n     * @return {*} the minimum element of this tree or undefined if this tree is\r\n     * is empty.\r\n     */\r\n    minimum(): T {\r\n        if (this.isEmpty()) {\r\n            return undefined;\r\n        }\r\n        return this.minimumAux(this.root).element;\r\n    }\r\n\r\n    /**\r\n     * Returns the maximum element of this tree.\r\n     * @return {*} the maximum element of this tree or undefined if this tree is\r\n     * is empty.\r\n     */\r\n    maximum(): T {\r\n        if (this.isEmpty()) {\r\n            return undefined;\r\n        }\r\n        return this.maximumAux(this.root).element;\r\n    }\r\n\r\n    /**\r\n     * Executes the provided function once for each element present in this tree in inorder.\r\n     * Equivalent to inorderTraversal.\r\n     * @param {function(Object):*} callback function to execute, it is\r\n     * invoked with one argument: the element value, to break the iteration you can\r\n     * optionally return false.\r\n     */\r\n    forEach(callback: ILoopFunction<T>): void {\r\n        this.inorderTraversal(callback);\r\n    }\r\n\r\n    /**\r\n     * Returns an array containing all of the elements in this tree in in-order.\r\n     * @return {Array} an array containing all of the elements in this tree in in-order.\r\n     */\r\n    toArray(): T[] {\r\n        var array: Array<T> = [];\r\n        this.inorderTraversal(function(element: T): boolean {\r\n            array.push(element);\r\n            return true;\r\n        });\r\n        return array;\r\n    }\r\n\r\n    /**\r\n     * Returns the height of this tree.\r\n     * @return {number} the height of this tree or -1 if is empty.\r\n     */\r\n    height(): number {\r\n        return this.heightAux(this.root);\r\n    }\r\n\r\n    /**\r\n    * @private\r\n    */\r\n    private searchNode(node: BSTreeNode<T>, element: T): BSTreeNode<T> {\r\n        var cmp: number = null;\r\n        while (node !== null && cmp !== 0) {\r\n            cmp = this.compare(element, node.element);\r\n            if (cmp < 0) {\r\n                node = node.leftCh;\r\n            } else if (cmp > 0) {\r\n                node = node.rightCh;\r\n            }\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /**\r\n    * @private\r\n    */\r\n    private transplant(n1: BSTreeNode<T>, n2: BSTreeNode<T>): void {\r\n        if (n1.parent === null) {\r\n            this.root = n2;\r\n        } else if (n1 === n1.parent.leftCh) {\r\n            n1.parent.leftCh = n2;\r\n        } else {\r\n            n1.parent.rightCh = n2;\r\n        }\r\n        if (n2 !== null) {\r\n            n2.parent = n1.parent;\r\n        }\r\n    }\r\n\r\n    /**\r\n    * @private\r\n    */\r\n    private removeNode(node: BSTreeNode<T>): void {\r\n        if (node.leftCh === null) {\r\n            this.transplant(node, node.rightCh);\r\n        } else if (node.rightCh === null) {\r\n            this.transplant(node, node.leftCh);\r\n        } else {\r\n            var y = this.minimumAux(node.rightCh);\r\n            if (y.parent !== node) {\r\n                this.transplant(y, y.rightCh);\r\n                y.rightCh = node.rightCh;\r\n                y.rightCh.parent = y;\r\n            }\r\n            this.transplant(node, y);\r\n            y.leftCh = node.leftCh;\r\n            y.leftCh.parent = y;\r\n        }\r\n    }\r\n\r\n    /**\r\n    * @private\r\n    */\r\n    private inorderTraversalAux(node: BSTreeNode<T>, callback: ILoopFunction<T>, signal: { stop: boolean; }): void {\r\n        if (node === null || signal.stop) {\r\n            return;\r\n        }\r\n        this.inorderTraversalAux(node.leftCh, callback, signal);\r\n        if (signal.stop) {\r\n            return;\r\n        }\r\n        signal.stop = callback(node.element) === false;\r\n        if (signal.stop) {\r\n            return;\r\n        }\r\n        this.inorderTraversalAux(node.rightCh, callback, signal);\r\n    }\r\n\r\n    /**\r\n    * @private\r\n    */\r\n    private levelTraversalAux(node: BSTreeNode<T>, callback: ILoopFunction<T>) {\r\n        var queue = new Queue<BSTreeNode<T>>();\r\n        if (node !== null) {\r\n            queue.enqueue(node);\r\n        }\r\n        while (!queue.isEmpty()) {\r\n            node = queue.dequeue();\r\n            if (callback(node.element) === false) {\r\n                return;\r\n            }\r\n            if (node.leftCh !== null) {\r\n                queue.enqueue(node.leftCh);\r\n            }\r\n            if (node.rightCh !== null) {\r\n                queue.enqueue(node.rightCh);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n    * @private\r\n    */\r\n    private preorderTraversalAux(node: BSTreeNode<T>, callback: ILoopFunction<T>, signal: { stop: boolean; }) {\r\n        if (node === null || signal.stop) {\r\n            return;\r\n        }\r\n        signal.stop = callback(node.element) === false;\r\n        if (signal.stop) {\r\n            return;\r\n        }\r\n        this.preorderTraversalAux(node.leftCh, callback, signal);\r\n        if (signal.stop) {\r\n            return;\r\n        }\r\n        this.preorderTraversalAux(node.rightCh, callback, signal);\r\n    }\r\n    /**\r\n    * @private\r\n    */\r\n    private postorderTraversalAux(node: BSTreeNode<T>, callback: ILoopFunction<T>, signal: { stop: boolean; }) {\r\n        if (node === null || signal.stop) {\r\n            return;\r\n        }\r\n        this.postorderTraversalAux(node.leftCh, callback, signal);\r\n        if (signal.stop) {\r\n            return;\r\n        }\r\n        this.postorderTraversalAux(node.rightCh, callback, signal);\r\n        if (signal.stop) {\r\n            return;\r\n        }\r\n        signal.stop = callback(node.element) === false;\r\n    }\r\n\r\n    /**\r\n    * @private\r\n    */\r\n    private minimumAux(node: BSTreeNode<T>): BSTreeNode<T> {\r\n        while (node.leftCh !== null) {\r\n            node = node.leftCh;\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /**\r\n    * @private\r\n    */\r\n    private maximumAux(node: BSTreeNode<T>): BSTreeNode<T> {\r\n        while (node.rightCh !== null) {\r\n            node = node.rightCh;\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /**\r\n      * @private\r\n      */\r\n    private heightAux(node: BSTreeNode<T>): number {\r\n        if (node === null) {\r\n            return -1;\r\n        }\r\n        return Math.max(this.heightAux(node.leftCh), this.heightAux(node.rightCh)) + 1;\r\n    }\r\n\r\n    /*\r\n    * @private\r\n    */\r\n    private insertNode(node: BSTreeNode<T>): BSTreeNode<T> {\r\n\r\n        var parent: any = null;\r\n        var position = this.root;\r\n        var cmp: number = null;\r\n        while (position !== null) {\r\n            cmp = this.compare(node.element, position.element);\r\n            if (cmp === 0) {\r\n                return null;\r\n            } else if (cmp < 0) {\r\n                parent = position;\r\n                position = position.leftCh;\r\n            } else {\r\n                parent = position;\r\n                position = position.rightCh;\r\n            }\r\n        }\r\n        node.parent = parent;\r\n        if (parent === null) {\r\n            // tree is empty\r\n            this.root = node;\r\n        } else if (this.compare(node.element, parent.element) < 0) {\r\n            parent.leftCh = node;\r\n        } else {\r\n            parent.rightCh = node;\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /**\r\n    * @private\r\n    */\r\n    private createNode(element: T): BSTreeNode<T> {\r\n        return {\r\n            element: element,\r\n            leftCh: null,\r\n            rightCh: null,\r\n            parent: null\r\n        };\r\n    }\r\n\r\n} // end of BSTree\r\n","\n\nexport function hasFromObject<TFunction extends Function>(target: TFunction) :  void{\n\n}\n","\r\n\r\n\r\n/**\r\n * mapping of special keycodes to their corresponding keys\r\n *\r\n * everything in this dictionary cannot use keypress events\r\n * so it has to be here to map to the correct keycodes for\r\n * keyup/keydown events\r\n *\r\n * @type {Object}\r\n */\r\nvar _MAP = {\r\n    8: 'backspace',\r\n    9: 'tab',\r\n    13: 'enter',\r\n    16: 'shift',\r\n    17: 'ctrl',\r\n    18: 'alt',\r\n    20: 'capslock',\r\n    27: 'esc',\r\n    32: 'space',\r\n    33: 'pageup',\r\n    34: 'pagedown',\r\n    35: 'end',\r\n    36: 'home',\r\n    37: 'left',\r\n    38: 'up',\r\n    39: 'right',\r\n    40: 'down',\r\n    45: 'ins',\r\n    46: 'del',\r\n    91: 'meta',\r\n    93: 'meta',\r\n    224: 'meta'\r\n};\r\n\r\n/**\r\n * mapping for special characters so they can support\r\n *\r\n * this dictionary is only used incase you want to bind a\r\n * keyup or keydown event to one of these keys\r\n *\r\n * @type {Object}\r\n */\r\nvar _KEYCODE_MAP = {\r\n    106: '*',\r\n    107: '+',\r\n    109: '-',\r\n    110: '.',\r\n    111: '/',\r\n    186: ';',\r\n    187: '=',\r\n    188: ',',\r\n    189: '-',\r\n    190: '.',\r\n    191: '/',\r\n    192: '`',\r\n    219: '[',\r\n    220: '\\\\',\r\n    221: ']',\r\n    222: '\\''\r\n};\r\n\r\n/**\r\n * this is a mapping of keys that require shift on a US keypad\r\n * back to the non shift equivelents\r\n *\r\n * this is so you can use keyup events with these keys\r\n *\r\n * note that this will only work reliably on US keyboards\r\n *\r\n * @type {Object}\r\n */\r\nvar _SHIFT_MAP = {\r\n    '~': '`',\r\n    '!': '1',\r\n    '@': '2',\r\n    '#': '3',\r\n    '$': '4',\r\n    '%': '5',\r\n    '^': '6',\r\n    '&': '7',\r\n    '*': '8',\r\n    '(': '9',\r\n    ')': '0',\r\n    '_': '-',\r\n    '+': '=',\r\n    ':': ';',\r\n    '\\\"': '\\'',\r\n    '<': ',',\r\n    '>': '.',\r\n    '?': '/',\r\n    '|': '\\\\'\r\n};\r\n\r\n/**\r\n * this is a list of special strings you can use to map\r\n * to modifier keys when you specify your keyboard shortcuts\r\n *\r\n * @type {Object}\r\n */\r\nvar _SPECIAL_ALIASES = {\r\n    'option': 'alt',\r\n    'command': 'meta',\r\n    'return': 'enter',\r\n    'escape': 'esc',\r\n    'plus': '+',\r\n    'mod': /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? 'meta' : 'ctrl'\r\n};\r\n\r\n/**\r\n * variable to store the flipped version of _MAP from above\r\n * needed to check if we should use keypress or not when no action\r\n * is specified\r\n *\r\n * @type {Object|undefined}\r\n */\r\nvar _REVERSE_MAP;\r\n\r\n/**\r\n * loop through the f keys, f1 to f19 and add them to the map\r\n * programatically\r\n */\r\nfor (var i = 1; i < 20; ++i) {\r\n    _MAP[111 + i] = 'f' + i;\r\n}\r\n\r\n/**\r\n * loop through to map numbers on the numeric keypad\r\n */\r\nfor (i = 0; i <= 9; ++i) {\r\n    _MAP[i + 96] = i;\r\n}\r\n\r\n/**\r\n * cross browser add event method\r\n *\r\n * @param {Element|HTMLDocument} object\r\n * @param {string} type\r\n * @param {Function} callback\r\n * @returns void\r\n */\r\nfunction _addEvent(object, type, callback) {\r\n    if (object.addEventListener) {\r\n        object.addEventListener(type, callback, false);\r\n        return;\r\n    }\r\n\r\n    object.attachEvent('on' + type, callback);\r\n}\r\n\r\n/**\r\n * takes the event and returns the key character\r\n *\r\n * @param {Event} e\r\n * @return {string}\r\n */\r\nfunction _characterFromEvent(e) {\r\n\r\n    // for keypress events we should return the character as is\r\n    if (e.type == 'keypress') {\r\n        var character = String.fromCharCode(e.which);\r\n\r\n        // if the shift key is not pressed then it is safe to assume\r\n        // that we want the character to be lowercase.  this means if\r\n        // you accidentally have caps lock on then your key bindings\r\n        // will continue to work\r\n        //\r\n        // the only side effect that might not be desired is if you\r\n        // bind something like 'A' cause you want to trigger an\r\n        // event when capital A is pressed caps lock will no longer\r\n        // trigger the event.  shift+a will though.\r\n        if (!e.shiftKey) {\r\n            character = character.toLowerCase();\r\n        }\r\n\r\n        return character;\r\n    }\r\n\r\n    // for non keypress events the special maps are needed\r\n    if (_MAP[e.which]) {\r\n        return _MAP[e.which];\r\n    }\r\n\r\n    if (_KEYCODE_MAP[e.which]) {\r\n        return _KEYCODE_MAP[e.which];\r\n    }\r\n\r\n    // if it is not in the special map\r\n\r\n    // with keydown and keyup events the character seems to always\r\n    // come in as an uppercase character whether you are pressing shift\r\n    // or not.  we should make sure it is always lowercase for comparisons\r\n    return String.fromCharCode(e.which).toLowerCase();\r\n}\r\n\r\n/**\r\n * checks if two arrays are equal\r\n *\r\n * @param {Array} modifiers1\r\n * @param {Array} modifiers2\r\n * @returns {boolean}\r\n */\r\nfunction _modifiersMatch(modifiers1, modifiers2) {\r\n    return modifiers1.sort().join(',') === modifiers2.sort().join(',');\r\n}\r\n\r\n/**\r\n * takes a key event and figures out what the modifiers are\r\n *\r\n * @param {Event} e\r\n * @returns {Array}\r\n */\r\nfunction _eventModifiers(e) {\r\n    var modifiers = [];\r\n\r\n    if (e.shiftKey) {\r\n        modifiers.push('shift');\r\n    }\r\n\r\n    if (e.altKey) {\r\n        modifiers.push('alt');\r\n    }\r\n\r\n    if (e.ctrlKey) {\r\n        modifiers.push('ctrl');\r\n    }\r\n\r\n    if (e.metaKey) {\r\n        modifiers.push('meta');\r\n    }\r\n\r\n    return modifiers;\r\n}\r\n\r\n/**\r\n * prevents default for this event\r\n *\r\n * @param {Event} e\r\n * @returns void\r\n */\r\nfunction _preventDefault(e) {\r\n    if (e.preventDefault) {\r\n        e.preventDefault();\r\n        return;\r\n    }\r\n\r\n    e.returnValue = false;\r\n}\r\n\r\n/**\r\n * stops propogation for this event\r\n *\r\n * @param {Event} e\r\n * @returns void\r\n */\r\nfunction _stopPropagation(e) {\r\n    if (e.stopPropagation) {\r\n        e.stopPropagation();\r\n        return;\r\n    }\r\n\r\n    e.cancelBubble = true;\r\n}\r\n\r\n/**\r\n * determines if the keycode specified is a modifier key or not\r\n *\r\n * @param {string} key\r\n * @returns {boolean}\r\n */\r\nfunction _isModifier(key) {\r\n    return key == 'shift' || key == 'ctrl' || key == 'alt' || key == 'meta';\r\n}\r\n\r\n/**\r\n * reverses the map lookup so that we can look for specific keys\r\n * to see what can and can't use keypress\r\n *\r\n * @return {Object}\r\n */\r\nfunction _getReverseMap() {\r\n    if (!_REVERSE_MAP) {\r\n        _REVERSE_MAP = {};\r\n        for (var key in _MAP) {\r\n\r\n            // pull out the numeric keypad from here cause keypress should\r\n            // be able to detect the keys from the character\r\n            if (key > 95 && key < 112) {\r\n                continue;\r\n            }\r\n\r\n            if (_MAP.hasOwnProperty(key)) {\r\n                _REVERSE_MAP[_MAP[key]] = key;\r\n            }\r\n        }\r\n    }\r\n    return _REVERSE_MAP;\r\n}\r\n\r\n/**\r\n * picks the best action based on the key combination\r\n *\r\n * @param {string} key - character for key\r\n * @param {Array} modifiers\r\n * @param {string=} action passed in\r\n */\r\nfunction _pickBestAction(key, modifiers, action) {\r\n\r\n    // if no action was picked in we should try to pick the one\r\n    // that we think would work best for this key\r\n    if (!action) {\r\n        action = _getReverseMap()[key] ? 'keydown' : 'keypress';\r\n    }\r\n\r\n    // modifier keys don't work as expected with keypress,\r\n    // switch to keydown\r\n    if (action == 'keypress' && modifiers.length) {\r\n        action = 'keydown';\r\n    }\r\n\r\n    return action;\r\n}\r\n\r\n/**\r\n * Converts from a string key combination to an array\r\n *\r\n * @param  {string} combination like \"command+shift+l\"\r\n * @return {Array}\r\n */\r\nfunction _keysFromString(combination) {\r\n    if (combination === '+') {\r\n        return ['+'];\r\n    }\r\n\r\n    combination = combination.replace(/\\+{2}/g, '+plus');\r\n    return combination.split('+');\r\n}\r\n\r\n/**\r\n * Gets info for a specific key combination\r\n *\r\n * @param  {string} combination key combination (\"command+s\" or \"a\" or \"*\")\r\n * @param  {string=} action\r\n * @returns {Object}\r\n */\r\nfunction _getKeyInfo(combination, action?) {\r\n    var keys;\r\n    var key;\r\n    var i;\r\n    var modifiers = [];\r\n\r\n    // take the keys from this pattern and figure out what the actual\r\n    // pattern is all about\r\n    keys = _keysFromString(combination);\r\n\r\n    for (i = 0; i < keys.length; ++i) {\r\n        key = keys[i];\r\n\r\n        // normalize key names\r\n        if (_SPECIAL_ALIASES[key]) {\r\n            key = _SPECIAL_ALIASES[key];\r\n        }\r\n\r\n        // if this is not a keypress event then we should\r\n        // be smart about using shift keys\r\n        // this will only work for US keyboards however\r\n        if (action && action != 'keypress' && _SHIFT_MAP[key]) {\r\n            key = _SHIFT_MAP[key];\r\n            modifiers.push('shift');\r\n        }\r\n\r\n        // if this key is a modifier then add it to the list of modifiers\r\n        if (_isModifier(key)) {\r\n            modifiers.push(key);\r\n        }\r\n    }\r\n\r\n    // depending on what the key combination is\r\n    // we will try to pick the best event for it\r\n    action = _pickBestAction(key, modifiers, action);\r\n\r\n    return {\r\n        key: key,\r\n        modifiers: modifiers,\r\n        action: action\r\n    };\r\n}\r\n\r\nfunction _belongsTo(element, ancestor) {\r\n    if (element === document) {\r\n        return false;\r\n    }\r\n\r\n    if (element === ancestor) {\r\n        return true;\r\n    }\r\n\r\n    return _belongsTo(element.parentNode, ancestor);\r\n}\r\n\r\n\r\nexport class KeyManager {\r\n    private _callbacks: any = {};\r\n    private _directMap = {};\r\n    private _sequenceLevels = {};\r\n    private _resetTimer: number;\r\n    private _ignoreNextKeyup: boolean = false;\r\n    private _ignoreNextKeypress: boolean = false;\r\n    private _nextExpectedAction: boolean|string = false;\r\n\r\n    constructor(public target: HTMLElement = document.body) {\r\n        if (target.tagName = 'div') {\r\n            //http://stackoverflow.com/a/148444/358661\r\n            target.tabIndex = 0;\r\n        }\r\n\r\n        _addEvent(this.target, 'keypress', (e) => this._handleKeyEvent(e));\r\n        _addEvent(this.target, 'keydown', (e) => this._handleKeyEvent(e));\r\n        _addEvent(this.target, 'keyup', (e) => this._handleKeyEvent(e));\r\n    }\r\n\r\n\r\n    private _resetSequences(doNotReset) {\r\n        doNotReset = doNotReset || {};\r\n\r\n        var activeSequences = false;\r\n        var key;\r\n\r\n        for (key in this._sequenceLevels) {\r\n            if (doNotReset[key]) {\r\n                activeSequences = true;\r\n                continue;\r\n            }\r\n            this._sequenceLevels[key] = 0;\r\n        }\r\n\r\n        if (!activeSequences)\r\n            this._nextExpectedAction = false;\r\n\r\n    }\r\n\r\n\r\n    private _getMatches(character, modifiers, e, sequenceName?, combination?, level?) {\r\n        var i;\r\n        var callback;\r\n        var matches = [];\r\n        var action = e.type;\r\n\r\n        // if there are no events related to this keycode\r\n        if (!this._callbacks[character]) {\r\n            return [];\r\n        }\r\n\r\n        // if a modifier key is coming up on its own we should allow it\r\n        if (action == 'keyup' && _isModifier(character)) {\r\n            modifiers = [character];\r\n        }\r\n\r\n        // loop through all callbacks for the key that was pressed\r\n        // and see if any of them match\r\n        for (i = 0; i < this._callbacks[character].length; ++i) {\r\n            callback = this._callbacks[character][i];\r\n\r\n            // if a sequence name is not specified, but this is a sequence at\r\n            // the wrong level then move onto the next match\r\n            if (!sequenceName && callback.seq && this._sequenceLevels[callback.seq] != callback.level) {\r\n                continue;\r\n            }\r\n\r\n            // if the action we are looking for doesn't match the action we got\r\n            // then we should keep going\r\n            if (action != callback.action) {\r\n                continue;\r\n            }\r\n\r\n            // if this is a keypress event and the meta key and control key\r\n            // are not pressed that means that we need to only look at the\r\n            // character, otherwise check the modifiers as well\r\n            //\r\n            // chrome will not fire a keypress if meta or control is down\r\n            // safari will fire a keypress if meta or meta+shift is down\r\n            // firefox will fire a keypress if meta or control is down\r\n            if ((action == 'keypress' && !e.metaKey && !e.ctrlKey) || _modifiersMatch(modifiers, callback.modifiers)) {\r\n\r\n                // when you bind a combination or sequence a second time it\r\n                // should overwrite the first one.  if a sequenceName or\r\n                // combination is specified in this call it does just that\r\n                //\r\n                // @todo make deleting its own method?\r\n                var deleteCombo = !sequenceName && callback.combo == combination;\r\n                var deleteSequence = sequenceName && callback.seq == sequenceName && callback.level == level;\r\n                if (deleteCombo || deleteSequence) {\r\n                    this._callbacks[character].splice(i, 1);\r\n                }\r\n\r\n                matches.push(callback);\r\n            }\r\n        }\r\n\r\n        return matches;\r\n    }\r\n\r\n    private _fireCallback(callback, e, combo, sequence?) {\r\n\r\n        // if this event should not happen stop here\r\n        if (this.stopCallback(e, e.target || e.srcElement)) {\r\n            return;\r\n        }\r\n\r\n        if (callback(e, combo) === false) {\r\n            _preventDefault(e);\r\n            _stopPropagation(e);\r\n        }\r\n    }\r\n\r\n    private _handleKey(character, modifiers, e) {\r\n        var callbacks = this._getMatches(character, modifiers, e);\r\n        var i;\r\n        var doNotReset = {};\r\n        var maxLevel = 0;\r\n        var processedSequenceCallback = false;\r\n\r\n        // Calculate the maxLevel for sequences so we can only execute the longest callback sequence\r\n        for (i = 0; i < callbacks.length; ++i) {\r\n            if (callbacks[i].seq) {\r\n                maxLevel = Math.max(maxLevel, callbacks[i].level);\r\n            }\r\n        }\r\n\r\n        // loop through matching callbacks for this key event\r\n        for (i = 0; i < callbacks.length; ++i) {\r\n\r\n            // fire for all sequence callbacks\r\n            // this is because if for example you have multiple sequences\r\n            // bound such as \"g i\" and \"g t\" they both need to fire the\r\n            // callback for matching g cause otherwise you can only ever\r\n            // match the first one\r\n            if (callbacks[i].seq) {\r\n\r\n                // only fire callbacks for the maxLevel to prevent\r\n                // subsequences from also firing\r\n                //\r\n                // for example 'a option b' should not cause 'option b' to fire\r\n                // even though 'option b' is part of the other sequence\r\n                //\r\n                // any sequences that do not match here will be discarded\r\n                // below by the _resetSequences call\r\n                if (callbacks[i].level != maxLevel) {\r\n                    continue;\r\n                }\r\n\r\n                processedSequenceCallback = true;\r\n\r\n                // keep a list of which sequences were matches for later\r\n                doNotReset[callbacks[i].seq] = 1;\r\n                this._fireCallback(callbacks[i].callback, e, callbacks[i].combo, callbacks[i].seq);\r\n                continue;\r\n            }\r\n\r\n            // if there were no sequence matches but we are still here\r\n            // that means this is a regular match so we should fire that\r\n            if (!processedSequenceCallback) {\r\n                this._fireCallback(callbacks[i].callback, e, callbacks[i].combo);\r\n            }\r\n        }\r\n\r\n        // if the key you pressed matches the type of sequence without\r\n        // being a modifier (ie \"keyup\" or \"keypress\") then we should\r\n        // reset all sequences that were not matched by this event\r\n        //\r\n        // this is so, for example, if you have the sequence \"h a t\" and you\r\n        // type \"h e a r t\" it does not match.  in this case the \"e\" will\r\n        // cause the sequence to reset\r\n        //\r\n        // modifier keys are ignored because you can have a sequence\r\n        // that contains modifiers such as \"enter ctrl+space\" and in most\r\n        // cases the modifier key will be pressed before the next key\r\n        //\r\n        // also if you have a sequence such as \"ctrl+b a\" then pressing the\r\n        // \"b\" key will trigger a \"keypress\" and a \"keydown\"\r\n        //\r\n        // the \"keydown\" is expected when there is a modifier, but the\r\n        // \"keypress\" ends up matching the _nextExpectedAction since it occurs\r\n        // after and that causes the sequence to reset\r\n        //\r\n        // we ignore keypresses in a sequence that directly follow a keydown\r\n        // for the same character\r\n        var ignoreThisKeypress = e.type == 'keypress' && this._ignoreNextKeypress;\r\n        if (e.type == this._nextExpectedAction && !_isModifier(character) && !ignoreThisKeypress) {\r\n            this._resetSequences(doNotReset);\r\n        }\r\n\r\n        this._ignoreNextKeypress = processedSequenceCallback && e.type == 'keydown';\r\n    }\r\n\r\n    private _handleKeyEvent(e) {\r\n        // normalize e.which for key events\r\n        // @see http://stackoverflow.com/questions/4285627/javascript-keycode-vs-charcode-utter-confusion\r\n        if (typeof e.which !== 'number') {\r\n            e.which = e.keyCode;\r\n        }\r\n\r\n        var character = _characterFromEvent(e);\r\n\r\n        // no character found then stop\r\n        if (!character) {\r\n            return;\r\n        }\r\n\r\n        // need to use === for the character check because the character can be 0\r\n        if (e.type == 'keyup' && this._ignoreNextKeyup === character) {\r\n            this._ignoreNextKeyup = false;\r\n            return;\r\n        }\r\n\r\n        this.handleKey(character, _eventModifiers(e), e);\r\n    }\r\n\r\n\r\n    private _resetSequenceTimer() {\r\n        clearTimeout(this._resetTimer);\r\n        this._resetTimer = setTimeout(() => this._resetSequences, 1000);\r\n    }\r\n\r\n    private _bindSequence(combo, keys, callback, action) {\r\n\r\n        // start off by adding a sequence level record for this combination\r\n        // and setting the level to 0\r\n        this._sequenceLevels[combo] = 0;\r\n\r\n        /**\r\n         * callback to increase the sequence level for this sequence and reset\r\n         * all other sequences that were active\r\n         *\r\n         * @param {string} nextAction\r\n         * @returns {Function}\r\n         */\r\n        var _increaseSequence = (nextAction) => {\r\n            return function() {\r\n                this._nextExpectedAction = nextAction;\r\n                ++this._sequenceLevels[combo];\r\n                this._resetSequenceTimer();\r\n            };\r\n        }\r\n\r\n        /**\r\n         * wraps the specified callback inside of another function in order\r\n         * to reset all sequence counters as soon as this sequence is done\r\n         *\r\n         * @param {Event} e\r\n         * @returns void\r\n         */\r\n        var _callbackAndReset = (e) => {\r\n            this._fireCallback(callback, e, combo);\r\n\r\n            // we should ignore the next key up if the action is key down\r\n            // or keypress.  this is so if you finish a sequence and\r\n            // release the key the final key will not trigger a keyup\r\n            if (action !== 'keyup') {\r\n                this._ignoreNextKeyup = _characterFromEvent(e);\r\n            }\r\n\r\n            // weird race condition if a sequence ends with the key\r\n            // another sequence begins with\r\n            setTimeout(() => this._resetSequences, 10);\r\n        }\r\n\r\n        // loop through keys one at a time and bind the appropriate callback\r\n        // function.  for any key leading up to the final one it should\r\n        // increase the sequence. after the final, it should reset all sequences\r\n        //\r\n        // if an action is specified in the original bind call then that will\r\n        // be used throughout.  otherwise we will pass the action that the\r\n        // next key in the sequence should match.  this allows a sequence\r\n        // to mix and match keypress and keydown events depending on which\r\n        // ones are better suited to the key provided\r\n        for (var i = 0; i < keys.length; ++i) {\r\n            var isFinal = i + 1 === keys.length;\r\n            var wrappedCallback = isFinal ? _callbackAndReset : _increaseSequence(action || _getKeyInfo(keys[i + 1]).action);\r\n            this._bindSingle(keys[i], wrappedCallback, action, combo, i);\r\n        }\r\n    }\r\n\r\n    private _bindSingle(combination, callback, action, sequenceName?, level?) {\r\n\r\n        // store a direct mapped reference for use with Mousetrap.trigger\r\n        this._directMap[combination + ':' + action] = callback;\r\n\r\n        // make sure multiple spaces in a row become a single space\r\n        combination = combination.replace(/\\s+/g, ' ');\r\n\r\n        var sequence = combination.split(' ');\r\n        var info;\r\n\r\n        // if this pattern is a sequence of keys then run through this method\r\n        // to reprocess each pattern one key at a time\r\n        if (sequence.length > 1) {\r\n            this._bindSequence(combination, sequence, callback, action);\r\n            return;\r\n        }\r\n\r\n        info = _getKeyInfo(combination, action);\r\n\r\n        // make sure to initialize array if this is the first time\r\n        // a callback is added for this key\r\n        this._callbacks[info.key] = this._callbacks[info.key] || [];\r\n\r\n        // remove an existing match if there is one\r\n        this._getMatches(info.key, info.modifiers, { type: info.action }, sequenceName, combination, level);\r\n\r\n        // add this call back to the array\r\n        // if it is a sequence put it at the beginning\r\n        // if not put it at the end\r\n        //\r\n        // this is important because the way these are processed expects\r\n        // the sequence ones to come first\r\n        this._callbacks[info.key][sequenceName ? 'unshift' : 'push']({\r\n            callback: callback,\r\n            modifiers: info.modifiers,\r\n            action: info.action,\r\n            seq: sequenceName,\r\n            level: level,\r\n            combo: combination\r\n        });\r\n    }\r\n\r\n    private _bindMultiple(combinations, callback, action) {\r\n        for (var i = 0; i < combinations.length; ++i) {\r\n            this._bindSingle(combinations[i], callback, action);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * binds an event to mousetrap\r\n     *\r\n     * can be a single key, a combination of keys separated with +,\r\n     * an array of keys, or a sequence of keys separated by spaces\r\n     *\r\n     * be sure to list the modifier keys first to make sure that the\r\n     * correct key ends up getting bound (the last key in the pattern)\r\n     *\r\n     * @param {string|Array} keys\r\n     * @param {Function} callback\r\n     * @param {string=} action - 'keypress', 'keydown', or 'keyup'\r\n     * @returns void\r\n     */\r\n    public bind(keys, callback: (e: KeyboardEvent) => void, action?) {\r\n        var self = this;\r\n        keys = keys instanceof Array ? keys : [keys];\r\n        self._bindMultiple.call(self, keys, callback, action);\r\n        return self;\r\n    }\r\n\r\n    /**\r\n     * unbinds an event to mousetrap\r\n     *\r\n     * the unbinding sets the callback function of the specified key combo\r\n     * to an empty function and deletes the corresponding key in the\r\n     * _directMap dict.\r\n     *\r\n     * TODO: actually remove this from the _callbacks dictionary instead\r\n     * of binding an empty function\r\n     *\r\n     * the keycombo+action has to be exactly the same as\r\n     * it was defined in the bind method\r\n     *\r\n     * @param {string|Array} keys\r\n     * @param {string} action\r\n     * @returns void\r\n     */\r\n    public unbind(keys, action) {\r\n        var self = this;\r\n        return self.bind.call(self, keys, function() { }, action);\r\n    }\r\n    /**\r\n     * triggers an event that has already been bound\r\n     *\r\n     * @param {string} keys\r\n     * @param {string=} action\r\n     * @returns void\r\n     */\r\n    public trigger(keys, action) {\r\n        var self = this;\r\n        if (self._directMap[keys + ':' + action]) {\r\n            self._directMap[keys + ':' + action]({}, keys);\r\n        }\r\n        return self;\r\n    }\r\n\r\n\r\n    /**\r\n     * resets the library back to its initial state.  this is useful\r\n     * if you want to clear out the current keyboard shortcuts and bind\r\n     * new ones - for example if you switch to another page\r\n     *\r\n     * @returns void\r\n     */\r\n    public reset() {\r\n        var self = this;\r\n        self._callbacks = {};\r\n        self._directMap = {};\r\n        return self;\r\n    }\r\n\r\n    /**\r\n     * should we stop this event before firing off callbacks\r\n     *\r\n     * @param {Event} e\r\n     * @param {Element} element\r\n     * @return {boolean}\r\n     */\r\n    public stopCallback(e, element, combo?, sequence?) {\r\n        var self = this;\r\n\r\n        if (self.paused) {\r\n            return true;\r\n        }\r\n\r\n        if (this._globalCallbacks[combo] || this._globalCallbacks[sequence]) {\r\n            return false;\r\n        }\r\n\r\n\r\n        // if the element has the class \"mousetrap\" then no need to stop\r\n        if ((' ' + element.className + ' ').indexOf(' mousetrap ') > -1) {\r\n            return false;\r\n        }\r\n\r\n        if (_belongsTo(element, self.target)) {\r\n            return false;\r\n        }\r\n\r\n        // stop for input, select, and textarea\r\n        return element.tagName == 'INPUT' || element.tagName == 'SELECT' || element.tagName == 'TEXTAREA' || element.isContentEditable;\r\n    }\r\n\r\n    public bindGlobal(keys, callback, action) {\r\n        this.bind(keys, callback, action);\r\n\r\n        if (keys instanceof Array) {\r\n            for (var i = 0; i < keys.length; i++) {\r\n                this._globalCallbacks[keys[i]] = true;\r\n            }\r\n            return;\r\n        }\r\n\r\n        this._globalCallbacks[keys] = true;\r\n    }\r\n\r\n    public handleKey(character, modifiers, e) {\r\n        return this._handleKey.apply(this, arguments);\r\n    }\r\n\r\n    public dispose() {\r\n        this.reset();\r\n    }\r\n\r\n    public pause() {\r\n        this.paused = true;\r\n    }\r\n\r\n    public unpause() {\r\n        this.paused = false;\r\n    }\r\n\r\n    private _globalCallbacks = {};\r\n\r\n    private paused: boolean = false;\r\n}\r\n","\r\nexport class SimpleEvent implements ISimpleEventBase {\r\n    private _idx: number = 0;\r\n\r\n\r\n    private _key: string = Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n\r\n\r\n    private subscribers: Function[] = [];\r\n\r\n\r\n\r\n    /** function that gets called in the event that an error is thrown\r\n     * return true to stop calling other subscribers\r\n     */\r\n    public onError: (e) => boolean = () => false;\r\n\r\n    /** adds new subscriber\r\n     *  @returns refrence number used to remove subscriber */\r\n    on(fn: Function): number {\r\n        fn[this._key] = ++this._idx;\r\n        this.subscribers.push(fn);\r\n        return fn[this._key];\r\n    }\r\n\r\n    /** Triggers the event */\r\n    trigger(): SimpleEvent;\r\n    trigger(...args: any[]): SimpleEvent;\r\n    trigger(...args: any[]): SimpleEvent {\r\n        for (var f of this.subscribers) {\r\n            try {\r\n                f.apply({}, args);\r\n            }\r\n            catch (e) {\r\n                if (this.onError(e))\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    clear(): SimpleEvent {\r\n        this.subscribers = [];\r\n        return this;\r\n    }\r\n\r\n\r\n    off(id: number);\r\n    off(fn: Function);\r\n    off(arg) {\r\n        var id = 0;\r\n\r\n        if (typeof arg === 'number') {\r\n            id = arg;\r\n        } else if (typeof arg === 'Function') {\r\n            id = arg[this._key];\r\n        } else {\r\n            throw \"SimpleEvent.off: Function Identifier not found\";\r\n        }\r\n\r\n        this.subscribers = this.subscribers.filter(fn=> fn[this._key] !== id);\r\n\r\n    }\r\n\r\n\r\n\r\n    count(): number {\r\n        return this.subscribers.length;\r\n    }\r\n\r\n\r\n    dispose() { this.clear(); }\r\n\r\n\r\n    static New(): SimpleEvent;\r\n    static New<T>(): ISimpleEvent1<T>;\r\n    static New<T1, T2>(): ISimpleEvent2<T1, T2>;\r\n    static New<T1, T2, T3>(): ISimpleEvent3<T1, T2, T3>;\r\n    static New() { return new SimpleEvent(); }\r\n}\r\n\r\nexport interface ISimpleEventBase {\r\n\r\n    off(id: number);\r\n    off(fn: Function);\r\n\r\n    count(): number;\r\n    trigger(): SimpleEvent;\r\n    dispose();\r\n    clear();\r\n}\r\n\r\nexport interface ISimpleEvent1<T> extends ISimpleEventBase {\r\n    on(fn: (e: T) => void): number;\r\n    trigger(): SimpleEvent;\r\n    trigger(data: T): SimpleEvent;\r\n}\r\n\r\nexport interface ISimpleEvent2<T1, T2> extends ISimpleEventBase {\r\n    on(fn: (e: T1, e2: T2) => void): number;\r\n    trigger(): SimpleEvent;\r\n    trigger(data: T1, a2: T2): SimpleEvent;\r\n}\r\n\r\nexport interface ISimpleEvent3<T1, T2, T3> extends ISimpleEventBase {\r\n    on(fn: (e: T1, e2: T2, e3: T3) => void): number;\r\n    trigger(): SimpleEvent;\r\n    trigger(data: T1, a2: T2, a3: T3): SimpleEvent;\r\n}\r\n","import {Guitar} from './Guitar';\r\nimport {GuitarStrum} from './GuitarStrum';\r\n\r\nexport module WellKnownChords {\r\n\r\n    let standardGuitar = Guitar.GetNormalGuitar();\r\n\r\n\r\n    let s = (y) =>  standardGuitar.getStrum(y);\r\n    let x = undefined;\r\n\r\n    export var D = s([2, 3, 2, 0, x, x]);\r\n    export var A = s([0, 2, 2, 2, 0, x]);\r\n    export var C = s([0, 1, 0, 2, 3, x]);\r\n    export var E = s([0, 0, 1, 2, 2, 0]);\r\n}\r\n"],"sourceRoot":"/source/"}