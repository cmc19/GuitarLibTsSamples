{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","Samples/GuitarNeck/GuitarNeck.ts","GuitarNeck.out.js","node_modules/lodash/index.js","scripts/Raphael.js","scripts/eve.js","src/Guitar.ts","src/GuitarString.ts","src/GuitarStrum.ts","src/Index.ts","src/MusicNote.ts","src/Scale.ts","src/Strum.ts","src/TabDocument.ts","src/UI/BaseUI.ts","src/UI/ChordView.ts","src/UI/GuitarNeck.ts","src/UI/TabEditor.ts","src/UI/TabView.ts","src/UI/Tab/TabCell.ts","src/UI/Tab/TabColumn.ts","src/UI/UI.ts","src/Util/Array.ts","src/Util/Collections.ts","src/Util/Decorators.ts","src/Util/KeyManager.ts","src/Util/SimpleEvent.ts","src/WellKnownChords.ts"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","G","window","guitar","Guitar","GetNormalGuitar","neckDiv","document","createElement","neck","GuitarNeck","showAllNoteLetters","../../src/Index",2,"global","baseCompareAscending","value","other","valIsNull","valIsUndef","undefined","valIsReflexive","othIsNull","othIsUndef","othIsReflexive","baseFindIndex","array","predicate","fromRight","index","baseIndexOf","fromIndex","indexOfNaN","baseIsFunction","baseToString","charsLeftIndex","string","chars","indexOf","charAt","charsRightIndex","compareAscending","object","criteria","compareMultiple","orders","objCriteria","othCriteria","ordersLength","result","deburrLetter","letter","deburredLetters","escapeHtmlChar","chr","htmlEscapes","escapeStringChar","stringEscapes","isObjectLike","isSpace","charCode","replaceHolders","placeholder","resIndex","PLACEHOLDER","sortedUniq","iteratee","seen","computed","trimmedLeftIndex","charCodeAt","trimmedRightIndex","unescapeHtmlChar","htmlUnescapes","runInContext","context","lodash","isArray","LazyWrapper","LodashWrapper","hasOwnProperty","wrapperClone","baseLodash","chainAll","actions","this","__wrapped__","__actions__","__chain__","__dir__","__dropCount__","__filtered__","__iteratees__","__takeCount__","POSITIVE_INFINITY","__views__","lazyClone","iteratees","views","arrayCopy","lazyReverse","clone","lazyValue","baseWrapperValue","dir","isRight","view","getView","start","end","takeCount","nativeMin","iterLength","outer","iterIndex","data","type","LAZY_DROP_WHILE_FLAG","done","count","limit","LAZY_MAP_FLAG","LAZY_FILTER_FLAG","MapCache","__data__","mapDelete","key","has","mapGet","mapHas","mapSet","SetCache","values","hash","nativeCreate","set","Set","push","cacheIndexOf","cache","isObject","cachePush","add","source","Array","arrayEach","arrayEachRight","arrayEvery","arrayExtremum","comparator","exValue","current","arrayFilter","arrayMap","arrayReduce","accumulator","initFromArray","arrayReduceRight","arraySome","arraySum","assignDefaults","objectValue","sourceValue","assignOwnDefaults","assignWith","customizer","props","keys","baseAssign","baseCopy","baseAt","collection","isNil","isArr","isArrayLike","propsLength","isIndex","baseCallback","func","thisArg","argCount","bindCallback","identity","baseMatches","property","baseMatchesProperty","baseClone","isDeep","stackA","stackB","initCloneArray","tag","objToString","isFunc","funcTag","objectTag","argsTag","cloneableTags","initCloneByTag","initCloneObject","baseForOwn","subValue","baseDelay","wait","args","TypeError","FUNC_ERROR_TEXT","setTimeout","apply","baseDifference","getIndexOf","isCommon","createCache","valuesLength","valuesIndex","baseEvery","baseEach","baseExtremum","baseFill","baseFilter","baseFind","eachFunc","retKey","baseFlatten","isStrict","isArguments","valIndex","valLength","baseForIn","baseFor","keysIn","baseForOwnRight","baseForRight","baseFunctions","isFunction","baseGet","path","pathKey","toObject","baseIsEqual","isLoose","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","arrayTag","othTag","isTypedArray","objIsObj","othIsObj","isSameTag","equalByTag","objIsWrapped","othIsWrapped","equalArrays","equalObjects","pop","baseIsMatch","matchData","noCustomizer","objValue","srcValue","baseMap","getMatchData","isKey","isStrictComparable","toPath","baseSlice","last","baseMerge","isSrcArr","baseMergeDeep","mergeFunc","isPlainObject","toPlainObject","baseProperty","basePropertyDeep","basePullAt","indexes","previous","splice","baseRandom","min","max","floor","nativeRandom","baseReduce","initFromCollection","baseSome","baseSortBy","comparer","sort","baseSortByOrder","callback","getCallback","baseSum","baseUniq","isLarge","seenIndex","baseValues","baseWhile","isDrop","action","binaryIndex","retHighest","low","high","HALF_MAX_ARRAY_LENGTH","mid","binaryIndexBy","valIsNaN","isDef","isReflexive","setLow","MAX_ARRAY_INDEX","arguments","bufferClone","buffer","bufferSlice","composeArgs","partials","holders","holdersLength","argsIndex","argsLength","nativeMax","leftIndex","leftLength","composeArgsRight","holdersIndex","rightIndex","rightLength","offset","createAggregator","setter","initializer","createAssigner","assigner","restParam","sources","guard","isIterateeCall","createBaseEach","getLength","isLength","iterable","createBaseFor","keysFunc","createBindWrapper","wrapper","fn","root","Ctor","createCtorWrapper","createCompounder","words","deburr","thisBinding","baseCreate","prototype","createCurry","flag","curryFunc","arity","createWrapper","createExtremum","toIterable","createFind","createFindIndex","createFindKey","objectFunc","createFlow","funcs","thru","getFuncName","funcName","getData","isLaziable","ARY_FLAG","CURRY_FLAG","PARTIAL_FLAG","REARG_FLAG","plant","createForEach","arrayFunc","createForIn","createForOwn","createObjectMapper","isMapKeys","mapped","createPadDir","createPadding","createPartial","partialFunc","createReduce","createHybridWrapper","bitmask","partialsRight","holdersRight","argPos","ary","isCurry","isCurryRight","argsHolders","newArgPos","newArity","newsHolders","newHoldersRight","newPartials","newPartialsRight","PARTIAL_RIGHT_FLAG","isCurryBound","BIND_FLAG","BIND_KEY_FLAG","newData","setData","isBind","isBindKey","reorder","isAry","CURRY_BOUND_FLAG","CURRY_RIGHT_FLAG","strLength","nativeIsFinite","padLength","repeat","ceil","slice","createPartialWrapper","createSortedIndex","mergeData","baseSetData","arrLength","othLength","arrValue","othValue","boolTag","dateTag","errorTag","name","message","numberTag","regexpTag","stringTag","objProps","objLength","othProps","skipCtor","objCtor","constructor","othCtor","realNames","otherFunc","target","pairs","getNative","isNative","transforms","size","input","Object","arrayBufferTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","byteOffset","reFlags","exec","lastIndex","invokePath","reIsUint","test","MAX_SAFE_INTEGER","reIsPlainProp","reIsDeepProp","srcBitmask","newBitmask","isCombo","pickByArray","pickByCallback","oldArray","shimIsPlainObject","support","shimKeys","allowIndexes","replace","rePropName","match","number","quote","reEscapeChar","chunk","compact","drop","dropRight","dropRightWhile","dropWhile","fill","first","flatten","flattenDeep","initial","lastIndexOf","pull","remove","rest","take","takeRight","takeRightWhile","takeWhile","uniq","isSorted","unzip","group","unzipWith","xor","concat","zipObject","chain","tap","interceptor","wrapperChain","wrapperCommit","wrapperPlant","parent","wrapperReverse","reverse","wrapperToString","wrapperValue","every","filter","findWhere","find","includes","isString","map","pluck","reject","sample","toArray","rand","shuffle","some","sortBy","sortByOrder","where","after","temp","before","debounce","options","cancel","timeoutId","clearTimeout","maxTimeoutId","trailingCall","delayed","remaining","now","stamp","isCalled","lastCalled","maxDelayed","trailing","maxWait","debounced","leading","leadingCall","memoize","resolver","memoized","get","Cache","negate","once","otherArgs","spread","throttle","debounceOptions","wrap","cloneDeep","gt","gte","isBoolean","isDate","isElement","nodeType","isEmpty","isEqual","isError","isMatch","isNaN","isNumber","reIsNative","fnToString","reIsHostCtor","isNull","isRegExp","typedArrayTags","isUndefined","lt","lte","create","properties","functions","defaultValue","invert","multiValue","isProto","skipIndexes","nested","transform","valuesIn","inRange","random","floating","noMin","noMax","parseFloat","capitalize","toUpperCase","reLatin1","reComboMark","endsWith","position","escape","reHasUnescapedHtml","reUnescapedHtml","escapeRegExp","reHasRegExpChars","reRegExpChars","pad","parseInt","radix","nativeParseInt","startsWith","template","otherOptions","settings","templateSettings","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reNoMatch","reDelimiters","RegExp","reInterpolate","reEsTemplate","evaluate","sourceURL","templateCounter","escapeValue","interpolateValue","esTemplateValue","evaluateValue","reUnescapedString","variable","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","attempt","Function","trim","trimLeft","trimRight","trunc","DEFAULT_TRUNC_LENGTH","omission","DEFAULT_TRUNC_OMISSION","separator","search","newEnd","substring","unescape","reHasEscapedHtml","reEscapedHtml","pattern","reWords","matches","constant","matchesProperty","mixin","isObj","methodNames","methodName","noConflict","_","oldDash","noop","propertyOf","range","step","times","MAX_ARRAY_LENGTH","uniqueId","prefix","id","idCounter","augend","addend","sum","noIteratee","defaults","pick","contextProps","Date","Math","Number","String","arrayProto","objectProto","stringProto","toString","ArrayBuffer","getPrototypeOf","Uint8Array","WeakMap","Float64Array","nativeIsArray","isFinite","nativeKeys","nativeNow","nativeNumIsFinite","NEGATIVE_INFINITY","FLOAT64_BYTES_PER_ELEMENT","BYTES_PER_ELEMENT","metaMap","x","valueOf","y","dom","createDocumentFragment","reEscape","reEvaluate","baseEachRight","byteLength","floatLength","HOT_SPAN","HOT_COUNT","difference","findIndex","findLastIndex","intersection","arrays","othIndex","caches","pullAt","sortedIndex","sortedLastIndex","union","without","zip","zipWith","at","countBy","findLast","forEach","forEachRight","groupBy","indexBy","invoke","isProp","partition","reduce","reduceRight","sortByAll","getTime","bind","bindAll","bindKey","curry","curryRight","defer","delay","flow","flowRight","partial","partialRight","rearg","objProto","assign","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","mapKeys","mapValues","merge","omit","camelCase","word","toLowerCase","kebabCase","padLeft","padRight","whitespace","reHasHexPrefix","snakeCase","startCase","method","methodOf","backflow","collect","compose","each","eachRight","extend","methods","select","tail","unique","all","any","contains","eq","detect","foldl","foldr","head","include","inject","VERSION","isFilter","isDropWhile","filtered","whileName","takeName","dropName","operationName","createCallback","lodashFunc","checkIteratee","retUnwrapped","isHybrid","isLazy","useLazy","onlyLazy","chainName","names","commit","run","toJSON","mapTag","setTag","weakMapTag","upper","lower","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","&","<",">","\"","'","`","&amp;","&lt;","&gt;","&quot;","&#39;","&#96;","objectTypes","function","\\","\n","\r"," "," ","freeExports","freeModule","freeGlobal","freeSelf","self","freeWindow","moduleExports","define","amd",3,"glob","current_event","stop","version","wildcard","fun","numsort","b","events","eve","scope","oldstop","listeners","z","indexed","queue","out","ce","ii","zIndex","_events","item","items","k","j","jj","nes","split","es","on","event","attrs","nt","subname","nts","off","unbind","cur","f2","factory","R","is","loaded","_engine","nu","obj","res","repush","cacher","postprocessor","newf","arg","join","shift","clrToString","hex","catmullRom2bezier","crp","d","iLen","p","base3","p1","p2","p3","p4","t1","t2","bezlen","x1","y1","x2","y2","x3","y3","x4","y4","z2","Tvalues","Cvalues","ct","xbase","ybase","comb","math","sqrt","getTatLen","ll","abs","intersect","mmax","mmin","nx","ny","denominator","px","py","px2","toFixed","py2","interHelper","bez1","bez2","justCount","bbox1","bezierBBox","bbox2","isBBoxIntersect","l1","l2","n1","n2","dots1","dots2","xy","findDotsAtSegment","di","di1","dj","dj1","ci","cj","interPathHelper","path1","path2","_path2curve","x1m","y1m","x2m","y2m","pi","pj","intr","kk","segment1","segment2","Matrix","c","x_y_w_h","S","width","height","CubicBezierAtTime","p1x","p1y","p2x","p2y","duration","sampleCurveX","ax","bx","cx","solve","epsilon","solveCurveX","ay","by","cy","t0","d2","Animation","anim","ms","percents","newAnim","attr","toFloat","sortByNumber","top","runAnimation","element","percent","status","totalOrigin","params","isInAnim","isInAnimSet","next","prev","timestamp","from","to","diff","animationElements","el","initstatus","availableAnimAttrs","paper","customAttributes","availableAttrs","getRGB","toColour","g","pathes","path2curve","equaliseTransform","real","m","matrix","to2","getBBox","extractTransform","Str","from2","easing","easyeasy","easing_formulas","bezierrg","curve","pipe","del","origin","animation","requestAnimFrame","stopAnimation","paperproto","elements","circle","rect","ellipse","text","image","formatrg","doc","win","oldRaphael","was","Raphael","Paper","ca","supportsTouch","DocumentTouch","E","touchMap","mousedown","mousemove","mouseup","lowerCase","pow","PI","objectToString","colourRegExp","_ISURL","isnan","NaN","Infinity","-Infinity","round","toInt","upperCase","_availableAttrs","arrow-end","arrow-start","blur","clip-rect","cursor","fill-opacity","font","font-family","font-size","font-style","font-weight","gradient","href","letter-spacing","opacity","rx","ry","src","stroke","stroke-dasharray","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-anchor","title","_availableAnimAttrs","commaSpaces","hsrg","hs","rg","p2s","pathCommand","tCommand","pathValues","eldata","_radial_gradient","rectPath","_rectPath","w","h","ellipsePath","getPath","_getPath","bbox","_getBBox","mapPath","pathi","_g","SVGAngle","implementation","hasFeature","innerHTML","firstChild","style","behavior","adj","svg","vml","_Paper","_id","_oid","angle","atan2","rad","deg","snapTo","tolerance","rem","createUUID","uuidRegEx","uuidReplacer","v","setWindow","newwin","initWin","toHex","color","bod","docum","ActiveXObject","write","close","body","createPopup","createTextRange","queryCommandValue","display","appendChild","defaultView","getComputedStyle","getPropertyValue","hsbtoString","hsltoString","rgbtoString","prepareRGB","clr","packageRGB","rgb","hsb2rgb","hsl2rgb","rgb2hsl","rgb2hsb","B","X","C","H","V","L","M","_path2string","_preload","img","cssText","onload","removeChild","onerror","colour","error","red","green","blue","hsb","hsl","getColor","reset","parsePathString","pathString","pth","paths","arr","pathClone","paramCounts","q","parseTransformString","TString","ps","sleep","c1x","c1y","c2x","c2y","t13","t12","t3","mx","my","alpha","curveDim","isPointInsideBBox","pathIntersection","pathIntersectionNumber","isPointInsidePath","pathBBox","_removedFactory","methodname","pathDimensions","Y","dim","xmin","ymin","xmax","ymax","bb","pathArray","pathToRelative","_pathToRelative","rel","pa","len","pathToAbsolute","_pathToAbsolute","crz","dots","l2c","q2c","_13","_23","a2c","large_arc_flag","sweep_flag","recursive","_120","rotate","cos","sin","f1","rx2","ry2","asin","df","f2old","x2old","y2old","c1","s1","c2","s2","tan","hx","hy","m1","m2","m3","m4","newres","findDotAtSegment","dot","qx","qy","attrs2","processPath","pcom","tq","T","Q","fixArc","pp","pcoms1","pcoms2","fixM","a1","a2","pfirst","seg","seg2","seglen","seg2len","tear","_parseDots","par","_tear","bottom","toMatrix","_tofront","_toback","_insertafter","el2","_insertbefore","transformPath","_extractTransform","tstr","tdata","dx","dy","sx","sy","tlen","command","absolute","inver","translate","scale","dirtyT","getEmpty","_equaliseTransform","tt1","tt2","maxlength","_getContainer","container","getElementById","tagName","pixelWidth","offsetWidth","pixelHeight","offsetHeight","matrixproto","norm","normalize","mag","me","fromCharCode","toFilter","row","scalex","shear","scaley","acos","isSimple","isSuperSimple","noRotation","toTransformString","shorter","preventDefault","returnValue","preventTouch","originalEvent","stopPropagation","cancelBubble","stopTouch","getEventPosition","scrollY","documentElement","scrollTop","scrollX","scrollLeft","clientX","clientY","addEvent","addEventListener","pos","_f","olde","targetTouches","removeEventListener","attachEvent","detacher","detachEvent","drag","dragMove","dragi","touches","touch","identifier","_drag","node","nextSibling","parentNode","opera","getElementByPoint","insertBefore","move_scope","dragUp","unmousemove","unmouseup","end_scope","start_scope","elproto","eventName","shape","removeData","hover","f_in","f_out","scope_in","scope_out","mouseover","mouseout","unhover","unmouseover","unmouseout","draggable","onmove","onstart","onend","onDragOver","undrag","unmousedown","__set__","format","itemsArray","setStart","setFinish","getSize","canvas","setSize","setViewBox","fit","raphael","getOffset","elem","box","getBoundingClientRect","ownerDocument","docElem","clientTop","clientLeft","pageYOffset","left","pageXOffset","elementFromPoint","so","sr","createSVGRect","hits","getIntersectionList","getById","raphaelid","getElementsByBBox","bot","getElementsByPoint","isPointInside","rp","realPath","isWithoutTransform","removed","dirty","bboxwt","glow","offsetx","offsety","getPointAtSegmentLength","getLengthFactory","istotal","subpath","onlystart","point","sp","subpaths","getTotalLength","getPointAtLength","getSubpathsAtLength","getSubpath","ef","linear","<>","backIn","backOut","elastic","bounce","easeIn","easeOut","easeInOut","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","Now","paused","time","that","init","upto255","animateWith","onAnimation","json",100,"lastKey","animate","setTime","pause","resume","setproto","clear","insertion","todel","arglen","exclude","collector","insertAfter","glowConfig","ret","shape2","index2","registerFont","face","fonts","fontcopy","glyphs","family","prop","glyph","getFont","weight","stretch","normal","bold","lighter","bolder","fontName","thefont","print","letter_spacing","line_spacing","letters","notfirst","lineHeight","shifty","descent","curr","token","str","fullfill","tokenRegex","objNotationRegex","replacer","quotedName","ninja","st","isLoaded","readyState","xlink","markers","block","classic","diamond","open","oval","markerCounter","$","setAttributeNS","setAttribute","createElementNS","webkitTapHighlightColor","addGradientFill","fx","fy","SVG","_fx","_fy","vector","defs","gradientTransform","stop-color","location","fillOpacity","updatePosition","patternTransform","addArrow","isEnd","refX","se","arrows","endPath","endMarker","startPath","startMarker","pathId","markerId","use","marker","getElementsByTagName","markerHeight","markerWidth","orient","refY","xlink:href","delta","startdx","enddx","dasharray","-",".","-.","-..",". ","- ","--","- .","--.","--..","addDashes","butt","square","dashes","setFillAndStroke","vis","visibility","att","nodeValue","val","createTextNode","pn","hl","clip","rc","clip-path","getAttribute","startString","endString","isURL","ig","patternUnits","stops","stop-opacity","cssrule","tuneText","fontSize","tspan","texts","tspans","dif","getRealNode","Element","sw","hide","show","containerStyle","canvasHidden","parentElement","clientWidth","clientHeight","def","subkey","toFront","toBack","afterNode","beforeNode","fltr","stdDeviation","_blur","removeAttribute","preserveAspectRatio","_viewBox","con","isFloating","cnvs","css","xmlns","xmlns:xlink","_left","_top","renderfix","vb","paperSize","aspectRatio","_vbSize","viewBox","getScreenCTM","createSVGMatrix","desc","fillString","Z","bites","blurregexp","cssDot","zoom","pathTypes","ovalTypes","path2vml","total","vals","isMove","compensation","setCoords","fillpos","flip","kx","ky","coordsize","rotation","coordorigin","fillsize","newpath","isOval","div","clipRect","dstyle","textpath","textpathStyle","fontFamily","fontWeight","fontStyle","newfill","createNode","newstroke","strokeColor","joinstyle","miterlimit","endcap","dashstyle","span","brect","W","right","dirtyattrs","dd","bbx","fxfy","color2","clrs","colors","focus","focussize","focusposition","oldt","vbs","_viewBoxShift","vbt","skew","isGrad","isPatt","bbt","auxGetBBox","runtimeStyle","margin","Path","textpathok","cs","styleSheets","createStyleSheet","addRule","namespaces","rvml",4,"comaseparator","firstDefined","lastDefined","objtos","ar","sep","exist",5,"__decorate","decorators","Reflect","decorate","GuitarString_1","Decorators_1","GuitarStrum_1","strings","frets","defineProperty","enumerable","configurable","getFretsWithNote","noteName","_this","results","getStrum","positions","stringCount","GuitarStrum","fromObject","GuitarString","getGuitarStrings","hasFromObject","./GuitarString","./GuitarStrum","./Util/Decorators",6,"idx","_i","note","MusicNote_1","MusicNotes","fullName","_index","_note","frequencyAtFret","fret","getNote","frequency","noteAtFret","fretCount","nameId","stringIndex","fretIndex","./MusicNote",7,"__extends","__","Strum_1","_super","_gutiar","getFullNames","_a","getNames","Strum","./Strum",8,"__export","util","orderBy","./Guitar","./Scale","./TabDocument","./UI/UI","./Util/Array","./WellKnownChords",9,"MusicNoteName","stringNoteNames","A","noteMath","getFrequencyOfNoteA4","getNoteNameFromID","getNoteDiff","octive","getOctiveFromId","getNoteNameAsString","noteID","nn","sname",10,"Array_1","Scale","findStrings","MajorScale","getFretInfo","major","p7","getStrumList","info","majors","findAllPossibleCombos","p7Combos","majorFic","StrumBuilder","addArray","fic","getChord","list","isValid","fi",11,"getAverage","arry","previousValue","currentValue","_positions","maxFret","minFret","average","firstUsedStringIndex","lastUsedStringIndex","rate","maxFretDistence","stringsUsed","skipCount","New","fretPositions",12,"Guitar_1","Collections_1","TabPartType","TabDocument","parts","LinkedList","addStrum","ts","TabStrum","addPart","part","gutar","td","strum","./Util/Collections",13,"lx","ly","BaseUI","ele","appendTo",14,"BaseUI_1","ChordView","DefaultSize","_showLetters","_size","draw","_drawParts","stringSeperation","fretSeperation","circleRadius","scaleSize","_drawStrings","_drawFrets","_drawFingerPositions","_drawLetters","_resize","lastStringX","lastFretY","stringX","line","fretY","strIdx","fretIdx","fretYMiddle","showLetters","./BaseUI",15,"firstStringHeight","startStringLine","opacityToggleTime","fingerPositionRadius","_maxFrets","_strumElements","_noteLetters","_noteLettersSet","noteLettersDrawn","drawParts","getStringY","getLastStringY","getFretX","getLastFretX","getStringLength","getPointOfStringFret","getFretHorizontalCenter","drawDoubleFretLine","drawStrings","drawFrets","drawFretBubbles","drawNoteLetters","resize","stringLength","lastString","applyStyles","single","double","hideAllNoteLetters","nls","sIdx","NoteLetterElement","clearStrum","drawStrum","added","addStrumMarker","removeBar","barFret","setMaxFrets","GuitarStringMath","getFretLengths","bg","click","console","log","../Strum",16,"KeyManager_1","SimpleEvent_1","TabView_1","TabEditor","_onChange","SimpleEvent","KeyManager","bindKeys","_allowSelect","selectUp","selectDown","selectedCell","setText","appendText","up","down","setUpEvents","TabView","../Util/KeyManager","../Util/SimpleEvent","./TabView",17,"lpad","substr","TabColumn_1","TabDocument_1","noteSpeperation","_columnAdded","columns","_document","onclick","_drawAllParts","hasSelectedCell","cells","isSelected","getStringStartX","_drawStringLines","_drawStringLetters","_drawStringVertLines","_buildTabColumns","_calculateSize","OpenNoteName","_addColumn","trigger","ns","partCount","colIndex","column","TabColumn","elementAtIndex","cell","defineCell","topCell","rightX","unselectAll","col","getText","lines","longest","lines2","../TabDocument","./Tab/TabColumn",18,"TabCell","textElement","backgroundElement","clickElement","selectElement","createElements","tabView","createClickElement","createSelectElement","_bindEvents","allowSelect","onClick","diffNote","diffString","recalcBackground","unselect","getLeft","getRight","../BaseUI",19,"TabCell_1","tv","tc","./TabCell",20,"./ChordView","./GuitarNeck","./TabEditor",21,"lodash_1","got",22,"defaultCompare","defaultEquals","defaultToString","makeString","toret","reverseCompareFunction","compareFunction","compareToEquals","_hasOwnProperty","equalsFunction","equals","freq","array1","array2","copy","swap","lenght","firstNode","lastNode","nElements","newNode","nodeAtIndex","equalsF","currentNode","eqF","equalsAux","removeElementAtIndex","Dictionary","toStrFunction","table","toStr","getValue","pair","setValue","previousElement","containsKey","LinkedDictionaryPair","unlink","LinkedDictionary","appendToTail","entry","getLinkedDictionaryPair","oldPair","newPair","existingPair","crawlNode","MultiDictionary","valuesEqualsFunction","allowDuplicateValues","dict","allowDuplicate","Heap","compare","leftChildIndex","nodeIndex","rightChildIndex","parentIndex","minIndex","leftChild","rightChild","siftUp","siftDown","peek","removeRoot","equF","Stack","Queue","enqueue","dequeue","PriorityQueue","heap","toStringFunction","dictionary","otherSet","isSubsetOf","isSub","Bag","toStrF","nCopies","copies","vl","toSet","BSTree","insertNode","searchNode","removeNode","inorderTraversal","inorderTraversalAux","preorderTraversal","preorderTraversalAux","postorderTraversal","postorderTraversalAux","levelTraversal","levelTraversalAux","minimum","minimumAux","maximum","maximumAux","heightAux","cmp","leftCh","rightCh","transplant","signal",23,24,"_addEvent","_characterFromEvent","character","which","shiftKey","_MAP","_KEYCODE_MAP","_modifiersMatch","modifiers1","modifiers2","_eventModifiers","modifiers","altKey","ctrlKey","metaKey","_preventDefault","_stopPropagation","_isModifier","_getReverseMap","_REVERSE_MAP","_pickBestAction","_keysFromString","combination","_getKeyInfo","_SPECIAL_ALIASES","_SHIFT_MAP","_belongsTo","ancestor",27,32,33,34,35,36,37,38,39,40,45,46,91,93,224,106,107,109,110,111,186,187,188,189,190,191,192,219,220,221,222,"~","!","@","#","%","^","*","(",")","+",":","?","|","option","return","plus","mod","navigator","platform","_callbacks","_directMap","_sequenceLevels","_ignoreNextKeyup","_ignoreNextKeypress","_nextExpectedAction","_globalCallbacks","tabIndex","_handleKeyEvent","_resetSequences","doNotReset","activeSequences","_getMatches","sequenceName","level","seq","deleteCombo","combo","deleteSequence","_fireCallback","sequence","stopCallback","srcElement","_handleKey","callbacks","maxLevel","processedSequenceCallback","ignoreThisKeypress","keyCode","handleKey","_resetSequenceTimer","_resetTimer","_bindSequence","_increaseSequence","nextAction","_callbackAndReset","isFinal","wrappedCallback","_bindSingle","_bindMultiple","combinations","className","isContentEditable","bindGlobal","dispose","unpause",25,"_idx","_key","subscribers","onError","_b",26,"WellKnownChords","standardGuitar","D"],"mappings":"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","file":"GuitarNeck.out.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import * as G from '../../src/Index';\r\nwindow['G'] = G;\r\n\r\n\r\nvar guitar = window['guitar'] = G.Guitar.GetNormalGuitar();\r\n\r\nlet neckDiv = document.createElement('div');\r\n\r\nvar neck = new G.GuitarNeck(guitar, neckDiv);\r\n\r\nneck.showAllNoteLetters();\r\n",null,"/**\n * @license\n * lodash 3.9.3 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern -d -o ./index.js`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '3.9.3';\n\n  /** Used to compose bitmasks for wrapper metadata. */\n  var BIND_FLAG = 1,\n      BIND_KEY_FLAG = 2,\n      CURRY_BOUND_FLAG = 4,\n      CURRY_FLAG = 8,\n      CURRY_RIGHT_FLAG = 16,\n      PARTIAL_FLAG = 32,\n      PARTIAL_RIGHT_FLAG = 64,\n      ARY_FLAG = 128,\n      REARG_FLAG = 256;\n\n  /** Used as default options for `_.trunc`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect when a function becomes hot. */\n  var HOT_COUNT = 150,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_DROP_WHILE_FLAG = 0,\n      LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2;\n\n  /** Used as the `TypeError` message for \"Functions\" methods. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      weakMapTag = '[object WeakMap]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n      reUnescapedHtml = /[&<>\"'`]/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;\n\n  /**\n   * Used to match `RegExp` [special characters](http://www.regular-expressions.info/characters.html#special).\n   * In addition to special characters the forward slash is escaped to allow for\n   * easier `eval` use and `Function` compilation.\n   */\n  var reRegExpChars = /[.*+?^${}()|[\\]\\/\\\\]/g,\n      reHasRegExpChars = RegExp(reRegExpChars.source);\n\n  /** Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks). */\n  var reComboMark = /[\\u0300-\\u036f\\ufe20-\\ufe23]/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /** Used to match [ES template delimiters](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-template-literal-lexical-components). */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect hexadecimal string values. */\n  var reHasHexPrefix = /^0[xX]/;\n\n  /** Used to detect host constructors (Safari > 5). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^\\d+$/;\n\n  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to match words to create compound words. */\n  var reWords = (function() {\n    var upper = '[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]',\n        lower = '[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+';\n\n    return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');\n  }());\n\n  /** Used to detect and test for whitespace. */\n  var whitespace = (\n    // Basic whitespace characters.\n    ' \\t\\x0b\\f\\xa0\\ufeff' +\n\n    // Line terminators.\n    '\\n\\r\\u2028\\u2029' +\n\n    // Unicode category \"Zs\" space separators.\n    '\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000'\n  );\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'ArrayBuffer', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Math', 'Number',\n    'Object', 'RegExp', 'Set', 'String', '_', 'clearTimeout', 'document',\n    'isFinite', 'parseFloat', 'parseInt', 'setTimeout', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap', 'window'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dateTag] = typedArrayTags[errorTag] =\n  typedArrayTags[funcTag] = typedArrayTags[mapTag] =\n  typedArrayTags[numberTag] = typedArrayTags[objectTag] =\n  typedArrayTags[regexpTag] = typedArrayTags[setTag] =\n  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\n  cloneableTags[dateTag] = cloneableTags[float32Tag] =\n  cloneableTags[float64Tag] = cloneableTags[int8Tag] =\n  cloneableTags[int16Tag] = cloneableTags[int32Tag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[stringTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[mapTag] = cloneableTags[setTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used as an internal `_.debounce` options object by `_.throttle`. */\n  var debounceOptions = {\n    'leading': false,\n    'maxWait': 0,\n    'trailing': false\n  };\n\n  /** Used to map latin-1 supplementary letters to basic latin letters. */\n  var deburredLetters = {\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '`': '&#96;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\",\n    '&#96;': '`'\n  };\n\n  /** Used to determine if values are of the language type `Object`. */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Detect free variable `exports`. */\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global && global.Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = objectTypes[typeof self] && self && self.Object && self;\n\n  /** Detect free variable `window`. */\n  var freeWindow = objectTypes[typeof window] && window && window.Object && window;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  /**\n   * Used as a reference to the global object.\n   *\n   * The `this` value is used if it's the global object to avoid Greasemonkey's\n   * restricted `window` object, otherwise the `window` object is used.\n   */\n  var root = freeGlobal || ((freeWindow !== (this && this.window)) && freeWindow) || freeSelf || this;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The base implementation of `compareAscending` which compares values and\n   * sorts them in ascending order without guaranteeing a stable sort.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {number} Returns the sort order indicator for `value`.\n   */\n  function baseCompareAscending(value, other) {\n    if (value !== other) {\n      var valIsNull = value === null,\n          valIsUndef = value === undefined,\n          valIsReflexive = value === value;\n\n      var othIsNull = other === null,\n          othIsUndef = other === undefined,\n          othIsReflexive = other === other;\n\n      if ((value > other && !othIsNull) || !valIsReflexive ||\n          (valIsNull && !othIsUndef && othIsReflexive) ||\n          (valIsUndef && othIsReflexive)) {\n        return 1;\n      }\n      if ((value < other && !valIsNull) || !othIsReflexive ||\n          (othIsNull && !valIsUndef && valIsReflexive) ||\n          (othIsUndef && valIsReflexive)) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromRight) {\n    var length = array.length,\n        index = fromRight ? length : -1;\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without support for binary searches.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    if (value !== value) {\n      return indexOfNaN(array, fromIndex);\n    }\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isFunction` without support for environments\n   * with incorrect `typeof` results.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n   */\n  function baseIsFunction(value) {\n    // Avoid a Chakra JIT bug in compatibility modes of IE 11.\n    // See https://github.com/jashkenas/underscore/issues/1621 for more details.\n    return typeof value == 'function' || false;\n  }\n\n  /**\n   * Converts `value` to a string if it's not one. An empty string is returned\n   * for `null` or `undefined` values.\n   *\n   * @private\n   * @param {*} value The value to process.\n   * @returns {string} Returns the string.\n   */\n  function baseToString(value) {\n    if (typeof value == 'string') {\n      return value;\n    }\n    return value == null ? '' : (value + '');\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the first character not found in `chars`.\n   */\n  function charsLeftIndex(string, chars) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the last character not found in `chars`.\n   */\n  function charsRightIndex(string, chars) {\n    var index = string.length;\n\n    while (index-- && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.sortBy` to compare transformed elements of a collection and stable\n   * sort them in ascending order.\n   *\n   * @private\n   * @param {Object} object The object to compare to `other`.\n   * @param {Object} other The object to compare to `object`.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareAscending(object, other) {\n    return baseCompareAscending(object.criteria, other.criteria) || (object.index - other.index);\n  }\n\n  /**\n   * Used by `_.sortByOrder` to compare multiple properties of each element\n   * in a collection and stable sort them in the following order:\n   *\n   * If `orders` is unspecified, sort in ascending order for all properties.\n   * Otherwise, for each property, sort in ascending order if its corresponding value in\n   * orders is true, and descending order if false.\n   *\n   * @private\n   * @param {Object} object The object to compare to `other`.\n   * @param {Object} other The object to compare to `object`.\n   * @param {boolean[]} orders The order to sort by for each property.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareMultiple(object, other, orders) {\n    var index = -1,\n        objCriteria = object.criteria,\n        othCriteria = other.criteria,\n        length = objCriteria.length,\n        ordersLength = orders.length;\n\n    while (++index < length) {\n      var result = baseCompareAscending(objCriteria[index], othCriteria[index]);\n      if (result) {\n        if (index >= ordersLength) {\n          return result;\n        }\n        return result * (orders[index] ? 1 : -1);\n      }\n    }\n    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n    // that causes it, under certain circumstances, to provide the same value for\n    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n    // for more details.\n    //\n    // This also ensures a stable sort in V8 and other engines.\n    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n    return object.index - other.index;\n  }\n\n  /**\n   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  function deburrLetter(letter) {\n    return deburredLetters[letter];\n  }\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeHtmlChar(chr) {\n    return htmlEscapes[chr];\n  }\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled\n   * string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n   */\n  function indexOfNaN(array, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 0 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var other = array[index];\n      if (other !== other) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Checks if `value` is object-like.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   */\n  function isObjectLike(value) {\n    return !!value && typeof value == 'object';\n  }\n\n  /**\n   * Used by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a\n   * character code is whitespace.\n   *\n   * @private\n   * @param {number} charCode The character code to inspect.\n   * @returns {boolean} Returns `true` if `charCode` is whitespace, else `false`.\n   */\n  function isSpace(charCode) {\n    return ((charCode <= 160 && (charCode >= 9 && charCode <= 13) || charCode == 32 || charCode == 160) || charCode == 5760 || charCode == 6158 ||\n      (charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279)));\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      if (array[index] === placeholder) {\n        array[index] = PLACEHOLDER;\n        result[++resIndex] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * An implementation of `_.uniq` optimized for sorted arrays without support\n   * for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} [iteratee] The function invoked per iteration.\n   * @returns {Array} Returns the new duplicate-value-free array.\n   */\n  function sortedUniq(array, iteratee) {\n    var seen,\n        index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index],\n          computed = iteratee ? iteratee(value, index, array) : value;\n\n      if (!index || seen !== computed) {\n        seen = computed;\n        result[++resIndex] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the first non-whitespace character.\n   */\n  function trimmedLeftIndex(string) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n  function trimmedRightIndex(string) {\n    var index = string.length;\n\n    while (index-- && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  function unescapeHtmlChar(chr) {\n    return htmlUnescapes[chr];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the given `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Utility\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // using `context` to mock `Date#getTime` use in `_.now`\n   * var mock = _.runInContext({\n   *   'Date': function() {\n   *     return { 'getTime': getTimeMock };\n   *   }\n   * });\n   *\n   * // or creating a suped-up `defer` in Node.js\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  function runInContext(context) {\n    // Avoid issues with some ES3 environments that attempt to use values, named\n    // after built-in constructors like `Object`, for the creation of literals.\n    // ES5 clears this up by stating that literals must use built-in constructors.\n    // See https://es5.github.io/#x11.1.5 for more details.\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\n    /** Native constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Number = context.Number,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for native method references. */\n    var arrayProto = Array.prototype,\n        objectProto = Object.prototype,\n        stringProto = String.prototype;\n\n    /** Used to detect DOM support. */\n    var document = (document = context.window) ? document.document : null;\n\n    /** Used to resolve the decompiled source of functions. */\n    var fnToString = Function.prototype.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /**\n     * Used to resolve the [`toStringTag`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n     * of values.\n     */\n    var objToString = objectProto.toString;\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = context._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      escapeRegExp(fnToString.call(hasOwnProperty))\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Native method references. */\n    var ArrayBuffer = getNative(context, 'ArrayBuffer'),\n        bufferSlice = getNative(ArrayBuffer && new ArrayBuffer(0), 'slice'),\n        ceil = Math.ceil,\n        clearTimeout = context.clearTimeout,\n        floor = Math.floor,\n        getPrototypeOf = getNative(Object, 'getPrototypeOf'),\n        parseFloat = context.parseFloat,\n        push = arrayProto.push,\n        Set = getNative(context, 'Set'),\n        setTimeout = context.setTimeout,\n        splice = arrayProto.splice,\n        Uint8Array = getNative(context, 'Uint8Array'),\n        WeakMap = getNative(context, 'WeakMap');\n\n    /** Used to clone array buffers. */\n    var Float64Array = (function() {\n      // Safari 5 errors when using an array buffer to initialize a typed array\n      // where the array buffer's `byteLength` is not a multiple of the typed\n      // array's `BYTES_PER_ELEMENT`.\n      try {\n        var func = getNative(context, 'Float64Array'),\n            result = new func(new ArrayBuffer(10), 0, 1) && func;\n      } catch(e) {}\n      return result || null;\n    }());\n\n    /* Native method references for those with the same name as other `lodash` methods. */\n    var nativeCreate = getNative(Object, 'create'),\n        nativeIsArray = getNative(Array, 'isArray'),\n        nativeIsFinite = context.isFinite,\n        nativeKeys = getNative(Object, 'keys'),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = getNative(Date, 'now'),\n        nativeNumIsFinite = getNative(Number, 'isFinite'),\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random;\n\n    /** Used as references for `-Infinity` and `Infinity`. */\n    var NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY,\n        POSITIVE_INFINITY = Number.POSITIVE_INFINITY;\n\n    /** Used as references for the maximum length and index of an array. */\n    var MAX_ARRAY_LENGTH = 4294967295,\n        MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n    /** Used as the size, in bytes, of each `Float64Array` element. */\n    var FLOAT64_BYTES_PER_ELEMENT = Float64Array ? Float64Array.BYTES_PER_ELEMENT : 0;\n\n    /**\n     * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n     * of an array-like value.\n     */\n    var MAX_SAFE_INTEGER = 9007199254740991;\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit chaining.\n     * Methods that operate on and return arrays, collections, and functions can\n     * be chained together. Methods that return a boolean or single value will\n     * automatically end the chain returning the unwrapped value. Explicit chaining\n     * may be enabled using `_.chain`. The execution of chained methods is lazy,\n     * that is, execution is deferred until `_#value` is implicitly or explicitly\n     * called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n     * fusion is an optimization that merges iteratees to avoid creating intermediate\n     * arrays and reduce the number of iteratee executions.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`,\n     * `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`,\n     * `first`, `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`,\n     * `slice`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `toArray`,\n     * and `where`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n     * `callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, `constant`,\n     * `countBy`, `create`, `curry`, `debounce`, `defaults`, `defer`, `delay`,\n     * `difference`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `fill`,\n     * `filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`, `forEach`,\n     * `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `functions`,\n     * `groupBy`, `indexBy`, `initial`, `intersection`, `invert`, `invoke`, `keys`,\n     * `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `method`, `methodOf`, `mixin`, `negate`, `omit`, `once`,\n     * `pairs`, `partial`, `partialRight`, `partition`, `pick`, `plant`, `pluck`,\n     * `property`, `propertyOf`, `pull`, `pullAt`, `push`, `range`, `rearg`,\n     * `reject`, `remove`, `rest`, `restParam`, `reverse`, `set`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `sortByAll`, `sortByOrder`, `splice`, `spread`,\n     * `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `tap`, `throttle`,\n     * `thru`, `times`, `toArray`, `toPlainObject`, `transform`, `union`, `uniq`,\n     * `unshift`, `unzip`, `unzipWith`, `values`, `valuesIn`, `where`, `without`,\n     * `wrap`, `xor`, `zip`, `zipObject`, `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `clone`, `cloneDeep`, `deburr`,\n     * `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`,\n     * `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`, `get`,\n     * `gt`, `gte`, `has`, `identity`, `includes`, `indexOf`, `inRange`, `isArguments`,\n     * `isArray`, `isBoolean`, `isDate`, `isElement`, `isEmpty`, `isEqual`, `isError`,\n     * `isFinite` `isFunction`, `isMatch`, `isNative`, `isNaN`, `isNull`, `isNumber`,\n     * `isObject`, `isPlainObject`, `isRegExp`, `isString`, `isUndefined`,\n     * `isTypedArray`, `join`, `kebabCase`, `last`, `lastIndexOf`, `lt`, `lte`,\n     * `max`, `min`, `noConflict`, `noop`, `now`, `pad`, `padLeft`, `padRight`,\n     * `parseInt`, `pop`, `random`, `reduce`, `reduceRight`, `repeat`, `result`,\n     * `runInContext`, `shift`, `size`, `snakeCase`, `some`, `sortedIndex`,\n     * `sortedLastIndex`, `startCase`, `startsWith`, `sum`, `template`, `trim`,\n     * `trimLeft`, `trimRight`, `trunc`, `unescape`, `uniqueId`, `value`, and `words`\n     *\n     * The wrapper method `sample` will return a wrapped value when `n` is provided,\n     * otherwise an unwrapped value is returned.\n     *\n     * @name _\n     * @constructor\n     * @category Chain\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // returns an unwrapped value\n     * wrapped.reduce(function(total, n) {\n     *   return total + n;\n     * });\n     * // => 6\n     *\n     * // returns a wrapped value\n     * var squares = wrapped.map(function(n) {\n     *   return n * n;\n     * });\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__chain__') && hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The function whose prototype all chaining wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n     * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.\n     */\n    function LodashWrapper(value, chainAll, actions) {\n      this.__wrapped__ = value;\n      this.__actions__ = actions || [];\n      this.__chain__ = !!chainAll;\n    }\n\n    /**\n     * An object environment feature flags.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    var support = lodash.support = {};\n\n    (function(x) {\n      var Ctor = function() { this.x = x; },\n          object = { '0': x, 'length': x },\n          props = [];\n\n      Ctor.prototype = { 'valueOf': x, 'y': x };\n      for (var key in new Ctor) { props.push(key); }\n\n      /**\n       * Detect if the DOM is supported.\n       *\n       * @memberOf _.support\n       * @type boolean\n       */\n      try {\n        support.dom = document.createDocumentFragment().nodeType === 11;\n      } catch(e) {\n        support.dom = false;\n      }\n    }(1, 0));\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type string\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type Object\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type Function\n         */\n        '_': lodash\n      }\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = null;\n      this.__dir__ = 1;\n      this.__dropCount__ = 0;\n      this.__filtered__ = false;\n      this.__iteratees__ = null;\n      this.__takeCount__ = POSITIVE_INFINITY;\n      this.__views__ = null;\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var actions = this.__actions__,\n          iteratees = this.__iteratees__,\n          views = this.__views__,\n          result = new LazyWrapper(this.__wrapped__);\n\n      result.__actions__ = actions ? arrayCopy(actions) : null;\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = iteratees ? arrayCopy(iteratees) : null;\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = views ? arrayCopy(views) : null;\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value();\n      if (!isArray(array)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var dir = this.__dir__,\n          isRight = dir < 0,\n          view = getView(0, array.length, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          takeCount = nativeMin(length, this.__takeCount__),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees ? iteratees.length : 0,\n          resIndex = 0,\n          result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type;\n\n          if (type == LAZY_DROP_WHILE_FLAG) {\n            if (data.done && (isRight ? (index > data.index) : (index < data.index))) {\n              data.count = 0;\n              data.done = false;\n            }\n            data.index = index;\n            if (!data.done) {\n              var limit = data.limit;\n              if (!(data.done = limit > -1 ? (data.count++ >= limit) : !iteratee(value))) {\n                continue outer;\n              }\n            }\n          } else {\n            var computed = iteratee(value);\n            if (type == LAZY_MAP_FLAG) {\n              value = computed;\n            } else if (!computed) {\n              if (type == LAZY_FILTER_FLAG) {\n                continue outer;\n              } else {\n                break outer;\n              }\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a cache object to store key/value pairs.\n     *\n     * @private\n     * @static\n     * @name Cache\n     * @memberOf _.memoize\n     */\n    function MapCache() {\n      this.__data__ = {};\n    }\n\n    /**\n     * Removes `key` and its value from the cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed successfully, else `false`.\n     */\n    function mapDelete(key) {\n      return this.has(key) && delete this.__data__[key];\n    }\n\n    /**\n     * Gets the cached value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the cached value.\n     */\n    function mapGet(key) {\n      return key == '__proto__' ? undefined : this.__data__[key];\n    }\n\n    /**\n     * Checks if a cached value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapHas(key) {\n      return key != '__proto__' && hasOwnProperty.call(this.__data__, key);\n    }\n\n    /**\n     * Sets `value` to `key` of the cache.\n     *\n     * @private\n     * @name set\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to cache.\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache object.\n     */\n    function mapSet(key, value) {\n      if (key != '__proto__') {\n        this.__data__[key] = value;\n      }\n      return this;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates a cache object to store unique values.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var length = values ? values.length : 0;\n\n      this.data = { 'hash': nativeCreate(null), 'set': new Set };\n      while (length--) {\n        this.push(values[length]);\n      }\n    }\n\n    /**\n     * Checks if `value` is in `cache` mimicking the return signature of\n     * `_.indexOf` by returning `0` if the value is found, else `-1`.\n     *\n     * @private\n     * @param {Object} cache The cache to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `0` if `value` is found, else `-1`.\n     */\n    function cacheIndexOf(cache, value) {\n      var data = cache.data,\n          result = (typeof value == 'string' || isObject(value)) ? data.set.has(value) : data.hash[value];\n\n      return result ? 0 : -1;\n    }\n\n    /**\n     * Adds `value` to the cache.\n     *\n     * @private\n     * @name push\n     * @memberOf SetCache\n     * @param {*} value The value to cache.\n     */\n    function cachePush(value) {\n      var data = this.data;\n      if (typeof value == 'string' || isObject(value)) {\n        data.set.add(value);\n      } else {\n        data.hash[value] = true;\n      }\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayCopy(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEach` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEach(array, iteratee) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (iteratee(array[index], index, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEachRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEachRight(array, iteratee) {\n      var length = array.length;\n\n      while (length--) {\n        if (iteratee(array[length], length, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.every` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     */\n    function arrayEvery(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (!predicate(array[index], index, array)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `baseExtremum` for arrays which invokes `iteratee`\n     * with one argument: (value).\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function arrayExtremum(array, iteratee, comparator, exValue) {\n      var index = -1,\n          length = array.length,\n          computed = exValue,\n          result = computed;\n\n      while (++index < length) {\n        var value = array[index],\n            current = +iteratee(value);\n\n        if (comparator(current, computed)) {\n          computed = current;\n          result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.filter` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function arrayFilter(array, predicate) {\n      var index = -1,\n          length = array.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.map` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function arrayMap(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = iteratee(array[index], index, array);\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.reduce` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the first element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduce(array, iteratee, accumulator, initFromArray) {\n      var index = -1,\n          length = array.length;\n\n      if (initFromArray && length) {\n        accumulator = array[++index];\n      }\n      while (++index < length) {\n        accumulator = iteratee(accumulator, array[index], index, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.reduceRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the last element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduceRight(array, iteratee, accumulator, initFromArray) {\n      var length = array.length;\n      if (initFromArray && length) {\n        accumulator = array[--length];\n      }\n      while (length--) {\n        accumulator = iteratee(accumulator, array[length], length, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.some` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function arraySome(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (predicate(array[index], index, array)) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `_.sum` for arrays without support for iteratees.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     */\n    function arraySum(array) {\n      var length = array.length,\n          result = 0;\n\n      while (length--) {\n        result += +array[length] || 0;\n      }\n      return result;\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assign` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : objectValue;\n    }\n\n    /**\n     * Used by `_.template` to customize its `_.assign` use.\n     *\n     * **Note:** This function is like `assignDefaults` except that it ignores\n     * inherited property values when checking if a property is `undefined`.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @param {string} key The key associated with the object and source values.\n     * @param {Object} object The destination object.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignOwnDefaults(objectValue, sourceValue, key, object) {\n      return (objectValue === undefined || !hasOwnProperty.call(object, key))\n        ? sourceValue\n        : objectValue;\n    }\n\n    /**\n     * A specialized version of `_.assign` for customizing assigned values without\n     * support for argument juggling, multiple sources, and `this` binding `customizer`\n     * functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     */\n    function assignWith(object, source, customizer) {\n      var index = -1,\n          props = keys(source),\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key],\n            result = customizer(value, source[key], key, object, source);\n\n        if ((result === result ? (result !== value) : (value === value)) ||\n            (value === undefined && !(key in object))) {\n          object[key] = result;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for argument juggling,\n     * multiple sources, and `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return source == null\n        ? object\n        : baseCopy(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.at` without support for string collections\n     * and individual key arguments.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {number[]|string[]} props The property names or indexes of elements to pick.\n     * @returns {Array} Returns the new array of picked elements.\n     */\n    function baseAt(collection, props) {\n      var index = -1,\n          isNil = collection == null,\n          isArr = !isNil && isArrayLike(collection),\n          length = isArr ? collection.length : 0,\n          propsLength = props.length,\n          result = Array(propsLength);\n\n      while(++index < propsLength) {\n        var key = props[index];\n        if (isArr) {\n          result[index] = isIndex(key, length) ? collection[key] : undefined;\n        } else {\n          result[index] = isNil ? undefined : collection[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property names to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @returns {Object} Returns `object`.\n     */\n    function baseCopy(source, props, object) {\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n        object[key] = source[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.callback` which supports specifying the\n     * number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function baseCallback(func, thisArg, argCount) {\n      var type = typeof func;\n      if (type == 'function') {\n        return thisArg === undefined\n          ? func\n          : bindCallback(func, thisArg, argCount);\n      }\n      if (func == null) {\n        return identity;\n      }\n      if (type == 'object') {\n        return baseMatches(func);\n      }\n      return thisArg === undefined\n        ? property(func)\n        : baseMatchesProperty(func, thisArg);\n    }\n\n    /**\n     * The base implementation of `_.clone` without support for argument juggling\n     * and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The object `value` belongs to.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n      var result;\n      if (customizer) {\n        result = object ? customizer(value, key, object) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return arrayCopy(value, result);\n        }\n      } else {\n        var tag = objToString.call(value),\n            isFunc = tag == funcTag;\n\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = initCloneObject(isFunc ? {} : value);\n          if (!isDeep) {\n            return baseAssign(result, value);\n          }\n        } else {\n          return cloneableTags[tag]\n            ? initCloneByTag(value, tag, isDeep)\n            : (object ? value : {});\n        }\n      }\n      // Check for circular references and return corresponding clone.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == value) {\n          return stackB[length];\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate it with its clone.\n      stackA.push(value);\n      stackB.push(result);\n\n      // Recursively populate clone (susceptible to call stack limits).\n      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n        result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(prototype) {\n        if (isObject(prototype)) {\n          object.prototype = prototype;\n          var result = new object;\n          object.prototype = null;\n        }\n        return result || {};\n      };\n    }());\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts an index\n     * of where to slice the arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Object} args The arguments provide to `func`.\n     * @returns {number} Returns the timer id.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of `_.difference` which accepts a single array\n     * of values to exclude.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values) {\n      var length = array ? array.length : 0,\n          result = [];\n\n      if (!length) {\n        return result;\n      }\n      var index = -1,\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          cache = (isCommon && values.length >= 200) ? createCache(values) : null,\n          valuesLength = values.length;\n\n      if (cache) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n        values = cache;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index];\n\n        if (isCommon && value === value) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === value) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (indexOf(values, value, 0) < 0) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * Gets the extremum value of `collection` invoking `iteratee` for each value\n     * in `collection` to generate the criterion by which the value is ranked.\n     * The `iteratee` is invoked with three arguments: (value, index|key, collection).\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(collection, iteratee, comparator, exValue) {\n      var computed = exValue,\n          result = computed;\n\n      baseEach(collection, function(value, index, collection) {\n        var current = +iteratee(value, index, collection);\n        if (comparator(current, computed) || (current === exValue && current === result)) {\n          computed = current;\n          result = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : (end >>> 0);\n      start >>>= 0;\n\n      while (start < length) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n     * without support for callback shorthands and `this` binding, which iterates\n     * over `collection` using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @param {boolean} [retKey] Specify returning the key of the found element\n     *  instead of the element itself.\n     * @returns {*} Returns the found element or its key, else `undefined`.\n     */\n    function baseFind(collection, predicate, eachFunc, retKey) {\n      var result;\n      eachFunc(collection, function(value, key, collection) {\n        if (predicate(value, key, collection)) {\n          result = retKey ? key : value;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with added support for restricting\n     * flattening and specifying the start index.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, isDeep, isStrict) {\n      var index = -1,\n          length = array.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (isObjectLike(value) && isArrayLike(value) &&\n            (isStrict || isArray(value) || isArguments(value))) {\n          if (isDeep) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            value = baseFlatten(value, isDeep, isStrict);\n          }\n          var valIndex = -1,\n              valLength = value.length;\n\n          while (++valIndex < valLength) {\n            result[++resIndex] = value[valIndex];\n          }\n        } else if (!isStrict) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n     * each property. Iteratee functions may exit iteration early by explicitly\n     * returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forIn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForIn(object, iteratee) {\n      return baseFor(object, iteratee, keysIn);\n    }\n\n    /**\n     * The base implementation of `_.forOwn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from those provided.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the new array of filtered property names.\n     */\n    function baseFunctions(object, props) {\n      var index = -1,\n          length = props.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var key = props[index];\n        if (isFunction(object[key])) {\n          result[++resIndex] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `get` without support for string paths\n     * and default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path of the property to get.\n     * @param {string} [pathKey] The key representation of path.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path, pathKey) {\n      if (object == null) {\n        return;\n      }\n      if (pathKey !== undefined && pathKey in toObject(object)) {\n        path = [pathKey];\n      }\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[path[index++]];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` without support for `this` binding\n     * `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n     * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = objToString.call(object);\n        if (objTag == argsTag) {\n          objTag = objectTag;\n        } else if (objTag != objectTag) {\n          objIsArr = isTypedArray(object);\n        }\n      }\n      if (!othIsArr) {\n        othTag = objToString.call(other);\n        if (othTag == argsTag) {\n          othTag = objectTag;\n        } else if (othTag != objectTag) {\n          othIsArr = isTypedArray(other);\n        }\n      }\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && !(objIsArr || objIsObj)) {\n        return equalByTag(object, other, objTag);\n      }\n      if (!isLoose) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      // For more information on detecting circular references see https://es5.github.io/#JO.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == object) {\n          return stackB[length] == other;\n        }\n      }\n      // Add `object` and `other` to the stack of traversed objects.\n      stackA.push(object);\n      stackB.push(other);\n\n      var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);\n\n      stackA.pop();\n      stackB.pop();\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} matchData The propery names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = toObject(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var result = customizer ? customizer(objValue, srcValue, key) : undefined;\n          if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which does not clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        var key = matchData[0][0],\n            value = matchData[0][1];\n\n        return function(object) {\n          if (object == null) {\n            return false;\n          }\n          return object[key] === value && (value !== undefined || (key in toObject(object)));\n        };\n      }\n      return function(object) {\n        return baseIsMatch(object, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which does not clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to compare.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      var isArr = isArray(path),\n          isCommon = isKey(path) && isStrictComparable(srcValue),\n          pathKey = (path + '');\n\n      path = toPath(path);\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        var key = pathKey;\n        object = toObject(object);\n        if ((isArr || !isCommon) && !(key in object)) {\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          if (object == null) {\n            return false;\n          }\n          key = last(path);\n          object = toObject(object);\n        }\n        return object[key] === srcValue\n          ? (srcValue !== undefined || (key in object))\n          : baseIsEqual(srcValue, object[key], undefined, true);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for argument juggling,\n     * multiple sources, and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} [customizer] The function to customize merging properties.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {Object} Returns `object`.\n     */\n    function baseMerge(object, source, customizer, stackA, stackB) {\n      if (!isObject(object)) {\n        return object;\n      }\n      var isSrcArr = isArrayLike(source) && (isArray(source) || isTypedArray(source)),\n          props = isSrcArr ? null : keys(source);\n\n      arrayEach(props || source, function(srcValue, key) {\n        if (props) {\n          key = srcValue;\n          srcValue = source[key];\n        }\n        if (isObjectLike(srcValue)) {\n          stackA || (stackA = []);\n          stackB || (stackB = []);\n          baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n        }\n        else {\n          var value = object[key],\n              result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n              isCommon = result === undefined;\n\n          if (isCommon) {\n            result = srcValue;\n          }\n          if ((result !== undefined || (isSrcArr && !(key in object))) &&\n              (isCommon || (result === result ? (result !== value) : (value === value)))) {\n            object[key] = result;\n          }\n        }\n      });\n      return object;\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize merging properties.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n      var length = stackA.length,\n          srcValue = source[key];\n\n      while (length--) {\n        if (stackA[length] == srcValue) {\n          object[key] = stackB[length];\n          return;\n        }\n      }\n      var value = object[key],\n          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n          isCommon = result === undefined;\n\n      if (isCommon) {\n        result = srcValue;\n        if (isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))) {\n          result = isArray(value)\n            ? value\n            : (isArrayLike(value) ? arrayCopy(value) : []);\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          result = isArguments(value)\n            ? toPlainObject(value)\n            : (isPlainObject(value) ? value : {});\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate\n      // it with its merged value.\n      stackA.push(srcValue);\n      stackB.push(result);\n\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n      } else if (result === result ? (result !== value) : (value === value)) {\n        object[key] = result;\n      }\n    }\n\n    /**\n     * The base implementation of `_.property` without support for deep paths.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function baseProperty(key) {\n      return function(object) {\n        return object == null ? undefined : object[key];\n      };\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function basePropertyDeep(path) {\n      var pathKey = (path + '');\n      path = toPath(path);\n      return function(object) {\n        return baseGet(object, path, pathKey);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * index arguments and capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0;\n      while (length--) {\n        var index = indexes[length];\n        if (index != previous && isIndex(index)) {\n          var previous = index;\n          splice.call(array, index, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for argument juggling\n     * and returning floating-point numbers.\n     *\n     * @private\n     * @param {number} min The minimum possible value.\n     * @param {number} max The maximum possible value.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(min, max) {\n      return min + floor(nativeRandom() * (max - min + 1));\n    }\n\n    /**\n     * The base implementation of `_.reduce` and `_.reduceRight` without support\n     * for callback shorthands and `this` binding, which iterates over `collection`\n     * using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} accumulator The initial value.\n     * @param {boolean} initFromCollection Specify using the first or last element\n     *  of `collection` as the initial value.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @returns {*} Returns the accumulated value.\n     */\n    function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {\n      eachFunc(collection, function(value, index, collection) {\n        accumulator = initFromCollection\n          ? (initFromCollection = false, value)\n          : iteratee(accumulator, value, index, collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop detection.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortBy` which uses `comparer` to define\n     * the sort order of `array` and replaces criteria objects with their\n     * corresponding values.\n     *\n     * @private\n     * @param {Array} array The array to sort.\n     * @param {Function} comparer The function to define sort order.\n     * @returns {Array} Returns `array`.\n     */\n    function baseSortBy(array, comparer) {\n      var length = array.length;\n\n      array.sort(comparer);\n      while (length--) {\n        array[length] = array[length].value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.sortByOrder` without param guards.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseSortByOrder(collection, iteratees, orders) {\n      var callback = getCallback(),\n          index = -1;\n\n      iteratees = arrayMap(iteratees, function(iteratee) { return callback(iteratee); });\n\n      var result = baseMap(collection, function(value) {\n        var criteria = arrayMap(iteratees, function(iteratee) { return iteratee(value); });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.sum` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n    function baseSum(collection, iteratee) {\n      var result = 0;\n      baseEach(collection, function(value, index, collection) {\n        result += +iteratee(value, index, collection) || 0;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.uniq` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The function invoked per iteration.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     */\n    function baseUniq(array, iteratee) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = array.length,\n          isCommon = indexOf == baseIndexOf,\n          isLarge = isCommon && length >= 200,\n          seen = isLarge ? createCache() : null,\n          result = [];\n\n      if (seen) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n      } else {\n        isLarge = false;\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value, index, array) : value;\n\n        if (isCommon && value === value) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (indexOf(seen, computed, 0) < 0) {\n          if (iteratee || isLarge) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.values` and `_.valuesIn` which creates an\n     * array of `object` property values corresponding to the property names\n     * of `props`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} props The property names to get values for.\n     * @returns {Object} Returns the array of property values.\n     */\n    function baseValues(object, props) {\n      var index = -1,\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = object[props[index]];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.dropRightWhile`, `_.dropWhile`, `_.takeRightWhile`,\n     * and `_.takeWhile` without support for callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to peform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      var index = -1,\n          length = actions.length;\n\n      while (++index < length) {\n        var args = [result],\n            action = actions[index];\n\n        push.apply(args, action.args);\n        result = action.func.apply(action.thisArg, args);\n      }\n      return result;\n    }\n\n    /**\n     * Performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndex(array, value, retHighest) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if ((retHighest ? (computed <= value) : (computed < value)) && computed !== null) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return binaryIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * This function is like `binaryIndex` except that it invokes `iteratee` for\n     * `value` and each element of `array` to compute their sort ranking. The\n     * iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array ? array.length : 0,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsUndef = value === undefined;\n\n      while (low < high) {\n        var mid = floor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            isDef = computed !== undefined,\n            isReflexive = computed === computed;\n\n        if (valIsNaN) {\n          var setLow = isReflexive || retHighest;\n        } else if (valIsNull) {\n          setLow = isReflexive && isDef && (retHighest || computed != null);\n        } else if (valIsUndef) {\n          setLow = isReflexive && (retHighest || isDef);\n        } else if (computed == null) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * A specialized version of `baseCallback` which only supports `this` binding\n     * and specifying the number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function bindCallback(func, thisArg, argCount) {\n      if (typeof func != 'function') {\n        return identity;\n      }\n      if (thisArg === undefined) {\n        return func;\n      }\n      switch (argCount) {\n        case 1: return function(value) {\n          return func.call(thisArg, value);\n        };\n        case 3: return function(value, index, collection) {\n          return func.call(thisArg, value, index, collection);\n        };\n        case 4: return function(accumulator, value, index, collection) {\n          return func.call(thisArg, accumulator, value, index, collection);\n        };\n        case 5: return function(value, other, key, object, source) {\n          return func.call(thisArg, value, other, key, object, source);\n        };\n      }\n      return function() {\n        return func.apply(thisArg, arguments);\n      };\n    }\n\n    /**\n     * Creates a clone of the given array buffer.\n     *\n     * @private\n     * @param {ArrayBuffer} buffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function bufferClone(buffer) {\n      return bufferSlice.call(buffer, 0);\n    }\n    if (!bufferSlice) {\n      // PhantomJS has `ArrayBuffer` and `Uint8Array` but not `Float64Array`.\n      bufferClone = !(ArrayBuffer && Uint8Array) ? constant(null) : function(buffer) {\n        var byteLength = buffer.byteLength,\n            floatLength = Float64Array ? floor(byteLength / FLOAT64_BYTES_PER_ELEMENT) : 0,\n            offset = floatLength * FLOAT64_BYTES_PER_ELEMENT,\n            result = new ArrayBuffer(byteLength);\n\n        if (floatLength) {\n          var view = new Float64Array(result, 0, floatLength);\n          view.set(new Float64Array(buffer, 0, floatLength));\n        }\n        if (byteLength != offset) {\n          view = new Uint8Array(result, offset);\n          view.set(new Uint8Array(buffer, offset));\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders) {\n      var holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          leftIndex = -1,\n          leftLength = partials.length,\n          result = Array(argsLength + leftLength);\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        result[holders[argsIndex]] = args[argsIndex];\n      }\n      while (argsLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders) {\n      var holdersIndex = -1,\n          holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          rightIndex = -1,\n          rightLength = partials.length,\n          result = Array(argsLength + rightLength);\n\n      while (++argsIndex < argsLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        result[offset + holders[holdersIndex]] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * Creates a function that aggregates a collection, creating an accumulator\n     * object composed from the results of running each element in the collection\n     * through an iteratee.\n     *\n     * **Note:** This function is used to create `_.countBy`, `_.groupBy`, `_.indexBy`,\n     * and `_.partition`.\n     *\n     * @private\n     * @param {Function} setter The function to set keys and values of the accumulator object.\n     * @param {Function} [initializer] The function to initialize the accumulator object.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee, thisArg) {\n        var result = initializer ? initializer() : {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        if (isArray(collection)) {\n          var index = -1,\n              length = collection.length;\n\n          while (++index < length) {\n            var value = collection[index];\n            setter(result, value, iteratee(value, index, collection), collection);\n          }\n        } else {\n          baseEach(collection, function(value, key, collection) {\n            setter(result, value, iteratee(value, key, collection), collection);\n          });\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that assigns properties of source object(s) to a given\n     * destination object.\n     *\n     * **Note:** This function is used to create `_.assign`, `_.defaults`, and `_.merge`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return restParam(function(object, sources) {\n        var index = -1,\n            length = object == null ? 0 : sources.length,\n            customizer = length > 2 ? sources[length - 2] : undefined,\n            guard = length > 2 ? sources[2] : undefined,\n            thisArg = length > 1 ? sources[length - 1] : undefined;\n\n        if (typeof customizer == 'function') {\n          customizer = bindCallback(customizer, thisArg, 5);\n          length -= 2;\n        } else {\n          customizer = typeof thisArg == 'function' ? thisArg : undefined;\n          length -= (customizer ? 1 : 0);\n        }\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        var length = collection ? getLength(collection) : 0;\n        if (!isLength(length)) {\n          return eachFunc(collection, iteratee);\n        }\n        var index = fromRight ? length : -1,\n            iterable = toObject(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var iterable = toObject(object),\n            props = keysFunc(object),\n            length = props.length,\n            index = fromRight ? length : -1;\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var key = props[index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createBindWrapper(func, thisArg) {\n      var Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(thisArg, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `Set` cache object to optimize linear searches of large arrays.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.\n     */\n    var createCache = !(nativeCreate && Set) ? constant(null) : function(values) {\n      return new SetCache(values);\n    };\n\n    /**\n     * Creates a function that produces compound words out of the words in a\n     * given string.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        var index = -1,\n            array = words(deburr(string)),\n            length = array.length,\n            result = '';\n\n        while (++index < length) {\n          result = callback(result, array[index], index);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtorWrapper(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors.\n        // See https://people.mozilla.org/~jorendorff/es6-draft.html#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a `_.curry` or `_.curryRight` function.\n     *\n     * @private\n     * @param {boolean} flag The curry bit flag.\n     * @returns {Function} Returns the new curry function.\n     */\n    function createCurry(flag) {\n      function curryFunc(func, arity, guard) {\n        if (guard && isIterateeCall(func, arity, guard)) {\n          arity = null;\n        }\n        var result = createWrapper(func, flag, null, null, null, null, null, arity);\n        result.placeholder = curryFunc.placeholder;\n        return result;\n      }\n      return curryFunc;\n    }\n\n    /**\n     * Creates a `_.max` or `_.min` function.\n     *\n     * @private\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {Function} Returns the new extremum function.\n     */\n    function createExtremum(comparator, exValue) {\n      return function(collection, iteratee, thisArg) {\n        if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n          iteratee = null;\n        }\n        iteratee = getCallback(iteratee, thisArg, 3);\n        if (iteratee.length == 1) {\n          collection = toIterable(collection);\n          var result = arrayExtremum(collection, iteratee, comparator, exValue);\n          if (!(collection.length && result === exValue)) {\n            return result;\n          }\n        }\n        return baseExtremum(collection, iteratee, comparator, exValue);\n      };\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(eachFunc, fromRight) {\n      return function(collection, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        if (isArray(collection)) {\n          var index = baseFindIndex(collection, predicate, fromRight);\n          return index > -1 ? collection[index] : undefined;\n        }\n        return baseFind(collection, predicate, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a `_.findIndex` or `_.findLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindIndex(fromRight) {\n      return function(array, predicate, thisArg) {\n        if (!(array && array.length)) {\n          return -1;\n        }\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFindIndex(array, predicate, fromRight);\n      };\n    }\n\n    /**\n     * Creates a `_.findKey` or `_.findLastKey` function.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindKey(objectFunc) {\n      return function(object, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFind(object, predicate, objectFunc, true);\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return function() {\n        var wrapper,\n            length = arguments.length,\n            index = fromRight ? length : -1,\n            leftIndex = 0,\n            funcs = Array(length);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var func = funcs[leftIndex++] = arguments[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (!wrapper && LodashWrapper.prototype.thru && getFuncName(func) == 'wrapper') {\n            wrapper = new LodashWrapper([]);\n          }\n        }\n        index = wrapper ? -1 : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : null;\n\n          if (data && isLaziable(data[0]) && data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) && !data[4].length && data[9] == 1) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments;\n          if (wrapper && args.length == 1 && isArray(args[0])) {\n            return wrapper.plant(args[0]).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : args[0];\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      };\n    }\n\n    /**\n     * Creates a function for `_.forEach` or `_.forEachRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForEach(arrayFunc, eachFunc) {\n      return function(collection, iteratee, thisArg) {\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee)\n          : eachFunc(collection, bindCallback(iteratee, thisArg, 3));\n      };\n    }\n\n    /**\n     * Creates a function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForIn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee, keysIn);\n      };\n    }\n\n    /**\n     * Creates a function for `_.forOwn` or `_.forOwnRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForOwn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee);\n      };\n    }\n\n    /**\n     * Creates a function for `_.mapKeys` or `_.mapValues`.\n     *\n     * @private\n     * @param {boolean} [isMapKeys] Specify mapping keys instead of values.\n     * @returns {Function} Returns the new map function.\n     */\n    function createObjectMapper(isMapKeys) {\n      return function(object, iteratee, thisArg) {\n        var result = {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        baseForOwn(object, function(value, key, object) {\n          var mapped = iteratee(value, key, object);\n          key = isMapKeys ? mapped : key;\n          value = isMapKeys ? value : mapped;\n          result[key] = value;\n        });\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function for `_.padLeft` or `_.padRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify padding from the right.\n     * @returns {Function} Returns the new pad function.\n     */\n    function createPadDir(fromRight) {\n      return function(string, length, chars) {\n        string = baseToString(string);\n        return (fromRight ? string : '') + createPadding(string, length, chars) + (fromRight ? '' : string);\n      };\n    }\n\n    /**\n     * Creates a `_.partial` or `_.partialRight` function.\n     *\n     * @private\n     * @param {boolean} flag The partial bit flag.\n     * @returns {Function} Returns the new partial function.\n     */\n    function createPartial(flag) {\n      var partialFunc = restParam(function(func, partials) {\n        var holders = replaceHolders(partials, partialFunc.placeholder);\n        return createWrapper(func, flag, null, partials, holders);\n      });\n      return partialFunc;\n    }\n\n    /**\n     * Creates a function for `_.reduce` or `_.reduceRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createReduce(arrayFunc, eachFunc) {\n      return function(collection, iteratee, accumulator, thisArg) {\n        var initFromArray = arguments.length < 3;\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee, accumulator, initFromArray)\n          : baseReduce(collection, getCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with optional `this`\n     * binding of, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & ARY_FLAG,\n          isBind = bitmask & BIND_FLAG,\n          isBindKey = bitmask & BIND_KEY_FLAG,\n          isCurry = bitmask & CURRY_FLAG,\n          isCurryBound = bitmask & CURRY_BOUND_FLAG,\n          isCurryRight = bitmask & CURRY_RIGHT_FLAG,\n          Ctor = isBindKey ? null : createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it to other functions.\n        var length = arguments.length,\n            index = length,\n            args = Array(length);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight);\n        }\n        if (isCurry || isCurryRight) {\n          var placeholder = wrapper.placeholder,\n              argsHolders = replaceHolders(args, placeholder);\n\n          length -= argsHolders.length;\n          if (length < arity) {\n            var newArgPos = argPos ? arrayCopy(argPos) : null,\n                newArity = nativeMax(arity - length, 0),\n                newsHolders = isCurry ? argsHolders : null,\n                newHoldersRight = isCurry ? null : argsHolders,\n                newPartials = isCurry ? args : null,\n                newPartialsRight = isCurry ? null : args;\n\n            bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n            bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n            if (!isCurryBound) {\n              bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n            }\n            var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity],\n                result = createHybridWrapper.apply(undefined, newData);\n\n            if (isLaziable(func)) {\n              setData(result, newData);\n            }\n            result.placeholder = placeholder;\n            return result;\n          }\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        if (argPos) {\n          args = reorder(args, argPos);\n        }\n        if (isAry && ary < args.length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtorWrapper(func);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates the padding required for `string` based on the given `length`.\n     * The `chars` string is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {string} string The string to create padding for.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the pad for `string`.\n     */\n    function createPadding(string, length, chars) {\n      var strLength = string.length;\n      length = +length;\n\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return '';\n      }\n      var padLength = length - strLength;\n      chars = chars == null ? ' ' : (chars + '');\n      return repeat(chars, ceil(padLength / chars.length)).slice(0, padLength);\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the optional `this`\n     * binding of `thisArg` and the `partials` prepended to those provided to\n     * the wrapper.\n     *\n     * @private\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to the new function.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createPartialWrapper(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it `func`.\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(argsLength + leftLength);\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.sortedIndex` or `_.sortedLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {Function} Returns the new index function.\n     */\n    function createSortedIndex(retHighest) {\n      return function(array, value, iteratee, thisArg) {\n        var callback = getCallback(iteratee);\n        return (iteratee == null && callback === baseCallback)\n          ? binaryIndex(array, value, retHighest)\n          : binaryIndexBy(array, value, callback(iteratee, thisArg, 1), retHighest);\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - `_.bind`\n     *     2 - `_.bindKey`\n     *     4 - `_.curry` or `_.curryRight` of a bound function\n     *     8 - `_.curry`\n     *    16 - `_.curryRight`\n     *    32 - `_.partial`\n     *    64 - `_.partialRight`\n     *   128 - `_.rearg`\n     *   256 - `_.ary`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n        partials = holders = null;\n      }\n      length -= (holders ? holders.length : 0);\n      if (bitmask & PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = null;\n      }\n      var data = isBindKey ? null : getData(func),\n          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];\n\n      if (data) {\n        mergeData(newData, data);\n        bitmask = newData[1];\n        arity = newData[9];\n      }\n      newData[9] = arity == null\n        ? (isBindKey ? 0 : func.length)\n        : (nativeMax(arity - length, 0) || 0);\n\n      if (bitmask == BIND_FLAG) {\n        var result = createBindWrapper(newData[0], newData[2]);\n      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {\n        result = createPartialWrapper.apply(undefined, newData);\n      } else {\n        result = createHybridWrapper.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setter(result, newData);\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing arrays.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var index = -1,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isLoose && othLength > arrLength)) {\n        return false;\n      }\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index],\n            result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;\n\n        if (result !== undefined) {\n          if (result) {\n            continue;\n          }\n          return false;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (isLoose) {\n          if (!arraySome(other, function(othValue) {\n                return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n              })) {\n            return false;\n          }\n        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} value The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag) {\n      switch (tag) {\n        case boolTag:\n        case dateTag:\n          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n          return +object == +other;\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case numberTag:\n          // Treat `NaN` vs. `NaN` as equal.\n          return (object != +object)\n            ? other != +other\n            : object == +other;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings primitives and string\n          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n          return object == (other + '');\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isLoose) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      var skipCtor = isLoose;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key],\n            result = customizer ? customizer(isLoose ? othValue : objValue, isLoose? objValue : othValue, key) : undefined;\n\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {\n          return false;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (!skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Gets the appropriate \"callback\" function. If the `_.callback` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseCallback` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getCallback(func, thisArg, argCount) {\n      var result = lodash.callback || callback;\n      result = result === callback ? baseCallback : result;\n      return argCount ? result(func, thisArg, argCount) : result;\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = func.name,\n          array = realNames[result],\n          length = array ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseIndexOf` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function|number} Returns the chosen function or its result.\n     */\n    function getIndexOf(collection, target, fromIndex) {\n      var result = lodash.indexOf || indexOf;\n      result = result === indexOf ? baseIndexOf : result;\n      return collection ? result(collection, target, fromIndex) : result;\n    }\n\n    /**\n     * Gets the \"length\" property value of `object`.\n     *\n     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n     * that affects Safari on at least iOS 8.1-8.3 ARM64.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {*} Returns the \"length\" value.\n     */\n    var getLength = baseProperty('length');\n\n    /**\n     * Gets the propery names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = pairs(object),\n          length = result.length;\n\n      while (length--) {\n        result[length][2] = isStrictComparable(result[length][1]);\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = object == null ? undefined : object[key];\n      return isNative(value) ? value : undefined;\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} [transforms] The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms ? transforms.length : 0;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add array properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      var Ctor = object.constructor;\n      if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n        Ctor = Object;\n      }\n      return new Ctor;\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return bufferClone(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          var buffer = object.buffer;\n          return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          var result = new Ctor(object.source, reFlags.exec(object));\n          result.lastIndex = object.lastIndex;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the method at `path` on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function invokePath(object, path, args) {\n      if (object != null && !isKey(path, object)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        path = last(path);\n      }\n      var func = object == null ? object : object[path];\n      return func == null ? undefined : func.apply(object, args);\n    }\n\n    /**\n     * Checks if `value` is array-like.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(getLength(value));\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return value > -1 && value % 1 == 0 && value < length;\n    }\n\n    /**\n     * Checks if the provided arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n          ? (isArrayLike(object) && isIndex(index, object.length))\n          : (type == 'string' && index in object)) {\n        var other = object[index];\n        return value === value ? (value === other) : (other !== other);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      var type = typeof value;\n      if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {\n        return true;\n      }\n      if (isArray(value)) {\n        return false;\n      }\n      var result = !reIsDeepProp.test(value);\n      return result || (object != null && value in toObject(object));\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func);\n      if (!(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      var other = lodash[funcName];\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     */\n    function isLength(value) {\n      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers required to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n     * augment function arguments, making the order in which they are executed important,\n     * preventing the merging of metadata. However, we make an exception for a safe\n     * common case where curried functions have `_.ary` and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < ARY_FLAG;\n\n      var isCombo =\n        (srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG) ||\n        (srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8]) ||\n        (srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG);\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = arrayCopy(value);\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * A specialized version of `_.pick` which picks `object` properties specified\n     * by `props`.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property names to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByArray(object, props) {\n      object = toObject(object);\n\n      var index = -1,\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index];\n        if (key in object) {\n          result[key] = object[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.pick` which picks `object` properties `predicate`\n     * returns truthy for.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByCallback(object, predicate) {\n      var result = {};\n      baseForIn(object, function(value, key, object) {\n        if (predicate(value, key, object)) {\n          result[key] = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = arrayCopy(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity function\n     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = (function() {\n      var count = 0,\n          lastCalled = 0;\n\n      return function(key, value) {\n        var stamp = now(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return key;\n          }\n        } else {\n          count = 0;\n        }\n        return baseSetData(key, value);\n      };\n    }());\n\n    /**\n     * A fallback implementation of `_.isPlainObject` which checks if `value`\n     * is an object created by the `Object` constructor or has a `[[Prototype]]`\n     * of `null`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     */\n    function shimIsPlainObject(value) {\n      var Ctor,\n          support = lodash.support;\n\n      // Exit early for non `Object` objects.\n      if (!(isObjectLike(value) && objToString.call(value) == objectTag) ||\n          (!hasOwnProperty.call(value, 'constructor') &&\n            (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n        return false;\n      }\n      // IE < 9 iterates inherited properties before own properties. If the first\n      // iterated property is an object's own property then there are no inherited\n      // enumerable properties.\n      var result;\n      // In most environments an object's own properties are iterated before\n      // its inherited properties. If the last iterated property is an object's\n      // own property then there are no inherited enumerable properties.\n      baseForIn(value, function(subValue, key) {\n        result = key;\n      });\n      return result === undefined || hasOwnProperty.call(value, result);\n    }\n\n    /**\n     * A fallback implementation of `Object.keys` which creates an array of the\n     * own enumerable property names of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function shimKeys(object) {\n      var props = keysIn(object),\n          propsLength = props.length,\n          length = propsLength && object.length;\n\n      var allowIndexes = !!length && isLength(length) &&\n        (isArray(object) || isArguments(object));\n\n      var index = -1,\n          result = [];\n\n      while (++index < propsLength) {\n        var key = props[index];\n        if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to an array-like object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array|Object} Returns the array-like object.\n     */\n    function toIterable(value) {\n      if (value == null) {\n        return [];\n      }\n      if (!isArrayLike(value)) {\n        return values(value);\n      }\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to an object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Object} Returns the object.\n     */\n    function toObject(value) {\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to property path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array} Returns the property path array.\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return value;\n      }\n      var result = [];\n      baseToString(value).replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      return wrapper instanceof LazyWrapper\n        ? wrapper.clone()\n        : new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__, arrayCopy(wrapper.__actions__));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `collection` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new array containing chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if (guard ? isIterateeCall(array, size, guard) : size == null) {\n        size = 1;\n      } else {\n        size = nativeMax(+size || 1, 1);\n      }\n      var index = 0,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = Array(ceil(length / size));\n\n      while (index < length) {\n        result[++resIndex] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of unique `array` values not included in the other\n     * provided arrays using [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The arrays of values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.difference([1, 2, 3], [4, 2]);\n     * // => [1, 3]\n     */\n    var difference = restParam(function(array, values) {\n      return isArrayLike(array)\n        ? baseDifference(array, baseFlatten(values, false, true))\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that match the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [1]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active', false), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active', false), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8], '*', 1, 2);\n     * // => [4, '*', 8]\n     */\n    function fill(array, value, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(chr) {\n     *   return chr.user == 'barney';\n     * });\n     * // => 0\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findIndex(users, 'active', false);\n     * // => 0\n     *\n     * // using the `_.property` callback shorthand\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    var findIndex = createFindIndex();\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(chr) {\n     *   return chr.user == 'pebbles';\n     * });\n     * // => 2\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastIndex(users, 'active', false);\n     * // => 2\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    var findLastIndex = createFindIndex(true);\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias head\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.first([1, 2, 3]);\n     * // => 1\n     *\n     * _.first([]);\n     * // => undefined\n     */\n    function first(array) {\n      return array ? array[0] : undefined;\n    }\n\n    /**\n     * Flattens a nested array. If `isDeep` is `true` the array is recursively\n     * flattened, otherwise it is only flattened a single level.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, [4]]\n     *\n     * // using `isDeep`\n     * _.flatten([1, [2, 3, [4]]], true);\n     * // => [1, 2, 3, 4]\n     */\n    function flatten(array, isDeep, guard) {\n      var length = array ? array.length : 0;\n      if (guard && isIterateeCall(array, isDeep, guard)) {\n        isDeep = false;\n      }\n      return length ? baseFlatten(array, isDeep) : [];\n    }\n\n    /**\n     * Recursively flattens a nested array.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to recursively flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, 4]\n     */\n    function flattenDeep(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, true) : [];\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `array`. If `array` is sorted providing `true` for `fromIndex`\n     * performs a faster binary search.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n     *  to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // using `fromIndex`\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     *\n     * // performing a binary search\n     * _.indexOf([1, 1, 2, 2], 2, true);\n     * // => 2\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      if (typeof fromIndex == 'number') {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n      } else if (fromIndex) {\n        var index = binaryIndex(array, value),\n            other = array[index];\n\n        if (value === value ? (value === other) : (other !== other)) {\n          return index;\n        }\n        return -1;\n      }\n      return baseIndexOf(array, value, fromIndex || 0);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      return dropRight(array, 1);\n    }\n\n    /**\n     * Creates an array of unique values that are included in all of the provided\n     * arrays using [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of shared values.\n     * @example\n     * _.intersection([1, 2], [4, 2], [2, 1]);\n     * // => [2]\n     */\n    var intersection = restParam(function(arrays) {\n      var othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(length),\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          result = [];\n\n      while (othIndex--) {\n        var value = arrays[othIndex] = isArrayLike(value = arrays[othIndex]) ? value : [];\n        caches[othIndex] = (isCommon && value.length >= 120) ? createCache(othIndex && value) : null;\n      }\n      var array = arrays[0],\n          index = -1,\n          length = array ? array.length : 0,\n          seen = caches[0];\n\n      outer:\n      while (++index < length) {\n        value = array[index];\n        if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value, 0)) < 0) {\n          var othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if ((cache ? cacheIndexOf(cache, value) : indexOf(arrays[othIndex], value, 0)) < 0) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(value);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    });\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array ? array.length : 0;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=array.length-1] The index to search from\n     *  or `true` to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // using `fromIndex`\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     *\n     * // performing a binary search\n     * _.lastIndexOf([1, 1, 2, 2], 2, true);\n     * // => 3\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (typeof fromIndex == 'number') {\n        index = (fromIndex < 0 ? nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - 1)) + 1;\n      } else if (fromIndex) {\n        index = binaryIndex(array, value, true) - 1;\n        var other = array[index];\n        if (value === value ? (value === other) : (other !== other)) {\n          return index;\n        }\n        return -1;\n      }\n      if (value !== value) {\n        return indexOfNaN(array, index, true);\n      }\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Removes all provided values from `array` using\n     * [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3, 1, 2, 3];\n     *\n     * _.pull(array, 2, 3);\n     * console.log(array);\n     * // => [1, 1]\n     */\n    function pull() {\n      var args = arguments,\n          array = args[0];\n\n      if (!(array && array.length)) {\n        return array;\n      }\n      var index = 0,\n          indexOf = getIndexOf(),\n          length = args.length;\n\n      while (++index < length) {\n        var fromIndex = 0,\n            value = args[index];\n\n        while ((fromIndex = indexOf(array, value, fromIndex)) > -1) {\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to the given indexes and returns\n     * an array of the removed elements. Indexes may be specified as an array of\n     * indexes or as individual arguments.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [5, 10, 15, 20];\n     * var evens = _.pullAt(array, 1, 3);\n     *\n     * console.log(array);\n     * // => [5, 15]\n     *\n     * console.log(evens);\n     * // => [10, 20]\n     */\n    var pullAt = restParam(function(array, indexes) {\n      indexes = baseFlatten(indexes);\n\n      var result = baseAt(array, indexes);\n      basePullAt(array, indexes.sort(baseCompareAscending));\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate, thisArg) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getCallback(predicate, thisArg, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias tail\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.rest([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function rest(array) {\n      return drop(array, 1);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of `Array#slice` to support node\n     * lists in IE < 9 and to ensure dense arrays are returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value` should\n     * be inserted into `array` in order to maintain its sort order. If an iteratee\n     * function is provided it is invoked for `value` and each element of `array`\n     * to compute their sort ranking. The iteratee is bound to `thisArg` and\n     * invoked with one argument; (value).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     *\n     * _.sortedIndex([4, 4, 5, 5], 5);\n     * // => 2\n     *\n     * var dict = { 'data': { 'thirty': 30, 'forty': 40, 'fifty': 50 } };\n     *\n     * // using an iteratee function\n     * _.sortedIndex(['thirty', 'fifty'], 'forty', function(word) {\n     *   return this.data[word];\n     * }, dict);\n     * // => 1\n     *\n     * // using the `_.property` callback shorthand\n     * _.sortedIndex([{ 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n     * // => 1\n     */\n    var sortedIndex = createSortedIndex();\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 4, 5, 5], 5);\n     * // => 4\n     */\n    var sortedLastIndex = createSortedIndex(true);\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is bound to `thisArg`\n     * and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [2, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active', false), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [1, 2]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active', false), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all of the provided arrays\n     * using [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([1, 2], [4, 2], [2, 1]);\n     * // => [1, 2, 4]\n     */\n    var union = restParam(function(arrays) {\n      return baseUniq(baseFlatten(arrays, false, true));\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurence of each element\n     * is kept. Providing `true` for `isSorted` performs a faster search algorithm\n     * for sorted arrays. If an iteratee function is provided it is invoked for\n     * each element in the array to generate the criterion by which uniqueness\n     * is computed. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, array).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias unique\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {boolean} [isSorted] Specify the array is sorted.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     *\n     * // using `isSorted`\n     * _.uniq([1, 1, 2], true);\n     * // => [1, 2]\n     *\n     * // using an iteratee function\n     * _.uniq([1, 2.5, 1.5, 2], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => [1, 2.5]\n     *\n     * // using the `_.property` callback shorthand\n     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniq(array, isSorted, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (isSorted != null && typeof isSorted != 'boolean') {\n        thisArg = iteratee;\n        iteratee = isIterateeCall(array, isSorted, thisArg) ? null : isSorted;\n        isSorted = false;\n      }\n      var callback = getCallback();\n      if (!(iteratee == null && callback === baseCallback)) {\n        iteratee = callback(iteratee, thisArg, 3);\n      }\n      return (isSorted && getIndexOf() == baseIndexOf)\n        ? sortedUniq(array, iteratee)\n        : baseUniq(array, iteratee);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['fred', 'barney'], [30, 40], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var index = -1,\n          length = 0;\n\n      array = arrayFilter(array, function(group) {\n        if (isArrayLike(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = arrayMap(array, baseProperty(index));\n      }\n      return result;\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts an iteratee to specify\n     * how regrouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee] The function to combine regrouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      iteratee = bindCallback(iteratee, thisArg, 4);\n      return arrayMap(result, function(group) {\n        return arrayReduce(group, iteratee, undefined, true);\n      });\n    }\n\n    /**\n     * Creates an array excluding all provided values using\n     * [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to filter.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.without([1, 2, 1, 3], 1, 2);\n     * // => [3]\n     */\n    var without = restParam(function(array, values) {\n      return isArrayLike(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the provided arrays.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of values.\n     * @example\n     *\n     * _.xor([1, 2], [4, 2]);\n     * // => [1, 4]\n     */\n    function xor() {\n      var index = -1,\n          length = arguments.length;\n\n      while (++index < length) {\n        var array = arguments[index];\n        if (isArrayLike(array)) {\n          var result = result\n            ? baseDifference(result, array).concat(baseDifference(array, result))\n            : array;\n        }\n      }\n      return result ? baseUniq(result) : [];\n    }\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the first\n     * elements of the given arrays, the second of which contains the second elements\n     * of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     */\n    var zip = restParam(unzip);\n\n    /**\n     * The inverse of `_.pairs`; this method returns an object composed from arrays\n     * of property names and values. Provide either a single two dimensional array,\n     * e.g. `[[key1, value1], [key2, value2]]` or two arrays, one of property names\n     * and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @alias object\n     * @category Array\n     * @param {Array} props The property names.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject([['fred', 30], ['barney', 40]]);\n     * // => { 'fred': 30, 'barney': 40 }\n     *\n     * _.zipObject(['fred', 'barney'], [30, 40]);\n     * // => { 'fred': 30, 'barney': 40 }\n     */\n    function zipObject(props, values) {\n      var index = -1,\n          length = props ? props.length : 0,\n          result = {};\n\n      if (length && !values && !isArray(props[0])) {\n        values = [];\n      }\n      while (++index < length) {\n        var key = props[index];\n        if (values) {\n          result[key] = values[index];\n        } else if (key) {\n          result[key[0]] = key[1];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an iteratee to specify\n     * how grouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee] The function to combine grouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], _.add);\n     * // => [111, 222]\n     */\n    var zipWith = restParam(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 2 ? arrays[length - 2] : undefined,\n          thisArg = length > 1 ? arrays[length - 1] : undefined;\n\n      if (length > 2 && typeof iteratee == 'function') {\n        length -= 2;\n      } else {\n        iteratee = (length > 1 && typeof thisArg == 'function') ? (--length, thisArg) : undefined;\n        thisArg = undefined;\n      }\n      arrays.length = length;\n      return unzipWith(arrays, iteratee, thisArg);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object that wraps `value` with explicit method\n     * chaining enabled.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _.chain(users)\n     *   .sortBy('age')\n     *   .map(function(chr) {\n     *     return chr.user + ' is ' + chr.age;\n     *   })\n     *   .first()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor is\n     * bound to `thisArg` and invoked with one argument; (value). The purpose of\n     * this method is to \"tap into\" a method chain in order to perform operations\n     * on intermediate results within the chain.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor, thisArg) {\n      interceptor.call(thisArg, value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor, thisArg) {\n      return interceptor.call(thisArg, value);\n    }\n\n    /**\n     * Enables explicit method chaining on the wrapper object.\n     *\n     * @name chain\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // without explicit chaining\n     * _(users).first();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // with explicit chaining\n     * _(users).chain()\n     *   .first()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chained sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapper = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapper = wrapper.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapper.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Creates a clone of the chained sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapper = _(array).map(function(value) {\n     *   return Math.pow(value, 2);\n     * });\n     *\n     * var other = [3, 4];\n     * var otherWrapper = wrapper.plant(other);\n     *\n     * otherWrapper.value();\n     * // => [9, 16]\n     *\n     * wrapper.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * Reverses the wrapped array so the first element becomes the last, the\n     * second element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new reversed `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        if (this.__actions__.length) {\n          value = new LazyWrapper(this);\n        }\n        return new LodashWrapper(value.reverse(), this.__chain__);\n      }\n      return this.thru(function(value) {\n        return value.reverse();\n      });\n    }\n\n    /**\n     * Produces the result of coercing the unwrapped value to a string.\n     *\n     * @name toString\n     * @memberOf _\n     * @category Chain\n     * @returns {string} Returns the coerced string value.\n     * @example\n     *\n     * _([1, 2, 3]).toString();\n     * // => '1,2,3'\n     */\n    function wrapperToString() {\n      return (this.value() + '');\n    }\n\n    /**\n     * Executes the chained sequence to extract the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @alias run, toJSON, valueOf\n     * @category Chain\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements corresponding to the given keys, or indexes,\n     * of `collection`. Keys may be specified as individual arguments or as arrays\n     * of keys.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(number|number[]|string|string[])} [props] The property names\n     *  or indexes of elements to pick, specified individually or in arrays.\n     * @returns {Array} Returns the new array of picked elements.\n     * @example\n     *\n     * _.at(['a', 'b', 'c'], [0, 2]);\n     * // => ['a', 'c']\n     *\n     * _.at(['barney', 'fred', 'pebbles'], 0, 2);\n     * // => ['barney', 'pebbles']\n     */\n    var at = restParam(function(collection, props) {\n      return baseAt(collection, baseFlatten(props));\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the number of times the key was returned by `iteratee`.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * The predicate is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias all\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': false },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.every(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = null;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias select\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.filter([4, 5, 6], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 6]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.filter(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.filter(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function filter(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias detect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.result(_.find(users, function(chr) {\n     *   return chr.age < 40;\n     * }), 'user');\n     * // => 'barney'\n     *\n     * // using the `_.matches` callback shorthand\n     * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.result(_.find(users, 'active', false), 'user');\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.result(_.find(users, 'active'), 'user');\n     * // => 'barney'\n     */\n    var find = createFind(baseEach);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(baseEachRight, true);\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning the first element that has equivalent property\n     * values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.result(_.findWhere(users, { 'age': 36, 'active': true }), 'user');\n     * // => 'barney'\n     *\n     * _.result(_.findWhere(users, { 'age': 40, 'active': false }), 'user');\n     * // => 'fred'\n     */\n    function findWhere(collection, source) {\n      return find(collection, baseMatches(source));\n    }\n\n    /**\n     * Iterates over elements of `collection` invoking `iteratee` for each element.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection). Iteratee functions may exit iteration early\n     * by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n     * may be used for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @alias each\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEach(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from left to right and returns the array\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {\n     *   console.log(n, key);\n     * });\n     * // => logs each value-key pair and returns the object (iteration order is not guaranteed)\n     */\n    var forEach = createForEach(arrayEach, baseEach);\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEachRight(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from right to left and returns the array\n     */\n    var forEachRight = createForEach(arrayEachRight, baseEachRight);\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is an array of the elements responsible for generating the key.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * // using the `_.property` callback shorthand\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        result[key] = [value];\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection` using\n     * [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @alias contains, include\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {*} target The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {boolean} Returns `true` if a matching element is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n     * // => true\n     *\n     * _.includes('pebbles', 'eb');\n     * // => true\n     */\n    function includes(collection, target, fromIndex, guard) {\n      var length = collection ? getLength(collection) : 0;\n      if (!isLength(length)) {\n        collection = values(collection);\n        length = collection.length;\n      }\n      if (!length) {\n        return false;\n      }\n      if (typeof fromIndex != 'number' || (guard && isIterateeCall(target, fromIndex, guard))) {\n        fromIndex = 0;\n      } else {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);\n      }\n      return (typeof collection == 'string' || !isArray(collection) && isString(collection))\n        ? (fromIndex < length && collection.indexOf(target, fromIndex) > -1)\n        : (getIndexOf(collection, target, fromIndex) > -1);\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the last element responsible for generating the key. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var keyData = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.indexBy(keyData, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return String.fromCharCode(object.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return this.fromCharCode(object.code);\n     * }, String);\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     */\n    var indexBy = createAggregator(function(result, value, key) {\n      result[key] = value;\n    });\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `methodName` is a function it is\n     * invoked for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invoke([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invoke = restParam(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          isProp = isKey(path),\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        var func = isFunc ? path : ((isProp && value != null) ? value[path] : null);\n        result[++index] = func ? func.apply(value, args) : invokePath(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` through\n     * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`,\n     * `drop`, `dropRight`, `every`, `fill`, `flatten`, `invert`, `max`, `min`,\n     * `parseInt`, `slice`, `sortBy`, `take`, `takeRight`, `template`, `trim`,\n     * `trimLeft`, `trimRight`, `trunc`, `random`, `range`, `sample`, `some`,\n     * `sum`, `uniq`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @alias collect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function timesThree(n) {\n     *   return n * 3;\n     * }\n     *\n     * _.map([1, 2], timesThree);\n     * // => [3, 6]\n     *\n     * _.map({ 'a': 1, 'b': 2 }, timesThree);\n     * // => [3, 6] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee, thisArg) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return func(collection, iteratee);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, while the second of which\n     * contains elements `predicate` returns falsey for. The predicate is bound\n     * to `thisArg` and invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * _.partition([1, 2, 3], function(n) {\n     *   return n % 2;\n     * });\n     * // => [[1, 3], [2]]\n     *\n     * _.partition([1.2, 2.3, 3.4], function(n) {\n     *   return this.floor(n) % 2;\n     * }, Math);\n     * // => [[1.2, 3.4], [2.3]]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * var mapper = function(array) {\n     *   return _.pluck(array, 'user');\n     * };\n     *\n     * // using the `_.matches` callback shorthand\n     * _.map(_.partition(users, { 'age': 1, 'active': false }), mapper);\n     * // => [['pebbles'], ['barney', 'fred']]\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.map(_.partition(users, 'active', false), mapper);\n     * // => [['barney', 'pebbles'], ['fred']]\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(_.partition(users, 'active'), mapper);\n     * // => [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Gets the property value of `path` from all elements in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|string} path The path of the property to pluck.\n     * @returns {Array} Returns the property values.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.pluck(users, 'user');\n     * // => ['barney', 'fred']\n     *\n     * var userIndex = _.indexBy(users, 'user');\n     * _.pluck(userIndex, 'age');\n     * // => [36, 40] (iteration order is not guaranteed)\n     */\n    function pluck(collection, path) {\n      return map(collection, property(path));\n    }\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` through `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not provided the first element of `collection` is used as the initial\n     * value. The `iteratee` is bound to `thisArg` and invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `includes`, `merge`, `sortByAll`, and `sortByOrder`\n     *\n     * @static\n     * @memberOf _\n     * @alias foldl, inject\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.reduce([1, 2], function(total, n) {\n     *   return total + n;\n     * });\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     *   return result;\n     * }, {});\n     * // => { 'a': 3, 'b': 6 } (iteration order is not guaranteed)\n     */\n    var reduce = createReduce(arrayReduce, baseEach);\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias foldr\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    var reduceRight = createReduce(arrayReduceRight, baseEachRight);\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.reject([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [1, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.reject(users, { 'age': 40, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.reject(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.reject(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function reject(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, function(value, index, collection) {\n        return !predicate(value, index, collection);\n      });\n    }\n\n    /**\n     * Gets a random element or `n` random elements from a collection.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to sample.\n     * @param {number} [n] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {*} Returns the random sample(s).\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     *\n     * _.sample([1, 2, 3, 4], 2);\n     * // => [3, 1]\n     */\n    function sample(collection, n, guard) {\n      if (guard ? isIterateeCall(collection, n, guard) : n == null) {\n        collection = toIterable(collection);\n        var length = collection.length;\n        return length > 0 ? collection[baseRandom(0, length - 1)] : undefined;\n      }\n      var index = -1,\n          result = toArray(collection),\n          length = result.length,\n          lastIndex = length - 1;\n\n      n = nativeMin(n < 0 ? 0 : (+n || 0), length);\n      while (++index < n) {\n        var rand = baseRandom(index, lastIndex),\n            value = result[rand];\n\n        result[rand] = result[index];\n        result[index] = value;\n      }\n      result.length = n;\n      return result;\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      return sample(collection, POSITIVE_INFINITY);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the size of `collection`.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      var length = collection ? getLength(collection) : 0;\n      return isLength(length) ? length : keys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * The function returns as soon as it finds a passing value and does not iterate\n     * over the entire collection. The predicate is bound to `thisArg` and invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias any\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.some(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = null;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection through `iteratee`. This method performs\n     * a stable sort, that is, it preserves the original sort order of equal elements.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return Math.sin(n);\n     * });\n     * // => [3, 1, 2]\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return this.sin(n);\n     * }, Math);\n     * // => [3, 1, 2]\n     *\n     * var users = [\n     *   { 'user': 'fred' },\n     *   { 'user': 'pebbles' },\n     *   { 'user': 'barney' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.sortBy(users, 'user'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function sortBy(collection, iteratee, thisArg) {\n      if (collection == null) {\n        return [];\n      }\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = null;\n      }\n      var index = -1;\n      iteratee = getCallback(iteratee, thisArg, 3);\n\n      var result = baseMap(collection, function(value, key, collection) {\n        return { 'criteria': iteratee(value, key, collection), 'index': ++index, 'value': value };\n      });\n      return baseSortBy(result, compareAscending);\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it can sort by multiple iteratees\n     * or property names.\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(Function|Function[]|Object|Object[]|string|string[])} iteratees\n     *  The iteratees to sort by, specified as individual values or arrays of values.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.map(_.sortByAll(users, ['user', 'age']), _.values);\n     * // => [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\n     *\n     * _.map(_.sortByAll(users, 'user', function(chr) {\n     *   return Math.floor(chr.age / 10);\n     * }), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    var sortByAll = restParam(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var guard = iteratees[2];\n      if (guard && isIterateeCall(iteratees[0], iteratees[1], guard)) {\n        iteratees.length = 1;\n      }\n      return baseSortByOrder(collection, baseFlatten(iteratees), []);\n    });\n\n    /**\n     * This method is like `_.sortByAll` except that it allows specifying the\n     * sort orders of the iteratees to sort by. A truthy value in `orders` will\n     * sort the corresponding property name in ascending order while a falsey\n     * value will sort it in descending order.\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} orders The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // sort by `user` in ascending order and by `age` in descending order\n     * _.map(_.sortByOrder(users, ['user', 'age'], [true, false]), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    function sortByOrder(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (guard && isIterateeCall(iteratees, orders, guard)) {\n        orders = null;\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseSortByOrder(collection, iteratees, orders);\n    }\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning an array of all elements that have equivalent\n     * property values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false, 'pets': ['hoppy'] },\n     *   { 'user': 'fred',   'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }\n     * ];\n     *\n     * _.pluck(_.where(users, { 'age': 36, 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\n     * // => ['fred']\n     */\n    function where(collection, source) {\n      return filter(collection, baseMatches(source));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the number of milliseconds that have elapsed since the Unix epoch\n     * (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @category Date\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => logs the number of milliseconds it took for the deferred function to be invoked\n     */\n    var now = nativeNow || function() {\n      return new Date().getTime();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it is called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => logs 'done saving!' after the two async saves have completed\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      n = nativeIsFinite(n = +n) ? n : 0;\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that accepts up to `n` arguments ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      if (guard && isIterateeCall(func, n, guard)) {\n        n = null;\n      }\n      n = (func && n == null) ? func.length : nativeMax(+n || 0, 0);\n      return createWrapper(func, ARY_FLAG, null, null, null, null, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it is called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery('#add').on('click', _.before(5, addContactToList));\n     * // => allows adding up to 4 contacts to the list\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = null;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and prepends any additional `_.bind` arguments to those provided to the\n     * bound function.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind` this method does not set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var greet = function(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * };\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // using placeholders\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = restParam(function(func, thisArg, partials) {\n      var bitmask = BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bind.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method. Method names may be specified as individual arguments or as arrays\n     * of method names. If no method names are provided all enumerable function\n     * properties, own and inherited, of `object` are bound.\n     *\n     * **Note:** This method does not set the \"length\" property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} [methodNames] The object method names to bind,\n     *  specified as individual method names or arrays of method names.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'onClick': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view);\n     * jQuery('#docs').on('click', view.onClick);\n     * // => logs 'clicked docs' when the element is clicked\n     */\n    var bindAll = restParam(function(object, methodNames) {\n      methodNames = methodNames.length ? baseFlatten(methodNames) : functions(object);\n\n      var index = -1,\n          length = methodNames.length;\n\n      while (++index < length) {\n        var key = methodNames[index];\n        object[key] = createWrapper(object[key], BIND_FLAG, object);\n      }\n      return object;\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` and prepends\n     * any additional `_.bindKey` arguments to those provided to the bound function.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist.\n     * See [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object the method belongs to.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // using placeholders\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = restParam(function(object, key, partials) {\n      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bindKey.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts one or more arguments of `func` that when\n     * called either invokes `func` returning its result, if all `func` arguments\n     * have been provided, or returns a function that accepts one or more of the\n     * remaining `func` arguments, and so on. The arity of `func` may be specified\n     * if `func.length` is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    var curry = createCurry(CURRY_FLAG);\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    var curryRight = createCurry(CURRY_RIGHT_FLAG);\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed invocations. Provide an options object to indicate that `func`\n     * should be invoked on the leading and/or trailing edge of the `wait` timeout.\n     * Subsequent calls to the debounced function return the result of the last\n     * `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the debounced function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=false] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n     *  delayed before it is invoked.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // avoid costly calculations while the window size is in flux\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // invoke `sendMail` when the click event is fired, debouncing subsequent calls\n     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // ensure `batchLog` is invoked once after 1 second of debounced calls\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', _.debounce(batchLog, 250, {\n     *   'maxWait': 1000\n     * }));\n     *\n     * // cancel a debounced call\n     * var todoChanges = _.debounce(batchLog, 1000);\n     * Object.observe(models.todo, todoChanges);\n     *\n     * Object.observe(models, function(changes) {\n     *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n     *     todoChanges.cancel();\n     *   }\n     * }, ['delete']);\n     *\n     * // ...at some point `models.todo` is changed\n     * models.todo.completed = true;\n     *\n     * // ...before 1 second has passed `models.todo` is deleted\n     * // which cancels the debounced `todoChanges` call\n     * delete models.todo;\n     */\n    function debounce(func, wait, options) {\n      var args,\n          maxTimeoutId,\n          result,\n          stamp,\n          thisArg,\n          timeoutId,\n          trailingCall,\n          lastCalled = 0,\n          maxWait = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = wait < 0 ? 0 : (+wait || 0);\n      if (options === true) {\n        var leading = true;\n        trailing = false;\n      } else if (isObject(options)) {\n        leading = options.leading;\n        maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);\n        trailing = 'trailing' in options ? options.trailing : trailing;\n      }\n\n      function cancel() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        if (maxTimeoutId) {\n          clearTimeout(maxTimeoutId);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n      }\n\n      function delayed() {\n        var remaining = wait - (now() - stamp);\n        if (remaining <= 0 || remaining > wait) {\n          if (maxTimeoutId) {\n            clearTimeout(maxTimeoutId);\n          }\n          var isCalled = trailingCall;\n          maxTimeoutId = timeoutId = trailingCall = undefined;\n          if (isCalled) {\n            lastCalled = now();\n            result = func.apply(thisArg, args);\n            if (!timeoutId && !maxTimeoutId) {\n              args = thisArg = null;\n            }\n          }\n        } else {\n          timeoutId = setTimeout(delayed, remaining);\n        }\n      }\n\n      function maxDelayed() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n        if (trailing || (maxWait !== wait)) {\n          lastCalled = now();\n          result = func.apply(thisArg, args);\n          if (!timeoutId && !maxTimeoutId) {\n            args = thisArg = null;\n          }\n        }\n      }\n\n      function debounced() {\n        args = arguments;\n        stamp = now();\n        thisArg = this;\n        trailingCall = trailing && (timeoutId || !leading);\n\n        if (maxWait === false) {\n          var leadingCall = leading && !timeoutId;\n        } else {\n          if (!maxTimeoutId && !leading) {\n            lastCalled = stamp;\n          }\n          var remaining = maxWait - (stamp - lastCalled),\n              isCalled = remaining <= 0 || remaining > maxWait;\n\n          if (isCalled) {\n            if (maxTimeoutId) {\n              maxTimeoutId = clearTimeout(maxTimeoutId);\n            }\n            lastCalled = stamp;\n            result = func.apply(thisArg, args);\n          }\n          else if (!maxTimeoutId) {\n            maxTimeoutId = setTimeout(maxDelayed, remaining);\n          }\n        }\n        if (isCalled && timeoutId) {\n          timeoutId = clearTimeout(timeoutId);\n        }\n        else if (!timeoutId && wait !== maxWait) {\n          timeoutId = setTimeout(delayed, wait);\n        }\n        if (leadingCall) {\n          isCalled = true;\n          result = func.apply(thisArg, args);\n        }\n        if (isCalled && !timeoutId && !maxTimeoutId) {\n          args = thisArg = null;\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // logs 'deferred' after one or more milliseconds\n     */\n    var defer = restParam(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => logs 'later' after one second\n     */\n    var delay = restParam(function(func, wait, args) {\n      return baseDelay(func, wait, args);\n    });\n\n    /**\n     * Creates a function that returns the result of invoking the provided\n     * functions with the `this` binding of the created function, where each\n     * successive invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow(_.add, square);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the provided functions from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias backflow, compose\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight(square, _.add);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is coerced to a string and used as the\n     * cache key. The `func` is invoked with the `this` binding of the memoized\n     * function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the [`Map`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-properties-of-the-map-prototype-object)\n     * method interface of `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoizing function.\n     * @example\n     *\n     * var upperCase = _.memoize(function(string) {\n     *   return string.toUpperCase();\n     * });\n     *\n     * upperCase('fred');\n     * // => 'FRED'\n     *\n     * // modifying the result cache\n     * upperCase.cache.set('fred', 'BARNEY');\n     * upperCase('fred');\n     * // => 'BARNEY'\n     *\n     * // replacing `_.memoize.Cache`\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'barney' };\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'fred' }\n     *\n     * _.memoize.Cache = WeakMap;\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'barney' }\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result);\n        return result;\n      };\n      memoized.cache = new memoize.Cache;\n      return memoized;\n    }\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        return !predicate.apply(this, arguments);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first call. The `func` is invoked\n     * with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // `initialize` invokes `createApplication` once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with `partial` arguments prepended\n     * to those provided to the new function. This method is like `_.bind` except\n     * it does **not** alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // using placeholders\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = createPartial(PARTIAL_FLAG);\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to those provided to the new function.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // using placeholders\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = createPartial(PARTIAL_RIGHT_FLAG);\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified indexes where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, 2, 0, 1);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     *\n     * var map = _.rearg(_.map, [1, 0]);\n     * map(function(n) {\n     *   return n * 3;\n     * }, [1, 2, 3]);\n     * // => [3, 6, 9]\n     */\n    var rearg = restParam(function(func, indexes) {\n      return createWrapper(func, REARG_FLAG, null, null, null, baseFlatten(indexes));\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as an array.\n     *\n     * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.restParam(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function restParam(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            rest = Array(length);\n\n        while (++index < length) {\n          rest[index] = args[start + index];\n        }\n        switch (start) {\n          case 0: return func.call(this, rest);\n          case 1: return func.call(this, args[0], rest);\n          case 2: return func.call(this, args[0], args[1], rest);\n        }\n        var otherArgs = Array(start + 1);\n        index = -1;\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = rest;\n        return func.apply(this, otherArgs);\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the created\n     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n     *\n     * **Note:** This method is based on the [spread operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * // with a Promise\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function(array) {\n        return func.apply(this, array);\n      };\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed invocations. Provide an options object to indicate\n     * that `func` should be invoked on the leading and/or trailing edge of the\n     * `wait` timeout. Subsequent calls to the throttled function return the\n     * result of the last `func` call.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the throttled function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=true] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // avoid excessively updating the position while scrolling\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes\n     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n     *   'trailing': false\n     * }));\n     *\n     * // cancel a trailing throttled call\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (options === false) {\n        leading = false;\n      } else if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      debounceOptions.leading = leading;\n      debounceOptions.maxWait = +wait;\n      debounceOptions.trailing = trailing;\n      return debounce(func, wait, debounceOptions);\n    }\n\n    /**\n     * Creates a function that provides `value` to the wrapper function as its\n     * first argument. Any additional arguments provided to the function are\n     * appended to those provided to the wrapper function. The wrapper is invoked\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      wrapper = wrapper == null ? identity : wrapper;\n      return createWrapper(wrapper, PARTIAL_FLAG, null, [value], []);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n     * otherwise they are assigned by reference. If `customizer` is provided it is\n     * invoked to produce the cloned values. If `customizer` returns `undefined`\n     * cloning is handled by the method instead. The `customizer` is bound to\n     * `thisArg` and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var shallow = _.clone(users);\n     * shallow[0] === users[0];\n     * // => true\n     *\n     * var deep = _.clone(users, true);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.clone(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 0\n     */\n    function clone(value, isDeep, customizer, thisArg) {\n      if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\n        isDeep = false;\n      }\n      else if (typeof isDeep == 'function') {\n        thisArg = customizer;\n        customizer = isDeep;\n        isDeep = false;\n      }\n      return typeof customizer == 'function'\n        ? baseClone(value, isDeep, bindCallback(customizer, thisArg, 1))\n        : baseClone(value, isDeep);\n    }\n\n    /**\n     * Creates a deep clone of `value`. If `customizer` is provided it is invoked\n     * to produce the cloned values. If `customizer` returns `undefined` cloning\n     * is handled by the method instead. The `customizer` is bound to `thisArg`\n     * and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the deep cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var deep = _.cloneDeep(users);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.cloneDeep(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 20\n     */\n    function cloneDeep(value, customizer, thisArg) {\n      return typeof customizer == 'function'\n        ? baseClone(value, true, bindCallback(customizer, thisArg, 1))\n        : baseClone(value, true);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`, else `false`.\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    function gt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    function gte(value, other) {\n      return value >= other;\n    }\n\n    /**\n     * Checks if `value` is classified as an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      return isObjectLike(value) && isArrayLike(value) && objToString.call(value) == argsTag;\n    }\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(function() { return arguments; }());\n     * // => false\n     */\n    var isArray = nativeIsArray || function(value) {\n      return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n    };\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false || (isObjectLike(value) && objToString.call(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    function isDate(value) {\n      return isObjectLike(value) && objToString.call(value) == dateTag;\n    }\n\n    /**\n     * Checks if `value` is a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return !!value && value.nodeType === 1 && isObjectLike(value) &&\n        (objToString.call(value).indexOf('Element') > -1);\n    }\n    // Fallback for environments without DOM support.\n    if (!support.dom) {\n      isElement = function(value) {\n        return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n      };\n    }\n\n    /**\n     * Checks if `value` is empty. A value is considered empty unless it is an\n     * `arguments` object, array, string, or jQuery-like collection with a length\n     * greater than `0` or an object with own enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Array|Object|string} value The value to inspect.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) && (isArray(value) || isString(value) || isArguments(value) ||\n          (isObjectLike(value) && isFunction(value.splice)))) {\n        return !value.length;\n      }\n      return !keys(value).length;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent. If `customizer` is provided it is invoked to compare values.\n     * If `customizer` returns `undefined` comparisons are handled by the method\n     * instead. The `customizer` is bound to `thisArg` and invoked with three\n     * arguments: (value, other [, index|key]).\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. Functions and DOM nodes\n     * are **not** supported. Provide a customizer function to extend support\n     * for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @alias eq\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'fred' };\n     *\n     * object == other;\n     * // => false\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * // using a customizer callback\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqual(array, other, function(value, other) {\n     *   if (_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/)) {\n     *     return true;\n     *   }\n     * });\n     * // => true\n     */\n    function isEqual(value, other, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return  result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      return isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag;\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on [`Number.isFinite`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.isfinite).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(10);\n     * // => true\n     *\n     * _.isFinite('10');\n     * // => false\n     *\n     * _.isFinite(true);\n     * // => false\n     *\n     * _.isFinite(Object(10));\n     * // => false\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     */\n    var isFinite = nativeNumIsFinite || function(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    };\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    var isFunction = !(baseIsFunction(/x/) || (Uint8Array && !baseIsFunction(Uint8Array))) ? baseIsFunction : function(value) {\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in older versions of Chrome and Safari which return 'function' for regexes\n      // and Safari 8 equivalents which return 'object' for typed array constructors.\n      return objToString.call(value) == funcTag;\n    };\n\n    /**\n     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(1);\n     * // => false\n     */\n    function isObject(value) {\n      // Avoid a V8 JIT bug in Chrome 19-20.\n      // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n      var type = typeof value;\n      return !!value && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Performs a deep comparison between `object` and `source` to determine if\n     * `object` contains equivalent property values. If `customizer` is provided\n     * it is invoked to compare values. If `customizer` returns `undefined`\n     * comparisons are handled by the method instead. The `customizer` is bound\n     * to `thisArg` and invoked with three arguments: (value, other, index|key).\n     *\n     * **Note:** This method supports comparing properties of arrays, booleans,\n     * `Date` objects, numbers, `Object` objects, regexes, and strings. Functions\n     * and DOM nodes are **not** supported. Provide a customizer function to extend\n     * support for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.isMatch(object, { 'age': 40 });\n     * // => true\n     *\n     * _.isMatch(object, { 'age': 36 });\n     * // => false\n     *\n     * // using a customizer callback\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatch(object, source, function(value, other) {\n     *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n     * });\n     * // => true\n     */\n    function isMatch(object, source, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      return baseIsMatch(object, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\n     * which returns `true` for `undefined` and other non-numeric values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some host objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a native function.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (value == null) {\n        return false;\n      }\n      if (objToString.call(value) == funcTag) {\n        return reIsNative.test(fnToString.call(value));\n      }\n      return isObjectLike(value) && reIsHostCtor.test(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n     * as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isNumber(8.4);\n     * // => true\n     *\n     * _.isNumber(NaN);\n     * // => true\n     *\n     * _.isNumber('8.4');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' || (isObjectLike(value) && objToString.call(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * **Note:** This method assumes objects created by the `Object` constructor\n     * have no inherited enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    var isPlainObject = !getPrototypeOf ? shimIsPlainObject : function(value) {\n      if (!(value && objToString.call(value) == objectTag)) {\n        return false;\n      }\n      var valueOf = getNative(value, 'valueOf'),\n          objProto = valueOf && (objProto = getPrototypeOf(valueOf)) && getPrototypeOf(objProto);\n\n      return objProto\n        ? (value == objProto || getPrototypeOf(value) == objProto)\n        : shimIsPlainObject(value);\n    };\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    function isRegExp(value) {\n      return isObjectLike(value) && objToString.call(value) == regexpTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    function isTypedArray(value) {\n      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n    }\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`, else `false`.\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    function lt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    function lte(value, other) {\n      return value <= other;\n    }\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * (function() {\n     *   return _.toArray(arguments).slice(1);\n     * }(1, 2, 3));\n     * // => [2, 3]\n     */\n    function toArray(value) {\n      var length = value ? getLength(value) : 0;\n      if (!isLength(length)) {\n        return values(value);\n      }\n      if (!length) {\n        return [];\n      }\n      return arrayCopy(value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable\n     * properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return baseCopy(value, keysIn(value));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object. Subsequent sources overwrite property assignments of previous sources.\n     * If `customizer` is provided it is invoked to produce the assigned values.\n     * The `customizer` is bound to `thisArg` and invoked with five arguments:\n     * (objectValue, sourceValue, key, object, source).\n     *\n     * **Note:** This method mutates `object` and is based on\n     * [`Object.assign`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign).\n     *\n     * @static\n     * @memberOf _\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using a customizer callback\n     * var defaults = _.partialRight(_.assign, function(value, other) {\n     *   return _.isUndefined(value) ? other : value;\n     * });\n     *\n     * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var assign = createAssigner(function(object, source, customizer) {\n      return customizer\n        ? assignWith(object, source, customizer)\n        : baseAssign(object, source);\n    });\n\n    /**\n     * Creates an object that inherits from the given `prototype` object. If a\n     * `properties` object is provided its own enumerable properties are assigned\n     * to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties, guard) {\n      var result = baseCreate(prototype);\n      if (guard && isIterateeCall(prototype, properties, guard)) {\n        properties = null;\n      }\n      return properties ? baseAssign(result, properties) : result;\n    }\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object for all destination properties that resolve to `undefined`. Once a\n     * property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var defaults = restParam(function(args) {\n      var object = args[0];\n      if (object == null) {\n        return object;\n      }\n      args.push(assignDefaults);\n      return assign.apply(undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    var findKey = createFindKey(baseForOwn);\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => returns `pebbles` assuming `_.findKey` returns `barney`\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    var findLastKey = createFindKey(baseForOwnRight);\n\n    /**\n     * Iterates over own and inherited enumerable properties of an object invoking\n     * `iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a', 'b', and 'c' (iteration order is not guaranteed)\n     */\n    var forIn = createForIn(baseFor);\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'\n     */\n    var forInRight = createForIn(baseForRight);\n\n    /**\n     * Iterates over own enumerable properties of an object invoking `iteratee`\n     * for each property. The `iteratee` is bound to `thisArg` and invoked with\n     * three arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a' and 'b' (iteration order is not guaranteed)\n     */\n    var forOwn = createForOwn(baseForOwn);\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'b' and 'a' assuming `_.forOwn` logs 'a' and 'b'\n     */\n    var forOwnRight = createForOwn(baseForOwnRight);\n\n    /**\n     * Creates an array of function property names from all enumerable properties,\n     * own and inherited, of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @alias methods\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the new array of property names.\n     * @example\n     *\n     * _.functions(_);\n     * // => ['after', 'ary', 'assign', ...]\n     */\n    function functions(object) {\n      return baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the property value at `path` of `object`. If the resolved value is\n     * `undefined` the `defaultValue` is used in its place.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, toPath(path), path + '');\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` is a direct property, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': { 'c': 3 } } };\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b.c');\n     * // => true\n     *\n     * _.has(object, ['a', 'b', 'c']);\n     * // => true\n     */\n    function has(object, path) {\n      if (object == null) {\n        return false;\n      }\n      var result = hasOwnProperty.call(object, path);\n      if (!result && !isKey(path)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        if (object == null) {\n          return false;\n        }\n        path = last(path);\n        result = hasOwnProperty.call(object, path);\n      }\n      return result || (isLength(object.length) && isIndex(path, object.length) &&\n        (isArray(object) || isArguments(object)));\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite property\n     * assignments of previous values unless `multiValue` is `true`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {boolean} [multiValue] Allow multiple values per key.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     *\n     * // with `multiValue`\n     * _.invert(object, true);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function invert(object, multiValue, guard) {\n      if (guard && isIterateeCall(object, multiValue, guard)) {\n        multiValue = null;\n      }\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key];\n\n        if (multiValue) {\n          if (hasOwnProperty.call(result, value)) {\n            result[value].push(key);\n          } else {\n            result[value] = [key];\n          }\n        }\n        else {\n          result[value] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    var keys = !nativeKeys ? shimKeys : function(object) {\n      var Ctor = object == null ? null : object.constructor;\n      if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n          (typeof object != 'function' && isArrayLike(object))) {\n        return shimKeys(object);\n      }\n      return isObject(object) ? nativeKeys(object) : [];\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      if (object == null) {\n        return [];\n      }\n      if (!isObject(object)) {\n        object = Object(object);\n      }\n      var length = object.length;\n      length = (length && isLength(length) &&\n        (isArray(object) || isArguments(object)) && length) || 0;\n\n      var Ctor = object.constructor,\n          index = -1,\n          isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n          result = Array(length),\n          skipIndexes = length > 0;\n\n      while (++index < length) {\n        result[index] = (index + '');\n      }\n      for (var key in object) {\n        if (!(skipIndexes && isIndex(key, length)) &&\n            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * property of `object` through `iteratee`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    var mapKeys = createObjectMapper(true);\n\n    /**\n     * Creates an object with the same keys as `object` and values generated by\n     * running each own enumerable property of `object` through `iteratee`. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, key, object).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapValues({ 'a': 1, 'b': 2 }, function(n) {\n     *   return n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * // using the `_.property` callback shorthand\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    var mapValues = createObjectMapper();\n\n    /**\n     * Recursively merges own enumerable properties of the source object(s), that\n     * don't resolve to `undefined` into the destination object. Subsequent sources\n     * overwrite property assignments of previous sources. If `customizer` is\n     * provided it is invoked to produce the merged values of the destination and\n     * source properties. If `customizer` returns `undefined` merging is handled\n     * by the method instead. The `customizer` is bound to `thisArg` and invoked\n     * with five arguments: (objectValue, sourceValue, key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var users = {\n     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n     * };\n     *\n     * var ages = {\n     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n     * };\n     *\n     * _.merge(users, ages);\n     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n     *\n     * // using a customizer callback\n     * var object = {\n     *   'fruits': ['apple'],\n     *   'vegetables': ['beet']\n     * };\n     *\n     * var other = {\n     *   'fruits': ['banana'],\n     *   'vegetables': ['carrot']\n     * };\n     *\n     * _.merge(object, other, function(a, b) {\n     *   if (_.isArray(a)) {\n     *     return a.concat(b);\n     *   }\n     * });\n     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n     */\n    var merge = createAssigner(baseMerge);\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable properties of `object` that are not omitted.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to omit, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.omit(object, 'age');\n     * // => { 'user': 'fred' }\n     *\n     * _.omit(object, _.isNumber);\n     * // => { 'user': 'fred' }\n     */\n    var omit = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      if (typeof props[0] != 'function') {\n        var props = arrayMap(baseFlatten(props), String);\n        return pickByArray(object, baseDifference(keysIn(object), props));\n      }\n      var predicate = bindCallback(props[0], props[1], 3);\n      return pickByCallback(object, function(value, key, object) {\n        return !predicate(value, key, object);\n      });\n    });\n\n    /**\n     * Creates a two dimensional array of the key-value pairs for `object`,\n     * e.g. `[[key1, value1], [key2, value2]]`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the new array of key-value pairs.\n     * @example\n     *\n     * _.pairs({ 'barney': 36, 'fred': 40 });\n     * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n     */\n    function pairs(object) {\n      object = toObject(object);\n\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        var key = props[index];\n        result[index] = [key, object[key]];\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties. Property\n     * names may be specified as individual arguments or as arrays of property\n     * names. If `predicate` is provided it is invoked for each property of `object`\n     * picking the properties `predicate` returns truthy for. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to pick, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.pick(object, 'user');\n     * // => { 'user': 'fred' }\n     *\n     * _.pick(object, _.isString);\n     * // => { 'user': 'fred' }\n     */\n    var pick = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      return typeof props[0] == 'function'\n        ? pickByCallback(object, bindCallback(props[0], props[1], 3))\n        : pickByArray(object, baseFlatten(props));\n    });\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a function\n     * it is invoked with the `this` binding of its parent object and its result\n     * is returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a.b.c', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a.b.c', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      var result = object == null ? undefined : object[path];\n      if (result === undefined) {\n        if (object != null && !isKey(path, object)) {\n          path = toPath(path);\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          result = object == null ? undefined : object[last(path)];\n        }\n        result = result === undefined ? defaultValue : result;\n      }\n      return isFunction(result) ? result.call(object) : result;\n    }\n\n    /**\n     * Sets the property value of `path` on `object`. If a portion of `path`\n     * does not exist it is created.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to augment.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, 'x[0].y.z', 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      if (object == null) {\n        return object;\n      }\n      var pathKey = (path + '');\n      path = (object[pathKey] != null || isKey(path, object)) ? [pathKey] : toPath(path);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = path[index];\n        if (isObject(nested)) {\n          if (index == lastIndex) {\n            nested[key] = value;\n          } else if (nested[key] == null) {\n            nested[key] = isIndex(path[index + 1]) ? [] : {};\n          }\n        }\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own enumerable\n     * properties through `iteratee`, with each invocation potentially mutating\n     * the `accumulator` object. The `iteratee` is bound to `thisArg` and invoked\n     * with four arguments: (accumulator, value, key, object). Iteratee functions\n     * may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Array|Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     */\n    function transform(object, iteratee, accumulator, thisArg) {\n      var isArr = isArray(object) || isTypedArray(object);\n      iteratee = getCallback(iteratee, thisArg, 4);\n\n      if (accumulator == null) {\n        if (isArr || isObject(object)) {\n          var Ctor = object.constructor;\n          if (isArr) {\n            accumulator = isArray(object) ? new Ctor : [];\n          } else {\n            accumulator = baseCreate(isFunction(Ctor) ? Ctor.prototype : null);\n          }\n        } else {\n          accumulator = {};\n        }\n      }\n      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Creates an array of the own enumerable property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property values\n     * of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Checks if `n` is between `start` and up to but not including, `end`. If\n     * `end` is not specified it is set to `start` with `start` then set to `0`.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} n The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `n` is in the range, else `false`.\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     */\n    function inRange(value, start, end) {\n      start = +start || 0;\n      if (typeof end === 'undefined') {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      return value >= nativeMin(start, end) && value < nativeMax(start, end);\n    }\n\n    /**\n     * Produces a random number between `min` and `max` (inclusive). If only one\n     * argument is provided a number between `0` and the given number is returned.\n     * If `floating` is `true`, or either `min` or `max` are floats, a floating-point\n     * number is returned instead of an integer.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} [min=0] The minimum possible value.\n     * @param {number} [max=1] The maximum possible value.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(min, max, floating) {\n      if (floating && isIterateeCall(min, max, floating)) {\n        max = floating = null;\n      }\n      var noMin = min == null,\n          noMax = max == null;\n\n      if (floating == null) {\n        if (noMax && typeof min == 'boolean') {\n          floating = min;\n          min = 1;\n        }\n        else if (typeof max == 'boolean') {\n          floating = max;\n          noMax = true;\n        }\n      }\n      if (noMin && noMax) {\n        max = 1;\n        noMax = false;\n      }\n      min = +min || 0;\n      if (noMax) {\n        max = min;\n        min = 0;\n      } else {\n        max = +max || 0;\n      }\n      if (floating || min % 1 || max % 1) {\n        var rand = nativeRandom();\n        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1)))), max);\n      }\n      return baseRandom(min, max);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__foo_bar__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? (word.charAt(0).toUpperCase() + word.slice(1)) : word);\n    });\n\n    /**\n     * Capitalizes the first character of `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('fred');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      string = baseToString(string);\n      return string && (string.charAt(0).toUpperCase() + string.slice(1));\n    }\n\n    /**\n     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = baseToString(string);\n      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search from.\n     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = baseToString(string);\n      target = (target + '');\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : nativeMin(position < 0 ? 0 : (+position || 0), length);\n\n      position -= target.length;\n      return position >= 0 && string.indexOf(target, position) == position;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\", in `string` to\n     * their corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional characters\n     * use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value.\n     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * Backticks are escaped because in Internet Explorer < 9, they can break out\n     * of attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n     * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)\n     * for more details.\n     *\n     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)\n     * to reduce XSS vectors.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      // Reset `lastIndex` because in IE < 9 `String#replace` does not.\n      string = baseToString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n     * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n     */\n    function escapeRegExp(string) {\n      string = baseToString(string);\n      return (string && reHasRegExpChars.test(string))\n        ? string.replace(reRegExpChars, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__foo_bar__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = baseToString(string);\n      length = +length;\n\n      var strLength = string.length;\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return string;\n      }\n      var mid = (length - strLength) / 2,\n          leftLength = floor(mid),\n          rightLength = ceil(mid);\n\n      chars = createPadding('', rightLength, chars);\n      return chars.slice(0, leftLength) + string + chars;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padLeft('abc', 6);\n     * // => '   abc'\n     *\n     * _.padLeft('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padLeft('abc', 3);\n     * // => 'abc'\n     */\n    var padLeft = createPadDir();\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padRight('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padRight('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padRight('abc', 3);\n     * // => 'abc'\n     */\n    var padRight = createPadDir(true);\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n     * in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#E)\n     * of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard && isIterateeCall(string, radix, guard)) {\n        radix = 0;\n      }\n      return nativeParseInt(string, radix);\n    }\n    // Fallback for environments with pre-ES5 implementations.\n    if (nativeParseInt(whitespace + '08') != 8) {\n      parseInt = function(string, radix, guard) {\n        // Firefox < 21 and Opera < 15 follow ES3 for `parseInt`.\n        // Chrome fails to trim leading <BOM> whitespace characters.\n        // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n        if (guard ? isIterateeCall(string, radix, guard) : radix == null) {\n          radix = 0;\n        } else if (radix) {\n          radix = +radix;\n        }\n        string = trim(string);\n        return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n      };\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=0] The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n) {\n      var result = '';\n      string = baseToString(string);\n      n = +n;\n      if (n < 1 || !string || !nativeIsFinite(n)) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = floor(n / 2);\n        string += string;\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--foo-bar');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__foo_bar__');\n     * // => 'Foo Bar'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + (word.charAt(0).toUpperCase() + word.slice(1));\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = baseToString(string);\n      position = position == null\n        ? 0\n        : nativeMin(position < 0 ? 0 : (+position || 0), string.length);\n\n      return string.lastIndexOf(target, position) == position;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is provided it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options] The options object.\n     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n     * @param {Object} [options.imports] An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n     * @param {string} [options.variable] The data object variable name.\n     * @param- {Object} [otherOptions] Enables the legacy `options` param signature.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // using the \"interpolate\" delimiter to create a compiled template\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // using the HTML \"escape\" delimiter to escape data property values\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // using the \"evaluate\" delimiter to execute JavaScript and generate HTML\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the internal `print` function in \"evaluate\" delimiters\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // using the ES delimiter as an alternative to the default \"interpolate\" delimiter\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // using custom template delimiters\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // using backslashes to treat delimiters as plain text\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // using the `imports` option to import `jQuery` as `jq`\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the `sourceURL` option to specify a custom sourceURL for the template\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n     *\n     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // using the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and a stack trace\n     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, otherOptions) {\n      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (otherOptions && isIterateeCall(string, options, otherOptions)) {\n        options = otherOptions = null;\n      }\n      string = baseToString(string);\n      options = assignWith(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);\n\n      var imports = assignWith(baseAssign({}, options.imports), settings.imports, assignOwnDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products requires returning the `match`\n        // string in order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + 1);\n      }\n      chars = (chars + '');\n      return string.slice(charsLeftIndex(string, chars), charsRightIndex(string, chars) + 1);\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimLeft('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimLeft('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimLeft(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string));\n      }\n      return string.slice(charsLeftIndex(string, (chars + '')));\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimRight('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimRight('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimRight(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(0, trimmedRightIndex(string) + 1);\n      }\n      return string.slice(0, charsRightIndex(string, (chars + '')) + 1);\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object|number} [options] The options object or maximum string length.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.trunc('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', 24);\n     * // => 'hi-diddly-ho there, n...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function trunc(string, options, guard) {\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = null;\n      }\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (options != null) {\n        if (isObject(options)) {\n          var separator = 'separator' in options ? options.separator : separator;\n          length = 'length' in options ? (+options.length || 0) : length;\n          omission = 'omission' in options ? baseToString(options.omission) : omission;\n        } else {\n          length = +options || 0;\n        }\n      }\n      string = baseToString(string);\n      if (length >= string.length) {\n        return string;\n      }\n      var end = length - omission.length;\n      if (end < 1) {\n        return omission;\n      }\n      var result = string.slice(0, end);\n      if (separator == null) {\n        return result + omission;\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              newEnd,\n              substring = string.slice(0, end);\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, (reFlags.exec(separator) || '') + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            newEnd = match.index;\n          }\n          result = result.slice(0, newEnd == null ? end : newEnd);\n        }\n      } else if (string.indexOf(separator, end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n     * corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n     * entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = baseToString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      if (guard && isIterateeCall(string, pattern, guard)) {\n        pattern = null;\n      }\n      string = baseToString(string);\n      return string.match(pattern || reWords) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function} func The function to attempt.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // avoid throwing errors for invalid selectors\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = restParam(function(func, args) {\n      try {\n        return func.apply(undefined, args);\n      } catch(e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and arguments of the created function. If `func` is a property name the\n     * created callback returns the property value for a given element. If `func`\n     * is an object the created callback returns `true` for elements that contain\n     * the equivalent object properties, otherwise it returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias iteratee\n     * @category Utility\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // wrap to create custom callback shorthands\n     * _.callback = _.wrap(_.callback, function(callback, func, thisArg) {\n     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(func);\n     *   if (!match) {\n     *     return callback(func, thisArg);\n     *   }\n     *   return function(object) {\n     *     return match[2] == 'gt'\n     *       ? object[match[1]] > match[3]\n     *       : object[match[1]] < match[3];\n     *   };\n     * });\n     *\n     * _.filter(users, 'age__gt36');\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     */\n    function callback(func, thisArg, guard) {\n      if (guard && isIterateeCall(func, thisArg, guard)) {\n        thisArg = null;\n      }\n      return isObjectLike(func)\n        ? matches(func)\n        : baseCallback(func, thisArg);\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var getter = _.constant(object);\n     *\n     * getter() === object;\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * This method returns the first argument provided to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.identity(object) === object;\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that performs a deep comparison between a given object\n     * and `source`, returning `true` if the given object has equivalent property\n     * values, else `false`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that compares the property value of `path` on a given\n     * object to `value`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * _.find(users, _.matchesProperty('user', 'fred'));\n     * // => { 'user': 'fred' }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, true));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` on a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': _.constant(2) } } },\n     *   { 'a': { 'b': { 'c': _.constant(1) } } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.invoke(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    var method = restParam(function(path, args) {\n      return function(object) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path on `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = restParam(function(object, args) {\n      return function(path) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable function properties of a source object to the\n     * destination object. If `object` is a function then methods are added to\n     * its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.chain=true] Specify whether the functions added\n     *  are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      if (options == null) {\n        var isObj = isObject(source),\n            props = isObj ? keys(source) : null,\n            methodNames = (props && props.length) ? baseFunctions(source, props) : null;\n\n        if (!(methodNames ? methodNames.length : isObj)) {\n          methodNames = false;\n          options = source;\n          source = object;\n          object = this;\n        }\n      }\n      if (!methodNames) {\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = true,\n          index = -1,\n          isFunc = isFunction(object),\n          length = methodNames.length;\n\n      if (options === false) {\n        chain = false;\n      } else if (isObject(options) && 'chain' in options) {\n        chain = options.chain;\n      }\n      while (++index < length) {\n        var methodName = methodNames[index],\n            func = source[methodName];\n\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = (function(func) {\n            return function() {\n              var chainAll = this.__chain__;\n              if (chain || chainAll) {\n                var result = object(this.__wrapped__),\n                    actions = result.__actions__ = arrayCopy(this.__actions__);\n\n                actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n                result.__chain__ = chainAll;\n                return result;\n              }\n              var args = [this.value()];\n              push.apply(args, arguments);\n              return func.apply(object, args);\n            };\n          }(func));\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      context._ = oldDash;\n      return this;\n    }\n\n    /**\n     * A no-operation function that returns `undefined` regardless of the\n     * arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.noop(object) === undefined;\n     * // => true\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that returns the property value at `path` on a\n     * given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': 2 } } },\n     *   { 'a': { 'b': { 'c': 1 } } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the property value at a given path on `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return baseGet(object, toPath(path), path + '');\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. If `end` is not specified it is\n     * set to `start` with `start` then set to `0`. If `end` is less than `start`\n     * a zero-length range is created unless a negative `step` is specified.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the new array of numbers.\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    function range(start, end, step) {\n      if (step && isIterateeCall(start, end, step)) {\n        end = step = null;\n      }\n      start = +start || 0;\n      step = step == null ? 1 : (+step || 0);\n\n      if (end == null) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      // Use `Array(length)` so engines like Chakra and V8 avoid slower modes.\n      // See https://youtu.be/XAqIpGU8ZZk#t=17m25s for more details.\n      var index = -1,\n          length = nativeMax(ceil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the iteratee function `n` times, returning an array of the results\n     * of each invocation. The `iteratee` is bound to `thisArg` and invoked with\n     * one argument; (index).\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * var diceRolls = _.times(3, _.partial(_.random, 1, 6, false));\n     * // => [3, 6, 4]\n     *\n     * _.times(3, function(n) {\n     *   mage.castSpell(n);\n     * });\n     * // => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2`\n     *\n     * _.times(3, function(n) {\n     *   this.cast(n);\n     * }, mage);\n     * // => also invokes `mage.castSpell(n)` three times\n     */\n    function times(n, iteratee, thisArg) {\n      n = floor(n);\n\n      // Exit early to avoid a JSC JIT bug in Safari 8\n      // where `Array(0)` is treated as `Array(1)`.\n      if (n < 1 || !nativeIsFinite(n)) {\n        return [];\n      }\n      var index = -1,\n          result = Array(nativeMin(n, MAX_ARRAY_LENGTH));\n\n      iteratee = bindCallback(iteratee, thisArg, 1);\n      while (++index < n) {\n        if (index < MAX_ARRAY_LENGTH) {\n          result[index] = iteratee(index);\n        } else {\n          iteratee(index);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is provided the ID is appended to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {string} [prefix] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return baseToString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} augend The first number to add.\n     * @param {number} addend The second number to add.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    function add(augend, addend) {\n      return (+augend || 0) + (+addend || 0);\n    }\n\n    /**\n     * Gets the maximum value of `collection`. If `collection` is empty or falsey\n     * `-Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => -Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.max(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.max(users, 'age');\n     * // => { 'user': 'fred', 'age': 40 }\n     */\n    var max = createExtremum(gt, NEGATIVE_INFINITY);\n\n    /**\n     * Gets the minimum value of `collection`. If `collection` is empty or falsey\n     * `Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.min(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.min(users, 'age');\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var min = createExtremum(lt, POSITIVE_INFINITY);\n\n    /**\n     * Gets the sum of the values in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 6]);\n     * // => 10\n     *\n     * _.sum({ 'a': 4, 'b': 6 });\n     * // => 10\n     *\n     * var objects = [\n     *   { 'n': 4 },\n     *   { 'n': 6 }\n     * ];\n     *\n     * _.sum(objects, function(object) {\n     *   return object.n;\n     * });\n     * // => 10\n     *\n     * // using the `_.property` callback shorthand\n     * _.sum(objects, 'n');\n     * // => 10\n     */\n    function sum(collection, iteratee, thisArg) {\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = null;\n      }\n      var callback = getCallback(),\n          noIteratee = iteratee == null;\n\n      if (!(noIteratee && callback === baseCallback)) {\n        noIteratee = false;\n        iteratee = callback(iteratee, thisArg, 3);\n      }\n      return noIteratee\n        ? arraySum(isArray(collection) ? collection : toIterable(collection))\n        : baseSum(collection, iteratee);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    // Add functions to the `Map` cache.\n    MapCache.prototype['delete'] = mapDelete;\n    MapCache.prototype.get = mapGet;\n    MapCache.prototype.has = mapHas;\n    MapCache.prototype.set = mapSet;\n\n    // Add functions to the `Set` cache.\n    SetCache.prototype.push = cachePush;\n\n    // Assign cache to `_.memoize`.\n    memoize.Cache = MapCache;\n\n    // Add functions that return wrapped values when chaining.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.callback = callback;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.functions = functions;\n    lodash.groupBy = groupBy;\n    lodash.indexBy = indexBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.invert = invert;\n    lodash.invoke = invoke;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.omit = omit;\n    lodash.once = once;\n    lodash.pairs = pairs;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pluck = pluck;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.restParam = restParam;\n    lodash.set = set;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortByAll = sortByAll;\n    lodash.sortByOrder = sortByOrder;\n    lodash.spread = spread;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.times = times;\n    lodash.toArray = toArray;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.union = union;\n    lodash.uniq = uniq;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.where = where;\n    lodash.without = without;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.backflow = flowRight;\n    lodash.collect = map;\n    lodash.compose = flowRight;\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.extend = assign;\n    lodash.iteratee = callback;\n    lodash.methods = functions;\n    lodash.object = zipObject;\n    lodash.select = filter;\n    lodash.tail = rest;\n    lodash.unique = uniq;\n\n    // Add functions to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions that return unwrapped values when chaining.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.deburr = deburr;\n    lodash.endsWith = endsWith;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.findWhere = findWhere;\n    lodash.first = first;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isBoolean = isBoolean;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isMatch = isMatch;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isString = isString;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.min = min;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padLeft = padLeft;\n    lodash.padRight = padRight;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.result = result;\n    lodash.runInContext = runInContext;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.sum = sum;\n    lodash.template = template;\n    lodash.trim = trim;\n    lodash.trimLeft = trimLeft;\n    lodash.trimRight = trimRight;\n    lodash.trunc = trunc;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.words = words;\n\n    // Add aliases.\n    lodash.all = every;\n    lodash.any = some;\n    lodash.contains = includes;\n    lodash.eq = isEqual;\n    lodash.detect = find;\n    lodash.foldl = reduce;\n    lodash.foldr = reduceRight;\n    lodash.head = first;\n    lodash.include = includes;\n    lodash.inject = reduce;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!lodash.prototype[methodName]) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), false);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions capable of returning wrapped and unwrapped values when chaining.\n    lodash.sample = sample;\n\n    lodash.prototype.sample = function(n) {\n      if (!this.__chain__ && n == null) {\n        return sample(this.value());\n      }\n      return this.thru(function(value) {\n        return sample(value, n);\n      });\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type string\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['dropWhile', 'filter', 'map', 'takeWhile'], function(methodName, type) {\n      var isFilter = type != LAZY_MAP_FLAG,\n          isDropWhile = type == LAZY_DROP_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee, thisArg) {\n        var filtered = this.__filtered__,\n            result = (filtered && isDropWhile) ? new LazyWrapper(this) : this.clone(),\n            iteratees = result.__iteratees__ || (result.__iteratees__ = []);\n\n        iteratees.push({\n          'done': false,\n          'count': 0,\n          'index': 0,\n          'iteratee': getCallback(iteratee, thisArg, 1),\n          'limit': -1,\n          'type': type\n        });\n\n        result.__filtered__ = filtered || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      var whileName = methodName + 'While';\n\n      LazyWrapper.prototype[methodName] = function(n) {\n        var filtered = this.__filtered__,\n            result = (filtered && !index) ? this.dropWhile() : this.clone();\n\n        n = n == null ? 1 : nativeMax(floor(n) || 0, 0);\n        if (filtered) {\n          if (index) {\n            result.__takeCount__ = nativeMin(result.__takeCount__, n);\n          } else {\n            last(result.__iteratees__).limit = n;\n          }\n        } else {\n          var views = result.__views__ || (result.__views__ = []);\n          views.push({ 'size': n, 'type': methodName + (result.__dir__ < 0 ? 'Right' : '') });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n\n      LazyWrapper.prototype[methodName + 'RightWhile'] = function(predicate, thisArg) {\n        return this.reverse()[whileName](predicate, thisArg).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.first` and `_.last`.\n    arrayEach(['first', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.rest`.\n    arrayEach(['initial', 'rest'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[dropName](1);\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.pluck` and `_.where`.\n    arrayEach(['pluck', 'where'], function(methodName, index) {\n      var operationName = index ? 'filter' : 'map',\n          createCallback = index ? baseMatches : property;\n\n      LazyWrapper.prototype[methodName] = function(value) {\n        return this[operationName](createCallback(value));\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.reject = function(predicate, thisArg) {\n      predicate = getCallback(predicate, thisArg, 1);\n      return this.filter(function(value) {\n        return !predicate(value);\n      });\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = start == null ? 0 : (+start || 0);\n\n      var result = this;\n      if (start < 0) {\n        result = this.takeRight(-start);\n      } else if (start) {\n        result = this.drop(start);\n      }\n      if (end !== undefined) {\n        end = (+end || 0);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.drop(0);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (!lodashFunc) {\n        return;\n      }\n      var checkIteratee = /^(?:filter|map|reject)|While$/.test(methodName),\n          retUnwrapped = /^(?:first|last)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments,\n            chainAll = this.__chain__,\n            value = this.__wrapped__,\n            isHybrid = !!this.__actions__.length,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // avoid lazy use if the iteratee has a \"length\" value other than `1`\n          isLazy = useLazy = false;\n        }\n        var onlyLazy = isLazy && !isHybrid;\n        if (retUnwrapped && !chainAll) {\n          return onlyLazy\n            ? func.call(value)\n            : lodashFunc.call(lodash, this.value());\n        }\n        var interceptor = function(value) {\n          var otherArgs = [value];\n          push.apply(otherArgs, args);\n          return lodashFunc.apply(lodash, otherArgs);\n        };\n        if (useLazy) {\n          var wrapper = onlyLazy ? value : new LazyWrapper(this),\n              result = func.apply(wrapper, args);\n\n          if (!retUnwrapped && (isHybrid || result.__actions__)) {\n            var actions = result.__actions__ || (result.__actions__ = []);\n            actions.push({ 'func': thru, 'args': [interceptor], 'thisArg': lodash });\n          }\n          return new LodashWrapper(result, chainAll);\n        }\n        return this.thru(interceptor);\n      };\n    });\n\n    // Add `Array` and `String` methods to `lodash.prototype`.\n    arrayEach(['concat', 'join', 'pop', 'push', 'replace', 'shift', 'sort', 'splice', 'split', 'unshift'], function(methodName) {\n      var func = (/^(?:replace|split)$/.test(methodName) ? stringProto : arrayProto)[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:join|pop|replace|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          return func.apply(this.value(), args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(value, args);\n        });\n      };\n    });\n\n    // Map minified function names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name,\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybridWrapper(null, BIND_KEY_FLAG).name] = [{ 'name': 'wrapper', 'func': null }];\n\n    // Add functions to the lazy wrapper.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chaining functions to the `lodash` wrapper.\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toString = wrapperToString;\n    lodash.prototype.run = lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add function aliases to the `lodash` wrapper.\n    lodash.prototype.collect = lodash.prototype.map;\n    lodash.prototype.head = lodash.prototype.first;\n    lodash.prototype.select = lodash.prototype.filter;\n    lodash.prototype.tail = lodash.prototype.rest;\n\n    return lodash;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers like r.js check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose lodash to the global object when an AMD loader is present to avoid\n    // errors in cases where lodash is loaded by a script tag and not intended\n    // as an AMD module. See http://requirejs.org/docs/errors.html#mismatch for\n    // more details.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeExports && freeModule) {\n    // Export for Node.js or RingoJS.\n    if (moduleExports) {\n      (freeModule.exports = _)._ = _;\n    }\n    // Export for Rhino with CommonJS support.\n    else {\n      freeExports._ = _;\n    }\n  }\n  else {\n    // Export for a browser or Rhino.\n    root._ = _;\n  }\n}.call(this));\n","// ┌────────────────────────────────────────────────────────────────────┐ \\\\\r\n// │ Raphaël 2.1.4 - JavaScript Vector Library                          │ \\\\\r\n// ├────────────────────────────────────────────────────────────────────┤ \\\\\r\n// │ Copyright © 2008-2012 Dmitry Baranovskiy (http://raphaeljs.com)    │ \\\\\r\n// │ Copyright © 2008-2012 Sencha Labs (http://sencha.com)              │ \\\\\r\n// ├────────────────────────────────────────────────────────────────────┤ \\\\\r\n// │ Licensed under the MIT (http://raphaeljs.com/license.html) license.│ \\\\\r\n// └────────────────────────────────────────────────────────────────────┘ \\\\\r\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\r\n// \r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n// \r\n// http://www.apache.org/licenses/LICENSE-2.0\r\n// \r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// ┌────────────────────────────────────────────────────────────┐ \\\\\r\n// │ Eve 0.4.2 - JavaScript Events Library                      │ \\\\\r\n// ├────────────────────────────────────────────────────────────┤ \\\\\r\n// │ Author Dmitry Baranovskiy (http://dmitry.baranovskiy.com/) │ \\\\\r\n// └────────────────────────────────────────────────────────────┘ \\\\\r\n\r\n(function (glob) {\r\n    var version = \"0.4.2\",\r\n        has = \"hasOwnProperty\",\r\n        separator = /[\\.\\/]/,\r\n        wildcard = \"*\",\r\n        fun = function () {},\r\n        numsort = function (a, b) {\r\n            return a - b;\r\n        },\r\n        current_event,\r\n        stop,\r\n        events = {n: {}},\r\n    /*\\\r\n     * eve\r\n     [ method ]\r\n\r\n     * Fires event with given `name`, given scope and other parameters.\r\n\r\n     > Arguments\r\n\r\n     - name (string) name of the *event*, dot (`.`) or slash (`/`) separated\r\n     - scope (object) context for the event handlers\r\n     - varargs (...) the rest of arguments will be sent to event handlers\r\n\r\n     = (object) array of returned values from the listeners\r\n    \\*/\r\n        eve = function (name, scope) {\r\n\t\t\tname = String(name);\r\n            var e = events,\r\n                oldstop = stop,\r\n                args = Array.prototype.slice.call(arguments, 2),\r\n                listeners = eve.listeners(name),\r\n                z = 0,\r\n                f = false,\r\n                l,\r\n                indexed = [],\r\n                queue = {},\r\n                out = [],\r\n                ce = current_event,\r\n                errors = [];\r\n            current_event = name;\r\n            stop = 0;\r\n            for (var i = 0, ii = listeners.length; i < ii; i++) if (\"zIndex\" in listeners[i]) {\r\n                indexed.push(listeners[i].zIndex);\r\n                if (listeners[i].zIndex < 0) {\r\n                    queue[listeners[i].zIndex] = listeners[i];\r\n                }\r\n            }\r\n            indexed.sort(numsort);\r\n            while (indexed[z] < 0) {\r\n                l = queue[indexed[z++]];\r\n                out.push(l.apply(scope, args));\r\n                if (stop) {\r\n                    stop = oldstop;\r\n                    return out;\r\n                }\r\n            }\r\n            for (i = 0; i < ii; i++) {\r\n                l = listeners[i];\r\n                if (\"zIndex\" in l) {\r\n                    if (l.zIndex == indexed[z]) {\r\n                        out.push(l.apply(scope, args));\r\n                        if (stop) {\r\n                            break;\r\n                        }\r\n                        do {\r\n                            z++;\r\n                            l = queue[indexed[z]];\r\n                            l && out.push(l.apply(scope, args));\r\n                            if (stop) {\r\n                                break;\r\n                            }\r\n                        } while (l)\r\n                    } else {\r\n                        queue[l.zIndex] = l;\r\n                    }\r\n                } else {\r\n                    out.push(l.apply(scope, args));\r\n                    if (stop) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            stop = oldstop;\r\n            current_event = ce;\r\n            return out.length ? out : null;\r\n        };\r\n\t\t// Undocumented. Debug only.\r\n\t\teve._events = events;\r\n    /*\\\r\n     * eve.listeners\r\n     [ method ]\r\n\r\n     * Internal method which gives you array of all event handlers that will be triggered by the given `name`.\r\n\r\n     > Arguments\r\n\r\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated\r\n\r\n     = (array) array of event handlers\r\n    \\*/\r\n    eve.listeners = function (name) {\r\n        var names = name.split(separator),\r\n            e = events,\r\n            item,\r\n            items,\r\n            k,\r\n            i,\r\n            ii,\r\n            j,\r\n            jj,\r\n            nes,\r\n            es = [e],\r\n            out = [];\r\n        for (i = 0, ii = names.length; i < ii; i++) {\r\n            nes = [];\r\n            for (j = 0, jj = es.length; j < jj; j++) {\r\n                e = es[j].n;\r\n                items = [e[names[i]], e[wildcard]];\r\n                k = 2;\r\n                while (k--) {\r\n                    item = items[k];\r\n                    if (item) {\r\n                        nes.push(item);\r\n                        out = out.concat(item.f || []);\r\n                    }\r\n                }\r\n            }\r\n            es = nes;\r\n        }\r\n        return out;\r\n    };\r\n    \r\n    /*\\\r\n     * eve.on\r\n     [ method ]\r\n     **\r\n     * Binds given event handler with a given name. You can use wildcards “`*`” for the names:\r\n     | eve.on(\"*.under.*\", f);\r\n     | eve(\"mouse.under.floor\"); // triggers f\r\n     * Use @eve to trigger the listener.\r\n     **\r\n     > Arguments\r\n     **\r\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\r\n     - f (function) event handler function\r\n     **\r\n     = (function) returned function accepts a single numeric parameter that represents z-index of the handler. It is an optional feature and only used when you need to ensure that some subset of handlers will be invoked in a given order, despite of the order of assignment. \r\n     > Example:\r\n     | eve.on(\"mouse\", eatIt)(2);\r\n     | eve.on(\"mouse\", scream);\r\n     | eve.on(\"mouse\", catchIt)(1);\r\n     * This will ensure that `catchIt()` function will be called before `eatIt()`.\r\n\t *\r\n     * If you want to put your handler before non-indexed handlers, specify a negative value.\r\n     * Note: I assume most of the time you don’t need to worry about z-index, but it’s nice to have this feature “just in case”.\r\n    \\*/\r\n    eve.on = function (name, f) {\r\n\t\tname = String(name);\r\n\t\tif (typeof f != \"function\") {\r\n\t\t\treturn function () {};\r\n\t\t}\r\n        var names = name.split(separator),\r\n            e = events;\r\n        for (var i = 0, ii = names.length; i < ii; i++) {\r\n            e = e.n;\r\n            e = e.hasOwnProperty(names[i]) && e[names[i]] || (e[names[i]] = {n: {}});\r\n        }\r\n        e.f = e.f || [];\r\n        for (i = 0, ii = e.f.length; i < ii; i++) if (e.f[i] == f) {\r\n            return fun;\r\n        }\r\n        e.f.push(f);\r\n        return function (zIndex) {\r\n            if (+zIndex == +zIndex) {\r\n                f.zIndex = +zIndex;\r\n            }\r\n        };\r\n    };\r\n    /*\\\r\n     * eve.f\r\n     [ method ]\r\n     **\r\n     * Returns function that will fire given event with optional arguments.\r\n\t * Arguments that will be passed to the result function will be also\r\n\t * concated to the list of final arguments.\r\n \t | el.onclick = eve.f(\"click\", 1, 2);\r\n \t | eve.on(\"click\", function (a, b, c) {\r\n \t |     console.log(a, b, c); // 1, 2, [event object]\r\n \t | });\r\n     > Arguments\r\n\t - event (string) event name\r\n\t - varargs (…) and any other arguments\r\n\t = (function) possible event handler function\r\n    \\*/\r\n\teve.f = function (event) {\r\n\t\tvar attrs = [].slice.call(arguments, 1);\r\n\t\treturn function () {\r\n\t\t\teve.apply(null, [event, null].concat(attrs).concat([].slice.call(arguments, 0)));\r\n\t\t};\r\n\t};\r\n    /*\\\r\n     * eve.stop\r\n     [ method ]\r\n     **\r\n     * Is used inside an event handler to stop the event, preventing any subsequent listeners from firing.\r\n    \\*/\r\n    eve.stop = function () {\r\n        stop = 1;\r\n    };\r\n    /*\\\r\n     * eve.nt\r\n     [ method ]\r\n     **\r\n     * Could be used inside event handler to figure out actual name of the event.\r\n     **\r\n     > Arguments\r\n     **\r\n     - subname (string) #optional subname of the event\r\n     **\r\n     = (string) name of the event, if `subname` is not specified\r\n     * or\r\n     = (boolean) `true`, if current event’s name contains `subname`\r\n    \\*/\r\n    eve.nt = function (subname) {\r\n        if (subname) {\r\n            return new RegExp(\"(?:\\\\.|\\\\/|^)\" + subname + \"(?:\\\\.|\\\\/|$)\").test(current_event);\r\n        }\r\n        return current_event;\r\n    };\r\n    /*\\\r\n     * eve.nts\r\n     [ method ]\r\n     **\r\n     * Could be used inside event handler to figure out actual name of the event.\r\n     **\r\n     **\r\n     = (array) names of the event\r\n    \\*/\r\n    eve.nts = function () {\r\n        return current_event.split(separator);\r\n    };\r\n    /*\\\r\n     * eve.off\r\n     [ method ]\r\n     **\r\n     * Removes given function from the list of event listeners assigned to given name.\r\n\t * If no arguments specified all the events will be cleared.\r\n     **\r\n     > Arguments\r\n     **\r\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\r\n     - f (function) event handler function\r\n    \\*/\r\n    /*\\\r\n     * eve.unbind\r\n     [ method ]\r\n     **\r\n     * See @eve.off\r\n    \\*/\r\n    eve.off = eve.unbind = function (name, f) {\r\n\t\tif (!name) {\r\n\t\t    eve._events = events = {n: {}};\r\n\t\t\treturn;\r\n\t\t}\r\n        var names = name.split(separator),\r\n            e,\r\n            key,\r\n            splice,\r\n            i, ii, j, jj,\r\n            cur = [events];\r\n        for (i = 0, ii = names.length; i < ii; i++) {\r\n            for (j = 0; j < cur.length; j += splice.length - 2) {\r\n                splice = [j, 1];\r\n                e = cur[j].n;\r\n                if (names[i] != wildcard) {\r\n                    if (e[names[i]]) {\r\n                        splice.push(e[names[i]]);\r\n                    }\r\n                } else {\r\n                    for (key in e) if (e[has](key)) {\r\n                        splice.push(e[key]);\r\n                    }\r\n                }\r\n                cur.splice.apply(cur, splice);\r\n            }\r\n        }\r\n        for (i = 0, ii = cur.length; i < ii; i++) {\r\n            e = cur[i];\r\n            while (e.n) {\r\n                if (f) {\r\n                    if (e.f) {\r\n                        for (j = 0, jj = e.f.length; j < jj; j++) if (e.f[j] == f) {\r\n                            e.f.splice(j, 1);\r\n                            break;\r\n                        }\r\n                        !e.f.length && delete e.f;\r\n                    }\r\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\r\n                        var funcs = e.n[key].f;\r\n                        for (j = 0, jj = funcs.length; j < jj; j++) if (funcs[j] == f) {\r\n                            funcs.splice(j, 1);\r\n                            break;\r\n                        }\r\n                        !funcs.length && delete e.n[key].f;\r\n                    }\r\n                } else {\r\n                    delete e.f;\r\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\r\n                        delete e.n[key].f;\r\n                    }\r\n                }\r\n                e = e.n;\r\n            }\r\n        }\r\n    };\r\n    /*\\\r\n     * eve.once\r\n     [ method ]\r\n     **\r\n     * Binds given event handler with a given name to only run once then unbind itself.\r\n     | eve.once(\"login\", f);\r\n     | eve(\"login\"); // triggers f\r\n     | eve(\"login\"); // no listeners\r\n     * Use @eve to trigger the listener.\r\n     **\r\n     > Arguments\r\n     **\r\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\r\n     - f (function) event handler function\r\n     **\r\n     = (function) same return function as @eve.on\r\n    \\*/\r\n    eve.once = function (name, f) {\r\n        var f2 = function () {\r\n            eve.unbind(name, f2);\r\n            return f.apply(this, arguments);\r\n        };\r\n        return eve.on(name, f2);\r\n    };\r\n    /*\\\r\n     * eve.version\r\n     [ property (string) ]\r\n     **\r\n     * Current version of the library.\r\n    \\*/\r\n    eve.version = version;\r\n    eve.toString = function () {\r\n        return \"You are running Eve \" + version;\r\n    };\r\n    (typeof module != \"undefined\" && module.exports) ? (module.exports = eve) : (typeof define != \"undefined\" ? (define(\"eve\", [], function() { return eve; })) : (glob.eve = eve));\r\n})(this);\r\n// ┌─────────────────────────────────────────────────────────────────────┐ \\\\\r\n// │ \"Raphaël 2.1.2\" - JavaScript Vector Library                         │ \\\\\r\n// ├─────────────────────────────────────────────────────────────────────┤ \\\\\r\n// │ Copyright (c) 2008-2011 Dmitry Baranovskiy (http://raphaeljs.com)   │ \\\\\r\n// │ Copyright (c) 2008-2011 Sencha Labs (http://sencha.com)             │ \\\\\r\n// │ Licensed under the MIT (http://raphaeljs.com/license.html) license. │ \\\\\r\n// └─────────────────────────────────────────────────────────────────────┘ \\\\\r\n\r\n(function (glob, factory) {\r\n    // AMD support\r\n    if (typeof define === \"function\" && define.amd) {\r\n        // Define as an anonymous module\r\n        define([\"eve\"], function( eve ) {\r\n            return factory(glob, eve);\r\n        });\r\n    } else {\r\n        // Browser globals (glob is window)\r\n        // Raphael adds itself to window\r\n        factory(glob, glob.eve || (typeof require == \"function\" && require('eve')) );\r\n    }\r\n}(this, function (window, eve) {\r\n    /*\\\r\n     * Raphael\r\n     [ method ]\r\n     **\r\n     * Creates a canvas object on which to draw.\r\n     * You must do this first, as all future calls to drawing methods\r\n     * from this instance will be bound to this canvas.\r\n     > Parameters\r\n     **\r\n     - container (HTMLElement|string) DOM element or its ID which is going to be a parent for drawing surface\r\n     - width (number)\r\n     - height (number)\r\n     - callback (function) #optional callback function which is going to be executed in the context of newly created paper\r\n     * or\r\n     - x (number)\r\n     - y (number)\r\n     - width (number)\r\n     - height (number)\r\n     - callback (function) #optional callback function which is going to be executed in the context of newly created paper\r\n     * or\r\n     - all (array) (first 3 or 4 elements in the array are equal to [containerID, width, height] or [x, y, width, height]. The rest are element descriptions in format {type: type, <attributes>}). See @Paper.add.\r\n     - callback (function) #optional callback function which is going to be executed in the context of newly created paper\r\n     * or\r\n     - onReadyCallback (function) function that is going to be called on DOM ready event. You can also subscribe to this event via Eve’s “DOMLoad” event. In this case method returns `undefined`.\r\n     = (object) @Paper\r\n     > Usage\r\n     | // Each of the following examples create a canvas\r\n     | // that is 320px wide by 200px high.\r\n     | // Canvas is created at the viewport’s 10,50 coordinate.\r\n     | var paper = Raphael(10, 50, 320, 200);\r\n     | // Canvas is created at the top left corner of the #notepad element\r\n     | // (or its top right corner in dir=\"rtl\" elements)\r\n     | var paper = Raphael(document.getElementById(\"notepad\"), 320, 200);\r\n     | // Same as above\r\n     | var paper = Raphael(\"notepad\", 320, 200);\r\n     | // Image dump\r\n     | var set = Raphael([\"notepad\", 320, 200, {\r\n     |     type: \"rect\",\r\n     |     x: 10,\r\n     |     y: 10,\r\n     |     width: 25,\r\n     |     height: 25,\r\n     |     stroke: \"#f00\"\r\n     | }, {\r\n     |     type: \"text\",\r\n     |     x: 30,\r\n     |     y: 40,\r\n     |     text: \"Dump\"\r\n     | }]);\r\n    \\*/\r\n    function R(first) {\r\n        if (R.is(first, \"function\")) {\r\n            return loaded ? first() : eve.on(\"raphael.DOMload\", first);\r\n        } else if (R.is(first, array)) {\r\n            return R._engine.create[apply](R, first.splice(0, 3 + R.is(first[0], nu))).add(first);\r\n        } else {\r\n            var args = Array.prototype.slice.call(arguments, 0);\r\n            if (R.is(args[args.length - 1], \"function\")) {\r\n                var f = args.pop();\r\n                return loaded ? f.call(R._engine.create[apply](R, args)) : eve.on(\"raphael.DOMload\", function () {\r\n                    f.call(R._engine.create[apply](R, args));\r\n                });\r\n            } else {\r\n                return R._engine.create[apply](R, arguments);\r\n            }\r\n        }\r\n    }\r\n    R.version = \"2.1.2\";\r\n    R.eve = eve;\r\n    var loaded,\r\n        separator = /[, ]+/,\r\n        elements = {circle: 1, rect: 1, path: 1, ellipse: 1, text: 1, image: 1},\r\n        formatrg = /\\{(\\d+)\\}/g,\r\n        proto = \"prototype\",\r\n        has = \"hasOwnProperty\",\r\n        g = {\r\n            doc: document,\r\n            win: window\r\n        },\r\n        oldRaphael = {\r\n            was: Object.prototype[has].call(g.win, \"Raphael\"),\r\n            is: g.win.Raphael\r\n        },\r\n        Paper = function () {\r\n            /*\\\r\n             * Paper.ca\r\n             [ property (object) ]\r\n             **\r\n             * Shortcut for @Paper.customAttributes\r\n            \\*/\r\n            /*\\\r\n             * Paper.customAttributes\r\n             [ property (object) ]\r\n             **\r\n             * If you have a set of attributes that you would like to represent\r\n             * as a function of some number you can do it easily with custom attributes:\r\n             > Usage\r\n             | paper.customAttributes.hue = function (num) {\r\n             |     num = num % 1;\r\n             |     return {fill: \"hsb(\" + num + \", 0.75, 1)\"};\r\n             | };\r\n             | // Custom attribute “hue” will change fill\r\n             | // to be given hue with fixed saturation and brightness.\r\n             | // Now you can use it like this:\r\n             | var c = paper.circle(10, 10, 10).attr({hue: .45});\r\n             | // or even like this:\r\n             | c.animate({hue: 1}, 1e3);\r\n             |\r\n             | // You could also create custom attribute\r\n             | // with multiple parameters:\r\n             | paper.customAttributes.hsb = function (h, s, b) {\r\n             |     return {fill: \"hsb(\" + [h, s, b].join(\",\") + \")\"};\r\n             | };\r\n             | c.attr({hsb: \"0.5 .8 1\"});\r\n             | c.animate({hsb: [1, 0, 0.5]}, 1e3);\r\n            \\*/\r\n            this.ca = this.customAttributes = {};\r\n        },\r\n        paperproto,\r\n        appendChild = \"appendChild\",\r\n        apply = \"apply\",\r\n        concat = \"concat\",\r\n        supportsTouch = ('ontouchstart' in g.win) || g.win.DocumentTouch && g.doc instanceof DocumentTouch, //taken from Modernizr touch test\r\n        E = \"\",\r\n        S = \" \",\r\n        Str = String,\r\n        split = \"split\",\r\n        events = \"click dblclick mousedown mousemove mouseout mouseover mouseup touchstart touchmove touchend touchcancel\"[split](S),\r\n        touchMap = {\r\n            mousedown: \"touchstart\",\r\n            mousemove: \"touchmove\",\r\n            mouseup: \"touchend\"\r\n        },\r\n        lowerCase = Str.prototype.toLowerCase,\r\n        math = Math,\r\n        mmax = math.max,\r\n        mmin = math.min,\r\n        abs = math.abs,\r\n        pow = math.pow,\r\n        PI = math.PI,\r\n        nu = \"number\",\r\n        string = \"string\",\r\n        array = \"array\",\r\n        toString = \"toString\",\r\n        fillString = \"fill\",\r\n        objectToString = Object.prototype.toString,\r\n        paper = {},\r\n        push = \"push\",\r\n        ISURL = R._ISURL = /^url\\(['\"]?(.+?)['\"]?\\)$/i,\r\n        colourRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?)%?\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?)%?\\s*\\))\\s*$/i,\r\n        isnan = {\"NaN\": 1, \"Infinity\": 1, \"-Infinity\": 1},\r\n        bezierrg = /^(?:cubic-)?bezier\\(([^,]+),([^,]+),([^,]+),([^\\)]+)\\)/,\r\n        round = math.round,\r\n        setAttribute = \"setAttribute\",\r\n        toFloat = parseFloat,\r\n        toInt = parseInt,\r\n        upperCase = Str.prototype.toUpperCase,\r\n        availableAttrs = R._availableAttrs = {\r\n            \"arrow-end\": \"none\",\r\n            \"arrow-start\": \"none\",\r\n            blur: 0,\r\n            \"clip-rect\": \"0 0 1e9 1e9\",\r\n            cursor: \"default\",\r\n            cx: 0,\r\n            cy: 0,\r\n            fill: \"#fff\",\r\n            \"fill-opacity\": 1,\r\n            font: '10px \"Arial\"',\r\n            \"font-family\": '\"Arial\"',\r\n            \"font-size\": \"10\",\r\n            \"font-style\": \"normal\",\r\n            \"font-weight\": 400,\r\n            gradient: 0,\r\n            height: 0,\r\n            href: \"http://raphaeljs.com/\",\r\n            \"letter-spacing\": 0,\r\n            opacity: 1,\r\n            path: \"M0,0\",\r\n            r: 0,\r\n            rx: 0,\r\n            ry: 0,\r\n            src: \"\",\r\n            stroke: \"#000\",\r\n            \"stroke-dasharray\": \"\",\r\n            \"stroke-linecap\": \"butt\",\r\n            \"stroke-linejoin\": \"butt\",\r\n            \"stroke-miterlimit\": 0,\r\n            \"stroke-opacity\": 1,\r\n            \"stroke-width\": 1,\r\n            target: \"_blank\",\r\n            \"text-anchor\": \"middle\",\r\n            title: \"Raphael\",\r\n            transform: \"\",\r\n            width: 0,\r\n            x: 0,\r\n            y: 0\r\n        },\r\n        availableAnimAttrs = R._availableAnimAttrs = {\r\n            blur: nu,\r\n            \"clip-rect\": \"csv\",\r\n            cx: nu,\r\n            cy: nu,\r\n            fill: \"colour\",\r\n            \"fill-opacity\": nu,\r\n            \"font-size\": nu,\r\n            height: nu,\r\n            opacity: nu,\r\n            path: \"path\",\r\n            r: nu,\r\n            rx: nu,\r\n            ry: nu,\r\n            stroke: \"colour\",\r\n            \"stroke-opacity\": nu,\r\n            \"stroke-width\": nu,\r\n            transform: \"transform\",\r\n            width: nu,\r\n            x: nu,\r\n            y: nu\r\n        },\r\n        whitespace = /[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]/g,\r\n        commaSpaces = /[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*/,\r\n        hsrg = {hs: 1, rg: 1},\r\n        p2s = /,?([achlmqrstvxz]),?/gi,\r\n        pathCommand = /([achlmrqstvz])[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)/ig,\r\n        tCommand = /([rstm])[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)/ig,\r\n        pathValues = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*/ig,\r\n        radial_gradient = R._radial_gradient = /^r(?:\\(([^,]+?)[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*([^\\)]+?)\\))?/,\r\n        eldata = {},\r\n        sortByKey = function (a, b) {\r\n            return a.key - b.key;\r\n        },\r\n        sortByNumber = function (a, b) {\r\n            return toFloat(a) - toFloat(b);\r\n        },\r\n        fun = function () {},\r\n        pipe = function (x) {\r\n            return x;\r\n        },\r\n        rectPath = R._rectPath = function (x, y, w, h, r) {\r\n            if (r) {\r\n                return [[\"M\", x + r, y], [\"l\", w - r * 2, 0], [\"a\", r, r, 0, 0, 1, r, r], [\"l\", 0, h - r * 2], [\"a\", r, r, 0, 0, 1, -r, r], [\"l\", r * 2 - w, 0], [\"a\", r, r, 0, 0, 1, -r, -r], [\"l\", 0, r * 2 - h], [\"a\", r, r, 0, 0, 1, r, -r], [\"z\"]];\r\n            }\r\n            return [[\"M\", x, y], [\"l\", w, 0], [\"l\", 0, h], [\"l\", -w, 0], [\"z\"]];\r\n        },\r\n        ellipsePath = function (x, y, rx, ry) {\r\n            if (ry == null) {\r\n                ry = rx;\r\n            }\r\n            return [[\"M\", x, y], [\"m\", 0, -ry], [\"a\", rx, ry, 0, 1, 1, 0, 2 * ry], [\"a\", rx, ry, 0, 1, 1, 0, -2 * ry], [\"z\"]];\r\n        },\r\n        getPath = R._getPath = {\r\n            path: function (el) {\r\n                return el.attr(\"path\");\r\n            },\r\n            circle: function (el) {\r\n                var a = el.attrs;\r\n                return ellipsePath(a.cx, a.cy, a.r);\r\n            },\r\n            ellipse: function (el) {\r\n                var a = el.attrs;\r\n                return ellipsePath(a.cx, a.cy, a.rx, a.ry);\r\n            },\r\n            rect: function (el) {\r\n                var a = el.attrs;\r\n                return rectPath(a.x, a.y, a.width, a.height, a.r);\r\n            },\r\n            image: function (el) {\r\n                var a = el.attrs;\r\n                return rectPath(a.x, a.y, a.width, a.height);\r\n            },\r\n            text: function (el) {\r\n                var bbox = el._getBBox();\r\n                return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\r\n            },\r\n            set : function(el) {\r\n                var bbox = el._getBBox();\r\n                return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\r\n            }\r\n        },\r\n        /*\\\r\n         * Raphael.mapPath\r\n         [ method ]\r\n         **\r\n         * Transform the path string with given matrix.\r\n         > Parameters\r\n         - path (string) path string\r\n         - matrix (object) see @Matrix\r\n         = (string) transformed path string\r\n        \\*/\r\n        mapPath = R.mapPath = function (path, matrix) {\r\n            if (!matrix) {\r\n                return path;\r\n            }\r\n            var x, y, i, j, ii, jj, pathi;\r\n            path = path2curve(path);\r\n            for (i = 0, ii = path.length; i < ii; i++) {\r\n                pathi = path[i];\r\n                for (j = 1, jj = pathi.length; j < jj; j += 2) {\r\n                    x = matrix.x(pathi[j], pathi[j + 1]);\r\n                    y = matrix.y(pathi[j], pathi[j + 1]);\r\n                    pathi[j] = x;\r\n                    pathi[j + 1] = y;\r\n                }\r\n            }\r\n            return path;\r\n        };\r\n\r\n    R._g = g;\r\n    /*\\\r\n     * Raphael.type\r\n     [ property (string) ]\r\n     **\r\n     * Can be “SVG”, “VML” or empty, depending on browser support.\r\n    \\*/\r\n    R.type = (g.win.SVGAngle || g.doc.implementation.hasFeature(\"http://www.w3.org/TR/SVG11/feature#BasicStructure\", \"1.1\") ? \"SVG\" : \"VML\");\r\n    if (R.type == \"VML\") {\r\n        var d = g.doc.createElement(\"div\"),\r\n            b;\r\n        d.innerHTML = '<v:shape adj=\"1\"/>';\r\n        b = d.firstChild;\r\n        b.style.behavior = \"url(#default#VML)\";\r\n        if (!(b && typeof b.adj == \"object\")) {\r\n            return (R.type = E);\r\n        }\r\n        d = null;\r\n    }\r\n    /*\\\r\n     * Raphael.svg\r\n     [ property (boolean) ]\r\n     **\r\n     * `true` if browser supports SVG.\r\n    \\*/\r\n    /*\\\r\n     * Raphael.vml\r\n     [ property (boolean) ]\r\n     **\r\n     * `true` if browser supports VML.\r\n    \\*/\r\n    R.svg = !(R.vml = R.type == \"VML\");\r\n    R._Paper = Paper;\r\n    /*\\\r\n     * Raphael.fn\r\n     [ property (object) ]\r\n     **\r\n     * You can add your own method to the canvas. For example if you want to draw a pie chart,\r\n     * you can create your own pie chart function and ship it as a Raphaël plugin. To do this\r\n     * you need to extend the `Raphael.fn` object. You should modify the `fn` object before a\r\n     * Raphaël instance is created, otherwise it will take no effect. Please note that the\r\n     * ability for namespaced plugins was removed in Raphael 2.0. It is up to the plugin to\r\n     * ensure any namespacing ensures proper context.\r\n     > Usage\r\n     | Raphael.fn.arrow = function (x1, y1, x2, y2, size) {\r\n     |     return this.path( ... );\r\n     | };\r\n     | // or create namespace\r\n     | Raphael.fn.mystuff = {\r\n     |     arrow: function () {…},\r\n     |     star: function () {…},\r\n     |     // etc…\r\n     | };\r\n     | var paper = Raphael(10, 10, 630, 480);\r\n     | // then use it\r\n     | paper.arrow(10, 10, 30, 30, 5).attr({fill: \"#f00\"});\r\n     | paper.mystuff.arrow();\r\n     | paper.mystuff.star();\r\n    \\*/\r\n    R.fn = paperproto = Paper.prototype = R.prototype;\r\n    R._id = 0;\r\n    R._oid = 0;\r\n    /*\\\r\n     * Raphael.is\r\n     [ method ]\r\n     **\r\n     * Handful of replacements for `typeof` operator.\r\n     > Parameters\r\n     - o (…) any object or primitive\r\n     - type (string) name of the type, i.e. “string”, “function”, “number”, etc.\r\n     = (boolean) is given value is of given type\r\n    \\*/\r\n    R.is = function (o, type) {\r\n        type = lowerCase.call(type);\r\n        if (type == \"finite\") {\r\n            return !isnan[has](+o);\r\n        }\r\n        if (type == \"array\") {\r\n            return o instanceof Array;\r\n        }\r\n        return  (type == \"null\" && o === null) ||\r\n                (type == typeof o && o !== null) ||\r\n                (type == \"object\" && o === Object(o)) ||\r\n                (type == \"array\" && Array.isArray && Array.isArray(o)) ||\r\n                objectToString.call(o).slice(8, -1).toLowerCase() == type;\r\n    };\r\n\r\n    function clone(obj) {\r\n        if (typeof obj == \"function\" || Object(obj) !== obj) {\r\n            return obj;\r\n        }\r\n        var res = new obj.constructor;\r\n        for (var key in obj) if (obj[has](key)) {\r\n            res[key] = clone(obj[key]);\r\n        }\r\n        return res;\r\n    }\r\n\r\n    /*\\\r\n     * Raphael.angle\r\n     [ method ]\r\n     **\r\n     * Returns angle between two or three points\r\n     > Parameters\r\n     - x1 (number) x coord of first point\r\n     - y1 (number) y coord of first point\r\n     - x2 (number) x coord of second point\r\n     - y2 (number) y coord of second point\r\n     - x3 (number) #optional x coord of third point\r\n     - y3 (number) #optional y coord of third point\r\n     = (number) angle in degrees.\r\n    \\*/\r\n    R.angle = function (x1, y1, x2, y2, x3, y3) {\r\n        if (x3 == null) {\r\n            var x = x1 - x2,\r\n                y = y1 - y2;\r\n            if (!x && !y) {\r\n                return 0;\r\n            }\r\n            return (180 + math.atan2(-y, -x) * 180 / PI + 360) % 360;\r\n        } else {\r\n            return R.angle(x1, y1, x3, y3) - R.angle(x2, y2, x3, y3);\r\n        }\r\n    };\r\n    /*\\\r\n     * Raphael.rad\r\n     [ method ]\r\n     **\r\n     * Transform angle to radians\r\n     > Parameters\r\n     - deg (number) angle in degrees\r\n     = (number) angle in radians.\r\n    \\*/\r\n    R.rad = function (deg) {\r\n        return deg % 360 * PI / 180;\r\n    };\r\n    /*\\\r\n     * Raphael.deg\r\n     [ method ]\r\n     **\r\n     * Transform angle to degrees\r\n     > Parameters\r\n     - rad (number) angle in radians\r\n     = (number) angle in degrees.\r\n    \\*/\r\n    R.deg = function (rad) {\r\n        return Math.round ((rad * 180 / PI% 360)* 1000) / 1000;\r\n    };\r\n    /*\\\r\n     * Raphael.snapTo\r\n     [ method ]\r\n     **\r\n     * Snaps given value to given grid.\r\n     > Parameters\r\n     - values (array|number) given array of values or step of the grid\r\n     - value (number) value to adjust\r\n     - tolerance (number) #optional tolerance for snapping. Default is `10`.\r\n     = (number) adjusted value.\r\n    \\*/\r\n    R.snapTo = function (values, value, tolerance) {\r\n        tolerance = R.is(tolerance, \"finite\") ? tolerance : 10;\r\n        if (R.is(values, array)) {\r\n            var i = values.length;\r\n            while (i--) if (abs(values[i] - value) <= tolerance) {\r\n                return values[i];\r\n            }\r\n        } else {\r\n            values = +values;\r\n            var rem = value % values;\r\n            if (rem < tolerance) {\r\n                return value - rem;\r\n            }\r\n            if (rem > values - tolerance) {\r\n                return value - rem + values;\r\n            }\r\n        }\r\n        return value;\r\n    };\r\n\r\n    /*\\\r\n     * Raphael.createUUID\r\n     [ method ]\r\n     **\r\n     * Returns RFC4122, version 4 ID\r\n    \\*/\r\n    var createUUID = R.createUUID = (function (uuidRegEx, uuidReplacer) {\r\n        return function () {\r\n            return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(uuidRegEx, uuidReplacer).toUpperCase();\r\n        };\r\n    })(/[xy]/g, function (c) {\r\n        var r = math.random() * 16 | 0,\r\n            v = c == \"x\" ? r : (r & 3 | 8);\r\n        return v.toString(16);\r\n    });\r\n\r\n    /*\\\r\n     * Raphael.setWindow\r\n     [ method ]\r\n     **\r\n     * Used when you need to draw in `&lt;iframe>`. Switched window to the iframe one.\r\n     > Parameters\r\n     - newwin (window) new window object\r\n    \\*/\r\n    R.setWindow = function (newwin) {\r\n        eve(\"raphael.setWindow\", R, g.win, newwin);\r\n        g.win = newwin;\r\n        g.doc = g.win.document;\r\n        if (R._engine.initWin) {\r\n            R._engine.initWin(g.win);\r\n        }\r\n    };\r\n    var toHex = function (color) {\r\n        if (R.vml) {\r\n            // http://dean.edwards.name/weblog/2009/10/convert-any-colour-value-to-hex-in-msie/\r\n            var trim = /^\\s+|\\s+$/g;\r\n            var bod;\r\n            try {\r\n                var docum = new ActiveXObject(\"htmlfile\");\r\n                docum.write(\"<body>\");\r\n                docum.close();\r\n                bod = docum.body;\r\n            } catch(e) {\r\n                bod = createPopup().document.body;\r\n            }\r\n            var range = bod.createTextRange();\r\n            toHex = cacher(function (color) {\r\n                try {\r\n                    bod.style.color = Str(color).replace(trim, E);\r\n                    var value = range.queryCommandValue(\"ForeColor\");\r\n                    value = ((value & 255) << 16) | (value & 65280) | ((value & 16711680) >>> 16);\r\n                    return \"#\" + (\"000000\" + value.toString(16)).slice(-6);\r\n                } catch(e) {\r\n                    return \"none\";\r\n                }\r\n            });\r\n        } else {\r\n            var i = g.doc.createElement(\"i\");\r\n            i.title = \"Rapha\\xebl Colour Picker\";\r\n            i.style.display = \"none\";\r\n            g.doc.body.appendChild(i);\r\n            toHex = cacher(function (color) {\r\n                i.style.color = color;\r\n                return g.doc.defaultView.getComputedStyle(i, E).getPropertyValue(\"color\");\r\n            });\r\n        }\r\n        return toHex(color);\r\n    },\r\n    hsbtoString = function () {\r\n        return \"hsb(\" + [this.h, this.s, this.b] + \")\";\r\n    },\r\n    hsltoString = function () {\r\n        return \"hsl(\" + [this.h, this.s, this.l] + \")\";\r\n    },\r\n    rgbtoString = function () {\r\n        return this.hex;\r\n    },\r\n    prepareRGB = function (r, g, b) {\r\n        if (g == null && R.is(r, \"object\") && \"r\" in r && \"g\" in r && \"b\" in r) {\r\n            b = r.b;\r\n            g = r.g;\r\n            r = r.r;\r\n        }\r\n        if (g == null && R.is(r, string)) {\r\n            var clr = R.getRGB(r);\r\n            r = clr.r;\r\n            g = clr.g;\r\n            b = clr.b;\r\n        }\r\n        if (r > 1 || g > 1 || b > 1) {\r\n            r /= 255;\r\n            g /= 255;\r\n            b /= 255;\r\n        }\r\n\r\n        return [r, g, b];\r\n    },\r\n    packageRGB = function (r, g, b, o) {\r\n        r *= 255;\r\n        g *= 255;\r\n        b *= 255;\r\n        var rgb = {\r\n            r: r,\r\n            g: g,\r\n            b: b,\r\n            hex: R.rgb(r, g, b),\r\n            toString: rgbtoString\r\n        };\r\n        R.is(o, \"finite\") && (rgb.opacity = o);\r\n        return rgb;\r\n    };\r\n\r\n    /*\\\r\n     * Raphael.color\r\n     [ method ]\r\n     **\r\n     * Parses the color string and returns object with all values for the given color.\r\n     > Parameters\r\n     - clr (string) color string in one of the supported formats (see @Raphael.getRGB)\r\n     = (object) Combined RGB & HSB object in format:\r\n     o {\r\n     o     r (number) red,\r\n     o     g (number) green,\r\n     o     b (number) blue,\r\n     o     hex (string) color in HTML/CSS format: #••••••,\r\n     o     error (boolean) `true` if string can’t be parsed,\r\n     o     h (number) hue,\r\n     o     s (number) saturation,\r\n     o     v (number) value (brightness),\r\n     o     l (number) lightness\r\n     o }\r\n    \\*/\r\n    R.color = function (clr) {\r\n        var rgb;\r\n        if (R.is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"b\" in clr) {\r\n            rgb = R.hsb2rgb(clr);\r\n            clr.r = rgb.r;\r\n            clr.g = rgb.g;\r\n            clr.b = rgb.b;\r\n            clr.hex = rgb.hex;\r\n        } else if (R.is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"l\" in clr) {\r\n            rgb = R.hsl2rgb(clr);\r\n            clr.r = rgb.r;\r\n            clr.g = rgb.g;\r\n            clr.b = rgb.b;\r\n            clr.hex = rgb.hex;\r\n        } else {\r\n            if (R.is(clr, \"string\")) {\r\n                clr = R.getRGB(clr);\r\n            }\r\n            if (R.is(clr, \"object\") && \"r\" in clr && \"g\" in clr && \"b\" in clr) {\r\n                rgb = R.rgb2hsl(clr);\r\n                clr.h = rgb.h;\r\n                clr.s = rgb.s;\r\n                clr.l = rgb.l;\r\n                rgb = R.rgb2hsb(clr);\r\n                clr.v = rgb.b;\r\n            } else {\r\n                clr = {hex: \"none\"};\r\n                clr.r = clr.g = clr.b = clr.h = clr.s = clr.v = clr.l = -1;\r\n            }\r\n        }\r\n        clr.toString = rgbtoString;\r\n        return clr;\r\n    };\r\n    /*\\\r\n     * Raphael.hsb2rgb\r\n     [ method ]\r\n     **\r\n     * Converts HSB values to RGB object.\r\n     > Parameters\r\n     - h (number) hue\r\n     - s (number) saturation\r\n     - v (number) value or brightness\r\n     = (object) RGB object in format:\r\n     o {\r\n     o     r (number) red,\r\n     o     g (number) green,\r\n     o     b (number) blue,\r\n     o     hex (string) color in HTML/CSS format: #••••••\r\n     o }\r\n    \\*/\r\n    R.hsb2rgb = function (h, s, v, o) {\r\n        if (this.is(h, \"object\") && \"h\" in h && \"s\" in h && \"b\" in h) {\r\n            v = h.b;\r\n            s = h.s;\r\n            o = h.o;\r\n            h = h.h;\r\n        }\r\n        h *= 360;\r\n        var R, G, B, X, C;\r\n        h = (h % 360) / 60;\r\n        C = v * s;\r\n        X = C * (1 - abs(h % 2 - 1));\r\n        R = G = B = v - C;\r\n\r\n        h = ~~h;\r\n        R += [C, X, 0, 0, X, C][h];\r\n        G += [X, C, C, X, 0, 0][h];\r\n        B += [0, 0, X, C, C, X][h];\r\n        return packageRGB(R, G, B, o);\r\n    };\r\n    /*\\\r\n     * Raphael.hsl2rgb\r\n     [ method ]\r\n     **\r\n     * Converts HSL values to RGB object.\r\n     > Parameters\r\n     - h (number) hue\r\n     - s (number) saturation\r\n     - l (number) luminosity\r\n     = (object) RGB object in format:\r\n     o {\r\n     o     r (number) red,\r\n     o     g (number) green,\r\n     o     b (number) blue,\r\n     o     hex (string) color in HTML/CSS format: #••••••\r\n     o }\r\n    \\*/\r\n    R.hsl2rgb = function (h, s, l, o) {\r\n        if (this.is(h, \"object\") && \"h\" in h && \"s\" in h && \"l\" in h) {\r\n            l = h.l;\r\n            s = h.s;\r\n            h = h.h;\r\n        }\r\n        if (h > 1 || s > 1 || l > 1) {\r\n            h /= 360;\r\n            s /= 100;\r\n            l /= 100;\r\n        }\r\n        h *= 360;\r\n        var R, G, B, X, C;\r\n        h = (h % 360) / 60;\r\n        C = 2 * s * (l < .5 ? l : 1 - l);\r\n        X = C * (1 - abs(h % 2 - 1));\r\n        R = G = B = l - C / 2;\r\n\r\n        h = ~~h;\r\n        R += [C, X, 0, 0, X, C][h];\r\n        G += [X, C, C, X, 0, 0][h];\r\n        B += [0, 0, X, C, C, X][h];\r\n        return packageRGB(R, G, B, o);\r\n    };\r\n    /*\\\r\n     * Raphael.rgb2hsb\r\n     [ method ]\r\n     **\r\n     * Converts RGB values to HSB object.\r\n     > Parameters\r\n     - r (number) red\r\n     - g (number) green\r\n     - b (number) blue\r\n     = (object) HSB object in format:\r\n     o {\r\n     o     h (number) hue\r\n     o     s (number) saturation\r\n     o     b (number) brightness\r\n     o }\r\n    \\*/\r\n    R.rgb2hsb = function (r, g, b) {\r\n        b = prepareRGB(r, g, b);\r\n        r = b[0];\r\n        g = b[1];\r\n        b = b[2];\r\n\r\n        var H, S, V, C;\r\n        V = mmax(r, g, b);\r\n        C = V - mmin(r, g, b);\r\n        H = (C == 0 ? null :\r\n             V == r ? (g - b) / C :\r\n             V == g ? (b - r) / C + 2 :\r\n                      (r - g) / C + 4\r\n            );\r\n        H = ((H + 360) % 6) * 60 / 360;\r\n        S = C == 0 ? 0 : C / V;\r\n        return {h: H, s: S, b: V, toString: hsbtoString};\r\n    };\r\n    /*\\\r\n     * Raphael.rgb2hsl\r\n     [ method ]\r\n     **\r\n     * Converts RGB values to HSL object.\r\n     > Parameters\r\n     - r (number) red\r\n     - g (number) green\r\n     - b (number) blue\r\n     = (object) HSL object in format:\r\n     o {\r\n     o     h (number) hue\r\n     o     s (number) saturation\r\n     o     l (number) luminosity\r\n     o }\r\n    \\*/\r\n    R.rgb2hsl = function (r, g, b) {\r\n        b = prepareRGB(r, g, b);\r\n        r = b[0];\r\n        g = b[1];\r\n        b = b[2];\r\n\r\n        var H, S, L, M, m, C;\r\n        M = mmax(r, g, b);\r\n        m = mmin(r, g, b);\r\n        C = M - m;\r\n        H = (C == 0 ? null :\r\n             M == r ? (g - b) / C :\r\n             M == g ? (b - r) / C + 2 :\r\n                      (r - g) / C + 4);\r\n        H = ((H + 360) % 6) * 60 / 360;\r\n        L = (M + m) / 2;\r\n        S = (C == 0 ? 0 :\r\n             L < .5 ? C / (2 * L) :\r\n                      C / (2 - 2 * L));\r\n        return {h: H, s: S, l: L, toString: hsltoString};\r\n    };\r\n    R._path2string = function () {\r\n        return this.join(\",\").replace(p2s, \"$1\");\r\n    };\r\n    function repush(array, item) {\r\n        for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\r\n            return array.push(array.splice(i, 1)[0]);\r\n        }\r\n    }\r\n    function cacher(f, scope, postprocessor) {\r\n        function newf() {\r\n            var arg = Array.prototype.slice.call(arguments, 0),\r\n                args = arg.join(\"\\u2400\"),\r\n                cache = newf.cache = newf.cache || {},\r\n                count = newf.count = newf.count || [];\r\n            if (cache[has](args)) {\r\n                repush(count, args);\r\n                return postprocessor ? postprocessor(cache[args]) : cache[args];\r\n            }\r\n            count.length >= 1e3 && delete cache[count.shift()];\r\n            count.push(args);\r\n            cache[args] = f[apply](scope, arg);\r\n            return postprocessor ? postprocessor(cache[args]) : cache[args];\r\n        }\r\n        return newf;\r\n    }\r\n\r\n    var preload = R._preload = function (src, f) {\r\n        var img = g.doc.createElement(\"img\");\r\n        img.style.cssText = \"position:absolute;left:-9999em;top:-9999em\";\r\n        img.onload = function () {\r\n            f.call(this);\r\n            this.onload = null;\r\n            g.doc.body.removeChild(this);\r\n        };\r\n        img.onerror = function () {\r\n            g.doc.body.removeChild(this);\r\n        };\r\n        g.doc.body.appendChild(img);\r\n        img.src = src;\r\n    };\r\n\r\n    function clrToString() {\r\n        return this.hex;\r\n    }\r\n\r\n    /*\\\r\n     * Raphael.getRGB\r\n     [ method ]\r\n     **\r\n     * Parses colour string as RGB object\r\n     > Parameters\r\n     - colour (string) colour string in one of formats:\r\n     # <ul>\r\n     #     <li>Colour name (“<code>red</code>”, “<code>green</code>”, “<code>cornflowerblue</code>”, etc)</li>\r\n     #     <li>#••• — shortened HTML colour: (“<code>#000</code>”, “<code>#fc0</code>”, etc)</li>\r\n     #     <li>#•••••• — full length HTML colour: (“<code>#000000</code>”, “<code>#bd2300</code>”)</li>\r\n     #     <li>rgb(•••, •••, •••) — red, green and blue channels’ values: (“<code>rgb(200,&nbsp;100,&nbsp;0)</code>”)</li>\r\n     #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (“<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>”)</li>\r\n     #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (“<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>”)</li>\r\n     #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\r\n     #     <li>hsl(•••, •••, •••) — same as hsb</li>\r\n     #     <li>hsl(•••%, •••%, •••%) — same as hsb</li>\r\n     # </ul>\r\n     = (object) RGB object in format:\r\n     o {\r\n     o     r (number) red,\r\n     o     g (number) green,\r\n     o     b (number) blue\r\n     o     hex (string) color in HTML/CSS format: #••••••,\r\n     o     error (boolean) true if string can’t be parsed\r\n     o }\r\n    \\*/\r\n    R.getRGB = cacher(function (colour) {\r\n        if (!colour || !!((colour = Str(colour)).indexOf(\"-\") + 1)) {\r\n            return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: clrToString};\r\n        }\r\n        if (colour == \"none\") {\r\n            return {r: -1, g: -1, b: -1, hex: \"none\", toString: clrToString};\r\n        }\r\n        !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \"#\") && (colour = toHex(colour));\r\n        var res,\r\n            red,\r\n            green,\r\n            blue,\r\n            opacity,\r\n            t,\r\n            values,\r\n            rgb = colour.match(colourRegExp);\r\n        if (rgb) {\r\n            if (rgb[2]) {\r\n                blue = toInt(rgb[2].substring(5), 16);\r\n                green = toInt(rgb[2].substring(3, 5), 16);\r\n                red = toInt(rgb[2].substring(1, 3), 16);\r\n            }\r\n            if (rgb[3]) {\r\n                blue = toInt((t = rgb[3].charAt(3)) + t, 16);\r\n                green = toInt((t = rgb[3].charAt(2)) + t, 16);\r\n                red = toInt((t = rgb[3].charAt(1)) + t, 16);\r\n            }\r\n            if (rgb[4]) {\r\n                values = rgb[4][split](commaSpaces);\r\n                red = toFloat(values[0]);\r\n                values[0].slice(-1) == \"%\" && (red *= 2.55);\r\n                green = toFloat(values[1]);\r\n                values[1].slice(-1) == \"%\" && (green *= 2.55);\r\n                blue = toFloat(values[2]);\r\n                values[2].slice(-1) == \"%\" && (blue *= 2.55);\r\n                rgb[1].toLowerCase().slice(0, 4) == \"rgba\" && (opacity = toFloat(values[3]));\r\n                values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\r\n            }\r\n            if (rgb[5]) {\r\n                values = rgb[5][split](commaSpaces);\r\n                red = toFloat(values[0]);\r\n                values[0].slice(-1) == \"%\" && (red *= 2.55);\r\n                green = toFloat(values[1]);\r\n                values[1].slice(-1) == \"%\" && (green *= 2.55);\r\n                blue = toFloat(values[2]);\r\n                values[2].slice(-1) == \"%\" && (blue *= 2.55);\r\n                (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\r\n                rgb[1].toLowerCase().slice(0, 4) == \"hsba\" && (opacity = toFloat(values[3]));\r\n                values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\r\n                return R.hsb2rgb(red, green, blue, opacity);\r\n            }\r\n            if (rgb[6]) {\r\n                values = rgb[6][split](commaSpaces);\r\n                red = toFloat(values[0]);\r\n                values[0].slice(-1) == \"%\" && (red *= 2.55);\r\n                green = toFloat(values[1]);\r\n                values[1].slice(-1) == \"%\" && (green *= 2.55);\r\n                blue = toFloat(values[2]);\r\n                values[2].slice(-1) == \"%\" && (blue *= 2.55);\r\n                (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\r\n                rgb[1].toLowerCase().slice(0, 4) == \"hsla\" && (opacity = toFloat(values[3]));\r\n                values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\r\n                return R.hsl2rgb(red, green, blue, opacity);\r\n            }\r\n            rgb = {r: red, g: green, b: blue, toString: clrToString};\r\n            rgb.hex = \"#\" + (16777216 | blue | (green << 8) | (red << 16)).toString(16).slice(1);\r\n            R.is(opacity, \"finite\") && (rgb.opacity = opacity);\r\n            return rgb;\r\n        }\r\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: clrToString};\r\n    }, R);\r\n    /*\\\r\n     * Raphael.hsb\r\n     [ method ]\r\n     **\r\n     * Converts HSB values to hex representation of the colour.\r\n     > Parameters\r\n     - h (number) hue\r\n     - s (number) saturation\r\n     - b (number) value or brightness\r\n     = (string) hex representation of the colour.\r\n    \\*/\r\n    R.hsb = cacher(function (h, s, b) {\r\n        return R.hsb2rgb(h, s, b).hex;\r\n    });\r\n    /*\\\r\n     * Raphael.hsl\r\n     [ method ]\r\n     **\r\n     * Converts HSL values to hex representation of the colour.\r\n     > Parameters\r\n     - h (number) hue\r\n     - s (number) saturation\r\n     - l (number) luminosity\r\n     = (string) hex representation of the colour.\r\n    \\*/\r\n    R.hsl = cacher(function (h, s, l) {\r\n        return R.hsl2rgb(h, s, l).hex;\r\n    });\r\n    /*\\\r\n     * Raphael.rgb\r\n     [ method ]\r\n     **\r\n     * Converts RGB values to hex representation of the colour.\r\n     > Parameters\r\n     - r (number) red\r\n     - g (number) green\r\n     - b (number) blue\r\n     = (string) hex representation of the colour.\r\n    \\*/\r\n    R.rgb = cacher(function (r, g, b) {\r\n        return \"#\" + (16777216 | b | (g << 8) | (r << 16)).toString(16).slice(1);\r\n    });\r\n    /*\\\r\n     * Raphael.getColor\r\n     [ method ]\r\n     **\r\n     * On each call returns next colour in the spectrum. To reset it back to red call @Raphael.getColor.reset\r\n     > Parameters\r\n     - value (number) #optional brightness, default is `0.75`\r\n     = (string) hex representation of the colour.\r\n    \\*/\r\n    R.getColor = function (value) {\r\n        var start = this.getColor.start = this.getColor.start || {h: 0, s: 1, b: value || .75},\r\n            rgb = this.hsb2rgb(start.h, start.s, start.b);\r\n        start.h += .075;\r\n        if (start.h > 1) {\r\n            start.h = 0;\r\n            start.s -= .2;\r\n            start.s <= 0 && (this.getColor.start = {h: 0, s: 1, b: start.b});\r\n        }\r\n        return rgb.hex;\r\n    };\r\n    /*\\\r\n     * Raphael.getColor.reset\r\n     [ method ]\r\n     **\r\n     * Resets spectrum position for @Raphael.getColor back to red.\r\n    \\*/\r\n    R.getColor.reset = function () {\r\n        delete this.start;\r\n    };\r\n\r\n    // http://schepers.cc/getting-to-the-point\r\n    function catmullRom2bezier(crp, z) {\r\n        var d = [];\r\n        for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\r\n            var p = [\r\n                        {x: +crp[i - 2], y: +crp[i - 1]},\r\n                        {x: +crp[i],     y: +crp[i + 1]},\r\n                        {x: +crp[i + 2], y: +crp[i + 3]},\r\n                        {x: +crp[i + 4], y: +crp[i + 5]}\r\n                    ];\r\n            if (z) {\r\n                if (!i) {\r\n                    p[0] = {x: +crp[iLen - 2], y: +crp[iLen - 1]};\r\n                } else if (iLen - 4 == i) {\r\n                    p[3] = {x: +crp[0], y: +crp[1]};\r\n                } else if (iLen - 2 == i) {\r\n                    p[2] = {x: +crp[0], y: +crp[1]};\r\n                    p[3] = {x: +crp[2], y: +crp[3]};\r\n                }\r\n            } else {\r\n                if (iLen - 4 == i) {\r\n                    p[3] = p[2];\r\n                } else if (!i) {\r\n                    p[0] = {x: +crp[i], y: +crp[i + 1]};\r\n                }\r\n            }\r\n            d.push([\"C\",\r\n                  (-p[0].x + 6 * p[1].x + p[2].x) / 6,\r\n                  (-p[0].y + 6 * p[1].y + p[2].y) / 6,\r\n                  (p[1].x + 6 * p[2].x - p[3].x) / 6,\r\n                  (p[1].y + 6*p[2].y - p[3].y) / 6,\r\n                  p[2].x,\r\n                  p[2].y\r\n            ]);\r\n        }\r\n\r\n        return d;\r\n    }\r\n    /*\\\r\n     * Raphael.parsePathString\r\n     [ method ]\r\n     **\r\n     * Utility method\r\n     **\r\n     * Parses given path string into an array of arrays of path segments.\r\n     > Parameters\r\n     - pathString (string|array) path string or array of segments (in the last case it will be returned straight away)\r\n     = (array) array of segments.\r\n    \\*/\r\n    R.parsePathString = function (pathString) {\r\n        if (!pathString) {\r\n            return null;\r\n        }\r\n        var pth = paths(pathString);\r\n        if (pth.arr) {\r\n            return pathClone(pth.arr);\r\n        }\r\n\r\n        var paramCounts = {a: 7, c: 6, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, z: 0},\r\n            data = [];\r\n        if (R.is(pathString, array) && R.is(pathString[0], array)) { // rough assumption\r\n            data = pathClone(pathString);\r\n        }\r\n        if (!data.length) {\r\n            Str(pathString).replace(pathCommand, function (a, b, c) {\r\n                var params = [],\r\n                    name = b.toLowerCase();\r\n                c.replace(pathValues, function (a, b) {\r\n                    b && params.push(+b);\r\n                });\r\n                if (name == \"m\" && params.length > 2) {\r\n                    data.push([b][concat](params.splice(0, 2)));\r\n                    name = \"l\";\r\n                    b = b == \"m\" ? \"l\" : \"L\";\r\n                }\r\n                if (name == \"r\") {\r\n                    data.push([b][concat](params));\r\n                } else while (params.length >= paramCounts[name]) {\r\n                    data.push([b][concat](params.splice(0, paramCounts[name])));\r\n                    if (!paramCounts[name]) {\r\n                        break;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        data.toString = R._path2string;\r\n        pth.arr = pathClone(data);\r\n        return data;\r\n    };\r\n    /*\\\r\n     * Raphael.parseTransformString\r\n     [ method ]\r\n     **\r\n     * Utility method\r\n     **\r\n     * Parses given path string into an array of transformations.\r\n     > Parameters\r\n     - TString (string|array) transform string or array of transformations (in the last case it will be returned straight away)\r\n     = (array) array of transformations.\r\n    \\*/\r\n    R.parseTransformString = cacher(function (TString) {\r\n        if (!TString) {\r\n            return null;\r\n        }\r\n        var paramCounts = {r: 3, s: 4, t: 2, m: 6},\r\n            data = [];\r\n        if (R.is(TString, array) && R.is(TString[0], array)) { // rough assumption\r\n            data = pathClone(TString);\r\n        }\r\n        if (!data.length) {\r\n            Str(TString).replace(tCommand, function (a, b, c) {\r\n                var params = [],\r\n                    name = lowerCase.call(b);\r\n                c.replace(pathValues, function (a, b) {\r\n                    b && params.push(+b);\r\n                });\r\n                data.push([b][concat](params));\r\n            });\r\n        }\r\n        data.toString = R._path2string;\r\n        return data;\r\n    });\r\n    // PATHS\r\n    var paths = function (ps) {\r\n        var p = paths.ps = paths.ps || {};\r\n        if (p[ps]) {\r\n            p[ps].sleep = 100;\r\n        } else {\r\n            p[ps] = {\r\n                sleep: 100\r\n            };\r\n        }\r\n        setTimeout(function () {\r\n            for (var key in p) if (p[has](key) && key != ps) {\r\n                p[key].sleep--;\r\n                !p[key].sleep && delete p[key];\r\n            }\r\n        });\r\n        return p[ps];\r\n    };\r\n    /*\\\r\n     * Raphael.findDotsAtSegment\r\n     [ method ]\r\n     **\r\n     * Utility method\r\n     **\r\n     * Find dot coordinates on the given cubic bezier curve at the given t.\r\n     > Parameters\r\n     - p1x (number) x of the first point of the curve\r\n     - p1y (number) y of the first point of the curve\r\n     - c1x (number) x of the first anchor of the curve\r\n     - c1y (number) y of the first anchor of the curve\r\n     - c2x (number) x of the second anchor of the curve\r\n     - c2y (number) y of the second anchor of the curve\r\n     - p2x (number) x of the second point of the curve\r\n     - p2y (number) y of the second point of the curve\r\n     - t (number) position on the curve (0..1)\r\n     = (object) point information in format:\r\n     o {\r\n     o     x: (number) x coordinate of the point\r\n     o     y: (number) y coordinate of the point\r\n     o     m: {\r\n     o         x: (number) x coordinate of the left anchor\r\n     o         y: (number) y coordinate of the left anchor\r\n     o     }\r\n     o     n: {\r\n     o         x: (number) x coordinate of the right anchor\r\n     o         y: (number) y coordinate of the right anchor\r\n     o     }\r\n     o     start: {\r\n     o         x: (number) x coordinate of the start of the curve\r\n     o         y: (number) y coordinate of the start of the curve\r\n     o     }\r\n     o     end: {\r\n     o         x: (number) x coordinate of the end of the curve\r\n     o         y: (number) y coordinate of the end of the curve\r\n     o     }\r\n     o     alpha: (number) angle of the curve derivative at the point\r\n     o }\r\n    \\*/\r\n    R.findDotsAtSegment = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\r\n        var t1 = 1 - t,\r\n            t13 = pow(t1, 3),\r\n            t12 = pow(t1, 2),\r\n            t2 = t * t,\r\n            t3 = t2 * t,\r\n            x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\r\n            y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\r\n            mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\r\n            my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\r\n            nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\r\n            ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\r\n            ax = t1 * p1x + t * c1x,\r\n            ay = t1 * p1y + t * c1y,\r\n            cx = t1 * c2x + t * p2x,\r\n            cy = t1 * c2y + t * p2y,\r\n            alpha = (90 - math.atan2(mx - nx, my - ny) * 180 / PI);\r\n        (mx > nx || my < ny) && (alpha += 180);\r\n        return {\r\n            x: x,\r\n            y: y,\r\n            m: {x: mx, y: my},\r\n            n: {x: nx, y: ny},\r\n            start: {x: ax, y: ay},\r\n            end: {x: cx, y: cy},\r\n            alpha: alpha\r\n        };\r\n    };\r\n    /*\\\r\n     * Raphael.bezierBBox\r\n     [ method ]\r\n     **\r\n     * Utility method\r\n     **\r\n     * Return bounding box of a given cubic bezier curve\r\n     > Parameters\r\n     - p1x (number) x of the first point of the curve\r\n     - p1y (number) y of the first point of the curve\r\n     - c1x (number) x of the first anchor of the curve\r\n     - c1y (number) y of the first anchor of the curve\r\n     - c2x (number) x of the second anchor of the curve\r\n     - c2y (number) y of the second anchor of the curve\r\n     - p2x (number) x of the second point of the curve\r\n     - p2y (number) y of the second point of the curve\r\n     * or\r\n     - bez (array) array of six points for bezier curve\r\n     = (object) point information in format:\r\n     o {\r\n     o     min: {\r\n     o         x: (number) x coordinate of the left point\r\n     o         y: (number) y coordinate of the top point\r\n     o     }\r\n     o     max: {\r\n     o         x: (number) x coordinate of the right point\r\n     o         y: (number) y coordinate of the bottom point\r\n     o     }\r\n     o }\r\n    \\*/\r\n    R.bezierBBox = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\r\n        if (!R.is(p1x, \"array\")) {\r\n            p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\r\n        }\r\n        var bbox = curveDim.apply(null, p1x);\r\n        return {\r\n            x: bbox.min.x,\r\n            y: bbox.min.y,\r\n            x2: bbox.max.x,\r\n            y2: bbox.max.y,\r\n            width: bbox.max.x - bbox.min.x,\r\n            height: bbox.max.y - bbox.min.y\r\n        };\r\n    };\r\n    /*\\\r\n     * Raphael.isPointInsideBBox\r\n     [ method ]\r\n     **\r\n     * Utility method\r\n     **\r\n     * Returns `true` if given point is inside bounding boxes.\r\n     > Parameters\r\n     - bbox (string) bounding box\r\n     - x (string) x coordinate of the point\r\n     - y (string) y coordinate of the point\r\n     = (boolean) `true` if point inside\r\n    \\*/\r\n    R.isPointInsideBBox = function (bbox, x, y) {\r\n        return x >= bbox.x && x <= bbox.x2 && y >= bbox.y && y <= bbox.y2;\r\n    };\r\n    /*\\\r\n     * Raphael.isBBoxIntersect\r\n     [ method ]\r\n     **\r\n     * Utility method\r\n     **\r\n     * Returns `true` if two bounding boxes intersect\r\n     > Parameters\r\n     - bbox1 (string) first bounding box\r\n     - bbox2 (string) second bounding box\r\n     = (boolean) `true` if they intersect\r\n    \\*/\r\n    R.isBBoxIntersect = function (bbox1, bbox2) {\r\n        var i = R.isPointInsideBBox;\r\n        return i(bbox2, bbox1.x, bbox1.y)\r\n            || i(bbox2, bbox1.x2, bbox1.y)\r\n            || i(bbox2, bbox1.x, bbox1.y2)\r\n            || i(bbox2, bbox1.x2, bbox1.y2)\r\n            || i(bbox1, bbox2.x, bbox2.y)\r\n            || i(bbox1, bbox2.x2, bbox2.y)\r\n            || i(bbox1, bbox2.x, bbox2.y2)\r\n            || i(bbox1, bbox2.x2, bbox2.y2)\r\n            || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x)\r\n            && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\r\n    };\r\n    function base3(t, p1, p2, p3, p4) {\r\n        var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\r\n            t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\r\n        return t * t2 - 3 * p1 + 3 * p2;\r\n    }\r\n    function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\r\n        if (z == null) {\r\n            z = 1;\r\n        }\r\n        z = z > 1 ? 1 : z < 0 ? 0 : z;\r\n        var z2 = z / 2,\r\n            n = 12,\r\n            Tvalues = [-0.1252,0.1252,-0.3678,0.3678,-0.5873,0.5873,-0.7699,0.7699,-0.9041,0.9041,-0.9816,0.9816],\r\n            Cvalues = [0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],\r\n            sum = 0;\r\n        for (var i = 0; i < n; i++) {\r\n            var ct = z2 * Tvalues[i] + z2,\r\n                xbase = base3(ct, x1, x2, x3, x4),\r\n                ybase = base3(ct, y1, y2, y3, y4),\r\n                comb = xbase * xbase + ybase * ybase;\r\n            sum += Cvalues[i] * math.sqrt(comb);\r\n        }\r\n        return z2 * sum;\r\n    }\r\n    function getTatLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {\r\n        if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {\r\n            return;\r\n        }\r\n        var t = 1,\r\n            step = t / 2,\r\n            t2 = t - step,\r\n            l,\r\n            e = .01;\r\n        l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\r\n        while (abs(l - ll) > e) {\r\n            step /= 2;\r\n            t2 += (l < ll ? 1 : -1) * step;\r\n            l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\r\n        }\r\n        return t2;\r\n    }\r\n    function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\r\n        if (\r\n            mmax(x1, x2) < mmin(x3, x4) ||\r\n            mmin(x1, x2) > mmax(x3, x4) ||\r\n            mmax(y1, y2) < mmin(y3, y4) ||\r\n            mmin(y1, y2) > mmax(y3, y4)\r\n        ) {\r\n            return;\r\n        }\r\n        var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\r\n            ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\r\n            denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\r\n\r\n        if (!denominator) {\r\n            return;\r\n        }\r\n        var px = nx / denominator,\r\n            py = ny / denominator,\r\n            px2 = +px.toFixed(2),\r\n            py2 = +py.toFixed(2);\r\n        if (\r\n            px2 < +mmin(x1, x2).toFixed(2) ||\r\n            px2 > +mmax(x1, x2).toFixed(2) ||\r\n            px2 < +mmin(x3, x4).toFixed(2) ||\r\n            px2 > +mmax(x3, x4).toFixed(2) ||\r\n            py2 < +mmin(y1, y2).toFixed(2) ||\r\n            py2 > +mmax(y1, y2).toFixed(2) ||\r\n            py2 < +mmin(y3, y4).toFixed(2) ||\r\n            py2 > +mmax(y3, y4).toFixed(2)\r\n        ) {\r\n            return;\r\n        }\r\n        return {x: px, y: py};\r\n    }\r\n    function inter(bez1, bez2) {\r\n        return interHelper(bez1, bez2);\r\n    }\r\n    function interCount(bez1, bez2) {\r\n        return interHelper(bez1, bez2, 1);\r\n    }\r\n    function interHelper(bez1, bez2, justCount) {\r\n        var bbox1 = R.bezierBBox(bez1),\r\n            bbox2 = R.bezierBBox(bez2);\r\n        if (!R.isBBoxIntersect(bbox1, bbox2)) {\r\n            return justCount ? 0 : [];\r\n        }\r\n        var l1 = bezlen.apply(0, bez1),\r\n            l2 = bezlen.apply(0, bez2),\r\n            n1 = mmax(~~(l1 / 5), 1),\r\n            n2 = mmax(~~(l2 / 5), 1),\r\n            dots1 = [],\r\n            dots2 = [],\r\n            xy = {},\r\n            res = justCount ? 0 : [];\r\n        for (var i = 0; i < n1 + 1; i++) {\r\n            var p = R.findDotsAtSegment.apply(R, bez1.concat(i / n1));\r\n            dots1.push({x: p.x, y: p.y, t: i / n1});\r\n        }\r\n        for (i = 0; i < n2 + 1; i++) {\r\n            p = R.findDotsAtSegment.apply(R, bez2.concat(i / n2));\r\n            dots2.push({x: p.x, y: p.y, t: i / n2});\r\n        }\r\n        for (i = 0; i < n1; i++) {\r\n            for (var j = 0; j < n2; j++) {\r\n                var di = dots1[i],\r\n                    di1 = dots1[i + 1],\r\n                    dj = dots2[j],\r\n                    dj1 = dots2[j + 1],\r\n                    ci = abs(di1.x - di.x) < .001 ? \"y\" : \"x\",\r\n                    cj = abs(dj1.x - dj.x) < .001 ? \"y\" : \"x\",\r\n                    is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\r\n                if (is) {\r\n                    if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\r\n                        continue;\r\n                    }\r\n                    xy[is.x.toFixed(4)] = is.y.toFixed(4);\r\n                    var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\r\n                        t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\r\n                    if (t1 >= 0 && t1 <= 1.001 && t2 >= 0 && t2 <= 1.001) {\r\n                        if (justCount) {\r\n                            res++;\r\n                        } else {\r\n                            res.push({\r\n                                x: is.x,\r\n                                y: is.y,\r\n                                t1: mmin(t1, 1),\r\n                                t2: mmin(t2, 1)\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    /*\\\r\n     * Raphael.pathIntersection\r\n     [ method ]\r\n     **\r\n     * Utility method\r\n     **\r\n     * Finds intersections of two paths\r\n     > Parameters\r\n     - path1 (string) path string\r\n     - path2 (string) path string\r\n     = (array) dots of intersection\r\n     o [\r\n     o     {\r\n     o         x: (number) x coordinate of the point\r\n     o         y: (number) y coordinate of the point\r\n     o         t1: (number) t value for segment of path1\r\n     o         t2: (number) t value for segment of path2\r\n     o         segment1: (number) order number for segment of path1\r\n     o         segment2: (number) order number for segment of path2\r\n     o         bez1: (array) eight coordinates representing beziér curve for the segment of path1\r\n     o         bez2: (array) eight coordinates representing beziér curve for the segment of path2\r\n     o     }\r\n     o ]\r\n    \\*/\r\n    R.pathIntersection = function (path1, path2) {\r\n        return interPathHelper(path1, path2);\r\n    };\r\n    R.pathIntersectionNumber = function (path1, path2) {\r\n        return interPathHelper(path1, path2, 1);\r\n    };\r\n    function interPathHelper(path1, path2, justCount) {\r\n        path1 = R._path2curve(path1);\r\n        path2 = R._path2curve(path2);\r\n        var x1, y1, x2, y2, x1m, y1m, x2m, y2m, bez1, bez2,\r\n            res = justCount ? 0 : [];\r\n        for (var i = 0, ii = path1.length; i < ii; i++) {\r\n            var pi = path1[i];\r\n            if (pi[0] == \"M\") {\r\n                x1 = x1m = pi[1];\r\n                y1 = y1m = pi[2];\r\n            } else {\r\n                if (pi[0] == \"C\") {\r\n                    bez1 = [x1, y1].concat(pi.slice(1));\r\n                    x1 = bez1[6];\r\n                    y1 = bez1[7];\r\n                } else {\r\n                    bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\r\n                    x1 = x1m;\r\n                    y1 = y1m;\r\n                }\r\n                for (var j = 0, jj = path2.length; j < jj; j++) {\r\n                    var pj = path2[j];\r\n                    if (pj[0] == \"M\") {\r\n                        x2 = x2m = pj[1];\r\n                        y2 = y2m = pj[2];\r\n                    } else {\r\n                        if (pj[0] == \"C\") {\r\n                            bez2 = [x2, y2].concat(pj.slice(1));\r\n                            x2 = bez2[6];\r\n                            y2 = bez2[7];\r\n                        } else {\r\n                            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\r\n                            x2 = x2m;\r\n                            y2 = y2m;\r\n                        }\r\n                        var intr = interHelper(bez1, bez2, justCount);\r\n                        if (justCount) {\r\n                            res += intr;\r\n                        } else {\r\n                            for (var k = 0, kk = intr.length; k < kk; k++) {\r\n                                intr[k].segment1 = i;\r\n                                intr[k].segment2 = j;\r\n                                intr[k].bez1 = bez1;\r\n                                intr[k].bez2 = bez2;\r\n                            }\r\n                            res = res.concat(intr);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    /*\\\r\n     * Raphael.isPointInsidePath\r\n     [ method ]\r\n     **\r\n     * Utility method\r\n     **\r\n     * Returns `true` if given point is inside a given closed path.\r\n     > Parameters\r\n     - path (string) path string\r\n     - x (number) x of the point\r\n     - y (number) y of the point\r\n     = (boolean) true, if point is inside the path\r\n    \\*/\r\n    R.isPointInsidePath = function (path, x, y) {\r\n        var bbox = R.pathBBox(path);\r\n        return R.isPointInsideBBox(bbox, x, y) &&\r\n               interPathHelper(path, [[\"M\", x, y], [\"H\", bbox.x2 + 10]], 1) % 2 == 1;\r\n    };\r\n    R._removedFactory = function (methodname) {\r\n        return function () {\r\n            eve(\"raphael.log\", null, \"Rapha\\xebl: you are calling to method \\u201c\" + methodname + \"\\u201d of removed object\", methodname);\r\n        };\r\n    };\r\n    /*\\\r\n     * Raphael.pathBBox\r\n     [ method ]\r\n     **\r\n     * Utility method\r\n     **\r\n     * Return bounding box of a given path\r\n     > Parameters\r\n     - path (string) path string\r\n     = (object) bounding box\r\n     o {\r\n     o     x: (number) x coordinate of the left top point of the box\r\n     o     y: (number) y coordinate of the left top point of the box\r\n     o     x2: (number) x coordinate of the right bottom point of the box\r\n     o     y2: (number) y coordinate of the right bottom point of the box\r\n     o     width: (number) width of the box\r\n     o     height: (number) height of the box\r\n     o     cx: (number) x coordinate of the center of the box\r\n     o     cy: (number) y coordinate of the center of the box\r\n     o }\r\n    \\*/\r\n    var pathDimensions = R.pathBBox = function (path) {\r\n        var pth = paths(path);\r\n        if (pth.bbox) {\r\n            return clone(pth.bbox);\r\n        }\r\n        if (!path) {\r\n            return {x: 0, y: 0, width: 0, height: 0, x2: 0, y2: 0};\r\n        }\r\n        path = path2curve(path);\r\n        var x = 0,\r\n            y = 0,\r\n            X = [],\r\n            Y = [],\r\n            p;\r\n        for (var i = 0, ii = path.length; i < ii; i++) {\r\n            p = path[i];\r\n            if (p[0] == \"M\") {\r\n                x = p[1];\r\n                y = p[2];\r\n                X.push(x);\r\n                Y.push(y);\r\n            } else {\r\n                var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\r\n                X = X[concat](dim.min.x, dim.max.x);\r\n                Y = Y[concat](dim.min.y, dim.max.y);\r\n                x = p[5];\r\n                y = p[6];\r\n            }\r\n        }\r\n        var xmin = mmin[apply](0, X),\r\n            ymin = mmin[apply](0, Y),\r\n            xmax = mmax[apply](0, X),\r\n            ymax = mmax[apply](0, Y),\r\n            width = xmax - xmin,\r\n            height = ymax - ymin,\r\n                bb = {\r\n                x: xmin,\r\n                y: ymin,\r\n                x2: xmax,\r\n                y2: ymax,\r\n                width: width,\r\n                height: height,\r\n                cx: xmin + width / 2,\r\n                cy: ymin + height / 2\r\n            };\r\n        pth.bbox = clone(bb);\r\n        return bb;\r\n    },\r\n        pathClone = function (pathArray) {\r\n            var res = clone(pathArray);\r\n            res.toString = R._path2string;\r\n            return res;\r\n        },\r\n        pathToRelative = R._pathToRelative = function (pathArray) {\r\n            var pth = paths(pathArray);\r\n            if (pth.rel) {\r\n                return pathClone(pth.rel);\r\n            }\r\n            if (!R.is(pathArray, array) || !R.is(pathArray && pathArray[0], array)) { // rough assumption\r\n                pathArray = R.parsePathString(pathArray);\r\n            }\r\n            var res = [],\r\n                x = 0,\r\n                y = 0,\r\n                mx = 0,\r\n                my = 0,\r\n                start = 0;\r\n            if (pathArray[0][0] == \"M\") {\r\n                x = pathArray[0][1];\r\n                y = pathArray[0][2];\r\n                mx = x;\r\n                my = y;\r\n                start++;\r\n                res.push([\"M\", x, y]);\r\n            }\r\n            for (var i = start, ii = pathArray.length; i < ii; i++) {\r\n                var r = res[i] = [],\r\n                    pa = pathArray[i];\r\n                if (pa[0] != lowerCase.call(pa[0])) {\r\n                    r[0] = lowerCase.call(pa[0]);\r\n                    switch (r[0]) {\r\n                        case \"a\":\r\n                            r[1] = pa[1];\r\n                            r[2] = pa[2];\r\n                            r[3] = pa[3];\r\n                            r[4] = pa[4];\r\n                            r[5] = pa[5];\r\n                            r[6] = +(pa[6] - x).toFixed(3);\r\n                            r[7] = +(pa[7] - y).toFixed(3);\r\n                            break;\r\n                        case \"v\":\r\n                            r[1] = +(pa[1] - y).toFixed(3);\r\n                            break;\r\n                        case \"m\":\r\n                            mx = pa[1];\r\n                            my = pa[2];\r\n                        default:\r\n                            for (var j = 1, jj = pa.length; j < jj; j++) {\r\n                                r[j] = +(pa[j] - ((j % 2) ? x : y)).toFixed(3);\r\n                            }\r\n                    }\r\n                } else {\r\n                    r = res[i] = [];\r\n                    if (pa[0] == \"m\") {\r\n                        mx = pa[1] + x;\r\n                        my = pa[2] + y;\r\n                    }\r\n                    for (var k = 0, kk = pa.length; k < kk; k++) {\r\n                        res[i][k] = pa[k];\r\n                    }\r\n                }\r\n                var len = res[i].length;\r\n                switch (res[i][0]) {\r\n                    case \"z\":\r\n                        x = mx;\r\n                        y = my;\r\n                        break;\r\n                    case \"h\":\r\n                        x += +res[i][len - 1];\r\n                        break;\r\n                    case \"v\":\r\n                        y += +res[i][len - 1];\r\n                        break;\r\n                    default:\r\n                        x += +res[i][len - 2];\r\n                        y += +res[i][len - 1];\r\n                }\r\n            }\r\n            res.toString = R._path2string;\r\n            pth.rel = pathClone(res);\r\n            return res;\r\n        },\r\n        pathToAbsolute = R._pathToAbsolute = function (pathArray) {\r\n            var pth = paths(pathArray);\r\n            if (pth.abs) {\r\n                return pathClone(pth.abs);\r\n            }\r\n            if (!R.is(pathArray, array) || !R.is(pathArray && pathArray[0], array)) { // rough assumption\r\n                pathArray = R.parsePathString(pathArray);\r\n            }\r\n            if (!pathArray || !pathArray.length) {\r\n                return [[\"M\", 0, 0]];\r\n            }\r\n            var res = [],\r\n                x = 0,\r\n                y = 0,\r\n                mx = 0,\r\n                my = 0,\r\n                start = 0;\r\n            if (pathArray[0][0] == \"M\") {\r\n                x = +pathArray[0][1];\r\n                y = +pathArray[0][2];\r\n                mx = x;\r\n                my = y;\r\n                start++;\r\n                res[0] = [\"M\", x, y];\r\n            }\r\n            var crz = pathArray.length == 3 && pathArray[0][0] == \"M\" && pathArray[1][0].toUpperCase() == \"R\" && pathArray[2][0].toUpperCase() == \"Z\";\r\n            for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\r\n                res.push(r = []);\r\n                pa = pathArray[i];\r\n                if (pa[0] != upperCase.call(pa[0])) {\r\n                    r[0] = upperCase.call(pa[0]);\r\n                    switch (r[0]) {\r\n                        case \"A\":\r\n                            r[1] = pa[1];\r\n                            r[2] = pa[2];\r\n                            r[3] = pa[3];\r\n                            r[4] = pa[4];\r\n                            r[5] = pa[5];\r\n                            r[6] = +(pa[6] + x);\r\n                            r[7] = +(pa[7] + y);\r\n                            break;\r\n                        case \"V\":\r\n                            r[1] = +pa[1] + y;\r\n                            break;\r\n                        case \"H\":\r\n                            r[1] = +pa[1] + x;\r\n                            break;\r\n                        case \"R\":\r\n                            var dots = [x, y][concat](pa.slice(1));\r\n                            for (var j = 2, jj = dots.length; j < jj; j++) {\r\n                                dots[j] = +dots[j] + x;\r\n                                dots[++j] = +dots[j] + y;\r\n                            }\r\n                            res.pop();\r\n                            res = res[concat](catmullRom2bezier(dots, crz));\r\n                            break;\r\n                        case \"M\":\r\n                            mx = +pa[1] + x;\r\n                            my = +pa[2] + y;\r\n                        default:\r\n                            for (j = 1, jj = pa.length; j < jj; j++) {\r\n                                r[j] = +pa[j] + ((j % 2) ? x : y);\r\n                            }\r\n                    }\r\n                } else if (pa[0] == \"R\") {\r\n                    dots = [x, y][concat](pa.slice(1));\r\n                    res.pop();\r\n                    res = res[concat](catmullRom2bezier(dots, crz));\r\n                    r = [\"R\"][concat](pa.slice(-2));\r\n                } else {\r\n                    for (var k = 0, kk = pa.length; k < kk; k++) {\r\n                        r[k] = pa[k];\r\n                    }\r\n                }\r\n                switch (r[0]) {\r\n                    case \"Z\":\r\n                        x = mx;\r\n                        y = my;\r\n                        break;\r\n                    case \"H\":\r\n                        x = r[1];\r\n                        break;\r\n                    case \"V\":\r\n                        y = r[1];\r\n                        break;\r\n                    case \"M\":\r\n                        mx = r[r.length - 2];\r\n                        my = r[r.length - 1];\r\n                    default:\r\n                        x = r[r.length - 2];\r\n                        y = r[r.length - 1];\r\n                }\r\n            }\r\n            res.toString = R._path2string;\r\n            pth.abs = pathClone(res);\r\n            return res;\r\n        },\r\n        l2c = function (x1, y1, x2, y2) {\r\n            return [x1, y1, x2, y2, x2, y2];\r\n        },\r\n        q2c = function (x1, y1, ax, ay, x2, y2) {\r\n            var _13 = 1 / 3,\r\n                _23 = 2 / 3;\r\n            return [\r\n                    _13 * x1 + _23 * ax,\r\n                    _13 * y1 + _23 * ay,\r\n                    _13 * x2 + _23 * ax,\r\n                    _13 * y2 + _23 * ay,\r\n                    x2,\r\n                    y2\r\n                ];\r\n        },\r\n        a2c = function (x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\r\n            // for more information of where this math came from visit:\r\n            // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\r\n            var _120 = PI * 120 / 180,\r\n                rad = PI / 180 * (+angle || 0),\r\n                res = [],\r\n                xy,\r\n                rotate = cacher(function (x, y, rad) {\r\n                    var X = x * math.cos(rad) - y * math.sin(rad),\r\n                        Y = x * math.sin(rad) + y * math.cos(rad);\r\n                    return {x: X, y: Y};\r\n                });\r\n            if (!recursive) {\r\n                xy = rotate(x1, y1, -rad);\r\n                x1 = xy.x;\r\n                y1 = xy.y;\r\n                xy = rotate(x2, y2, -rad);\r\n                x2 = xy.x;\r\n                y2 = xy.y;\r\n                var cos = math.cos(PI / 180 * angle),\r\n                    sin = math.sin(PI / 180 * angle),\r\n                    x = (x1 - x2) / 2,\r\n                    y = (y1 - y2) / 2;\r\n                var h = (x * x) / (rx * rx) + (y * y) / (ry * ry);\r\n                if (h > 1) {\r\n                    h = math.sqrt(h);\r\n                    rx = h * rx;\r\n                    ry = h * ry;\r\n                }\r\n                var rx2 = rx * rx,\r\n                    ry2 = ry * ry,\r\n                    k = (large_arc_flag == sweep_flag ? -1 : 1) *\r\n                        math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\r\n                    cx = k * rx * y / ry + (x1 + x2) / 2,\r\n                    cy = k * -ry * x / rx + (y1 + y2) / 2,\r\n                    f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\r\n                    f2 = math.asin(((y2 - cy) / ry).toFixed(9));\r\n\r\n                f1 = x1 < cx ? PI - f1 : f1;\r\n                f2 = x2 < cx ? PI - f2 : f2;\r\n                f1 < 0 && (f1 = PI * 2 + f1);\r\n                f2 < 0 && (f2 = PI * 2 + f2);\r\n                if (sweep_flag && f1 > f2) {\r\n                    f1 = f1 - PI * 2;\r\n                }\r\n                if (!sweep_flag && f2 > f1) {\r\n                    f2 = f2 - PI * 2;\r\n                }\r\n            } else {\r\n                f1 = recursive[0];\r\n                f2 = recursive[1];\r\n                cx = recursive[2];\r\n                cy = recursive[3];\r\n            }\r\n            var df = f2 - f1;\r\n            if (abs(df) > _120) {\r\n                var f2old = f2,\r\n                    x2old = x2,\r\n                    y2old = y2;\r\n                f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\r\n                x2 = cx + rx * math.cos(f2);\r\n                y2 = cy + ry * math.sin(f2);\r\n                res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\r\n            }\r\n            df = f2 - f1;\r\n            var c1 = math.cos(f1),\r\n                s1 = math.sin(f1),\r\n                c2 = math.cos(f2),\r\n                s2 = math.sin(f2),\r\n                t = math.tan(df / 4),\r\n                hx = 4 / 3 * rx * t,\r\n                hy = 4 / 3 * ry * t,\r\n                m1 = [x1, y1],\r\n                m2 = [x1 + hx * s1, y1 - hy * c1],\r\n                m3 = [x2 + hx * s2, y2 - hy * c2],\r\n                m4 = [x2, y2];\r\n            m2[0] = 2 * m1[0] - m2[0];\r\n            m2[1] = 2 * m1[1] - m2[1];\r\n            if (recursive) {\r\n                return [m2, m3, m4][concat](res);\r\n            } else {\r\n                res = [m2, m3, m4][concat](res).join()[split](\",\");\r\n                var newres = [];\r\n                for (var i = 0, ii = res.length; i < ii; i++) {\r\n                    newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\r\n                }\r\n                return newres;\r\n            }\r\n        },\r\n        findDotAtSegment = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\r\n            var t1 = 1 - t;\r\n            return {\r\n                x: pow(t1, 3) * p1x + pow(t1, 2) * 3 * t * c1x + t1 * 3 * t * t * c2x + pow(t, 3) * p2x,\r\n                y: pow(t1, 3) * p1y + pow(t1, 2) * 3 * t * c1y + t1 * 3 * t * t * c2y + pow(t, 3) * p2y\r\n            };\r\n        },\r\n        curveDim = cacher(function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\r\n            var a = (c2x - 2 * c1x + p1x) - (p2x - 2 * c2x + c1x),\r\n                b = 2 * (c1x - p1x) - 2 * (c2x - c1x),\r\n                c = p1x - c1x,\r\n                t1 = (-b + math.sqrt(b * b - 4 * a * c)) / 2 / a,\r\n                t2 = (-b - math.sqrt(b * b - 4 * a * c)) / 2 / a,\r\n                y = [p1y, p2y],\r\n                x = [p1x, p2x],\r\n                dot;\r\n            abs(t1) > \"1e12\" && (t1 = .5);\r\n            abs(t2) > \"1e12\" && (t2 = .5);\r\n            if (t1 > 0 && t1 < 1) {\r\n                dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t1);\r\n                x.push(dot.x);\r\n                y.push(dot.y);\r\n            }\r\n            if (t2 > 0 && t2 < 1) {\r\n                dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t2);\r\n                x.push(dot.x);\r\n                y.push(dot.y);\r\n            }\r\n            a = (c2y - 2 * c1y + p1y) - (p2y - 2 * c2y + c1y);\r\n            b = 2 * (c1y - p1y) - 2 * (c2y - c1y);\r\n            c = p1y - c1y;\r\n            t1 = (-b + math.sqrt(b * b - 4 * a * c)) / 2 / a;\r\n            t2 = (-b - math.sqrt(b * b - 4 * a * c)) / 2 / a;\r\n            abs(t1) > \"1e12\" && (t1 = .5);\r\n            abs(t2) > \"1e12\" && (t2 = .5);\r\n            if (t1 > 0 && t1 < 1) {\r\n                dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t1);\r\n                x.push(dot.x);\r\n                y.push(dot.y);\r\n            }\r\n            if (t2 > 0 && t2 < 1) {\r\n                dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t2);\r\n                x.push(dot.x);\r\n                y.push(dot.y);\r\n            }\r\n            return {\r\n                min: {x: mmin[apply](0, x), y: mmin[apply](0, y)},\r\n                max: {x: mmax[apply](0, x), y: mmax[apply](0, y)}\r\n            };\r\n        }),\r\n        path2curve = R._path2curve = cacher(function (path, path2) {\r\n            var pth = !path2 && paths(path);\r\n            if (!path2 && pth.curve) {\r\n                return pathClone(pth.curve);\r\n            }\r\n            var p = pathToAbsolute(path),\r\n                p2 = path2 && pathToAbsolute(path2),\r\n                attrs = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\r\n                attrs2 = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\r\n                processPath = function (path, d, pcom) {\r\n                    var nx, ny, tq = {T:1, Q:1};\r\n                    if (!path) {\r\n                        return [\"C\", d.x, d.y, d.x, d.y, d.x, d.y];\r\n                    }\r\n                    !(path[0] in tq) && (d.qx = d.qy = null);\r\n                    switch (path[0]) {\r\n                        case \"M\":\r\n                            d.X = path[1];\r\n                            d.Y = path[2];\r\n                            break;\r\n                        case \"A\":\r\n                            path = [\"C\"][concat](a2c[apply](0, [d.x, d.y][concat](path.slice(1))));\r\n                            break;\r\n                        case \"S\":\r\n                            if (pcom == \"C\" || pcom == \"S\") { // In \"S\" case we have to take into account, if the previous command is C/S.\r\n                                nx = d.x * 2 - d.bx;          // And reflect the previous\r\n                                ny = d.y * 2 - d.by;          // command's control point relative to the current point.\r\n                            }\r\n                            else {                            // or some else or nothing\r\n                                nx = d.x;\r\n                                ny = d.y;\r\n                            }\r\n                            path = [\"C\", nx, ny][concat](path.slice(1));\r\n                            break;\r\n                        case \"T\":\r\n                            if (pcom == \"Q\" || pcom == \"T\") { // In \"T\" case we have to take into account, if the previous command is Q/T.\r\n                                d.qx = d.x * 2 - d.qx;        // And make a reflection similar\r\n                                d.qy = d.y * 2 - d.qy;        // to case \"S\".\r\n                            }\r\n                            else {                            // or something else or nothing\r\n                                d.qx = d.x;\r\n                                d.qy = d.y;\r\n                            }\r\n                            path = [\"C\"][concat](q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\r\n                            break;\r\n                        case \"Q\":\r\n                            d.qx = path[1];\r\n                            d.qy = path[2];\r\n                            path = [\"C\"][concat](q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\r\n                            break;\r\n                        case \"L\":\r\n                            path = [\"C\"][concat](l2c(d.x, d.y, path[1], path[2]));\r\n                            break;\r\n                        case \"H\":\r\n                            path = [\"C\"][concat](l2c(d.x, d.y, path[1], d.y));\r\n                            break;\r\n                        case \"V\":\r\n                            path = [\"C\"][concat](l2c(d.x, d.y, d.x, path[1]));\r\n                            break;\r\n                        case \"Z\":\r\n                            path = [\"C\"][concat](l2c(d.x, d.y, d.X, d.Y));\r\n                            break;\r\n                    }\r\n                    return path;\r\n                },\r\n                fixArc = function (pp, i) {\r\n                    if (pp[i].length > 7) {\r\n                        pp[i].shift();\r\n                        var pi = pp[i];\r\n                        while (pi.length) {\r\n                            pcoms1[i]=\"A\"; // if created multiple C:s, their original seg is saved\r\n                            p2 && (pcoms2[i]=\"A\"); // the same as above\r\n                            pp.splice(i++, 0, [\"C\"][concat](pi.splice(0, 6)));\r\n                        }\r\n                        pp.splice(i, 1);\r\n                        ii = mmax(p.length, p2 && p2.length || 0);\r\n                    }\r\n                },\r\n                fixM = function (path1, path2, a1, a2, i) {\r\n                    if (path1 && path2 && path1[i][0] == \"M\" && path2[i][0] != \"M\") {\r\n                        path2.splice(i, 0, [\"M\", a2.x, a2.y]);\r\n                        a1.bx = 0;\r\n                        a1.by = 0;\r\n                        a1.x = path1[i][1];\r\n                        a1.y = path1[i][2];\r\n                        ii = mmax(p.length, p2 && p2.length || 0);\r\n                    }\r\n                },\r\n                pcoms1 = [], // path commands of original path p\r\n                pcoms2 = [], // path commands of original path p2\r\n                pfirst = \"\", // temporary holder for original path command\r\n                pcom = \"\"; // holder for previous path command of original path\r\n            for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\r\n                p[i] && (pfirst = p[i][0]); // save current path command\r\n\r\n                if (pfirst != \"C\") // C is not saved yet, because it may be result of conversion\r\n                {\r\n                    pcoms1[i] = pfirst; // Save current path command\r\n                    i && ( pcom = pcoms1[i-1]); // Get previous path command pcom\r\n                }\r\n                p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\r\n\r\n                if (pcoms1[i] != \"A\" && pfirst == \"C\") pcoms1[i] = \"C\"; // A is the only command\r\n                // which may produce multiple C:s\r\n                // so we have to make sure that C is also C in original path\r\n\r\n                fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\r\n\r\n                if (p2) { // the same procedures is done to p2\r\n                    p2[i] && (pfirst = p2[i][0]);\r\n                    if (pfirst != \"C\")\r\n                    {\r\n                        pcoms2[i] = pfirst;\r\n                        i && (pcom = pcoms2[i-1]);\r\n                    }\r\n                    p2[i] = processPath(p2[i], attrs2, pcom);\r\n\r\n                    if (pcoms2[i]!=\"A\" && pfirst==\"C\") pcoms2[i]=\"C\";\r\n\r\n                    fixArc(p2, i);\r\n                }\r\n                fixM(p, p2, attrs, attrs2, i);\r\n                fixM(p2, p, attrs2, attrs, i);\r\n                var seg = p[i],\r\n                    seg2 = p2 && p2[i],\r\n                    seglen = seg.length,\r\n                    seg2len = p2 && seg2.length;\r\n                attrs.x = seg[seglen - 2];\r\n                attrs.y = seg[seglen - 1];\r\n                attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\r\n                attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\r\n                attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\r\n                attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\r\n                attrs2.x = p2 && seg2[seg2len - 2];\r\n                attrs2.y = p2 && seg2[seg2len - 1];\r\n            }\r\n            if (!p2) {\r\n                pth.curve = pathClone(p);\r\n            }\r\n            return p2 ? [p, p2] : p;\r\n        }, null, pathClone),\r\n        parseDots = R._parseDots = cacher(function (gradient) {\r\n            var dots = [];\r\n            for (var i = 0, ii = gradient.length; i < ii; i++) {\r\n                var dot = {},\r\n                    par = gradient[i].match(/^([^:]*):?([\\d\\.]*)/);\r\n                dot.color = R.getRGB(par[1]);\r\n                if (dot.color.error) {\r\n                    return null;\r\n                }\r\n                dot.color = dot.color.hex;\r\n                par[2] && (dot.offset = par[2] + \"%\");\r\n                dots.push(dot);\r\n            }\r\n            for (i = 1, ii = dots.length - 1; i < ii; i++) {\r\n                if (!dots[i].offset) {\r\n                    var start = toFloat(dots[i - 1].offset || 0),\r\n                        end = 0;\r\n                    for (var j = i + 1; j < ii; j++) {\r\n                        if (dots[j].offset) {\r\n                            end = dots[j].offset;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (!end) {\r\n                        end = 100;\r\n                        j = ii;\r\n                    }\r\n                    end = toFloat(end);\r\n                    var d = (end - start) / (j - i + 1);\r\n                    for (; i < j; i++) {\r\n                        start += d;\r\n                        dots[i].offset = start + \"%\";\r\n                    }\r\n                }\r\n            }\r\n            return dots;\r\n        }),\r\n        tear = R._tear = function (el, paper) {\r\n            el == paper.top && (paper.top = el.prev);\r\n            el == paper.bottom && (paper.bottom = el.next);\r\n            el.next && (el.next.prev = el.prev);\r\n            el.prev && (el.prev.next = el.next);\r\n        },\r\n        tofront = R._tofront = function (el, paper) {\r\n            if (paper.top === el) {\r\n                return;\r\n            }\r\n            tear(el, paper);\r\n            el.next = null;\r\n            el.prev = paper.top;\r\n            paper.top.next = el;\r\n            paper.top = el;\r\n        },\r\n        toback = R._toback = function (el, paper) {\r\n            if (paper.bottom === el) {\r\n                return;\r\n            }\r\n            tear(el, paper);\r\n            el.next = paper.bottom;\r\n            el.prev = null;\r\n            paper.bottom.prev = el;\r\n            paper.bottom = el;\r\n        },\r\n        insertafter = R._insertafter = function (el, el2, paper) {\r\n            tear(el, paper);\r\n            el2 == paper.top && (paper.top = el);\r\n            el2.next && (el2.next.prev = el);\r\n            el.next = el2.next;\r\n            el.prev = el2;\r\n            el2.next = el;\r\n        },\r\n        insertbefore = R._insertbefore = function (el, el2, paper) {\r\n            tear(el, paper);\r\n            el2 == paper.bottom && (paper.bottom = el);\r\n            el2.prev && (el2.prev.next = el);\r\n            el.prev = el2.prev;\r\n            el2.prev = el;\r\n            el.next = el2;\r\n        },\r\n        /*\\\r\n         * Raphael.toMatrix\r\n         [ method ]\r\n         **\r\n         * Utility method\r\n         **\r\n         * Returns matrix of transformations applied to a given path\r\n         > Parameters\r\n         - path (string) path string\r\n         - transform (string|array) transformation string\r\n         = (object) @Matrix\r\n        \\*/\r\n        toMatrix = R.toMatrix = function (path, transform) {\r\n            var bb = pathDimensions(path),\r\n                el = {\r\n                    _: {\r\n                        transform: E\r\n                    },\r\n                    getBBox: function () {\r\n                        return bb;\r\n                    }\r\n                };\r\n            extractTransform(el, transform);\r\n            return el.matrix;\r\n        },\r\n        /*\\\r\n         * Raphael.transformPath\r\n         [ method ]\r\n         **\r\n         * Utility method\r\n         **\r\n         * Returns path transformed by a given transformation\r\n         > Parameters\r\n         - path (string) path string\r\n         - transform (string|array) transformation string\r\n         = (string) path\r\n        \\*/\r\n        transformPath = R.transformPath = function (path, transform) {\r\n            return mapPath(path, toMatrix(path, transform));\r\n        },\r\n        extractTransform = R._extractTransform = function (el, tstr) {\r\n            if (tstr == null) {\r\n                return el._.transform;\r\n            }\r\n            tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, el._.transform || E);\r\n            var tdata = R.parseTransformString(tstr),\r\n                deg = 0,\r\n                dx = 0,\r\n                dy = 0,\r\n                sx = 1,\r\n                sy = 1,\r\n                _ = el._,\r\n                m = new Matrix;\r\n            _.transform = tdata || [];\r\n            if (tdata) {\r\n                for (var i = 0, ii = tdata.length; i < ii; i++) {\r\n                    var t = tdata[i],\r\n                        tlen = t.length,\r\n                        command = Str(t[0]).toLowerCase(),\r\n                        absolute = t[0] != command,\r\n                        inver = absolute ? m.invert() : 0,\r\n                        x1,\r\n                        y1,\r\n                        x2,\r\n                        y2,\r\n                        bb;\r\n                    if (command == \"t\" && tlen == 3) {\r\n                        if (absolute) {\r\n                            x1 = inver.x(0, 0);\r\n                            y1 = inver.y(0, 0);\r\n                            x2 = inver.x(t[1], t[2]);\r\n                            y2 = inver.y(t[1], t[2]);\r\n                            m.translate(x2 - x1, y2 - y1);\r\n                        } else {\r\n                            m.translate(t[1], t[2]);\r\n                        }\r\n                    } else if (command == \"r\") {\r\n                        if (tlen == 2) {\r\n                            bb = bb || el.getBBox(1);\r\n                            m.rotate(t[1], bb.x + bb.width / 2, bb.y + bb.height / 2);\r\n                            deg += t[1];\r\n                        } else if (tlen == 4) {\r\n                            if (absolute) {\r\n                                x2 = inver.x(t[2], t[3]);\r\n                                y2 = inver.y(t[2], t[3]);\r\n                                m.rotate(t[1], x2, y2);\r\n                            } else {\r\n                                m.rotate(t[1], t[2], t[3]);\r\n                            }\r\n                            deg += t[1];\r\n                        }\r\n                    } else if (command == \"s\") {\r\n                        if (tlen == 2 || tlen == 3) {\r\n                            bb = bb || el.getBBox(1);\r\n                            m.scale(t[1], t[tlen - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\r\n                            sx *= t[1];\r\n                            sy *= t[tlen - 1];\r\n                        } else if (tlen == 5) {\r\n                            if (absolute) {\r\n                                x2 = inver.x(t[3], t[4]);\r\n                                y2 = inver.y(t[3], t[4]);\r\n                                m.scale(t[1], t[2], x2, y2);\r\n                            } else {\r\n                                m.scale(t[1], t[2], t[3], t[4]);\r\n                            }\r\n                            sx *= t[1];\r\n                            sy *= t[2];\r\n                        }\r\n                    } else if (command == \"m\" && tlen == 7) {\r\n                        m.add(t[1], t[2], t[3], t[4], t[5], t[6]);\r\n                    }\r\n                    _.dirtyT = 1;\r\n                    el.matrix = m;\r\n                }\r\n            }\r\n\r\n            /*\\\r\n             * Element.matrix\r\n             [ property (object) ]\r\n             **\r\n             * Keeps @Matrix object, which represents element transformation\r\n            \\*/\r\n            el.matrix = m;\r\n\r\n            _.sx = sx;\r\n            _.sy = sy;\r\n            _.deg = deg;\r\n            _.dx = dx = m.e;\r\n            _.dy = dy = m.f;\r\n\r\n            if (sx == 1 && sy == 1 && !deg && _.bbox) {\r\n                _.bbox.x += +dx;\r\n                _.bbox.y += +dy;\r\n            } else {\r\n                _.dirtyT = 1;\r\n            }\r\n        },\r\n        getEmpty = function (item) {\r\n            var l = item[0];\r\n            switch (l.toLowerCase()) {\r\n                case \"t\": return [l, 0, 0];\r\n                case \"m\": return [l, 1, 0, 0, 1, 0, 0];\r\n                case \"r\": if (item.length == 4) {\r\n                    return [l, 0, item[2], item[3]];\r\n                } else {\r\n                    return [l, 0];\r\n                }\r\n                case \"s\": if (item.length == 5) {\r\n                    return [l, 1, 1, item[3], item[4]];\r\n                } else if (item.length == 3) {\r\n                    return [l, 1, 1];\r\n                } else {\r\n                    return [l, 1];\r\n                }\r\n            }\r\n        },\r\n        equaliseTransform = R._equaliseTransform = function (t1, t2) {\r\n            t2 = Str(t2).replace(/\\.{3}|\\u2026/g, t1);\r\n            t1 = R.parseTransformString(t1) || [];\r\n            t2 = R.parseTransformString(t2) || [];\r\n            var maxlength = mmax(t1.length, t2.length),\r\n                from = [],\r\n                to = [],\r\n                i = 0, j, jj,\r\n                tt1, tt2;\r\n            for (; i < maxlength; i++) {\r\n                tt1 = t1[i] || getEmpty(t2[i]);\r\n                tt2 = t2[i] || getEmpty(tt1);\r\n                if ((tt1[0] != tt2[0]) ||\r\n                    (tt1[0].toLowerCase() == \"r\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3])) ||\r\n                    (tt1[0].toLowerCase() == \"s\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4]))\r\n                    ) {\r\n                    return;\r\n                }\r\n                from[i] = [];\r\n                to[i] = [];\r\n                for (j = 0, jj = mmax(tt1.length, tt2.length); j < jj; j++) {\r\n                    j in tt1 && (from[i][j] = tt1[j]);\r\n                    j in tt2 && (to[i][j] = tt2[j]);\r\n                }\r\n            }\r\n            return {\r\n                from: from,\r\n                to: to\r\n            };\r\n        };\r\n    R._getContainer = function (x, y, w, h) {\r\n        var container;\r\n        container = h == null && !R.is(x, \"object\") ? g.doc.getElementById(x) : x;\r\n        if (container == null) {\r\n            return;\r\n        }\r\n        if (container.tagName) {\r\n            if (y == null) {\r\n                return {\r\n                    container: container,\r\n                    width: container.style.pixelWidth || container.offsetWidth,\r\n                    height: container.style.pixelHeight || container.offsetHeight\r\n                };\r\n            } else {\r\n                return {\r\n                    container: container,\r\n                    width: y,\r\n                    height: w\r\n                };\r\n            }\r\n        }\r\n        return {\r\n            container: 1,\r\n            x: x,\r\n            y: y,\r\n            width: w,\r\n            height: h\r\n        };\r\n    };\r\n    /*\\\r\n     * Raphael.pathToRelative\r\n     [ method ]\r\n     **\r\n     * Utility method\r\n     **\r\n     * Converts path to relative form\r\n     > Parameters\r\n     - pathString (string|array) path string or array of segments\r\n     = (array) array of segments.\r\n    \\*/\r\n    R.pathToRelative = pathToRelative;\r\n    R._engine = {};\r\n    /*\\\r\n     * Raphael.path2curve\r\n     [ method ]\r\n     **\r\n     * Utility method\r\n     **\r\n     * Converts path to a new path where all segments are cubic bezier curves.\r\n     > Parameters\r\n     - pathString (string|array) path string or array of segments\r\n     = (array) array of segments.\r\n    \\*/\r\n    R.path2curve = path2curve;\r\n    /*\\\r\n     * Raphael.matrix\r\n     [ method ]\r\n     **\r\n     * Utility method\r\n     **\r\n     * Returns matrix based on given parameters.\r\n     > Parameters\r\n     - a (number)\r\n     - b (number)\r\n     - c (number)\r\n     - d (number)\r\n     - e (number)\r\n     - f (number)\r\n     = (object) @Matrix\r\n    \\*/\r\n    R.matrix = function (a, b, c, d, e, f) {\r\n        return new Matrix(a, b, c, d, e, f);\r\n    };\r\n    function Matrix(a, b, c, d, e, f) {\r\n        if (a != null) {\r\n            this.a = +a;\r\n            this.b = +b;\r\n            this.c = +c;\r\n            this.d = +d;\r\n            this.e = +e;\r\n            this.f = +f;\r\n        } else {\r\n            this.a = 1;\r\n            this.b = 0;\r\n            this.c = 0;\r\n            this.d = 1;\r\n            this.e = 0;\r\n            this.f = 0;\r\n        }\r\n    }\r\n    (function (matrixproto) {\r\n        /*\\\r\n         * Matrix.add\r\n         [ method ]\r\n         **\r\n         * Adds given matrix to existing one.\r\n         > Parameters\r\n         - a (number)\r\n         - b (number)\r\n         - c (number)\r\n         - d (number)\r\n         - e (number)\r\n         - f (number)\r\n         or\r\n         - matrix (object) @Matrix\r\n        \\*/\r\n        matrixproto.add = function (a, b, c, d, e, f) {\r\n            var out = [[], [], []],\r\n                m = [[this.a, this.c, this.e], [this.b, this.d, this.f], [0, 0, 1]],\r\n                matrix = [[a, c, e], [b, d, f], [0, 0, 1]],\r\n                x, y, z, res;\r\n\r\n            if (a && a instanceof Matrix) {\r\n                matrix = [[a.a, a.c, a.e], [a.b, a.d, a.f], [0, 0, 1]];\r\n            }\r\n\r\n            for (x = 0; x < 3; x++) {\r\n                for (y = 0; y < 3; y++) {\r\n                    res = 0;\r\n                    for (z = 0; z < 3; z++) {\r\n                        res += m[x][z] * matrix[z][y];\r\n                    }\r\n                    out[x][y] = res;\r\n                }\r\n            }\r\n            this.a = out[0][0];\r\n            this.b = out[1][0];\r\n            this.c = out[0][1];\r\n            this.d = out[1][1];\r\n            this.e = out[0][2];\r\n            this.f = out[1][2];\r\n        };\r\n        /*\\\r\n         * Matrix.invert\r\n         [ method ]\r\n         **\r\n         * Returns inverted version of the matrix\r\n         = (object) @Matrix\r\n        \\*/\r\n        matrixproto.invert = function () {\r\n            var me = this,\r\n                x = me.a * me.d - me.b * me.c;\r\n            return new Matrix(me.d / x, -me.b / x, -me.c / x, me.a / x, (me.c * me.f - me.d * me.e) / x, (me.b * me.e - me.a * me.f) / x);\r\n        };\r\n        /*\\\r\n         * Matrix.clone\r\n         [ method ]\r\n         **\r\n         * Returns copy of the matrix\r\n         = (object) @Matrix\r\n        \\*/\r\n        matrixproto.clone = function () {\r\n            return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f);\r\n        };\r\n        /*\\\r\n         * Matrix.translate\r\n         [ method ]\r\n         **\r\n         * Translate the matrix\r\n         > Parameters\r\n         - x (number)\r\n         - y (number)\r\n        \\*/\r\n        matrixproto.translate = function (x, y) {\r\n            this.add(1, 0, 0, 1, x, y);\r\n        };\r\n        /*\\\r\n         * Matrix.scale\r\n         [ method ]\r\n         **\r\n         * Scales the matrix\r\n         > Parameters\r\n         - x (number)\r\n         - y (number) #optional\r\n         - cx (number) #optional\r\n         - cy (number) #optional\r\n        \\*/\r\n        matrixproto.scale = function (x, y, cx, cy) {\r\n            y == null && (y = x);\r\n            (cx || cy) && this.add(1, 0, 0, 1, cx, cy);\r\n            this.add(x, 0, 0, y, 0, 0);\r\n            (cx || cy) && this.add(1, 0, 0, 1, -cx, -cy);\r\n        };\r\n        /*\\\r\n         * Matrix.rotate\r\n         [ method ]\r\n         **\r\n         * Rotates the matrix\r\n         > Parameters\r\n         - a (number)\r\n         - x (number)\r\n         - y (number)\r\n        \\*/\r\n        matrixproto.rotate = function (a, x, y) {\r\n            a = R.rad(a);\r\n            x = x || 0;\r\n            y = y || 0;\r\n            var cos = +math.cos(a).toFixed(9),\r\n                sin = +math.sin(a).toFixed(9);\r\n            this.add(cos, sin, -sin, cos, x, y);\r\n            this.add(1, 0, 0, 1, -x, -y);\r\n        };\r\n        /*\\\r\n         * Matrix.x\r\n         [ method ]\r\n         **\r\n         * Return x coordinate for given point after transformation described by the matrix. See also @Matrix.y\r\n         > Parameters\r\n         - x (number)\r\n         - y (number)\r\n         = (number) x\r\n        \\*/\r\n        matrixproto.x = function (x, y) {\r\n            return x * this.a + y * this.c + this.e;\r\n        };\r\n        /*\\\r\n         * Matrix.y\r\n         [ method ]\r\n         **\r\n         * Return y coordinate for given point after transformation described by the matrix. See also @Matrix.x\r\n         > Parameters\r\n         - x (number)\r\n         - y (number)\r\n         = (number) y\r\n        \\*/\r\n        matrixproto.y = function (x, y) {\r\n            return x * this.b + y * this.d + this.f;\r\n        };\r\n        matrixproto.get = function (i) {\r\n            return +this[Str.fromCharCode(97 + i)].toFixed(4);\r\n        };\r\n        matrixproto.toString = function () {\r\n            return R.svg ?\r\n                \"matrix(\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + \")\" :\r\n                [this.get(0), this.get(2), this.get(1), this.get(3), 0, 0].join();\r\n        };\r\n        matrixproto.toFilter = function () {\r\n            return \"progid:DXImageTransform.Microsoft.Matrix(M11=\" + this.get(0) +\r\n                \", M12=\" + this.get(2) + \", M21=\" + this.get(1) + \", M22=\" + this.get(3) +\r\n                \", Dx=\" + this.get(4) + \", Dy=\" + this.get(5) + \", sizingmethod='auto expand')\";\r\n        };\r\n        matrixproto.offset = function () {\r\n            return [this.e.toFixed(4), this.f.toFixed(4)];\r\n        };\r\n        function norm(a) {\r\n            return a[0] * a[0] + a[1] * a[1];\r\n        }\r\n        function normalize(a) {\r\n            var mag = math.sqrt(norm(a));\r\n            a[0] && (a[0] /= mag);\r\n            a[1] && (a[1] /= mag);\r\n        }\r\n        /*\\\r\n         * Matrix.split\r\n         [ method ]\r\n         **\r\n         * Splits matrix into primitive transformations\r\n         = (object) in format:\r\n         o dx (number) translation by x\r\n         o dy (number) translation by y\r\n         o scalex (number) scale by x\r\n         o scaley (number) scale by y\r\n         o shear (number) shear\r\n         o rotate (number) rotation in deg\r\n         o isSimple (boolean) could it be represented via simple transformations\r\n        \\*/\r\n        matrixproto.split = function () {\r\n            var out = {};\r\n            // translation\r\n            out.dx = this.e;\r\n            out.dy = this.f;\r\n\r\n            // scale and shear\r\n            var row = [[this.a, this.c], [this.b, this.d]];\r\n            out.scalex = math.sqrt(norm(row[0]));\r\n            normalize(row[0]);\r\n\r\n            out.shear = row[0][0] * row[1][0] + row[0][1] * row[1][1];\r\n            row[1] = [row[1][0] - row[0][0] * out.shear, row[1][1] - row[0][1] * out.shear];\r\n\r\n            out.scaley = math.sqrt(norm(row[1]));\r\n            normalize(row[1]);\r\n            out.shear /= out.scaley;\r\n\r\n            // rotation\r\n            var sin = -row[0][1],\r\n                cos = row[1][1];\r\n            if (cos < 0) {\r\n                out.rotate = R.deg(math.acos(cos));\r\n                if (sin < 0) {\r\n                    out.rotate = 360 - out.rotate;\r\n                }\r\n            } else {\r\n                out.rotate = R.deg(math.asin(sin));\r\n            }\r\n\r\n            out.isSimple = !+out.shear.toFixed(9) && (out.scalex.toFixed(9) == out.scaley.toFixed(9) || !out.rotate);\r\n            out.isSuperSimple = !+out.shear.toFixed(9) && out.scalex.toFixed(9) == out.scaley.toFixed(9) && !out.rotate;\r\n            out.noRotation = !+out.shear.toFixed(9) && !out.rotate;\r\n            return out;\r\n        };\r\n        /*\\\r\n         * Matrix.toTransformString\r\n         [ method ]\r\n         **\r\n         * Return transform string that represents given matrix\r\n         = (string) transform string\r\n        \\*/\r\n        matrixproto.toTransformString = function (shorter) {\r\n            var s = shorter || this[split]();\r\n            if (s.isSimple) {\r\n                s.scalex = +s.scalex.toFixed(4);\r\n                s.scaley = +s.scaley.toFixed(4);\r\n                s.rotate = +s.rotate.toFixed(4);\r\n                return  (s.dx || s.dy ? \"t\" + [s.dx, s.dy] : E) +\r\n                        (s.scalex != 1 || s.scaley != 1 ? \"s\" + [s.scalex, s.scaley, 0, 0] : E) +\r\n                        (s.rotate ? \"r\" + [s.rotate, 0, 0] : E);\r\n            } else {\r\n                return \"m\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)];\r\n            }\r\n        };\r\n    })(Matrix.prototype);\r\n\r\n    var preventDefault = function () {\r\n        this.returnValue = false;\r\n    },\r\n    preventTouch = function () {\r\n        return this.originalEvent.preventDefault();\r\n    },\r\n    stopPropagation = function () {\r\n        this.cancelBubble = true;\r\n    },\r\n    stopTouch = function () {\r\n        return this.originalEvent.stopPropagation();\r\n    },\r\n    getEventPosition = function (e) {\r\n        var scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,\r\n            scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft;\r\n\r\n        return {\r\n            x: e.clientX + scrollX,\r\n            y: e.clientY + scrollY\r\n        };\r\n    },\r\n    addEvent = (function () {\r\n        if (g.doc.addEventListener) {\r\n            return function (obj, type, fn, element) {\r\n                var f = function (e) {\r\n                    var pos = getEventPosition(e);\r\n                    return fn.call(element, e, pos.x, pos.y);\r\n                };\r\n                obj.addEventListener(type, f, false);\r\n\r\n                if (supportsTouch && touchMap[type]) {\r\n                    var _f = function (e) {\r\n                        var pos = getEventPosition(e),\r\n                            olde = e;\r\n\r\n                        for (var i = 0, ii = e.targetTouches && e.targetTouches.length; i < ii; i++) {\r\n                            if (e.targetTouches[i].target == obj) {\r\n                                e = e.targetTouches[i];\r\n                                e.originalEvent = olde;\r\n                                e.preventDefault = preventTouch;\r\n                                e.stopPropagation = stopTouch;\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                        return fn.call(element, e, pos.x, pos.y);\r\n                    };\r\n                    obj.addEventListener(touchMap[type], _f, false);\r\n                }\r\n\r\n                return function () {\r\n                    obj.removeEventListener(type, f, false);\r\n\r\n                    if (supportsTouch && touchMap[type])\r\n                        obj.removeEventListener(touchMap[type], _f, false);\r\n\r\n                    return true;\r\n                };\r\n            };\r\n        } else if (g.doc.attachEvent) {\r\n            return function (obj, type, fn, element) {\r\n                var f = function (e) {\r\n                    e = e || g.win.event;\r\n                    var scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,\r\n                        scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft,\r\n                        x = e.clientX + scrollX,\r\n                        y = e.clientY + scrollY;\r\n                    e.preventDefault = e.preventDefault || preventDefault;\r\n                    e.stopPropagation = e.stopPropagation || stopPropagation;\r\n                    return fn.call(element, e, x, y);\r\n                };\r\n                obj.attachEvent(\"on\" + type, f);\r\n                var detacher = function () {\r\n                    obj.detachEvent(\"on\" + type, f);\r\n                    return true;\r\n                };\r\n                return detacher;\r\n            };\r\n        }\r\n    })(),\r\n    drag = [],\r\n    dragMove = function (e) {\r\n        var x = e.clientX,\r\n            y = e.clientY,\r\n            scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,\r\n            scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft,\r\n            dragi,\r\n            j = drag.length;\r\n        while (j--) {\r\n            dragi = drag[j];\r\n            if (supportsTouch && e.touches) {\r\n                var i = e.touches.length,\r\n                    touch;\r\n                while (i--) {\r\n                    touch = e.touches[i];\r\n                    if (touch.identifier == dragi.el._drag.id) {\r\n                        x = touch.clientX;\r\n                        y = touch.clientY;\r\n                        (e.originalEvent ? e.originalEvent : e).preventDefault();\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                e.preventDefault();\r\n            }\r\n            var node = dragi.el.node,\r\n                o,\r\n                next = node.nextSibling,\r\n                parent = node.parentNode,\r\n                display = node.style.display;\r\n            g.win.opera && parent.removeChild(node);\r\n            node.style.display = \"none\";\r\n            o = dragi.el.paper.getElementByPoint(x, y);\r\n            node.style.display = display;\r\n            g.win.opera && (next ? parent.insertBefore(node, next) : parent.appendChild(node));\r\n            o && eve(\"raphael.drag.over.\" + dragi.el.id, dragi.el, o);\r\n            x += scrollX;\r\n            y += scrollY;\r\n            eve(\"raphael.drag.move.\" + dragi.el.id, dragi.move_scope || dragi.el, x - dragi.el._drag.x, y - dragi.el._drag.y, x, y, e);\r\n        }\r\n    },\r\n    dragUp = function (e) {\r\n        R.unmousemove(dragMove).unmouseup(dragUp);\r\n        var i = drag.length,\r\n            dragi;\r\n        while (i--) {\r\n            dragi = drag[i];\r\n            dragi.el._drag = {};\r\n            eve(\"raphael.drag.end.\" + dragi.el.id, dragi.end_scope || dragi.start_scope || dragi.move_scope || dragi.el, e);\r\n        }\r\n        drag = [];\r\n    },\r\n    /*\\\r\n     * Raphael.el\r\n     [ property (object) ]\r\n     **\r\n     * You can add your own method to elements. This is usefull when you want to hack default functionality or\r\n     * want to wrap some common transformation or attributes in one method. In difference to canvas methods,\r\n     * you can redefine element method at any time. Expending element methods wouldn’t affect set.\r\n     > Usage\r\n     | Raphael.el.red = function () {\r\n     |     this.attr({fill: \"#f00\"});\r\n     | };\r\n     | // then use it\r\n     | paper.circle(100, 100, 20).red();\r\n    \\*/\r\n    elproto = R.el = {};\r\n    /*\\\r\n     * Element.click\r\n     [ method ]\r\n     **\r\n     * Adds event handler for click for the element.\r\n     > Parameters\r\n     - handler (function) handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n    /*\\\r\n     * Element.unclick\r\n     [ method ]\r\n     **\r\n     * Removes event handler for click for the element.\r\n     > Parameters\r\n     - handler (function) #optional handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n\r\n    /*\\\r\n     * Element.dblclick\r\n     [ method ]\r\n     **\r\n     * Adds event handler for double click for the element.\r\n     > Parameters\r\n     - handler (function) handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n    /*\\\r\n     * Element.undblclick\r\n     [ method ]\r\n     **\r\n     * Removes event handler for double click for the element.\r\n     > Parameters\r\n     - handler (function) #optional handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n\r\n    /*\\\r\n     * Element.mousedown\r\n     [ method ]\r\n     **\r\n     * Adds event handler for mousedown for the element.\r\n     > Parameters\r\n     - handler (function) handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n    /*\\\r\n     * Element.unmousedown\r\n     [ method ]\r\n     **\r\n     * Removes event handler for mousedown for the element.\r\n     > Parameters\r\n     - handler (function) #optional handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n\r\n    /*\\\r\n     * Element.mousemove\r\n     [ method ]\r\n     **\r\n     * Adds event handler for mousemove for the element.\r\n     > Parameters\r\n     - handler (function) handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n    /*\\\r\n     * Element.unmousemove\r\n     [ method ]\r\n     **\r\n     * Removes event handler for mousemove for the element.\r\n     > Parameters\r\n     - handler (function) #optional handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n\r\n    /*\\\r\n     * Element.mouseout\r\n     [ method ]\r\n     **\r\n     * Adds event handler for mouseout for the element.\r\n     > Parameters\r\n     - handler (function) handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n    /*\\\r\n     * Element.unmouseout\r\n     [ method ]\r\n     **\r\n     * Removes event handler for mouseout for the element.\r\n     > Parameters\r\n     - handler (function) #optional handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n\r\n    /*\\\r\n     * Element.mouseover\r\n     [ method ]\r\n     **\r\n     * Adds event handler for mouseover for the element.\r\n     > Parameters\r\n     - handler (function) handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n    /*\\\r\n     * Element.unmouseover\r\n     [ method ]\r\n     **\r\n     * Removes event handler for mouseover for the element.\r\n     > Parameters\r\n     - handler (function) #optional handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n\r\n    /*\\\r\n     * Element.mouseup\r\n     [ method ]\r\n     **\r\n     * Adds event handler for mouseup for the element.\r\n     > Parameters\r\n     - handler (function) handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n    /*\\\r\n     * Element.unmouseup\r\n     [ method ]\r\n     **\r\n     * Removes event handler for mouseup for the element.\r\n     > Parameters\r\n     - handler (function) #optional handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n\r\n    /*\\\r\n     * Element.touchstart\r\n     [ method ]\r\n     **\r\n     * Adds event handler for touchstart for the element.\r\n     > Parameters\r\n     - handler (function) handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n    /*\\\r\n     * Element.untouchstart\r\n     [ method ]\r\n     **\r\n     * Removes event handler for touchstart for the element.\r\n     > Parameters\r\n     - handler (function) #optional handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n\r\n    /*\\\r\n     * Element.touchmove\r\n     [ method ]\r\n     **\r\n     * Adds event handler for touchmove for the element.\r\n     > Parameters\r\n     - handler (function) handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n    /*\\\r\n     * Element.untouchmove\r\n     [ method ]\r\n     **\r\n     * Removes event handler for touchmove for the element.\r\n     > Parameters\r\n     - handler (function) #optional handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n\r\n    /*\\\r\n     * Element.touchend\r\n     [ method ]\r\n     **\r\n     * Adds event handler for touchend for the element.\r\n     > Parameters\r\n     - handler (function) handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n    /*\\\r\n     * Element.untouchend\r\n     [ method ]\r\n     **\r\n     * Removes event handler for touchend for the element.\r\n     > Parameters\r\n     - handler (function) #optional handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n\r\n    /*\\\r\n     * Element.touchcancel\r\n     [ method ]\r\n     **\r\n     * Adds event handler for touchcancel for the element.\r\n     > Parameters\r\n     - handler (function) handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n    /*\\\r\n     * Element.untouchcancel\r\n     [ method ]\r\n     **\r\n     * Removes event handler for touchcancel for the element.\r\n     > Parameters\r\n     - handler (function) #optional handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n    for (var i = events.length; i--;) {\r\n        (function (eventName) {\r\n            R[eventName] = elproto[eventName] = function (fn, scope) {\r\n                if (R.is(fn, \"function\")) {\r\n                    this.events = this.events || [];\r\n                    this.events.push({name: eventName, f: fn, unbind: addEvent(this.shape || this.node || g.doc, eventName, fn, scope || this)});\r\n                }\r\n                return this;\r\n            };\r\n            R[\"un\" + eventName] = elproto[\"un\" + eventName] = function (fn) {\r\n                var events = this.events || [],\r\n                    l = events.length;\r\n                while (l--){\r\n                    if (events[l].name == eventName && (R.is(fn, \"undefined\") || events[l].f == fn)) {\r\n                        events[l].unbind();\r\n                        events.splice(l, 1);\r\n                        !events.length && delete this.events;\r\n                    }\r\n                }\r\n                return this;\r\n            };\r\n        })(events[i]);\r\n    }\r\n\r\n    /*\\\r\n     * Element.data\r\n     [ method ]\r\n     **\r\n     * Adds or retrieves given value asociated with given key.\r\n     **\r\n     * See also @Element.removeData\r\n     > Parameters\r\n     - key (string) key to store data\r\n     - value (any) #optional value to store\r\n     = (object) @Element\r\n     * or, if value is not specified:\r\n     = (any) value\r\n     * or, if key and value are not specified:\r\n     = (object) Key/value pairs for all the data associated with the element.\r\n     > Usage\r\n     | for (var i = 0, i < 5, i++) {\r\n     |     paper.circle(10 + 15 * i, 10, 10)\r\n     |          .attr({fill: \"#000\"})\r\n     |          .data(\"i\", i)\r\n     |          .click(function () {\r\n     |             alert(this.data(\"i\"));\r\n     |          });\r\n     | }\r\n    \\*/\r\n    elproto.data = function (key, value) {\r\n        var data = eldata[this.id] = eldata[this.id] || {};\r\n        if (arguments.length == 0) {\r\n            return data;\r\n        }\r\n        if (arguments.length == 1) {\r\n            if (R.is(key, \"object\")) {\r\n                for (var i in key) if (key[has](i)) {\r\n                    this.data(i, key[i]);\r\n                }\r\n                return this;\r\n            }\r\n            eve(\"raphael.data.get.\" + this.id, this, data[key], key);\r\n            return data[key];\r\n        }\r\n        data[key] = value;\r\n        eve(\"raphael.data.set.\" + this.id, this, value, key);\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.removeData\r\n     [ method ]\r\n     **\r\n     * Removes value associated with an element by given key.\r\n     * If key is not provided, removes all the data of the element.\r\n     > Parameters\r\n     - key (string) #optional key\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.removeData = function (key) {\r\n        if (key == null) {\r\n            eldata[this.id] = {};\r\n        } else {\r\n            eldata[this.id] && delete eldata[this.id][key];\r\n        }\r\n        return this;\r\n    };\r\n     /*\\\r\n     * Element.getData\r\n     [ method ]\r\n     **\r\n     * Retrieves the element data\r\n     = (object) data\r\n    \\*/\r\n    elproto.getData = function () {\r\n        return clone(eldata[this.id] || {});\r\n    };\r\n    /*\\\r\n     * Element.hover\r\n     [ method ]\r\n     **\r\n     * Adds event handlers for hover for the element.\r\n     > Parameters\r\n     - f_in (function) handler for hover in\r\n     - f_out (function) handler for hover out\r\n     - icontext (object) #optional context for hover in handler\r\n     - ocontext (object) #optional context for hover out handler\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.hover = function (f_in, f_out, scope_in, scope_out) {\r\n        return this.mouseover(f_in, scope_in).mouseout(f_out, scope_out || scope_in);\r\n    };\r\n    /*\\\r\n     * Element.unhover\r\n     [ method ]\r\n     **\r\n     * Removes event handlers for hover for the element.\r\n     > Parameters\r\n     - f_in (function) handler for hover in\r\n     - f_out (function) handler for hover out\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.unhover = function (f_in, f_out) {\r\n        return this.unmouseover(f_in).unmouseout(f_out);\r\n    };\r\n    var draggable = [];\r\n    /*\\\r\n     * Element.drag\r\n     [ method ]\r\n     **\r\n     * Adds event handlers for drag of the element.\r\n     > Parameters\r\n     - onmove (function) handler for moving\r\n     - onstart (function) handler for drag start\r\n     - onend (function) handler for drag end\r\n     - mcontext (object) #optional context for moving handler\r\n     - scontext (object) #optional context for drag start handler\r\n     - econtext (object) #optional context for drag end handler\r\n     * Additionaly following `drag` events will be triggered: `drag.start.<id>` on start,\r\n     * `drag.end.<id>` on end and `drag.move.<id>` on every move. When element will be dragged over another element\r\n     * `drag.over.<id>` will be fired as well.\r\n     *\r\n     * Start event and start handler will be called in specified context or in context of the element with following parameters:\r\n     o x (number) x position of the mouse\r\n     o y (number) y position of the mouse\r\n     o event (object) DOM event object\r\n     * Move event and move handler will be called in specified context or in context of the element with following parameters:\r\n     o dx (number) shift by x from the start point\r\n     o dy (number) shift by y from the start point\r\n     o x (number) x position of the mouse\r\n     o y (number) y position of the mouse\r\n     o event (object) DOM event object\r\n     * End event and end handler will be called in specified context or in context of the element with following parameters:\r\n     o event (object) DOM event object\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.drag = function (onmove, onstart, onend, move_scope, start_scope, end_scope) {\r\n        function start(e) {\r\n            (e.originalEvent || e).preventDefault();\r\n            var x = e.clientX,\r\n                y = e.clientY,\r\n                scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,\r\n                scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft;\r\n            this._drag.id = e.identifier;\r\n            if (supportsTouch && e.touches) {\r\n                var i = e.touches.length, touch;\r\n                while (i--) {\r\n                    touch = e.touches[i];\r\n                    this._drag.id = touch.identifier;\r\n                    if (touch.identifier == this._drag.id) {\r\n                        x = touch.clientX;\r\n                        y = touch.clientY;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            this._drag.x = x + scrollX;\r\n            this._drag.y = y + scrollY;\r\n            !drag.length && R.mousemove(dragMove).mouseup(dragUp);\r\n            drag.push({el: this, move_scope: move_scope, start_scope: start_scope, end_scope: end_scope});\r\n            onstart && eve.on(\"raphael.drag.start.\" + this.id, onstart);\r\n            onmove && eve.on(\"raphael.drag.move.\" + this.id, onmove);\r\n            onend && eve.on(\"raphael.drag.end.\" + this.id, onend);\r\n            eve(\"raphael.drag.start.\" + this.id, start_scope || move_scope || this, e.clientX + scrollX, e.clientY + scrollY, e);\r\n        }\r\n        this._drag = {};\r\n        draggable.push({el: this, start: start});\r\n        this.mousedown(start);\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.onDragOver\r\n     [ method ]\r\n     **\r\n     * Shortcut for assigning event handler for `drag.over.<id>` event, where id is id of the element (see @Element.id).\r\n     > Parameters\r\n     - f (function) handler for event, first argument would be the element you are dragging over\r\n    \\*/\r\n    elproto.onDragOver = function (f) {\r\n        f ? eve.on(\"raphael.drag.over.\" + this.id, f) : eve.unbind(\"raphael.drag.over.\" + this.id);\r\n    };\r\n    /*\\\r\n     * Element.undrag\r\n     [ method ]\r\n     **\r\n     * Removes all drag event handlers from given element.\r\n    \\*/\r\n    elproto.undrag = function () {\r\n        var i = draggable.length;\r\n        while (i--) if (draggable[i].el == this) {\r\n            this.unmousedown(draggable[i].start);\r\n            draggable.splice(i, 1);\r\n            eve.unbind(\"raphael.drag.*.\" + this.id);\r\n        }\r\n        !draggable.length && R.unmousemove(dragMove).unmouseup(dragUp);\r\n        drag = [];\r\n    };\r\n    /*\\\r\n     * Paper.circle\r\n     [ method ]\r\n     **\r\n     * Draws a circle.\r\n     **\r\n     > Parameters\r\n     **\r\n     - x (number) x coordinate of the centre\r\n     - y (number) y coordinate of the centre\r\n     - r (number) radius\r\n     = (object) Raphaël element object with type “circle”\r\n     **\r\n     > Usage\r\n     | var c = paper.circle(50, 50, 40);\r\n    \\*/\r\n    paperproto.circle = function (x, y, r) {\r\n        var out = R._engine.circle(this, x || 0, y || 0, r || 0);\r\n        this.__set__ && this.__set__.push(out);\r\n        return out;\r\n    };\r\n    /*\\\r\n     * Paper.rect\r\n     [ method ]\r\n     *\r\n     * Draws a rectangle.\r\n     **\r\n     > Parameters\r\n     **\r\n     - x (number) x coordinate of the top left corner\r\n     - y (number) y coordinate of the top left corner\r\n     - width (number) width\r\n     - height (number) height\r\n     - r (number) #optional radius for rounded corners, default is 0\r\n     = (object) Raphaël element object with type “rect”\r\n     **\r\n     > Usage\r\n     | // regular rectangle\r\n     | var c = paper.rect(10, 10, 50, 50);\r\n     | // rectangle with rounded corners\r\n     | var c = paper.rect(40, 40, 50, 50, 10);\r\n    \\*/\r\n    paperproto.rect = function (x, y, w, h, r) {\r\n        var out = R._engine.rect(this, x || 0, y || 0, w || 0, h || 0, r || 0);\r\n        this.__set__ && this.__set__.push(out);\r\n        return out;\r\n    };\r\n    /*\\\r\n     * Paper.ellipse\r\n     [ method ]\r\n     **\r\n     * Draws an ellipse.\r\n     **\r\n     > Parameters\r\n     **\r\n     - x (number) x coordinate of the centre\r\n     - y (number) y coordinate of the centre\r\n     - rx (number) horizontal radius\r\n     - ry (number) vertical radius\r\n     = (object) Raphaël element object with type “ellipse”\r\n     **\r\n     > Usage\r\n     | var c = paper.ellipse(50, 50, 40, 20);\r\n    \\*/\r\n    paperproto.ellipse = function (x, y, rx, ry) {\r\n        var out = R._engine.ellipse(this, x || 0, y || 0, rx || 0, ry || 0);\r\n        this.__set__ && this.__set__.push(out);\r\n        return out;\r\n    };\r\n    /*\\\r\n     * Paper.path\r\n     [ method ]\r\n     **\r\n     * Creates a path element by given path data string.\r\n     > Parameters\r\n     - pathString (string) #optional path string in SVG format.\r\n     * Path string consists of one-letter commands, followed by comma seprarated arguments in numercal form. Example:\r\n     | \"M10,20L30,40\"\r\n     * Here we can see two commands: “M”, with arguments `(10, 20)` and “L” with arguments `(30, 40)`. Upper case letter mean command is absolute, lower case—relative.\r\n     *\r\n     # <p>Here is short list of commands available, for more details see <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path's data attribute's format are described in the SVG specification.\">SVG path string format</a>.</p>\r\n     # <table><thead><tr><th>Command</th><th>Name</th><th>Parameters</th></tr></thead><tbody>\r\n     # <tr><td>M</td><td>moveto</td><td>(x y)+</td></tr>\r\n     # <tr><td>Z</td><td>closepath</td><td>(none)</td></tr>\r\n     # <tr><td>L</td><td>lineto</td><td>(x y)+</td></tr>\r\n     # <tr><td>H</td><td>horizontal lineto</td><td>x+</td></tr>\r\n     # <tr><td>V</td><td>vertical lineto</td><td>y+</td></tr>\r\n     # <tr><td>C</td><td>curveto</td><td>(x1 y1 x2 y2 x y)+</td></tr>\r\n     # <tr><td>S</td><td>smooth curveto</td><td>(x2 y2 x y)+</td></tr>\r\n     # <tr><td>Q</td><td>quadratic Bézier curveto</td><td>(x1 y1 x y)+</td></tr>\r\n     # <tr><td>T</td><td>smooth quadratic Bézier curveto</td><td>(x y)+</td></tr>\r\n     # <tr><td>A</td><td>elliptical arc</td><td>(rx ry x-axis-rotation large-arc-flag sweep-flag x y)+</td></tr>\r\n     # <tr><td>R</td><td><a href=\"http://en.wikipedia.org/wiki/Catmull–Rom_spline#Catmull.E2.80.93Rom_spline\">Catmull-Rom curveto</a>*</td><td>x1 y1 (x y)+</td></tr></tbody></table>\r\n     * * “Catmull-Rom curveto” is a not standard SVG command and added in 2.0 to make life easier.\r\n     * Note: there is a special case when path consist of just three commands: “M10,10R…z”. In this case path will smoothly connects to its beginning.\r\n     > Usage\r\n     | var c = paper.path(\"M10 10L90 90\");\r\n     | // draw a diagonal line:\r\n     | // move to 10,10, line to 90,90\r\n     * For example of path strings, check out these icons: http://raphaeljs.com/icons/\r\n    \\*/\r\n    paperproto.path = function (pathString) {\r\n        pathString && !R.is(pathString, string) && !R.is(pathString[0], array) && (pathString += E);\r\n        var out = R._engine.path(R.format[apply](R, arguments), this);\r\n        this.__set__ && this.__set__.push(out);\r\n        return out;\r\n    };\r\n    /*\\\r\n     * Paper.image\r\n     [ method ]\r\n     **\r\n     * Embeds an image into the surface.\r\n     **\r\n     > Parameters\r\n     **\r\n     - src (string) URI of the source image\r\n     - x (number) x coordinate position\r\n     - y (number) y coordinate position\r\n     - width (number) width of the image\r\n     - height (number) height of the image\r\n     = (object) Raphaël element object with type “image”\r\n     **\r\n     > Usage\r\n     | var c = paper.image(\"apple.png\", 10, 10, 80, 80);\r\n    \\*/\r\n    paperproto.image = function (src, x, y, w, h) {\r\n        var out = R._engine.image(this, src || \"about:blank\", x || 0, y || 0, w || 0, h || 0);\r\n        this.__set__ && this.__set__.push(out);\r\n        return out;\r\n    };\r\n    /*\\\r\n     * Paper.text\r\n     [ method ]\r\n     **\r\n     * Draws a text string. If you need line breaks, put “\\n” in the string.\r\n     **\r\n     > Parameters\r\n     **\r\n     - x (number) x coordinate position\r\n     - y (number) y coordinate position\r\n     - text (string) The text string to draw\r\n     = (object) Raphaël element object with type “text”\r\n     **\r\n     > Usage\r\n     | var t = paper.text(50, 50, \"Raphaël\\nkicks\\nbutt!\");\r\n    \\*/\r\n    paperproto.text = function (x, y, text) {\r\n        var out = R._engine.text(this, x || 0, y || 0, Str(text));\r\n        this.__set__ && this.__set__.push(out);\r\n        return out;\r\n    };\r\n    /*\\\r\n     * Paper.set\r\n     [ method ]\r\n     **\r\n     * Creates array-like object to keep and operate several elements at once.\r\n     * Warning: it doesn’t create any elements for itself in the page, it just groups existing elements.\r\n     * Sets act as pseudo elements — all methods available to an element can be used on a set.\r\n     = (object) array-like object that represents set of elements\r\n     **\r\n     > Usage\r\n     | var st = paper.set();\r\n     | st.push(\r\n     |     paper.circle(10, 10, 5),\r\n     |     paper.circle(30, 10, 5)\r\n     | );\r\n     | st.attr({fill: \"red\"}); // changes the fill of both circles\r\n    \\*/\r\n    paperproto.set = function (itemsArray) {\r\n        !R.is(itemsArray, \"array\") && (itemsArray = Array.prototype.splice.call(arguments, 0, arguments.length));\r\n        var out = new Set(itemsArray);\r\n        this.__set__ && this.__set__.push(out);\r\n        out[\"paper\"] = this;\r\n        out[\"type\"] = \"set\";\r\n        return out;\r\n    };\r\n    /*\\\r\n     * Paper.setStart\r\n     [ method ]\r\n     **\r\n     * Creates @Paper.set. All elements that will be created after calling this method and before calling\r\n     * @Paper.setFinish will be added to the set.\r\n     **\r\n     > Usage\r\n     | paper.setStart();\r\n     | paper.circle(10, 10, 5),\r\n     | paper.circle(30, 10, 5)\r\n     | var st = paper.setFinish();\r\n     | st.attr({fill: \"red\"}); // changes the fill of both circles\r\n    \\*/\r\n    paperproto.setStart = function (set) {\r\n        this.__set__ = set || this.set();\r\n    };\r\n    /*\\\r\n     * Paper.setFinish\r\n     [ method ]\r\n     **\r\n     * See @Paper.setStart. This method finishes catching and returns resulting set.\r\n     **\r\n     = (object) set\r\n    \\*/\r\n    paperproto.setFinish = function (set) {\r\n        var out = this.__set__;\r\n        delete this.__set__;\r\n        return out;\r\n    };\r\n    /*\\\r\n     * Paper.getSize\r\n     [ method ]\r\n     **\r\n     * Obtains current paper actual size.\r\n     **\r\n     = (object)\r\n     \\*/\r\n    paperproto.getSize = function () {\r\n        var container = this.canvas.parentNode;\r\n        return {\r\n            width: container.offsetWidth,\r\n            height: container.offsetHeight\r\n                };\r\n        };\r\n    /*\\\r\n     * Paper.setSize\r\n     [ method ]\r\n     **\r\n     * If you need to change dimensions of the canvas call this method\r\n     **\r\n     > Parameters\r\n     **\r\n     - width (number) new width of the canvas\r\n     - height (number) new height of the canvas\r\n    \\*/\r\n    paperproto.setSize = function (width, height) {\r\n        return R._engine.setSize.call(this, width, height);\r\n    };\r\n    /*\\\r\n     * Paper.setViewBox\r\n     [ method ]\r\n     **\r\n     * Sets the view box of the paper. Practically it gives you ability to zoom and pan whole paper surface by\r\n     * specifying new boundaries.\r\n     **\r\n     > Parameters\r\n     **\r\n     - x (number) new x position, default is `0`\r\n     - y (number) new y position, default is `0`\r\n     - w (number) new width of the canvas\r\n     - h (number) new height of the canvas\r\n     - fit (boolean) `true` if you want graphics to fit into new boundary box\r\n    \\*/\r\n    paperproto.setViewBox = function (x, y, w, h, fit) {\r\n        return R._engine.setViewBox.call(this, x, y, w, h, fit);\r\n    };\r\n    /*\\\r\n     * Paper.top\r\n     [ property ]\r\n     **\r\n     * Points to the topmost element on the paper\r\n    \\*/\r\n    /*\\\r\n     * Paper.bottom\r\n     [ property ]\r\n     **\r\n     * Points to the bottom element on the paper\r\n    \\*/\r\n    paperproto.top = paperproto.bottom = null;\r\n    /*\\\r\n     * Paper.raphael\r\n     [ property ]\r\n     **\r\n     * Points to the @Raphael object/function\r\n    \\*/\r\n    paperproto.raphael = R;\r\n    var getOffset = function (elem) {\r\n        var box = elem.getBoundingClientRect(),\r\n            doc = elem.ownerDocument,\r\n            body = doc.body,\r\n            docElem = doc.documentElement,\r\n            clientTop = docElem.clientTop || body.clientTop || 0, clientLeft = docElem.clientLeft || body.clientLeft || 0,\r\n            top  = box.top  + (g.win.pageYOffset || docElem.scrollTop || body.scrollTop ) - clientTop,\r\n            left = box.left + (g.win.pageXOffset || docElem.scrollLeft || body.scrollLeft) - clientLeft;\r\n        return {\r\n            y: top,\r\n            x: left\r\n        };\r\n    };\r\n    /*\\\r\n     * Paper.getElementByPoint\r\n     [ method ]\r\n     **\r\n     * Returns you topmost element under given point.\r\n     **\r\n     = (object) Raphaël element object\r\n     > Parameters\r\n     **\r\n     - x (number) x coordinate from the top left corner of the window\r\n     - y (number) y coordinate from the top left corner of the window\r\n     > Usage\r\n     | paper.getElementByPoint(mouseX, mouseY).attr({stroke: \"#f00\"});\r\n    \\*/\r\n    paperproto.getElementByPoint = function (x, y) {\r\n        var paper = this,\r\n            svg = paper.canvas,\r\n            target = g.doc.elementFromPoint(x, y);\r\n        if (g.win.opera && target.tagName == \"svg\") {\r\n            var so = getOffset(svg),\r\n                sr = svg.createSVGRect();\r\n            sr.x = x - so.x;\r\n            sr.y = y - so.y;\r\n            sr.width = sr.height = 1;\r\n            var hits = svg.getIntersectionList(sr, null);\r\n            if (hits.length) {\r\n                target = hits[hits.length - 1];\r\n            }\r\n        }\r\n        if (!target) {\r\n            return null;\r\n        }\r\n        while (target.parentNode && target != svg.parentNode && !target.raphael) {\r\n            target = target.parentNode;\r\n        }\r\n        target == paper.canvas.parentNode && (target = svg);\r\n        target = target && target.raphael ? paper.getById(target.raphaelid) : null;\r\n        return target;\r\n    };\r\n\r\n    /*\\\r\n     * Paper.getElementsByBBox\r\n     [ method ]\r\n     **\r\n     * Returns set of elements that have an intersecting bounding box\r\n     **\r\n     > Parameters\r\n     **\r\n     - bbox (object) bbox to check with\r\n     = (object) @Set\r\n     \\*/\r\n    paperproto.getElementsByBBox = function (bbox) {\r\n        var set = this.set();\r\n        this.forEach(function (el) {\r\n            if (R.isBBoxIntersect(el.getBBox(), bbox)) {\r\n                set.push(el);\r\n            }\r\n        });\r\n        return set;\r\n    };\r\n\r\n    /*\\\r\n     * Paper.getById\r\n     [ method ]\r\n     **\r\n     * Returns you element by its internal ID.\r\n     **\r\n     > Parameters\r\n     **\r\n     - id (number) id\r\n     = (object) Raphaël element object\r\n    \\*/\r\n    paperproto.getById = function (id) {\r\n        var bot = this.bottom;\r\n        while (bot) {\r\n            if (bot.id == id) {\r\n                return bot;\r\n            }\r\n            bot = bot.next;\r\n        }\r\n        return null;\r\n    };\r\n    /*\\\r\n     * Paper.forEach\r\n     [ method ]\r\n     **\r\n     * Executes given function for each element on the paper\r\n     *\r\n     * If callback function returns `false` it will stop loop running.\r\n     **\r\n     > Parameters\r\n     **\r\n     - callback (function) function to run\r\n     - thisArg (object) context object for the callback\r\n     = (object) Paper object\r\n     > Usage\r\n     | paper.forEach(function (el) {\r\n     |     el.attr({ stroke: \"blue\" });\r\n     | });\r\n    \\*/\r\n    paperproto.forEach = function (callback, thisArg) {\r\n        var bot = this.bottom;\r\n        while (bot) {\r\n            if (callback.call(thisArg, bot) === false) {\r\n                return this;\r\n            }\r\n            bot = bot.next;\r\n        }\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Paper.getElementsByPoint\r\n     [ method ]\r\n     **\r\n     * Returns set of elements that have common point inside\r\n     **\r\n     > Parameters\r\n     **\r\n     - x (number) x coordinate of the point\r\n     - y (number) y coordinate of the point\r\n     = (object) @Set\r\n    \\*/\r\n    paperproto.getElementsByPoint = function (x, y) {\r\n        var set = this.set();\r\n        this.forEach(function (el) {\r\n            if (el.isPointInside(x, y)) {\r\n                set.push(el);\r\n            }\r\n        });\r\n        return set;\r\n    };\r\n    function x_y() {\r\n        return this.x + S + this.y;\r\n    }\r\n    function x_y_w_h() {\r\n        return this.x + S + this.y + S + this.width + \" \\xd7 \" + this.height;\r\n    }\r\n    /*\\\r\n     * Element.isPointInside\r\n     [ method ]\r\n     **\r\n     * Determine if given point is inside this element’s shape\r\n     **\r\n     > Parameters\r\n     **\r\n     - x (number) x coordinate of the point\r\n     - y (number) y coordinate of the point\r\n     = (boolean) `true` if point inside the shape\r\n    \\*/\r\n    elproto.isPointInside = function (x, y) {\r\n        var rp = this.realPath = getPath[this.type](this);\r\n        if (this.attr('transform') && this.attr('transform').length) {\r\n            rp = R.transformPath(rp, this.attr('transform'));\r\n        }\r\n        return R.isPointInsidePath(rp, x, y);\r\n    };\r\n    /*\\\r\n     * Element.getBBox\r\n     [ method ]\r\n     **\r\n     * Return bounding box for a given element\r\n     **\r\n     > Parameters\r\n     **\r\n     - isWithoutTransform (boolean) flag, `true` if you want to have bounding box before transformations. Default is `false`.\r\n     = (object) Bounding box object:\r\n     o {\r\n     o     x: (number) top left corner x\r\n     o     y: (number) top left corner y\r\n     o     x2: (number) bottom right corner x\r\n     o     y2: (number) bottom right corner y\r\n     o     width: (number) width\r\n     o     height: (number) height\r\n     o }\r\n    \\*/\r\n    elproto.getBBox = function (isWithoutTransform) {\r\n        if (this.removed) {\r\n            return {};\r\n        }\r\n        var _ = this._;\r\n        if (isWithoutTransform) {\r\n            if (_.dirty || !_.bboxwt) {\r\n                this.realPath = getPath[this.type](this);\r\n                _.bboxwt = pathDimensions(this.realPath);\r\n                _.bboxwt.toString = x_y_w_h;\r\n                _.dirty = 0;\r\n            }\r\n            return _.bboxwt;\r\n        }\r\n        if (_.dirty || _.dirtyT || !_.bbox) {\r\n            if (_.dirty || !this.realPath) {\r\n                _.bboxwt = 0;\r\n                this.realPath = getPath[this.type](this);\r\n            }\r\n            _.bbox = pathDimensions(mapPath(this.realPath, this.matrix));\r\n            _.bbox.toString = x_y_w_h;\r\n            _.dirty = _.dirtyT = 0;\r\n        }\r\n        return _.bbox;\r\n    };\r\n    /*\\\r\n     * Element.clone\r\n     [ method ]\r\n     **\r\n     = (object) clone of a given element\r\n     **\r\n    \\*/\r\n    elproto.clone = function () {\r\n        if (this.removed) {\r\n            return null;\r\n        }\r\n        var out = this.paper[this.type]().attr(this.attr());\r\n        this.__set__ && this.__set__.push(out);\r\n        return out;\r\n    };\r\n    /*\\\r\n     * Element.glow\r\n     [ method ]\r\n     **\r\n     * Return set of elements that create glow-like effect around given element. See @Paper.set.\r\n     *\r\n     * Note: Glow is not connected to the element. If you change element attributes it won’t adjust itself.\r\n     **\r\n     > Parameters\r\n     **\r\n     - glow (object) #optional parameters object with all properties optional:\r\n     o {\r\n     o     width (number) size of the glow, default is `10`\r\n     o     fill (boolean) will it be filled, default is `false`\r\n     o     opacity (number) opacity, default is `0.5`\r\n     o     offsetx (number) horizontal offset, default is `0`\r\n     o     offsety (number) vertical offset, default is `0`\r\n     o     color (string) glow colour, default is `black`\r\n     o }\r\n     = (object) @Paper.set of elements that represents glow\r\n    \\*/\r\n    elproto.glow = function (glow) {\r\n        if (this.type == \"text\") {\r\n            return null;\r\n        }\r\n        glow = glow || {};\r\n        var s = {\r\n            width: (glow.width || 10) + (+this.attr(\"stroke-width\") || 1),\r\n            fill: glow.fill || false,\r\n            opacity: glow.opacity || .5,\r\n            offsetx: glow.offsetx || 0,\r\n            offsety: glow.offsety || 0,\r\n            color: glow.color || \"#000\"\r\n        },\r\n            c = s.width / 2,\r\n            r = this.paper,\r\n            out = r.set(),\r\n            path = this.realPath || getPath[this.type](this);\r\n        path = this.matrix ? mapPath(path, this.matrix) : path;\r\n        for (var i = 1; i < c + 1; i++) {\r\n            out.push(r.path(path).attr({\r\n                stroke: s.color,\r\n                fill: s.fill ? s.color : \"none\",\r\n                \"stroke-linejoin\": \"round\",\r\n                \"stroke-linecap\": \"round\",\r\n                \"stroke-width\": +(s.width / c * i).toFixed(3),\r\n                opacity: +(s.opacity / c).toFixed(3)\r\n            }));\r\n        }\r\n        return out.insertBefore(this).translate(s.offsetx, s.offsety);\r\n    };\r\n    var curveslengths = {},\r\n    getPointAtSegmentLength = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length) {\r\n        if (length == null) {\r\n            return bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y);\r\n        } else {\r\n            return R.findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, getTatLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length));\r\n        }\r\n    },\r\n    getLengthFactory = function (istotal, subpath) {\r\n        return function (path, length, onlystart) {\r\n            path = path2curve(path);\r\n            var x, y, p, l, sp = \"\", subpaths = {}, point,\r\n                len = 0;\r\n            for (var i = 0, ii = path.length; i < ii; i++) {\r\n                p = path[i];\r\n                if (p[0] == \"M\") {\r\n                    x = +p[1];\r\n                    y = +p[2];\r\n                } else {\r\n                    l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\r\n                    if (len + l > length) {\r\n                        if (subpath && !subpaths.start) {\r\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\r\n                            sp += [\"C\" + point.start.x, point.start.y, point.m.x, point.m.y, point.x, point.y];\r\n                            if (onlystart) {return sp;}\r\n                            subpaths.start = sp;\r\n                            sp = [\"M\" + point.x, point.y + \"C\" + point.n.x, point.n.y, point.end.x, point.end.y, p[5], p[6]].join();\r\n                            len += l;\r\n                            x = +p[5];\r\n                            y = +p[6];\r\n                            continue;\r\n                        }\r\n                        if (!istotal && !subpath) {\r\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\r\n                            return {x: point.x, y: point.y, alpha: point.alpha};\r\n                        }\r\n                    }\r\n                    len += l;\r\n                    x = +p[5];\r\n                    y = +p[6];\r\n                }\r\n                sp += p.shift() + p;\r\n            }\r\n            subpaths.end = sp;\r\n            point = istotal ? len : subpath ? subpaths : R.findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);\r\n            point.alpha && (point = {x: point.x, y: point.y, alpha: point.alpha});\r\n            return point;\r\n        };\r\n    };\r\n    var getTotalLength = getLengthFactory(1),\r\n        getPointAtLength = getLengthFactory(),\r\n        getSubpathsAtLength = getLengthFactory(0, 1);\r\n    /*\\\r\n     * Raphael.getTotalLength\r\n     [ method ]\r\n     **\r\n     * Returns length of the given path in pixels.\r\n     **\r\n     > Parameters\r\n     **\r\n     - path (string) SVG path string.\r\n     **\r\n     = (number) length.\r\n    \\*/\r\n    R.getTotalLength = getTotalLength;\r\n    /*\\\r\n     * Raphael.getPointAtLength\r\n     [ method ]\r\n     **\r\n     * Return coordinates of the point located at the given length on the given path.\r\n     **\r\n     > Parameters\r\n     **\r\n     - path (string) SVG path string\r\n     - length (number)\r\n     **\r\n     = (object) representation of the point:\r\n     o {\r\n     o     x: (number) x coordinate\r\n     o     y: (number) y coordinate\r\n     o     alpha: (number) angle of derivative\r\n     o }\r\n    \\*/\r\n    R.getPointAtLength = getPointAtLength;\r\n    /*\\\r\n     * Raphael.getSubpath\r\n     [ method ]\r\n     **\r\n     * Return subpath of a given path from given length to given length.\r\n     **\r\n     > Parameters\r\n     **\r\n     - path (string) SVG path string\r\n     - from (number) position of the start of the segment\r\n     - to (number) position of the end of the segment\r\n     **\r\n     = (string) pathstring for the segment\r\n    \\*/\r\n    R.getSubpath = function (path, from, to) {\r\n        if (this.getTotalLength(path) - to < 1e-6) {\r\n            return getSubpathsAtLength(path, from).end;\r\n        }\r\n        var a = getSubpathsAtLength(path, to, 1);\r\n        return from ? getSubpathsAtLength(a, from).end : a;\r\n    };\r\n    /*\\\r\n     * Element.getTotalLength\r\n     [ method ]\r\n     **\r\n     * Returns length of the path in pixels. Only works for element of “path” type.\r\n     = (number) length.\r\n    \\*/\r\n    elproto.getTotalLength = function () {\r\n        var path = this.getPath();\r\n        if (!path) {\r\n            return;\r\n        }\r\n\r\n        if (this.node.getTotalLength) {\r\n            return this.node.getTotalLength();\r\n        }\r\n\r\n        return getTotalLength(path);\r\n    };\r\n    /*\\\r\n     * Element.getPointAtLength\r\n     [ method ]\r\n     **\r\n     * Return coordinates of the point located at the given length on the given path. Only works for element of “path” type.\r\n     **\r\n     > Parameters\r\n     **\r\n     - length (number)\r\n     **\r\n     = (object) representation of the point:\r\n     o {\r\n     o     x: (number) x coordinate\r\n     o     y: (number) y coordinate\r\n     o     alpha: (number) angle of derivative\r\n     o }\r\n    \\*/\r\n    elproto.getPointAtLength = function (length) {\r\n        var path = this.getPath();\r\n        if (!path) {\r\n            return;\r\n        }\r\n\r\n        return getPointAtLength(path, length);\r\n    };\r\n    /*\\\r\n     * Element.getPath\r\n     [ method ]\r\n     **\r\n     * Returns path of the element. Only works for elements of “path” type and simple elements like circle.\r\n     = (object) path\r\n     **\r\n    \\*/\r\n    elproto.getPath = function () {\r\n        var path,\r\n            getPath = R._getPath[this.type];\r\n\r\n        if (this.type == \"text\" || this.type == \"set\") {\r\n            return;\r\n        }\r\n\r\n        if (getPath) {\r\n            path = getPath(this);\r\n        }\r\n\r\n        return path;\r\n    };\r\n    /*\\\r\n     * Element.getSubpath\r\n     [ method ]\r\n     **\r\n     * Return subpath of a given element from given length to given length. Only works for element of “path” type.\r\n     **\r\n     > Parameters\r\n     **\r\n     - from (number) position of the start of the segment\r\n     - to (number) position of the end of the segment\r\n     **\r\n     = (string) pathstring for the segment\r\n    \\*/\r\n    elproto.getSubpath = function (from, to) {\r\n        var path = this.getPath();\r\n        if (!path) {\r\n            return;\r\n        }\r\n\r\n        return R.getSubpath(path, from, to);\r\n    };\r\n    /*\\\r\n     * Raphael.easing_formulas\r\n     [ property ]\r\n     **\r\n     * Object that contains easing formulas for animation. You could extend it with your own. By default it has following list of easing:\r\n     # <ul>\r\n     #     <li>“linear”</li>\r\n     #     <li>“&lt;” or “easeIn” or “ease-in”</li>\r\n     #     <li>“>” or “easeOut” or “ease-out”</li>\r\n     #     <li>“&lt;>” or “easeInOut” or “ease-in-out”</li>\r\n     #     <li>“backIn” or “back-in”</li>\r\n     #     <li>“backOut” or “back-out”</li>\r\n     #     <li>“elastic”</li>\r\n     #     <li>“bounce”</li>\r\n     # </ul>\r\n     # <p>See also <a href=\"http://raphaeljs.com/easing.html\">Easing demo</a>.</p>\r\n    \\*/\r\n    var ef = R.easing_formulas = {\r\n        linear: function (n) {\r\n            return n;\r\n        },\r\n        \"<\": function (n) {\r\n            return pow(n, 1.7);\r\n        },\r\n        \">\": function (n) {\r\n            return pow(n, .48);\r\n        },\r\n        \"<>\": function (n) {\r\n            var q = .48 - n / 1.04,\r\n                Q = math.sqrt(.1734 + q * q),\r\n                x = Q - q,\r\n                X = pow(abs(x), 1 / 3) * (x < 0 ? -1 : 1),\r\n                y = -Q - q,\r\n                Y = pow(abs(y), 1 / 3) * (y < 0 ? -1 : 1),\r\n                t = X + Y + .5;\r\n            return (1 - t) * 3 * t * t + t * t * t;\r\n        },\r\n        backIn: function (n) {\r\n            var s = 1.70158;\r\n            return n * n * ((s + 1) * n - s);\r\n        },\r\n        backOut: function (n) {\r\n            n = n - 1;\r\n            var s = 1.70158;\r\n            return n * n * ((s + 1) * n + s) + 1;\r\n        },\r\n        elastic: function (n) {\r\n            if (n == !!n) {\r\n                return n;\r\n            }\r\n            return pow(2, -10 * n) * math.sin((n - .075) * (2 * PI) / .3) + 1;\r\n        },\r\n        bounce: function (n) {\r\n            var s = 7.5625,\r\n                p = 2.75,\r\n                l;\r\n            if (n < (1 / p)) {\r\n                l = s * n * n;\r\n            } else {\r\n                if (n < (2 / p)) {\r\n                    n -= (1.5 / p);\r\n                    l = s * n * n + .75;\r\n                } else {\r\n                    if (n < (2.5 / p)) {\r\n                        n -= (2.25 / p);\r\n                        l = s * n * n + .9375;\r\n                    } else {\r\n                        n -= (2.625 / p);\r\n                        l = s * n * n + .984375;\r\n                    }\r\n                }\r\n            }\r\n            return l;\r\n        }\r\n    };\r\n    ef.easeIn = ef[\"ease-in\"] = ef[\"<\"];\r\n    ef.easeOut = ef[\"ease-out\"] = ef[\">\"];\r\n    ef.easeInOut = ef[\"ease-in-out\"] = ef[\"<>\"];\r\n    ef[\"back-in\"] = ef.backIn;\r\n    ef[\"back-out\"] = ef.backOut;\r\n\r\n    var animationElements = [],\r\n        requestAnimFrame = window.requestAnimationFrame       ||\r\n                           window.webkitRequestAnimationFrame ||\r\n                           window.mozRequestAnimationFrame    ||\r\n                           window.oRequestAnimationFrame      ||\r\n                           window.msRequestAnimationFrame     ||\r\n                           function (callback) {\r\n                               setTimeout(callback, 16);\r\n                           },\r\n        animation = function () {\r\n            var Now = +new Date,\r\n                l = 0;\r\n            for (; l < animationElements.length; l++) {\r\n                var e = animationElements[l];\r\n                if (e.el.removed || e.paused) {\r\n                    continue;\r\n                }\r\n                var time = Now - e.start,\r\n                    ms = e.ms,\r\n                    easing = e.easing,\r\n                    from = e.from,\r\n                    diff = e.diff,\r\n                    to = e.to,\r\n                    t = e.t,\r\n                    that = e.el,\r\n                    set = {},\r\n                    now,\r\n                    init = {},\r\n                    key;\r\n                if (e.initstatus) {\r\n                    time = (e.initstatus * e.anim.top - e.prev) / (e.percent - e.prev) * ms;\r\n                    e.status = e.initstatus;\r\n                    delete e.initstatus;\r\n                    e.stop && animationElements.splice(l--, 1);\r\n                } else {\r\n                    e.status = (e.prev + (e.percent - e.prev) * (time / ms)) / e.anim.top;\r\n                }\r\n                if (time < 0) {\r\n                    continue;\r\n                }\r\n                if (time < ms) {\r\n                    var pos = easing(time / ms);\r\n                    for (var attr in from) if (from[has](attr)) {\r\n                        switch (availableAnimAttrs[attr]) {\r\n                            case nu:\r\n                                now = +from[attr] + pos * ms * diff[attr];\r\n                                break;\r\n                            case \"colour\":\r\n                                now = \"rgb(\" + [\r\n                                    upto255(round(from[attr].r + pos * ms * diff[attr].r)),\r\n                                    upto255(round(from[attr].g + pos * ms * diff[attr].g)),\r\n                                    upto255(round(from[attr].b + pos * ms * diff[attr].b))\r\n                                ].join(\",\") + \")\";\r\n                                break;\r\n                            case \"path\":\r\n                                now = [];\r\n                                for (var i = 0, ii = from[attr].length; i < ii; i++) {\r\n                                    now[i] = [from[attr][i][0]];\r\n                                    for (var j = 1, jj = from[attr][i].length; j < jj; j++) {\r\n                                        now[i][j] = +from[attr][i][j] + pos * ms * diff[attr][i][j];\r\n                                    }\r\n                                    now[i] = now[i].join(S);\r\n                                }\r\n                                now = now.join(S);\r\n                                break;\r\n                            case \"transform\":\r\n                                if (diff[attr].real) {\r\n                                    now = [];\r\n                                    for (i = 0, ii = from[attr].length; i < ii; i++) {\r\n                                        now[i] = [from[attr][i][0]];\r\n                                        for (j = 1, jj = from[attr][i].length; j < jj; j++) {\r\n                                            now[i][j] = from[attr][i][j] + pos * ms * diff[attr][i][j];\r\n                                        }\r\n                                    }\r\n                                } else {\r\n                                    var get = function (i) {\r\n                                        return +from[attr][i] + pos * ms * diff[attr][i];\r\n                                    };\r\n                                    // now = [[\"r\", get(2), 0, 0], [\"t\", get(3), get(4)], [\"s\", get(0), get(1), 0, 0]];\r\n                                    now = [[\"m\", get(0), get(1), get(2), get(3), get(4), get(5)]];\r\n                                }\r\n                                break;\r\n                            case \"csv\":\r\n                                if (attr == \"clip-rect\") {\r\n                                    now = [];\r\n                                    i = 4;\r\n                                    while (i--) {\r\n                                        now[i] = +from[attr][i] + pos * ms * diff[attr][i];\r\n                                    }\r\n                                }\r\n                                break;\r\n                            default:\r\n                                var from2 = [][concat](from[attr]);\r\n                                now = [];\r\n                                i = that.paper.customAttributes[attr].length;\r\n                                while (i--) {\r\n                                    now[i] = +from2[i] + pos * ms * diff[attr][i];\r\n                                }\r\n                                break;\r\n                        }\r\n                        set[attr] = now;\r\n                    }\r\n                    that.attr(set);\r\n                    (function (id, that, anim) {\r\n                        setTimeout(function () {\r\n                            eve(\"raphael.anim.frame.\" + id, that, anim);\r\n                        });\r\n                    })(that.id, that, e.anim);\r\n                } else {\r\n                    (function(f, el, a) {\r\n                        setTimeout(function() {\r\n                            eve(\"raphael.anim.frame.\" + el.id, el, a);\r\n                            eve(\"raphael.anim.finish.\" + el.id, el, a);\r\n                            R.is(f, \"function\") && f.call(el);\r\n                        });\r\n                    })(e.callback, that, e.anim);\r\n                    that.attr(to);\r\n                    animationElements.splice(l--, 1);\r\n                    if (e.repeat > 1 && !e.next) {\r\n                        for (key in to) if (to[has](key)) {\r\n                            init[key] = e.totalOrigin[key];\r\n                        }\r\n                        e.el.attr(init);\r\n                        runAnimation(e.anim, e.el, e.anim.percents[0], null, e.totalOrigin, e.repeat - 1);\r\n                    }\r\n                    if (e.next && !e.stop) {\r\n                        runAnimation(e.anim, e.el, e.next, null, e.totalOrigin, e.repeat);\r\n                    }\r\n                }\r\n            }\r\n            animationElements.length && requestAnimFrame(animation);\r\n        },\r\n        upto255 = function (color) {\r\n            return color > 255 ? 255 : color < 0 ? 0 : color;\r\n        };\r\n    /*\\\r\n     * Element.animateWith\r\n     [ method ]\r\n     **\r\n     * Acts similar to @Element.animate, but ensure that given animation runs in sync with another given element.\r\n     **\r\n     > Parameters\r\n     **\r\n     - el (object) element to sync with\r\n     - anim (object) animation to sync with\r\n     - params (object) #optional final attributes for the element, see also @Element.attr\r\n     - ms (number) #optional number of milliseconds for animation to run\r\n     - easing (string) #optional easing type. Accept on of @Raphael.easing_formulas or CSS format: `cubic&#x2010;bezier(XX,&#160;XX,&#160;XX,&#160;XX)`\r\n     - callback (function) #optional callback function. Will be called at the end of animation.\r\n     * or\r\n     - element (object) element to sync with\r\n     - anim (object) animation to sync with\r\n     - animation (object) #optional animation object, see @Raphael.animation\r\n     **\r\n     = (object) original element\r\n    \\*/\r\n    elproto.animateWith = function (el, anim, params, ms, easing, callback) {\r\n        var element = this;\r\n        if (element.removed) {\r\n            callback && callback.call(element);\r\n            return element;\r\n        }\r\n        var a = params instanceof Animation ? params : R.animation(params, ms, easing, callback),\r\n            x, y;\r\n        runAnimation(a, element, a.percents[0], null, element.attr());\r\n        for (var i = 0, ii = animationElements.length; i < ii; i++) {\r\n            if (animationElements[i].anim == anim && animationElements[i].el == el) {\r\n                animationElements[ii - 1].start = animationElements[i].start;\r\n                break;\r\n            }\r\n        }\r\n        return element;\r\n        //\r\n        //\r\n        // var a = params ? R.animation(params, ms, easing, callback) : anim,\r\n        //     status = element.status(anim);\r\n        // return this.animate(a).status(a, status * anim.ms / a.ms);\r\n    };\r\n    function CubicBezierAtTime(t, p1x, p1y, p2x, p2y, duration) {\r\n        var cx = 3 * p1x,\r\n            bx = 3 * (p2x - p1x) - cx,\r\n            ax = 1 - cx - bx,\r\n            cy = 3 * p1y,\r\n            by = 3 * (p2y - p1y) - cy,\r\n            ay = 1 - cy - by;\r\n        function sampleCurveX(t) {\r\n            return ((ax * t + bx) * t + cx) * t;\r\n        }\r\n        function solve(x, epsilon) {\r\n            var t = solveCurveX(x, epsilon);\r\n            return ((ay * t + by) * t + cy) * t;\r\n        }\r\n        function solveCurveX(x, epsilon) {\r\n            var t0, t1, t2, x2, d2, i;\r\n            for(t2 = x, i = 0; i < 8; i++) {\r\n                x2 = sampleCurveX(t2) - x;\r\n                if (abs(x2) < epsilon) {\r\n                    return t2;\r\n                }\r\n                d2 = (3 * ax * t2 + 2 * bx) * t2 + cx;\r\n                if (abs(d2) < 1e-6) {\r\n                    break;\r\n                }\r\n                t2 = t2 - x2 / d2;\r\n            }\r\n            t0 = 0;\r\n            t1 = 1;\r\n            t2 = x;\r\n            if (t2 < t0) {\r\n                return t0;\r\n            }\r\n            if (t2 > t1) {\r\n                return t1;\r\n            }\r\n            while (t0 < t1) {\r\n                x2 = sampleCurveX(t2);\r\n                if (abs(x2 - x) < epsilon) {\r\n                    return t2;\r\n                }\r\n                if (x > x2) {\r\n                    t0 = t2;\r\n                } else {\r\n                    t1 = t2;\r\n                }\r\n                t2 = (t1 - t0) / 2 + t0;\r\n            }\r\n            return t2;\r\n        }\r\n        return solve(t, 1 / (200 * duration));\r\n    }\r\n    elproto.onAnimation = function (f) {\r\n        f ? eve.on(\"raphael.anim.frame.\" + this.id, f) : eve.unbind(\"raphael.anim.frame.\" + this.id);\r\n        return this;\r\n    };\r\n    function Animation(anim, ms) {\r\n        var percents = [],\r\n            newAnim = {};\r\n        this.ms = ms;\r\n        this.times = 1;\r\n        if (anim) {\r\n            for (var attr in anim) if (anim[has](attr)) {\r\n                newAnim[toFloat(attr)] = anim[attr];\r\n                percents.push(toFloat(attr));\r\n            }\r\n            percents.sort(sortByNumber);\r\n        }\r\n        this.anim = newAnim;\r\n        this.top = percents[percents.length - 1];\r\n        this.percents = percents;\r\n    }\r\n    /*\\\r\n     * Animation.delay\r\n     [ method ]\r\n     **\r\n     * Creates a copy of existing animation object with given delay.\r\n     **\r\n     > Parameters\r\n     **\r\n     - delay (number) number of ms to pass between animation start and actual animation\r\n     **\r\n     = (object) new altered Animation object\r\n     | var anim = Raphael.animation({cx: 10, cy: 20}, 2e3);\r\n     | circle1.animate(anim); // run the given animation immediately\r\n     | circle2.animate(anim.delay(500)); // run the given animation after 500 ms\r\n    \\*/\r\n    Animation.prototype.delay = function (delay) {\r\n        var a = new Animation(this.anim, this.ms);\r\n        a.times = this.times;\r\n        a.del = +delay || 0;\r\n        return a;\r\n    };\r\n    /*\\\r\n     * Animation.repeat\r\n     [ method ]\r\n     **\r\n     * Creates a copy of existing animation object with given repetition.\r\n     **\r\n     > Parameters\r\n     **\r\n     - repeat (number) number iterations of animation. For infinite animation pass `Infinity`\r\n     **\r\n     = (object) new altered Animation object\r\n    \\*/\r\n    Animation.prototype.repeat = function (times) {\r\n        var a = new Animation(this.anim, this.ms);\r\n        a.del = this.del;\r\n        a.times = math.floor(mmax(times, 0)) || 1;\r\n        return a;\r\n    };\r\n    function runAnimation(anim, element, percent, status, totalOrigin, times) {\r\n        percent = toFloat(percent);\r\n        var params,\r\n            isInAnim,\r\n            isInAnimSet,\r\n            percents = [],\r\n            next,\r\n            prev,\r\n            timestamp,\r\n            ms = anim.ms,\r\n            from = {},\r\n            to = {},\r\n            diff = {};\r\n        if (status) {\r\n            for (i = 0, ii = animationElements.length; i < ii; i++) {\r\n                var e = animationElements[i];\r\n                if (e.el.id == element.id && e.anim == anim) {\r\n                    if (e.percent != percent) {\r\n                        animationElements.splice(i, 1);\r\n                        isInAnimSet = 1;\r\n                    } else {\r\n                        isInAnim = e;\r\n                    }\r\n                    element.attr(e.totalOrigin);\r\n                    break;\r\n                }\r\n            }\r\n        } else {\r\n            status = +to; // NaN\r\n        }\r\n        for (var i = 0, ii = anim.percents.length; i < ii; i++) {\r\n            if (anim.percents[i] == percent || anim.percents[i] > status * anim.top) {\r\n                percent = anim.percents[i];\r\n                prev = anim.percents[i - 1] || 0;\r\n                ms = ms / anim.top * (percent - prev);\r\n                next = anim.percents[i + 1];\r\n                params = anim.anim[percent];\r\n                break;\r\n            } else if (status) {\r\n                element.attr(anim.anim[anim.percents[i]]);\r\n            }\r\n        }\r\n        if (!params) {\r\n            return;\r\n        }\r\n        if (!isInAnim) {\r\n            for (var attr in params) if (params[has](attr)) {\r\n                if (availableAnimAttrs[has](attr) || element.paper.customAttributes[has](attr)) {\r\n                    from[attr] = element.attr(attr);\r\n                    (from[attr] == null) && (from[attr] = availableAttrs[attr]);\r\n                    to[attr] = params[attr];\r\n                    switch (availableAnimAttrs[attr]) {\r\n                        case nu:\r\n                            diff[attr] = (to[attr] - from[attr]) / ms;\r\n                            break;\r\n                        case \"colour\":\r\n                            from[attr] = R.getRGB(from[attr]);\r\n                            var toColour = R.getRGB(to[attr]);\r\n                            diff[attr] = {\r\n                                r: (toColour.r - from[attr].r) / ms,\r\n                                g: (toColour.g - from[attr].g) / ms,\r\n                                b: (toColour.b - from[attr].b) / ms\r\n                            };\r\n                            break;\r\n                        case \"path\":\r\n                            var pathes = path2curve(from[attr], to[attr]),\r\n                                toPath = pathes[1];\r\n                            from[attr] = pathes[0];\r\n                            diff[attr] = [];\r\n                            for (i = 0, ii = from[attr].length; i < ii; i++) {\r\n                                diff[attr][i] = [0];\r\n                                for (var j = 1, jj = from[attr][i].length; j < jj; j++) {\r\n                                    diff[attr][i][j] = (toPath[i][j] - from[attr][i][j]) / ms;\r\n                                }\r\n                            }\r\n                            break;\r\n                        case \"transform\":\r\n                            var _ = element._,\r\n                                eq = equaliseTransform(_[attr], to[attr]);\r\n                            if (eq) {\r\n                                from[attr] = eq.from;\r\n                                to[attr] = eq.to;\r\n                                diff[attr] = [];\r\n                                diff[attr].real = true;\r\n                                for (i = 0, ii = from[attr].length; i < ii; i++) {\r\n                                    diff[attr][i] = [from[attr][i][0]];\r\n                                    for (j = 1, jj = from[attr][i].length; j < jj; j++) {\r\n                                        diff[attr][i][j] = (to[attr][i][j] - from[attr][i][j]) / ms;\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                var m = (element.matrix || new Matrix),\r\n                                    to2 = {\r\n                                        _: {transform: _.transform},\r\n                                        getBBox: function () {\r\n                                            return element.getBBox(1);\r\n                                        }\r\n                                    };\r\n                                from[attr] = [\r\n                                    m.a,\r\n                                    m.b,\r\n                                    m.c,\r\n                                    m.d,\r\n                                    m.e,\r\n                                    m.f\r\n                                ];\r\n                                extractTransform(to2, to[attr]);\r\n                                to[attr] = to2._.transform;\r\n                                diff[attr] = [\r\n                                    (to2.matrix.a - m.a) / ms,\r\n                                    (to2.matrix.b - m.b) / ms,\r\n                                    (to2.matrix.c - m.c) / ms,\r\n                                    (to2.matrix.d - m.d) / ms,\r\n                                    (to2.matrix.e - m.e) / ms,\r\n                                    (to2.matrix.f - m.f) / ms\r\n                                ];\r\n                                // from[attr] = [_.sx, _.sy, _.deg, _.dx, _.dy];\r\n                                // var to2 = {_:{}, getBBox: function () { return element.getBBox(); }};\r\n                                // extractTransform(to2, to[attr]);\r\n                                // diff[attr] = [\r\n                                //     (to2._.sx - _.sx) / ms,\r\n                                //     (to2._.sy - _.sy) / ms,\r\n                                //     (to2._.deg - _.deg) / ms,\r\n                                //     (to2._.dx - _.dx) / ms,\r\n                                //     (to2._.dy - _.dy) / ms\r\n                                // ];\r\n                            }\r\n                            break;\r\n                        case \"csv\":\r\n                            var values = Str(params[attr])[split](separator),\r\n                                from2 = Str(from[attr])[split](separator);\r\n                            if (attr == \"clip-rect\") {\r\n                                from[attr] = from2;\r\n                                diff[attr] = [];\r\n                                i = from2.length;\r\n                                while (i--) {\r\n                                    diff[attr][i] = (values[i] - from[attr][i]) / ms;\r\n                                }\r\n                            }\r\n                            to[attr] = values;\r\n                            break;\r\n                        default:\r\n                            values = [][concat](params[attr]);\r\n                            from2 = [][concat](from[attr]);\r\n                            diff[attr] = [];\r\n                            i = element.paper.customAttributes[attr].length;\r\n                            while (i--) {\r\n                                diff[attr][i] = ((values[i] || 0) - (from2[i] || 0)) / ms;\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            var easing = params.easing,\r\n                easyeasy = R.easing_formulas[easing];\r\n            if (!easyeasy) {\r\n                easyeasy = Str(easing).match(bezierrg);\r\n                if (easyeasy && easyeasy.length == 5) {\r\n                    var curve = easyeasy;\r\n                    easyeasy = function (t) {\r\n                        return CubicBezierAtTime(t, +curve[1], +curve[2], +curve[3], +curve[4], ms);\r\n                    };\r\n                } else {\r\n                    easyeasy = pipe;\r\n                }\r\n            }\r\n            timestamp = params.start || anim.start || +new Date;\r\n            e = {\r\n                anim: anim,\r\n                percent: percent,\r\n                timestamp: timestamp,\r\n                start: timestamp + (anim.del || 0),\r\n                status: 0,\r\n                initstatus: status || 0,\r\n                stop: false,\r\n                ms: ms,\r\n                easing: easyeasy,\r\n                from: from,\r\n                diff: diff,\r\n                to: to,\r\n                el: element,\r\n                callback: params.callback,\r\n                prev: prev,\r\n                next: next,\r\n                repeat: times || anim.times,\r\n                origin: element.attr(),\r\n                totalOrigin: totalOrigin\r\n            };\r\n            animationElements.push(e);\r\n            if (status && !isInAnim && !isInAnimSet) {\r\n                e.stop = true;\r\n                e.start = new Date - ms * status;\r\n                if (animationElements.length == 1) {\r\n                    return animation();\r\n                }\r\n            }\r\n            if (isInAnimSet) {\r\n                e.start = new Date - e.ms * status;\r\n            }\r\n            animationElements.length == 1 && requestAnimFrame(animation);\r\n        } else {\r\n            isInAnim.initstatus = status;\r\n            isInAnim.start = new Date - isInAnim.ms * status;\r\n        }\r\n        eve(\"raphael.anim.start.\" + element.id, element, anim);\r\n    }\r\n    /*\\\r\n     * Raphael.animation\r\n     [ method ]\r\n     **\r\n     * Creates an animation object that can be passed to the @Element.animate or @Element.animateWith methods.\r\n     * See also @Animation.delay and @Animation.repeat methods.\r\n     **\r\n     > Parameters\r\n     **\r\n     - params (object) final attributes for the element, see also @Element.attr\r\n     - ms (number) number of milliseconds for animation to run\r\n     - easing (string) #optional easing type. Accept one of @Raphael.easing_formulas or CSS format: `cubic&#x2010;bezier(XX,&#160;XX,&#160;XX,&#160;XX)`\r\n     - callback (function) #optional callback function. Will be called at the end of animation.\r\n     **\r\n     = (object) @Animation\r\n    \\*/\r\n    R.animation = function (params, ms, easing, callback) {\r\n        if (params instanceof Animation) {\r\n            return params;\r\n        }\r\n        if (R.is(easing, \"function\") || !easing) {\r\n            callback = callback || easing || null;\r\n            easing = null;\r\n        }\r\n        params = Object(params);\r\n        ms = +ms || 0;\r\n        var p = {},\r\n            json,\r\n            attr;\r\n        for (attr in params) if (params[has](attr) && toFloat(attr) != attr && toFloat(attr) + \"%\" != attr) {\r\n            json = true;\r\n            p[attr] = params[attr];\r\n        }\r\n        if (!json) {\r\n            // if percent-like syntax is used and end-of-all animation callback used\r\n            if(callback){\r\n                // find the last one\r\n                var lastKey = 0;\r\n                for(var i in params){\r\n                    var percent = toInt(i);\r\n                    if(params[has](i) && percent > lastKey){\r\n                        lastKey = percent;\r\n                    }\r\n                }\r\n                lastKey += '%';\r\n                // if already defined callback in the last keyframe, skip\r\n                !params[lastKey].callback && (params[lastKey].callback = callback);\r\n            }\r\n          return new Animation(params, ms);\r\n        } else {\r\n            easing && (p.easing = easing);\r\n            callback && (p.callback = callback);\r\n            return new Animation({100: p}, ms);\r\n        }\r\n    };\r\n    /*\\\r\n     * Element.animate\r\n     [ method ]\r\n     **\r\n     * Creates and starts animation for given element.\r\n     **\r\n     > Parameters\r\n     **\r\n     - params (object) final attributes for the element, see also @Element.attr\r\n     - ms (number) number of milliseconds for animation to run\r\n     - easing (string) #optional easing type. Accept one of @Raphael.easing_formulas or CSS format: `cubic&#x2010;bezier(XX,&#160;XX,&#160;XX,&#160;XX)`\r\n     - callback (function) #optional callback function. Will be called at the end of animation.\r\n     * or\r\n     - animation (object) animation object, see @Raphael.animation\r\n     **\r\n     = (object) original element\r\n    \\*/\r\n    elproto.animate = function (params, ms, easing, callback) {\r\n        var element = this;\r\n        if (element.removed) {\r\n            callback && callback.call(element);\r\n            return element;\r\n        }\r\n        var anim = params instanceof Animation ? params : R.animation(params, ms, easing, callback);\r\n        runAnimation(anim, element, anim.percents[0], null, element.attr());\r\n        return element;\r\n    };\r\n    /*\\\r\n     * Element.setTime\r\n     [ method ]\r\n     **\r\n     * Sets the status of animation of the element in milliseconds. Similar to @Element.status method.\r\n     **\r\n     > Parameters\r\n     **\r\n     - anim (object) animation object\r\n     - value (number) number of milliseconds from the beginning of the animation\r\n     **\r\n     = (object) original element if `value` is specified\r\n     * Note, that during animation following events are triggered:\r\n     *\r\n     * On each animation frame event `anim.frame.<id>`, on start `anim.start.<id>` and on end `anim.finish.<id>`.\r\n    \\*/\r\n    elproto.setTime = function (anim, value) {\r\n        if (anim && value != null) {\r\n            this.status(anim, mmin(value, anim.ms) / anim.ms);\r\n        }\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.status\r\n     [ method ]\r\n     **\r\n     * Gets or sets the status of animation of the element.\r\n     **\r\n     > Parameters\r\n     **\r\n     - anim (object) #optional animation object\r\n     - value (number) #optional 0 – 1. If specified, method works like a setter and sets the status of a given animation to the value. This will cause animation to jump to the given position.\r\n     **\r\n     = (number) status\r\n     * or\r\n     = (array) status if `anim` is not specified. Array of objects in format:\r\n     o {\r\n     o     anim: (object) animation object\r\n     o     status: (number) status\r\n     o }\r\n     * or\r\n     = (object) original element if `value` is specified\r\n    \\*/\r\n    elproto.status = function (anim, value) {\r\n        var out = [],\r\n            i = 0,\r\n            len,\r\n            e;\r\n        if (value != null) {\r\n            runAnimation(anim, this, -1, mmin(value, 1));\r\n            return this;\r\n        } else {\r\n            len = animationElements.length;\r\n            for (; i < len; i++) {\r\n                e = animationElements[i];\r\n                if (e.el.id == this.id && (!anim || e.anim == anim)) {\r\n                    if (anim) {\r\n                        return e.status;\r\n                    }\r\n                    out.push({\r\n                        anim: e.anim,\r\n                        status: e.status\r\n                    });\r\n                }\r\n            }\r\n            if (anim) {\r\n                return 0;\r\n            }\r\n            return out;\r\n        }\r\n    };\r\n    /*\\\r\n     * Element.pause\r\n     [ method ]\r\n     **\r\n     * Stops animation of the element with ability to resume it later on.\r\n     **\r\n     > Parameters\r\n     **\r\n     - anim (object) #optional animation object\r\n     **\r\n     = (object) original element\r\n    \\*/\r\n    elproto.pause = function (anim) {\r\n        for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.id == this.id && (!anim || animationElements[i].anim == anim)) {\r\n            if (eve(\"raphael.anim.pause.\" + this.id, this, animationElements[i].anim) !== false) {\r\n                animationElements[i].paused = true;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.resume\r\n     [ method ]\r\n     **\r\n     * Resumes animation if it was paused with @Element.pause method.\r\n     **\r\n     > Parameters\r\n     **\r\n     - anim (object) #optional animation object\r\n     **\r\n     = (object) original element\r\n    \\*/\r\n    elproto.resume = function (anim) {\r\n        for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.id == this.id && (!anim || animationElements[i].anim == anim)) {\r\n            var e = animationElements[i];\r\n            if (eve(\"raphael.anim.resume.\" + this.id, this, e.anim) !== false) {\r\n                delete e.paused;\r\n                this.status(e.anim, e.status);\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.stop\r\n     [ method ]\r\n     **\r\n     * Stops animation of the element.\r\n     **\r\n     > Parameters\r\n     **\r\n     - anim (object) #optional animation object\r\n     **\r\n     = (object) original element\r\n    \\*/\r\n    elproto.stop = function (anim) {\r\n        for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.id == this.id && (!anim || animationElements[i].anim == anim)) {\r\n            if (eve(\"raphael.anim.stop.\" + this.id, this, animationElements[i].anim) !== false) {\r\n                animationElements.splice(i--, 1);\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    function stopAnimation(paper) {\r\n        for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.paper == paper) {\r\n            animationElements.splice(i--, 1);\r\n        }\r\n    }\r\n    eve.on(\"raphael.remove\", stopAnimation);\r\n    eve.on(\"raphael.clear\", stopAnimation);\r\n    elproto.toString = function () {\r\n        return \"Rapha\\xebl\\u2019s object\";\r\n    };\r\n\r\n    // Set\r\n    var Set = function (items) {\r\n        this.items = [];\r\n        this.length = 0;\r\n        this.type = \"set\";\r\n        if (items) {\r\n            for (var i = 0, ii = items.length; i < ii; i++) {\r\n                if (items[i] && (items[i].constructor == elproto.constructor || items[i].constructor == Set)) {\r\n                    this[this.items.length] = this.items[this.items.length] = items[i];\r\n                    this.length++;\r\n                }\r\n            }\r\n        }\r\n    },\r\n    setproto = Set.prototype;\r\n    /*\\\r\n     * Set.push\r\n     [ method ]\r\n     **\r\n     * Adds each argument to the current set.\r\n     = (object) original element\r\n    \\*/\r\n    setproto.push = function () {\r\n        var item,\r\n            len;\r\n        for (var i = 0, ii = arguments.length; i < ii; i++) {\r\n            item = arguments[i];\r\n            if (item && (item.constructor == elproto.constructor || item.constructor == Set)) {\r\n                len = this.items.length;\r\n                this[len] = this.items[len] = item;\r\n                this.length++;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Set.pop\r\n     [ method ]\r\n     **\r\n     * Removes last element and returns it.\r\n     = (object) element\r\n    \\*/\r\n    setproto.pop = function () {\r\n        this.length && delete this[this.length--];\r\n        return this.items.pop();\r\n    };\r\n    /*\\\r\n     * Set.forEach\r\n     [ method ]\r\n     **\r\n     * Executes given function for each element in the set.\r\n     *\r\n     * If function returns `false` it will stop loop running.\r\n     **\r\n     > Parameters\r\n     **\r\n     - callback (function) function to run\r\n     - thisArg (object) context object for the callback\r\n     = (object) Set object\r\n    \\*/\r\n    setproto.forEach = function (callback, thisArg) {\r\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\r\n            if (callback.call(thisArg, this.items[i], i) === false) {\r\n                return this;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    for (var method in elproto) if (elproto[has](method)) {\r\n        setproto[method] = (function (methodname) {\r\n            return function () {\r\n                var arg = arguments;\r\n                return this.forEach(function (el) {\r\n                    el[methodname][apply](el, arg);\r\n                });\r\n            };\r\n        })(method);\r\n    }\r\n    setproto.attr = function (name, value) {\r\n        if (name && R.is(name, array) && R.is(name[0], \"object\")) {\r\n            for (var j = 0, jj = name.length; j < jj; j++) {\r\n                this.items[j].attr(name[j]);\r\n            }\r\n        } else {\r\n            for (var i = 0, ii = this.items.length; i < ii; i++) {\r\n                this.items[i].attr(name, value);\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Set.clear\r\n     [ method ]\r\n     **\r\n     * Removes all elements from the set\r\n    \\*/\r\n    setproto.clear = function () {\r\n        while (this.length) {\r\n            this.pop();\r\n        }\r\n    };\r\n    /*\\\r\n     * Set.splice\r\n     [ method ]\r\n     **\r\n     * Removes given element from the set\r\n     **\r\n     > Parameters\r\n     **\r\n     - index (number) position of the deletion\r\n     - count (number) number of element to remove\r\n     - insertion… (object) #optional elements to insert\r\n     = (object) set elements that were deleted\r\n    \\*/\r\n    setproto.splice = function (index, count, insertion) {\r\n        index = index < 0 ? mmax(this.length + index, 0) : index;\r\n        count = mmax(0, mmin(this.length - index, count));\r\n        var tail = [],\r\n            todel = [],\r\n            args = [],\r\n            i;\r\n        for (i = 2; i < arguments.length; i++) {\r\n            args.push(arguments[i]);\r\n        }\r\n        for (i = 0; i < count; i++) {\r\n            todel.push(this[index + i]);\r\n        }\r\n        for (; i < this.length - index; i++) {\r\n            tail.push(this[index + i]);\r\n        }\r\n        var arglen = args.length;\r\n        for (i = 0; i < arglen + tail.length; i++) {\r\n            this.items[index + i] = this[index + i] = i < arglen ? args[i] : tail[i - arglen];\r\n        }\r\n        i = this.items.length = this.length -= count - arglen;\r\n        while (this[i]) {\r\n            delete this[i++];\r\n        }\r\n        return new Set(todel);\r\n    };\r\n    /*\\\r\n     * Set.exclude\r\n     [ method ]\r\n     **\r\n     * Removes given element from the set\r\n     **\r\n     > Parameters\r\n     **\r\n     - element (object) element to remove\r\n     = (boolean) `true` if object was found & removed from the set\r\n    \\*/\r\n    setproto.exclude = function (el) {\r\n        for (var i = 0, ii = this.length; i < ii; i++) if (this[i] == el) {\r\n            this.splice(i, 1);\r\n            return true;\r\n        }\r\n    };\r\n    setproto.animate = function (params, ms, easing, callback) {\r\n        (R.is(easing, \"function\") || !easing) && (callback = easing || null);\r\n        var len = this.items.length,\r\n            i = len,\r\n            item,\r\n            set = this,\r\n            collector;\r\n        if (!len) {\r\n            return this;\r\n        }\r\n        callback && (collector = function () {\r\n            !--len && callback.call(set);\r\n        });\r\n        easing = R.is(easing, string) ? easing : collector;\r\n        var anim = R.animation(params, ms, easing, collector);\r\n        item = this.items[--i].animate(anim);\r\n        while (i--) {\r\n            this.items[i] && !this.items[i].removed && this.items[i].animateWith(item, anim, anim);\r\n            (this.items[i] && !this.items[i].removed) || len--;\r\n        }\r\n        return this;\r\n    };\r\n    setproto.insertAfter = function (el) {\r\n        var i = this.items.length;\r\n        while (i--) {\r\n            this.items[i].insertAfter(el);\r\n        }\r\n        return this;\r\n    };\r\n    setproto.getBBox = function () {\r\n        var x = [],\r\n            y = [],\r\n            x2 = [],\r\n            y2 = [];\r\n        for (var i = this.items.length; i--;) if (!this.items[i].removed) {\r\n            var box = this.items[i].getBBox();\r\n            x.push(box.x);\r\n            y.push(box.y);\r\n            x2.push(box.x + box.width);\r\n            y2.push(box.y + box.height);\r\n        }\r\n        x = mmin[apply](0, x);\r\n        y = mmin[apply](0, y);\r\n        x2 = mmax[apply](0, x2);\r\n        y2 = mmax[apply](0, y2);\r\n        return {\r\n            x: x,\r\n            y: y,\r\n            x2: x2,\r\n            y2: y2,\r\n            width: x2 - x,\r\n            height: y2 - y\r\n        };\r\n    };\r\n    setproto.clone = function (s) {\r\n        s = this.paper.set();\r\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\r\n            s.push(this.items[i].clone());\r\n        }\r\n        return s;\r\n    };\r\n    setproto.toString = function () {\r\n        return \"Rapha\\xebl\\u2018s set\";\r\n    };\r\n\r\n    setproto.glow = function(glowConfig) {\r\n        var ret = this.paper.set();\r\n        this.forEach(function(shape, index){\r\n            var g = shape.glow(glowConfig);\r\n            if(g != null){\r\n                g.forEach(function(shape2, index2){\r\n                    ret.push(shape2);\r\n                });\r\n            }\r\n        });\r\n        return ret;\r\n    };\r\n\r\n\r\n    /*\\\r\n     * Set.isPointInside\r\n     [ method ]\r\n     **\r\n     * Determine if given point is inside this set’s elements\r\n     **\r\n     > Parameters\r\n     **\r\n     - x (number) x coordinate of the point\r\n     - y (number) y coordinate of the point\r\n     = (boolean) `true` if point is inside any of the set's elements\r\n     \\*/\r\n    setproto.isPointInside = function (x, y) {\r\n        var isPointInside = false;\r\n        this.forEach(function (el) {\r\n            if (el.isPointInside(x, y)) {\r\n                isPointInside = true;\r\n                return false; // stop loop\r\n            }\r\n        });\r\n        return isPointInside;\r\n    };\r\n\r\n    /*\\\r\n     * Raphael.registerFont\r\n     [ method ]\r\n     **\r\n     * Adds given font to the registered set of fonts for Raphaël. Should be used as an internal call from within Cufón’s font file.\r\n     * Returns original parameter, so it could be used with chaining.\r\n     # <a href=\"http://wiki.github.com/sorccu/cufon/about\">More about Cufón and how to convert your font form TTF, OTF, etc to JavaScript file.</a>\r\n     **\r\n     > Parameters\r\n     **\r\n     - font (object) the font to register\r\n     = (object) the font you passed in\r\n     > Usage\r\n     | Cufon.registerFont(Raphael.registerFont({…}));\r\n    \\*/\r\n    R.registerFont = function (font) {\r\n        if (!font.face) {\r\n            return font;\r\n        }\r\n        this.fonts = this.fonts || {};\r\n        var fontcopy = {\r\n                w: font.w,\r\n                face: {},\r\n                glyphs: {}\r\n            },\r\n            family = font.face[\"font-family\"];\r\n        for (var prop in font.face) if (font.face[has](prop)) {\r\n            fontcopy.face[prop] = font.face[prop];\r\n        }\r\n        if (this.fonts[family]) {\r\n            this.fonts[family].push(fontcopy);\r\n        } else {\r\n            this.fonts[family] = [fontcopy];\r\n        }\r\n        if (!font.svg) {\r\n            fontcopy.face[\"units-per-em\"] = toInt(font.face[\"units-per-em\"], 10);\r\n            for (var glyph in font.glyphs) if (font.glyphs[has](glyph)) {\r\n                var path = font.glyphs[glyph];\r\n                fontcopy.glyphs[glyph] = {\r\n                    w: path.w,\r\n                    k: {},\r\n                    d: path.d && \"M\" + path.d.replace(/[mlcxtrv]/g, function (command) {\r\n                            return {l: \"L\", c: \"C\", x: \"z\", t: \"m\", r: \"l\", v: \"c\"}[command] || \"M\";\r\n                        }) + \"z\"\r\n                };\r\n                if (path.k) {\r\n                    for (var k in path.k) if (path[has](k)) {\r\n                        fontcopy.glyphs[glyph].k[k] = path.k[k];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return font;\r\n    };\r\n    /*\\\r\n     * Paper.getFont\r\n     [ method ]\r\n     **\r\n     * Finds font object in the registered fonts by given parameters. You could specify only one word from the font name, like “Myriad” for “Myriad Pro”.\r\n     **\r\n     > Parameters\r\n     **\r\n     - family (string) font family name or any word from it\r\n     - weight (string) #optional font weight\r\n     - style (string) #optional font style\r\n     - stretch (string) #optional font stretch\r\n     = (object) the font object\r\n     > Usage\r\n     | paper.print(100, 100, \"Test string\", paper.getFont(\"Times\", 800), 30);\r\n    \\*/\r\n    paperproto.getFont = function (family, weight, style, stretch) {\r\n        stretch = stretch || \"normal\";\r\n        style = style || \"normal\";\r\n        weight = +weight || {normal: 400, bold: 700, lighter: 300, bolder: 800}[weight] || 400;\r\n        if (!R.fonts) {\r\n            return;\r\n        }\r\n        var font = R.fonts[family];\r\n        if (!font) {\r\n            var name = new RegExp(\"(^|\\\\s)\" + family.replace(/[^\\w\\d\\s+!~.:_-]/g, E) + \"(\\\\s|$)\", \"i\");\r\n            for (var fontName in R.fonts) if (R.fonts[has](fontName)) {\r\n                if (name.test(fontName)) {\r\n                    font = R.fonts[fontName];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        var thefont;\r\n        if (font) {\r\n            for (var i = 0, ii = font.length; i < ii; i++) {\r\n                thefont = font[i];\r\n                if (thefont.face[\"font-weight\"] == weight && (thefont.face[\"font-style\"] == style || !thefont.face[\"font-style\"]) && thefont.face[\"font-stretch\"] == stretch) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return thefont;\r\n    };\r\n    /*\\\r\n     * Paper.print\r\n     [ method ]\r\n     **\r\n     * Creates path that represent given text written using given font at given position with given size.\r\n     * Result of the method is path element that contains whole text as a separate path.\r\n     **\r\n     > Parameters\r\n     **\r\n     - x (number) x position of the text\r\n     - y (number) y position of the text\r\n     - string (string) text to print\r\n     - font (object) font object, see @Paper.getFont\r\n     - size (number) #optional size of the font, default is `16`\r\n     - origin (string) #optional could be `\"baseline\"` or `\"middle\"`, default is `\"middle\"`\r\n     - letter_spacing (number) #optional number in range `-1..1`, default is `0`\r\n     - line_spacing (number) #optional number in range `1..3`, default is `1`\r\n     = (object) resulting path element, which consist of all letters\r\n     > Usage\r\n     | var txt = r.print(10, 50, \"print\", r.getFont(\"Museo\"), 30).attr({fill: \"#fff\"});\r\n    \\*/\r\n    paperproto.print = function (x, y, string, font, size, origin, letter_spacing, line_spacing) {\r\n        origin = origin || \"middle\"; // baseline|middle\r\n        letter_spacing = mmax(mmin(letter_spacing || 0, 1), -1);\r\n        line_spacing = mmax(mmin(line_spacing || 1, 3), 1);\r\n        var letters = Str(string)[split](E),\r\n            shift = 0,\r\n            notfirst = 0,\r\n            path = E,\r\n            scale;\r\n        R.is(font, \"string\") && (font = this.getFont(font));\r\n        if (font) {\r\n            scale = (size || 16) / font.face[\"units-per-em\"];\r\n            var bb = font.face.bbox[split](separator),\r\n                top = +bb[0],\r\n                lineHeight = bb[3] - bb[1],\r\n                shifty = 0,\r\n                height = +bb[1] + (origin == \"baseline\" ? lineHeight + (+font.face.descent) : lineHeight / 2);\r\n            for (var i = 0, ii = letters.length; i < ii; i++) {\r\n                if (letters[i] == \"\\n\") {\r\n                    shift = 0;\r\n                    curr = 0;\r\n                    notfirst = 0;\r\n                    shifty += lineHeight * line_spacing;\r\n                } else {\r\n                    var prev = notfirst && font.glyphs[letters[i - 1]] || {},\r\n                        curr = font.glyphs[letters[i]];\r\n                    shift += notfirst ? (prev.w || font.w) + (prev.k && prev.k[letters[i]] || 0) + (font.w * letter_spacing) : 0;\r\n                    notfirst = 1;\r\n                }\r\n                if (curr && curr.d) {\r\n                    path += R.transformPath(curr.d, [\"t\", shift * scale, shifty * scale, \"s\", scale, scale, top, height, \"t\", (x - top) / scale, (y - height) / scale]);\r\n                }\r\n            }\r\n        }\r\n        return this.path(path).attr({\r\n            fill: \"#000\",\r\n            stroke: \"none\"\r\n        });\r\n    };\r\n\r\n    /*\\\r\n     * Paper.add\r\n     [ method ]\r\n     **\r\n     * Imports elements in JSON array in format `{type: type, <attributes>}`\r\n     **\r\n     > Parameters\r\n     **\r\n     - json (array)\r\n     = (object) resulting set of imported elements\r\n     > Usage\r\n     | paper.add([\r\n     |     {\r\n     |         type: \"circle\",\r\n     |         cx: 10,\r\n     |         cy: 10,\r\n     |         r: 5\r\n     |     },\r\n     |     {\r\n     |         type: \"rect\",\r\n     |         x: 10,\r\n     |         y: 10,\r\n     |         width: 10,\r\n     |         height: 10,\r\n     |         fill: \"#fc0\"\r\n     |     }\r\n     | ]);\r\n    \\*/\r\n    paperproto.add = function (json) {\r\n        if (R.is(json, \"array\")) {\r\n            var res = this.set(),\r\n                i = 0,\r\n                ii = json.length,\r\n                j;\r\n            for (; i < ii; i++) {\r\n                j = json[i] || {};\r\n                elements[has](j.type) && res.push(this[j.type]().attr(j));\r\n            }\r\n        }\r\n        return res;\r\n    };\r\n\r\n    /*\\\r\n     * Raphael.format\r\n     [ method ]\r\n     **\r\n     * Simple format function. Replaces construction of type “`{<number>}`” to the corresponding argument.\r\n     **\r\n     > Parameters\r\n     **\r\n     - token (string) string to format\r\n     - … (string) rest of arguments will be treated as parameters for replacement\r\n     = (string) formated string\r\n     > Usage\r\n     | var x = 10,\r\n     |     y = 20,\r\n     |     width = 40,\r\n     |     height = 50;\r\n     | // this will draw a rectangular shape equivalent to \"M10,20h40v50h-40z\"\r\n     | paper.path(Raphael.format(\"M{0},{1}h{2}v{3}h{4}z\", x, y, width, height, -width));\r\n    \\*/\r\n    R.format = function (token, params) {\r\n        var args = R.is(params, array) ? [0][concat](params) : arguments;\r\n        token && R.is(token, string) && args.length - 1 && (token = token.replace(formatrg, function (str, i) {\r\n            return args[++i] == null ? E : args[i];\r\n        }));\r\n        return token || E;\r\n    };\r\n    /*\\\r\n     * Raphael.fullfill\r\n     [ method ]\r\n     **\r\n     * A little bit more advanced format function than @Raphael.format. Replaces construction of type “`{<name>}`” to the corresponding argument.\r\n     **\r\n     > Parameters\r\n     **\r\n     - token (string) string to format\r\n     - json (object) object which properties will be used as a replacement\r\n     = (string) formated string\r\n     > Usage\r\n     | // this will draw a rectangular shape equivalent to \"M10,20h40v50h-40z\"\r\n     | paper.path(Raphael.fullfill(\"M{x},{y}h{dim.width}v{dim.height}h{dim['negative width']}z\", {\r\n     |     x: 10,\r\n     |     y: 20,\r\n     |     dim: {\r\n     |         width: 40,\r\n     |         height: 50,\r\n     |         \"negative width\": -40\r\n     |     }\r\n     | }));\r\n    \\*/\r\n    R.fullfill = (function () {\r\n        var tokenRegex = /\\{([^\\}]+)\\}/g,\r\n            objNotationRegex = /(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g, // matches .xxxxx or [\"xxxxx\"] to run over object properties\r\n            replacer = function (all, key, obj) {\r\n                var res = obj;\r\n                key.replace(objNotationRegex, function (all, name, quote, quotedName, isFunc) {\r\n                    name = name || quotedName;\r\n                    if (res) {\r\n                        if (name in res) {\r\n                            res = res[name];\r\n                        }\r\n                        typeof res == \"function\" && isFunc && (res = res());\r\n                    }\r\n                });\r\n                res = (res == null || res == obj ? all : res) + \"\";\r\n                return res;\r\n            };\r\n        return function (str, obj) {\r\n            return String(str).replace(tokenRegex, function (all, key) {\r\n                return replacer(all, key, obj);\r\n            });\r\n        };\r\n    })();\r\n    /*\\\r\n     * Raphael.ninja\r\n     [ method ]\r\n     **\r\n     * If you want to leave no trace of Raphaël (Well, Raphaël creates only one global variable `Raphael`, but anyway.) You can use `ninja` method.\r\n     * Beware, that in this case plugins could stop working, because they are depending on global variable existance.\r\n     **\r\n     = (object) Raphael object\r\n     > Usage\r\n     | (function (local_raphael) {\r\n     |     var paper = local_raphael(10, 10, 320, 200);\r\n     |     …\r\n     | })(Raphael.ninja());\r\n    \\*/\r\n    R.ninja = function () {\r\n        oldRaphael.was ? (g.win.Raphael = oldRaphael.is) : delete Raphael;\r\n        return R;\r\n    };\r\n    /*\\\r\n     * Raphael.st\r\n     [ property (object) ]\r\n     **\r\n     * You can add your own method to elements and sets. It is wise to add a set method for each element method\r\n     * you added, so you will be able to call the same method on sets too.\r\n     **\r\n     * See also @Raphael.el.\r\n     > Usage\r\n     | Raphael.el.red = function () {\r\n     |     this.attr({fill: \"#f00\"});\r\n     | };\r\n     | Raphael.st.red = function () {\r\n     |     this.forEach(function (el) {\r\n     |         el.red();\r\n     |     });\r\n     | };\r\n     | // then use it\r\n     | paper.set(paper.circle(100, 100, 20), paper.circle(110, 100, 20)).red();\r\n    \\*/\r\n    R.st = setproto;\r\n\r\n    eve.on(\"raphael.DOMload\", function () {\r\n        loaded = true;\r\n    });\r\n\r\n    // Firefox <3.6 fix: http://webreflection.blogspot.com/2009/11/195-chars-to-help-lazy-loading.html\r\n    (function (doc, loaded, f) {\r\n        if (doc.readyState == null && doc.addEventListener){\r\n            doc.addEventListener(loaded, f = function () {\r\n                doc.removeEventListener(loaded, f, false);\r\n                doc.readyState = \"complete\";\r\n            }, false);\r\n            doc.readyState = \"loading\";\r\n        }\r\n        function isLoaded() {\r\n            (/in/).test(doc.readyState) ? setTimeout(isLoaded, 9) : R.eve(\"raphael.DOMload\");\r\n        }\r\n        isLoaded();\r\n    })(document, \"DOMContentLoaded\");\r\n\r\n// ┌─────────────────────────────────────────────────────────────────────┐ \\\\\r\n// │ Raphaël - JavaScript Vector Library                                 │ \\\\\r\n// ├─────────────────────────────────────────────────────────────────────┤ \\\\\r\n// │ SVG Module                                                          │ \\\\\r\n// ├─────────────────────────────────────────────────────────────────────┤ \\\\\r\n// │ Copyright (c) 2008-2011 Dmitry Baranovskiy (http://raphaeljs.com)   │ \\\\\r\n// │ Copyright (c) 2008-2011 Sencha Labs (http://sencha.com)             │ \\\\\r\n// │ Licensed under the MIT (http://raphaeljs.com/license.html) license. │ \\\\\r\n// └─────────────────────────────────────────────────────────────────────┘ \\\\\r\n\r\n(function(){\r\n    if (!R.svg) {\r\n        return;\r\n    }\r\n    var has = \"hasOwnProperty\",\r\n        Str = String,\r\n        toFloat = parseFloat,\r\n        toInt = parseInt,\r\n        math = Math,\r\n        mmax = math.max,\r\n        abs = math.abs,\r\n        pow = math.pow,\r\n        separator = /[, ]+/,\r\n        eve = R.eve,\r\n        E = \"\",\r\n        S = \" \";\r\n    var xlink = \"http://www.w3.org/1999/xlink\",\r\n        markers = {\r\n            block: \"M5,0 0,2.5 5,5z\",\r\n            classic: \"M5,0 0,2.5 5,5 3.5,3 3.5,2z\",\r\n            diamond: \"M2.5,0 5,2.5 2.5,5 0,2.5z\",\r\n            open: \"M6,1 1,3.5 6,6\",\r\n            oval: \"M2.5,0A2.5,2.5,0,0,1,2.5,5 2.5,2.5,0,0,1,2.5,0z\"\r\n        },\r\n        markerCounter = {};\r\n    R.toString = function () {\r\n        return  \"Your browser supports SVG.\\nYou are running Rapha\\xebl \" + this.version;\r\n    };\r\n    var $ = function (el, attr) {\r\n        if (attr) {\r\n            if (typeof el == \"string\") {\r\n                el = $(el);\r\n            }\r\n            for (var key in attr) if (attr[has](key)) {\r\n                if (key.substring(0, 6) == \"xlink:\") {\r\n                    el.setAttributeNS(xlink, key.substring(6), Str(attr[key]));\r\n                } else {\r\n                    el.setAttribute(key, Str(attr[key]));\r\n                }\r\n            }\r\n        } else {\r\n            el = R._g.doc.createElementNS(\"http://www.w3.org/2000/svg\", el);\r\n            el.style && (el.style.webkitTapHighlightColor = \"rgba(0,0,0,0)\");\r\n        }\r\n        return el;\r\n    },\r\n    addGradientFill = function (element, gradient) {\r\n        var type = \"linear\",\r\n            id = element.id + gradient,\r\n            fx = .5, fy = .5,\r\n            o = element.node,\r\n            SVG = element.paper,\r\n            s = o.style,\r\n            el = R._g.doc.getElementById(id);\r\n        if (!el) {\r\n            gradient = Str(gradient).replace(R._radial_gradient, function (all, _fx, _fy) {\r\n                type = \"radial\";\r\n                if (_fx && _fy) {\r\n                    fx = toFloat(_fx);\r\n                    fy = toFloat(_fy);\r\n                    var dir = ((fy > .5) * 2 - 1);\r\n                    pow(fx - .5, 2) + pow(fy - .5, 2) > .25 &&\r\n                        (fy = math.sqrt(.25 - pow(fx - .5, 2)) * dir + .5) &&\r\n                        fy != .5 &&\r\n                        (fy = fy.toFixed(5) - 1e-5 * dir);\r\n                }\r\n                return E;\r\n            });\r\n            gradient = gradient.split(/\\s*\\-\\s*/);\r\n            if (type == \"linear\") {\r\n                var angle = gradient.shift();\r\n                angle = -toFloat(angle);\r\n                if (isNaN(angle)) {\r\n                    return null;\r\n                }\r\n                var vector = [0, 0, math.cos(R.rad(angle)), math.sin(R.rad(angle))],\r\n                    max = 1 / (mmax(abs(vector[2]), abs(vector[3])) || 1);\r\n                vector[2] *= max;\r\n                vector[3] *= max;\r\n                if (vector[2] < 0) {\r\n                    vector[0] = -vector[2];\r\n                    vector[2] = 0;\r\n                }\r\n                if (vector[3] < 0) {\r\n                    vector[1] = -vector[3];\r\n                    vector[3] = 0;\r\n                }\r\n            }\r\n            var dots = R._parseDots(gradient);\r\n            if (!dots) {\r\n                return null;\r\n            }\r\n            id = id.replace(/[\\(\\)\\s,\\xb0#]/g, \"_\");\r\n\r\n            if (element.gradient && id != element.gradient.id) {\r\n                SVG.defs.removeChild(element.gradient);\r\n                delete element.gradient;\r\n            }\r\n\r\n            if (!element.gradient) {\r\n                el = $(type + \"Gradient\", {id: id});\r\n                element.gradient = el;\r\n                $(el, type == \"radial\" ? {\r\n                    fx: fx,\r\n                    fy: fy\r\n                } : {\r\n                    x1: vector[0],\r\n                    y1: vector[1],\r\n                    x2: vector[2],\r\n                    y2: vector[3],\r\n                    gradientTransform: element.matrix.invert()\r\n                });\r\n                SVG.defs.appendChild(el);\r\n                for (var i = 0, ii = dots.length; i < ii; i++) {\r\n                    el.appendChild($(\"stop\", {\r\n                        offset: dots[i].offset ? dots[i].offset : i ? \"100%\" : \"0%\",\r\n                        \"stop-color\": dots[i].color || \"#fff\"\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n        $(o, {\r\n            fill: \"url('\" + document.location + \"#\" + id + \"')\",\r\n            opacity: 1,\r\n            \"fill-opacity\": 1\r\n        });\r\n        s.fill = E;\r\n        s.opacity = 1;\r\n        s.fillOpacity = 1;\r\n        return 1;\r\n    },\r\n    updatePosition = function (o) {\r\n        var bbox = o.getBBox(1);\r\n        $(o.pattern, {patternTransform: o.matrix.invert() + \" translate(\" + bbox.x + \",\" + bbox.y + \")\"});\r\n    },\r\n    addArrow = function (o, value, isEnd) {\r\n        if (o.type == \"path\") {\r\n            var values = Str(value).toLowerCase().split(\"-\"),\r\n                p = o.paper,\r\n                se = isEnd ? \"end\" : \"start\",\r\n                node = o.node,\r\n                attrs = o.attrs,\r\n                stroke = attrs[\"stroke-width\"],\r\n                i = values.length,\r\n                type = \"classic\",\r\n                from,\r\n                to,\r\n                dx,\r\n                refX,\r\n                attr,\r\n                w = 3,\r\n                h = 3,\r\n                t = 5;\r\n            while (i--) {\r\n                switch (values[i]) {\r\n                    case \"block\":\r\n                    case \"classic\":\r\n                    case \"oval\":\r\n                    case \"diamond\":\r\n                    case \"open\":\r\n                    case \"none\":\r\n                        type = values[i];\r\n                        break;\r\n                    case \"wide\": h = 5; break;\r\n                    case \"narrow\": h = 2; break;\r\n                    case \"long\": w = 5; break;\r\n                    case \"short\": w = 2; break;\r\n                }\r\n            }\r\n            if (type == \"open\") {\r\n                w += 2;\r\n                h += 2;\r\n                t += 2;\r\n                dx = 1;\r\n                refX = isEnd ? 4 : 1;\r\n                attr = {\r\n                    fill: \"none\",\r\n                    stroke: attrs.stroke\r\n                };\r\n            } else {\r\n                refX = dx = w / 2;\r\n                attr = {\r\n                    fill: attrs.stroke,\r\n                    stroke: \"none\"\r\n                };\r\n            }\r\n            if (o._.arrows) {\r\n                if (isEnd) {\r\n                    o._.arrows.endPath && markerCounter[o._.arrows.endPath]--;\r\n                    o._.arrows.endMarker && markerCounter[o._.arrows.endMarker]--;\r\n                } else {\r\n                    o._.arrows.startPath && markerCounter[o._.arrows.startPath]--;\r\n                    o._.arrows.startMarker && markerCounter[o._.arrows.startMarker]--;\r\n                }\r\n            } else {\r\n                o._.arrows = {};\r\n            }\r\n            if (type != \"none\") {\r\n                var pathId = \"raphael-marker-\" + type,\r\n                    markerId = \"raphael-marker-\" + se + type + w + h + \"-obj\" + o.id;\r\n                if (!R._g.doc.getElementById(pathId)) {\r\n                    p.defs.appendChild($($(\"path\"), {\r\n                        \"stroke-linecap\": \"round\",\r\n                        d: markers[type],\r\n                        id: pathId\r\n                    }));\r\n                    markerCounter[pathId] = 1;\r\n                } else {\r\n                    markerCounter[pathId]++;\r\n                }\r\n                var marker = R._g.doc.getElementById(markerId),\r\n                    use;\r\n                if (!marker) {\r\n                    marker = $($(\"marker\"), {\r\n                        id: markerId,\r\n                        markerHeight: h,\r\n                        markerWidth: w,\r\n                        orient: \"auto\",\r\n                        refX: refX,\r\n                        refY: h / 2\r\n                    });\r\n                    use = $($(\"use\"), {\r\n                        \"xlink:href\": \"#\" + pathId,\r\n                        transform: (isEnd ? \"rotate(180 \" + w / 2 + \" \" + h / 2 + \") \" : E) + \"scale(\" + w / t + \",\" + h / t + \")\",\r\n                        \"stroke-width\": (1 / ((w / t + h / t) / 2)).toFixed(4)\r\n                    });\r\n                    marker.appendChild(use);\r\n                    p.defs.appendChild(marker);\r\n                    markerCounter[markerId] = 1;\r\n                } else {\r\n                    markerCounter[markerId]++;\r\n                    use = marker.getElementsByTagName(\"use\")[0];\r\n                }\r\n                $(use, attr);\r\n                var delta = dx * (type != \"diamond\" && type != \"oval\");\r\n                if (isEnd) {\r\n                    from = o._.arrows.startdx * stroke || 0;\r\n                    to = R.getTotalLength(attrs.path) - delta * stroke;\r\n                } else {\r\n                    from = delta * stroke;\r\n                    to = R.getTotalLength(attrs.path) - (o._.arrows.enddx * stroke || 0);\r\n                }\r\n                attr = {};\r\n                attr[\"marker-\" + se] = \"url(#\" + markerId + \")\";\r\n                if (to || from) {\r\n                    attr.d = R.getSubpath(attrs.path, from, to);\r\n                }\r\n                $(node, attr);\r\n                o._.arrows[se + \"Path\"] = pathId;\r\n                o._.arrows[se + \"Marker\"] = markerId;\r\n                o._.arrows[se + \"dx\"] = delta;\r\n                o._.arrows[se + \"Type\"] = type;\r\n                o._.arrows[se + \"String\"] = value;\r\n            } else {\r\n                if (isEnd) {\r\n                    from = o._.arrows.startdx * stroke || 0;\r\n                    to = R.getTotalLength(attrs.path) - from;\r\n                } else {\r\n                    from = 0;\r\n                    to = R.getTotalLength(attrs.path) - (o._.arrows.enddx * stroke || 0);\r\n                }\r\n                o._.arrows[se + \"Path\"] && $(node, {d: R.getSubpath(attrs.path, from, to)});\r\n                delete o._.arrows[se + \"Path\"];\r\n                delete o._.arrows[se + \"Marker\"];\r\n                delete o._.arrows[se + \"dx\"];\r\n                delete o._.arrows[se + \"Type\"];\r\n                delete o._.arrows[se + \"String\"];\r\n            }\r\n            for (attr in markerCounter) if (markerCounter[has](attr) && !markerCounter[attr]) {\r\n                var item = R._g.doc.getElementById(attr);\r\n                item && item.parentNode.removeChild(item);\r\n            }\r\n        }\r\n    },\r\n    dasharray = {\r\n        \"-\": [3, 1],\r\n        \".\": [1, 1],\r\n        \"-.\": [3, 1, 1, 1],\r\n        \"-..\": [3, 1, 1, 1, 1, 1],\r\n        \". \": [1, 3],\r\n        \"- \": [4, 3],\r\n        \"--\": [8, 3],\r\n        \"- .\": [4, 3, 1, 3],\r\n        \"--.\": [8, 3, 1, 3],\r\n        \"--..\": [8, 3, 1, 3, 1, 3]\r\n    },\r\n    addDashes = function (o, value, params) {\r\n        value = dasharray[Str(value).toLowerCase()];\r\n        if (value) {\r\n            var width = o.attrs[\"stroke-width\"] || \"1\",\r\n                butt = {round: width, square: width, butt: 0}[o.attrs[\"stroke-linecap\"] || params[\"stroke-linecap\"]] || 0,\r\n                dashes = [],\r\n                i = value.length;\r\n            while (i--) {\r\n                dashes[i] = value[i] * width + ((i % 2) ? 1 : -1) * butt;\r\n            }\r\n            $(o.node, {\"stroke-dasharray\": dashes.join(\",\")});\r\n        }\r\n        else {\r\n          $(o.node, {\"stroke-dasharray\": \"none\"});\r\n        }\r\n    },\r\n    setFillAndStroke = function (o, params) {\r\n        var node = o.node,\r\n            attrs = o.attrs,\r\n            vis = node.style.visibility;\r\n        node.style.visibility = \"hidden\";\r\n        for (var att in params) {\r\n            if (params[has](att)) {\r\n                if (!R._availableAttrs[has](att)) {\r\n                    continue;\r\n                }\r\n                var value = params[att];\r\n                attrs[att] = value;\r\n                switch (att) {\r\n                    case \"blur\":\r\n                        o.blur(value);\r\n                        break;\r\n                    case \"title\":\r\n                        var title = node.getElementsByTagName(\"title\");\r\n\r\n                        // Use the existing <title>.\r\n                        if (title.length && (title = title[0])) {\r\n                          title.firstChild.nodeValue = value;\r\n                        } else {\r\n                          title = $(\"title\");\r\n                          var val = R._g.doc.createTextNode(value);\r\n                          title.appendChild(val);\r\n                          node.appendChild(title);\r\n                        }\r\n                        break;\r\n                    case \"href\":\r\n                    case \"target\":\r\n                        var pn = node.parentNode;\r\n                        if (pn.tagName.toLowerCase() != \"a\") {\r\n                            var hl = $(\"a\");\r\n                            pn.insertBefore(hl, node);\r\n                            hl.appendChild(node);\r\n                            pn = hl;\r\n                        }\r\n                        if (att == \"target\") {\r\n                            pn.setAttributeNS(xlink, \"show\", value == \"blank\" ? \"new\" : value);\r\n                        } else {\r\n                            pn.setAttributeNS(xlink, att, value);\r\n                        }\r\n                        break;\r\n                    case \"cursor\":\r\n                        node.style.cursor = value;\r\n                        break;\r\n                    case \"transform\":\r\n                        o.transform(value);\r\n                        break;\r\n                    case \"arrow-start\":\r\n                        addArrow(o, value);\r\n                        break;\r\n                    case \"arrow-end\":\r\n                        addArrow(o, value, 1);\r\n                        break;\r\n                    case \"clip-rect\":\r\n                        var rect = Str(value).split(separator);\r\n                        if (rect.length == 4) {\r\n                            o.clip && o.clip.parentNode.parentNode.removeChild(o.clip.parentNode);\r\n                            var el = $(\"clipPath\"),\r\n                                rc = $(\"rect\");\r\n                            el.id = R.createUUID();\r\n                            $(rc, {\r\n                                x: rect[0],\r\n                                y: rect[1],\r\n                                width: rect[2],\r\n                                height: rect[3]\r\n                            });\r\n                            el.appendChild(rc);\r\n                            o.paper.defs.appendChild(el);\r\n                            $(node, {\"clip-path\": \"url(#\" + el.id + \")\"});\r\n                            o.clip = rc;\r\n                        }\r\n                        if (!value) {\r\n                            var path = node.getAttribute(\"clip-path\");\r\n                            if (path) {\r\n                                var clip = R._g.doc.getElementById(path.replace(/(^url\\(#|\\)$)/g, E));\r\n                                clip && clip.parentNode.removeChild(clip);\r\n                                $(node, {\"clip-path\": E});\r\n                                delete o.clip;\r\n                            }\r\n                        }\r\n                    break;\r\n                    case \"path\":\r\n                        if (o.type == \"path\") {\r\n                            $(node, {d: value ? attrs.path = R._pathToAbsolute(value) : \"M0,0\"});\r\n                            o._.dirty = 1;\r\n                            if (o._.arrows) {\r\n                                \"startString\" in o._.arrows && addArrow(o, o._.arrows.startString);\r\n                                \"endString\" in o._.arrows && addArrow(o, o._.arrows.endString, 1);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"width\":\r\n                        node.setAttribute(att, value);\r\n                        o._.dirty = 1;\r\n                        if (attrs.fx) {\r\n                            att = \"x\";\r\n                            value = attrs.x;\r\n                        } else {\r\n                            break;\r\n                        }\r\n                    case \"x\":\r\n                        if (attrs.fx) {\r\n                            value = -attrs.x - (attrs.width || 0);\r\n                        }\r\n                    case \"rx\":\r\n                        if (att == \"rx\" && o.type == \"rect\") {\r\n                            break;\r\n                        }\r\n                    case \"cx\":\r\n                        node.setAttribute(att, value);\r\n                        o.pattern && updatePosition(o);\r\n                        o._.dirty = 1;\r\n                        break;\r\n                    case \"height\":\r\n                        node.setAttribute(att, value);\r\n                        o._.dirty = 1;\r\n                        if (attrs.fy) {\r\n                            att = \"y\";\r\n                            value = attrs.y;\r\n                        } else {\r\n                            break;\r\n                        }\r\n                    case \"y\":\r\n                        if (attrs.fy) {\r\n                            value = -attrs.y - (attrs.height || 0);\r\n                        }\r\n                    case \"ry\":\r\n                        if (att == \"ry\" && o.type == \"rect\") {\r\n                            break;\r\n                        }\r\n                    case \"cy\":\r\n                        node.setAttribute(att, value);\r\n                        o.pattern && updatePosition(o);\r\n                        o._.dirty = 1;\r\n                        break;\r\n                    case \"r\":\r\n                        if (o.type == \"rect\") {\r\n                            $(node, {rx: value, ry: value});\r\n                        } else {\r\n                            node.setAttribute(att, value);\r\n                        }\r\n                        o._.dirty = 1;\r\n                        break;\r\n                    case \"src\":\r\n                        if (o.type == \"image\") {\r\n                            node.setAttributeNS(xlink, \"href\", value);\r\n                        }\r\n                        break;\r\n                    case \"stroke-width\":\r\n                        if (o._.sx != 1 || o._.sy != 1) {\r\n                            value /= mmax(abs(o._.sx), abs(o._.sy)) || 1;\r\n                        }\r\n                        node.setAttribute(att, value);\r\n                        if (attrs[\"stroke-dasharray\"]) {\r\n                            addDashes(o, attrs[\"stroke-dasharray\"], params);\r\n                        }\r\n                        if (o._.arrows) {\r\n                            \"startString\" in o._.arrows && addArrow(o, o._.arrows.startString);\r\n                            \"endString\" in o._.arrows && addArrow(o, o._.arrows.endString, 1);\r\n                        }\r\n                        break;\r\n                    case \"stroke-dasharray\":\r\n                        addDashes(o, value, params);\r\n                        break;\r\n                    case \"fill\":\r\n                        var isURL = Str(value).match(R._ISURL);\r\n                        if (isURL) {\r\n                            el = $(\"pattern\");\r\n                            var ig = $(\"image\");\r\n                            el.id = R.createUUID();\r\n                            $(el, {x: 0, y: 0, patternUnits: \"userSpaceOnUse\", height: 1, width: 1});\r\n                            $(ig, {x: 0, y: 0, \"xlink:href\": isURL[1]});\r\n                            el.appendChild(ig);\r\n\r\n                            (function (el) {\r\n                                R._preload(isURL[1], function () {\r\n                                    var w = this.offsetWidth,\r\n                                        h = this.offsetHeight;\r\n                                    $(el, {width: w, height: h});\r\n                                    $(ig, {width: w, height: h});\r\n                                });\r\n                            })(el);\r\n                            o.paper.defs.appendChild(el);\r\n                            $(node, {fill: \"url(#\" + el.id + \")\"});\r\n                            o.pattern = el;\r\n                            o.pattern && updatePosition(o);\r\n                            break;\r\n                        }\r\n                        var clr = R.getRGB(value);\r\n                        if (!clr.error) {\r\n                            delete params.gradient;\r\n                            delete attrs.gradient;\r\n                            !R.is(attrs.opacity, \"undefined\") &&\r\n                                R.is(params.opacity, \"undefined\") &&\r\n                                $(node, {opacity: attrs.opacity});\r\n                            !R.is(attrs[\"fill-opacity\"], \"undefined\") &&\r\n                                R.is(params[\"fill-opacity\"], \"undefined\") &&\r\n                                $(node, {\"fill-opacity\": attrs[\"fill-opacity\"]});\r\n                        } else if ((o.type == \"circle\" || o.type == \"ellipse\" || Str(value).charAt() != \"r\") && addGradientFill(o, value)) {\r\n                            if (\"opacity\" in attrs || \"fill-opacity\" in attrs) {\r\n                                var gradient = R._g.doc.getElementById(node.getAttribute(\"fill\").replace(/^url\\(#|\\)$/g, E));\r\n                                if (gradient) {\r\n                                    var stops = gradient.getElementsByTagName(\"stop\");\r\n                                    $(stops[stops.length - 1], {\"stop-opacity\": (\"opacity\" in attrs ? attrs.opacity : 1) * (\"fill-opacity\" in attrs ? attrs[\"fill-opacity\"] : 1)});\r\n                                }\r\n                            }\r\n                            attrs.gradient = value;\r\n                            attrs.fill = \"none\";\r\n                            break;\r\n                        }\r\n                        clr[has](\"opacity\") && $(node, {\"fill-opacity\": clr.opacity > 1 ? clr.opacity / 100 : clr.opacity});\r\n                    case \"stroke\":\r\n                        clr = R.getRGB(value);\r\n                        node.setAttribute(att, clr.hex);\r\n                        att == \"stroke\" && clr[has](\"opacity\") && $(node, {\"stroke-opacity\": clr.opacity > 1 ? clr.opacity / 100 : clr.opacity});\r\n                        if (att == \"stroke\" && o._.arrows) {\r\n                            \"startString\" in o._.arrows && addArrow(o, o._.arrows.startString);\r\n                            \"endString\" in o._.arrows && addArrow(o, o._.arrows.endString, 1);\r\n                        }\r\n                        break;\r\n                    case \"gradient\":\r\n                        (o.type == \"circle\" || o.type == \"ellipse\" || Str(value).charAt() != \"r\") && addGradientFill(o, value);\r\n                        break;\r\n                    case \"opacity\":\r\n                        if (attrs.gradient && !attrs[has](\"stroke-opacity\")) {\r\n                            $(node, {\"stroke-opacity\": value > 1 ? value / 100 : value});\r\n                        }\r\n                        // fall\r\n                    case \"fill-opacity\":\r\n                        if (attrs.gradient) {\r\n                            gradient = R._g.doc.getElementById(node.getAttribute(\"fill\").replace(/^url\\(#|\\)$/g, E));\r\n                            if (gradient) {\r\n                                stops = gradient.getElementsByTagName(\"stop\");\r\n                                $(stops[stops.length - 1], {\"stop-opacity\": value});\r\n                            }\r\n                            break;\r\n                        }\r\n                    default:\r\n                        att == \"font-size\" && (value = toInt(value, 10) + \"px\");\r\n                        var cssrule = att.replace(/(\\-.)/g, function (w) {\r\n                            return w.substring(1).toUpperCase();\r\n                        });\r\n                        node.style[cssrule] = value;\r\n                        o._.dirty = 1;\r\n                        node.setAttribute(att, value);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        tuneText(o, params);\r\n        node.style.visibility = vis;\r\n    },\r\n    leading = 1.2,\r\n    tuneText = function (el, params) {\r\n        if (el.type != \"text\" || !(params[has](\"text\") || params[has](\"font\") || params[has](\"font-size\") || params[has](\"x\") || params[has](\"y\"))) {\r\n            return;\r\n        }\r\n        var a = el.attrs,\r\n            node = el.node,\r\n            fontSize = node.firstChild ? toInt(R._g.doc.defaultView.getComputedStyle(node.firstChild, E).getPropertyValue(\"font-size\"), 10) : 10;\r\n\r\n        if (params[has](\"text\")) {\r\n            a.text = params.text;\r\n            while (node.firstChild) {\r\n                node.removeChild(node.firstChild);\r\n            }\r\n            var texts = Str(params.text).split(\"\\n\"),\r\n                tspans = [],\r\n                tspan;\r\n            for (var i = 0, ii = texts.length; i < ii; i++) {\r\n                tspan = $(\"tspan\");\r\n                i && $(tspan, {dy: fontSize * leading, x: a.x});\r\n                tspan.appendChild(R._g.doc.createTextNode(texts[i]));\r\n                node.appendChild(tspan);\r\n                tspans[i] = tspan;\r\n            }\r\n        } else {\r\n            tspans = node.getElementsByTagName(\"tspan\");\r\n            for (i = 0, ii = tspans.length; i < ii; i++) if (i) {\r\n                $(tspans[i], {dy: fontSize * leading, x: a.x});\r\n            } else {\r\n                $(tspans[0], {dy: 0});\r\n            }\r\n        }\r\n        $(node, {x: a.x, y: a.y});\r\n        el._.dirty = 1;\r\n        var bb = el._getBBox(),\r\n            dif = a.y - (bb.y + bb.height / 2);\r\n        dif && R.is(dif, \"finite\") && $(tspans[0], {dy: dif});\r\n    },\r\n    getRealNode = function (node) {\r\n        if (node.parentNode && node.parentNode.tagName.toLowerCase() === \"a\") {\r\n            return node.parentNode;\r\n        } else {\r\n            return node;\r\n        }\r\n    },\r\n    Element = function (node, svg) {\r\n        var X = 0,\r\n            Y = 0;\r\n        /*\\\r\n         * Element.node\r\n         [ property (object) ]\r\n         **\r\n         * Gives you a reference to the DOM object, so you can assign event handlers or just mess around.\r\n         **\r\n         * Note: Don’t mess with it.\r\n         > Usage\r\n         | // draw a circle at coordinate 10,10 with radius of 10\r\n         | var c = paper.circle(10, 10, 10);\r\n         | c.node.onclick = function () {\r\n         |     c.attr(\"fill\", \"red\");\r\n         | };\r\n        \\*/\r\n        this[0] = this.node = node;\r\n        /*\\\r\n         * Element.raphael\r\n         [ property (object) ]\r\n         **\r\n         * Internal reference to @Raphael object. In case it is not available.\r\n         > Usage\r\n         | Raphael.el.red = function () {\r\n         |     var hsb = this.paper.raphael.rgb2hsb(this.attr(\"fill\"));\r\n         |     hsb.h = 1;\r\n         |     this.attr({fill: this.paper.raphael.hsb2rgb(hsb).hex});\r\n         | }\r\n        \\*/\r\n        node.raphael = true;\r\n        /*\\\r\n         * Element.id\r\n         [ property (number) ]\r\n         **\r\n         * Unique id of the element. Especially useful when you want to listen to events of the element,\r\n         * because all events are fired in format `<module>.<action>.<id>`. Also useful for @Paper.getById method.\r\n        \\*/\r\n        this.id = R._oid++;\r\n        node.raphaelid = this.id;\r\n        this.matrix = R.matrix();\r\n        this.realPath = null;\r\n        /*\\\r\n         * Element.paper\r\n         [ property (object) ]\r\n         **\r\n         * Internal reference to “paper” where object drawn. Mainly for use in plugins and element extensions.\r\n         > Usage\r\n         | Raphael.el.cross = function () {\r\n         |     this.attr({fill: \"red\"});\r\n         |     this.paper.path(\"M10,10L50,50M50,10L10,50\")\r\n         |         .attr({stroke: \"red\"});\r\n         | }\r\n        \\*/\r\n        this.paper = svg;\r\n        this.attrs = this.attrs || {};\r\n        this._ = {\r\n            transform: [],\r\n            sx: 1,\r\n            sy: 1,\r\n            deg: 0,\r\n            dx: 0,\r\n            dy: 0,\r\n            dirty: 1\r\n        };\r\n        !svg.bottom && (svg.bottom = this);\r\n        /*\\\r\n         * Element.prev\r\n         [ property (object) ]\r\n         **\r\n         * Reference to the previous element in the hierarchy.\r\n        \\*/\r\n        this.prev = svg.top;\r\n        svg.top && (svg.top.next = this);\r\n        svg.top = this;\r\n        /*\\\r\n         * Element.next\r\n         [ property (object) ]\r\n         **\r\n         * Reference to the next element in the hierarchy.\r\n        \\*/\r\n        this.next = null;\r\n    },\r\n    elproto = R.el;\r\n\r\n    Element.prototype = elproto;\r\n    elproto.constructor = Element;\r\n\r\n    R._engine.path = function (pathString, SVG) {\r\n        var el = $(\"path\");\r\n        SVG.canvas && SVG.canvas.appendChild(el);\r\n        var p = new Element(el, SVG);\r\n        p.type = \"path\";\r\n        setFillAndStroke(p, {\r\n            fill: \"none\",\r\n            stroke: \"#000\",\r\n            path: pathString\r\n        });\r\n        return p;\r\n    };\r\n    /*\\\r\n     * Element.rotate\r\n     [ method ]\r\n     **\r\n     * Deprecated! Use @Element.transform instead.\r\n     * Adds rotation by given angle around given point to the list of\r\n     * transformations of the element.\r\n     > Parameters\r\n     - deg (number) angle in degrees\r\n     - cx (number) #optional x coordinate of the centre of rotation\r\n     - cy (number) #optional y coordinate of the centre of rotation\r\n     * If cx & cy aren’t specified centre of the shape is used as a point of rotation.\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.rotate = function (deg, cx, cy) {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        deg = Str(deg).split(separator);\r\n        if (deg.length - 1) {\r\n            cx = toFloat(deg[1]);\r\n            cy = toFloat(deg[2]);\r\n        }\r\n        deg = toFloat(deg[0]);\r\n        (cy == null) && (cx = cy);\r\n        if (cx == null || cy == null) {\r\n            var bbox = this.getBBox(1);\r\n            cx = bbox.x + bbox.width / 2;\r\n            cy = bbox.y + bbox.height / 2;\r\n        }\r\n        this.transform(this._.transform.concat([[\"r\", deg, cx, cy]]));\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.scale\r\n     [ method ]\r\n     **\r\n     * Deprecated! Use @Element.transform instead.\r\n     * Adds scale by given amount relative to given point to the list of\r\n     * transformations of the element.\r\n     > Parameters\r\n     - sx (number) horisontal scale amount\r\n     - sy (number) vertical scale amount\r\n     - cx (number) #optional x coordinate of the centre of scale\r\n     - cy (number) #optional y coordinate of the centre of scale\r\n     * If cx & cy aren’t specified centre of the shape is used instead.\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.scale = function (sx, sy, cx, cy) {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        sx = Str(sx).split(separator);\r\n        if (sx.length - 1) {\r\n            sy = toFloat(sx[1]);\r\n            cx = toFloat(sx[2]);\r\n            cy = toFloat(sx[3]);\r\n        }\r\n        sx = toFloat(sx[0]);\r\n        (sy == null) && (sy = sx);\r\n        (cy == null) && (cx = cy);\r\n        if (cx == null || cy == null) {\r\n            var bbox = this.getBBox(1);\r\n        }\r\n        cx = cx == null ? bbox.x + bbox.width / 2 : cx;\r\n        cy = cy == null ? bbox.y + bbox.height / 2 : cy;\r\n        this.transform(this._.transform.concat([[\"s\", sx, sy, cx, cy]]));\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.translate\r\n     [ method ]\r\n     **\r\n     * Deprecated! Use @Element.transform instead.\r\n     * Adds translation by given amount to the list of transformations of the element.\r\n     > Parameters\r\n     - dx (number) horisontal shift\r\n     - dy (number) vertical shift\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.translate = function (dx, dy) {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        dx = Str(dx).split(separator);\r\n        if (dx.length - 1) {\r\n            dy = toFloat(dx[1]);\r\n        }\r\n        dx = toFloat(dx[0]) || 0;\r\n        dy = +dy || 0;\r\n        this.transform(this._.transform.concat([[\"t\", dx, dy]]));\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.transform\r\n     [ method ]\r\n     **\r\n     * Adds transformation to the element which is separate to other attributes,\r\n     * i.e. translation doesn’t change `x` or `y` of the rectange. The format\r\n     * of transformation string is similar to the path string syntax:\r\n     | \"t100,100r30,100,100s2,2,100,100r45s1.5\"\r\n     * Each letter is a command. There are four commands: `t` is for translate, `r` is for rotate, `s` is for\r\n     * scale and `m` is for matrix.\r\n     *\r\n     * There are also alternative “absolute” translation, rotation and scale: `T`, `R` and `S`. They will not take previous transformation into account. For example, `...T100,0` will always move element 100 px horisontally, while `...t100,0` could move it vertically if there is `r90` before. Just compare results of `r90t100,0` and `r90T100,0`.\r\n     *\r\n     * So, the example line above could be read like “translate by 100, 100; rotate 30° around 100, 100; scale twice around 100, 100;\r\n     * rotate 45° around centre; scale 1.5 times relative to centre”. As you can see rotate and scale commands have origin\r\n     * coordinates as optional parameters, the default is the centre point of the element.\r\n     * Matrix accepts six parameters.\r\n     > Usage\r\n     | var el = paper.rect(10, 20, 300, 200);\r\n     | // translate 100, 100, rotate 45°, translate -100, 0\r\n     | el.transform(\"t100,100r45t-100,0\");\r\n     | // if you want you can append or prepend transformations\r\n     | el.transform(\"...t50,50\");\r\n     | el.transform(\"s2...\");\r\n     | // or even wrap\r\n     | el.transform(\"t50,50...t-50-50\");\r\n     | // to reset transformation call method with empty string\r\n     | el.transform(\"\");\r\n     | // to get current value call it without parameters\r\n     | console.log(el.transform());\r\n     > Parameters\r\n     - tstr (string) #optional transformation string\r\n     * If tstr isn’t specified\r\n     = (string) current transformation string\r\n     * else\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.transform = function (tstr) {\r\n        var _ = this._;\r\n        if (tstr == null) {\r\n            return _.transform;\r\n        }\r\n        R._extractTransform(this, tstr);\r\n\r\n        this.clip && $(this.clip, {transform: this.matrix.invert()});\r\n        this.pattern && updatePosition(this);\r\n        this.node && $(this.node, {transform: this.matrix});\r\n\r\n        if (_.sx != 1 || _.sy != 1) {\r\n            var sw = this.attrs[has](\"stroke-width\") ? this.attrs[\"stroke-width\"] : 1;\r\n            this.attr({\"stroke-width\": sw});\r\n        }\r\n\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.hide\r\n     [ method ]\r\n     **\r\n     * Makes element invisible. See @Element.show.\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.hide = function () {\r\n        if(!this.removed) this.node.style.display = \"none\";\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.show\r\n     [ method ]\r\n     **\r\n     * Makes element visible. See @Element.hide.\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.show = function () {\r\n        if(!this.removed) this.node.style.display = \"\";\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.remove\r\n     [ method ]\r\n     **\r\n     * Removes element from the paper.\r\n    \\*/\r\n    elproto.remove = function () {\r\n        var node = getRealNode(this.node);\r\n        if (this.removed || !node.parentNode) {\r\n            return;\r\n        }\r\n        var paper = this.paper;\r\n        paper.__set__ && paper.__set__.exclude(this);\r\n        eve.unbind(\"raphael.*.*.\" + this.id);\r\n        if (this.gradient) {\r\n            paper.defs.removeChild(this.gradient);\r\n        }\r\n        R._tear(this, paper);\r\n\r\n        node.parentNode.removeChild(node);\r\n\r\n        // Remove custom data for element\r\n        this.removeData();\r\n\r\n        for (var i in this) {\r\n            this[i] = typeof this[i] == \"function\" ? R._removedFactory(i) : null;\r\n        }\r\n        this.removed = true;\r\n    };\r\n    elproto._getBBox = function () {\r\n        if (this.node.style.display == \"none\") {\r\n            this.show();\r\n            var hide = true;\r\n        }\r\n        var canvasHidden = false,\r\n            containerStyle;\r\n        if (this.paper.canvas.parentElement) {\r\n          containerStyle = this.paper.canvas.parentElement.style;\r\n        } //IE10+ can't find parentElement\r\n        else if (this.paper.canvas.parentNode) {\r\n          containerStyle = this.paper.canvas.parentNode.style;\r\n        }\r\n\r\n        if(containerStyle && containerStyle.display == \"none\") {\r\n          canvasHidden = true;\r\n          containerStyle.display = \"\";\r\n        }\r\n        var bbox = {};\r\n        try {\r\n            bbox = this.node.getBBox();\r\n        } catch(e) {\r\n            // Firefox 3.0.x, 25.0.1 (probably more versions affected) play badly here - possible fix\r\n            bbox = {\r\n                x: this.node.clientLeft,\r\n                y: this.node.clientTop,\r\n                width: this.node.clientWidth,\r\n                height: this.node.clientHeight\r\n            }\r\n        } finally {\r\n            bbox = bbox || {};\r\n            if(canvasHidden){\r\n              containerStyle.display = \"none\";\r\n            }\r\n        }\r\n        hide && this.hide();\r\n        return bbox;\r\n    };\r\n    /*\\\r\n     * Element.attr\r\n     [ method ]\r\n     **\r\n     * Sets the attributes of the element.\r\n     > Parameters\r\n     - attrName (string) attribute’s name\r\n     - value (string) value\r\n     * or\r\n     - params (object) object of name/value pairs\r\n     * or\r\n     - attrName (string) attribute’s name\r\n     * or\r\n     - attrNames (array) in this case method returns array of current values for given attribute names\r\n     = (object) @Element if attrsName & value or params are passed in.\r\n     = (...) value of the attribute if only attrsName is passed in.\r\n     = (array) array of values of the attribute if attrsNames is passed in.\r\n     = (object) object of attributes if nothing is passed in.\r\n     > Possible parameters\r\n     # <p>Please refer to the <a href=\"http://www.w3.org/TR/SVG/\" title=\"The W3C Recommendation for the SVG language describes these properties in detail.\">SVG specification</a> for an explanation of these parameters.</p>\r\n     o arrow-end (string) arrowhead on the end of the path. The format for string is `<type>[-<width>[-<length>]]`. Possible types: `classic`, `block`, `open`, `oval`, `diamond`, `none`, width: `wide`, `narrow`, `medium`, length: `long`, `short`, `midium`.\r\n     o clip-rect (string) comma or space separated values: x, y, width and height\r\n     o cursor (string) CSS type of the cursor\r\n     o cx (number) the x-axis coordinate of the center of the circle, or ellipse\r\n     o cy (number) the y-axis coordinate of the center of the circle, or ellipse\r\n     o fill (string) colour, gradient or image\r\n     o fill-opacity (number)\r\n     o font (string)\r\n     o font-family (string)\r\n     o font-size (number) font size in pixels\r\n     o font-weight (string)\r\n     o height (number)\r\n     o href (string) URL, if specified element behaves as hyperlink\r\n     o opacity (number)\r\n     o path (string) SVG path string format\r\n     o r (number) radius of the circle, ellipse or rounded corner on the rect\r\n     o rx (number) horisontal radius of the ellipse\r\n     o ry (number) vertical radius of the ellipse\r\n     o src (string) image URL, only works for @Element.image element\r\n     o stroke (string) stroke colour\r\n     o stroke-dasharray (string) [“”, “none”, “`-`”, “`.`”, “`-.`”, “`-..`”, “`. `”, “`- `”, “`--`”, “`- .`”, “`--.`”, “`--..`”]\r\n     o stroke-linecap (string) [“`butt`”, “`square`”, “`round`”]\r\n     o stroke-linejoin (string) [“`bevel`”, “`round`”, “`miter`”]\r\n     o stroke-miterlimit (number)\r\n     o stroke-opacity (number)\r\n     o stroke-width (number) stroke width in pixels, default is '1'\r\n     o target (string) used with href\r\n     o text (string) contents of the text element. Use `\\n` for multiline text\r\n     o text-anchor (string) [“`start`”, “`middle`”, “`end`”], default is “`middle`”\r\n     o title (string) will create tooltip with a given text\r\n     o transform (string) see @Element.transform\r\n     o width (number)\r\n     o x (number)\r\n     o y (number)\r\n     > Gradients\r\n     * Linear gradient format: “`‹angle›-‹colour›[-‹colour›[:‹offset›]]*-‹colour›`”, example: “`90-#fff-#000`” – 90°\r\n     * gradient from white to black or “`0-#fff-#f00:20-#000`” – 0° gradient from white via red (at 20%) to black.\r\n     *\r\n     * radial gradient: “`r[(‹fx›, ‹fy›)]‹colour›[-‹colour›[:‹offset›]]*-‹colour›`”, example: “`r#fff-#000`” –\r\n     * gradient from white to black or “`r(0.25, 0.75)#fff-#000`” – gradient from white to black with focus point\r\n     * at 0.25, 0.75. Focus point coordinates are in 0..1 range. Radial gradients can only be applied to circles and ellipses.\r\n     > Path String\r\n     # <p>Please refer to <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path’s data attribute’s format are described in the SVG specification.\">SVG documentation regarding path string</a>. Raphaël fully supports it.</p>\r\n     > Colour Parsing\r\n     # <ul>\r\n     #     <li>Colour name (“<code>red</code>”, “<code>green</code>”, “<code>cornflowerblue</code>”, etc)</li>\r\n     #     <li>#••• — shortened HTML colour: (“<code>#000</code>”, “<code>#fc0</code>”, etc)</li>\r\n     #     <li>#•••••• — full length HTML colour: (“<code>#000000</code>”, “<code>#bd2300</code>”)</li>\r\n     #     <li>rgb(•••, •••, •••) — red, green and blue channels’ values: (“<code>rgb(200,&nbsp;100,&nbsp;0)</code>”)</li>\r\n     #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (“<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>”)</li>\r\n     #     <li>rgba(•••, •••, •••, •••) — red, green and blue channels’ values: (“<code>rgba(200,&nbsp;100,&nbsp;0, .5)</code>”)</li>\r\n     #     <li>rgba(•••%, •••%, •••%, •••%) — same as above, but in %: (“<code>rgba(100%,&nbsp;175%,&nbsp;0%, 50%)</code>”)</li>\r\n     #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (“<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>”)</li>\r\n     #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\r\n     #     <li>hsba(•••, •••, •••, •••) — same as above, but with opacity</li>\r\n     #     <li>hsl(•••, •••, •••) — almost the same as hsb, see <a href=\"http://en.wikipedia.org/wiki/HSL_and_HSV\" title=\"HSL and HSV - Wikipedia, the free encyclopedia\">Wikipedia page</a></li>\r\n     #     <li>hsl(•••%, •••%, •••%) — same as above, but in %</li>\r\n     #     <li>hsla(•••, •••, •••, •••) — same as above, but with opacity</li>\r\n     #     <li>Optionally for hsb and hsl you could specify hue as a degree: “<code>hsl(240deg,&nbsp;1,&nbsp;.5)</code>” or, if you want to go fancy, “<code>hsl(240°,&nbsp;1,&nbsp;.5)</code>”</li>\r\n     # </ul>\r\n    \\*/\r\n    elproto.attr = function (name, value) {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        if (name == null) {\r\n            var res = {};\r\n            for (var a in this.attrs) if (this.attrs[has](a)) {\r\n                res[a] = this.attrs[a];\r\n            }\r\n            res.gradient && res.fill == \"none\" && (res.fill = res.gradient) && delete res.gradient;\r\n            res.transform = this._.transform;\r\n            return res;\r\n        }\r\n        if (value == null && R.is(name, \"string\")) {\r\n            if (name == \"fill\" && this.attrs.fill == \"none\" && this.attrs.gradient) {\r\n                return this.attrs.gradient;\r\n            }\r\n            if (name == \"transform\") {\r\n                return this._.transform;\r\n            }\r\n            var names = name.split(separator),\r\n                out = {};\r\n            for (var i = 0, ii = names.length; i < ii; i++) {\r\n                name = names[i];\r\n                if (name in this.attrs) {\r\n                    out[name] = this.attrs[name];\r\n                } else if (R.is(this.paper.customAttributes[name], \"function\")) {\r\n                    out[name] = this.paper.customAttributes[name].def;\r\n                } else {\r\n                    out[name] = R._availableAttrs[name];\r\n                }\r\n            }\r\n            return ii - 1 ? out : out[names[0]];\r\n        }\r\n        if (value == null && R.is(name, \"array\")) {\r\n            out = {};\r\n            for (i = 0, ii = name.length; i < ii; i++) {\r\n                out[name[i]] = this.attr(name[i]);\r\n            }\r\n            return out;\r\n        }\r\n        if (value != null) {\r\n            var params = {};\r\n            params[name] = value;\r\n        } else if (name != null && R.is(name, \"object\")) {\r\n            params = name;\r\n        }\r\n        for (var key in params) {\r\n            eve(\"raphael.attr.\" + key + \".\" + this.id, this, params[key]);\r\n        }\r\n        for (key in this.paper.customAttributes) if (this.paper.customAttributes[has](key) && params[has](key) && R.is(this.paper.customAttributes[key], \"function\")) {\r\n            var par = this.paper.customAttributes[key].apply(this, [].concat(params[key]));\r\n            this.attrs[key] = params[key];\r\n            for (var subkey in par) if (par[has](subkey)) {\r\n                params[subkey] = par[subkey];\r\n            }\r\n        }\r\n        setFillAndStroke(this, params);\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.toFront\r\n     [ method ]\r\n     **\r\n     * Moves the element so it is the closest to the viewer’s eyes, on top of other elements.\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.toFront = function () {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        var node = getRealNode(this.node);\r\n        node.parentNode.appendChild(node);\r\n        var svg = this.paper;\r\n        svg.top != this && R._tofront(this, svg);\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.toBack\r\n     [ method ]\r\n     **\r\n     * Moves the element so it is the furthest from the viewer’s eyes, behind other elements.\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.toBack = function () {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        var node = getRealNode(this.node);\r\n        var parentNode = node.parentNode;\r\n        parentNode.insertBefore(node, parentNode.firstChild);\r\n        R._toback(this, this.paper);\r\n        var svg = this.paper;\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.insertAfter\r\n     [ method ]\r\n     **\r\n     * Inserts current object after the given one.\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.insertAfter = function (element) {\r\n        if (this.removed || !element) {\r\n            return this;\r\n        }\r\n\r\n        var node = getRealNode(this.node);\r\n        var afterNode = getRealNode(element.node || element[element.length - 1].node);\r\n        if (afterNode.nextSibling) {\r\n            afterNode.parentNode.insertBefore(node, afterNode.nextSibling);\r\n        } else {\r\n            afterNode.parentNode.appendChild(node);\r\n        }\r\n        R._insertafter(this, element, this.paper);\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.insertBefore\r\n     [ method ]\r\n     **\r\n     * Inserts current object before the given one.\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.insertBefore = function (element) {\r\n        if (this.removed || !element) {\r\n            return this;\r\n        }\r\n\r\n        var node = getRealNode(this.node);\r\n        var beforeNode = getRealNode(element.node || element[0].node);\r\n        beforeNode.parentNode.insertBefore(node, beforeNode);\r\n        R._insertbefore(this, element, this.paper);\r\n        return this;\r\n    };\r\n    elproto.blur = function (size) {\r\n        // Experimental. No Safari support. Use it on your own risk.\r\n        var t = this;\r\n        if (+size !== 0) {\r\n            var fltr = $(\"filter\"),\r\n                blur = $(\"feGaussianBlur\");\r\n            t.attrs.blur = size;\r\n            fltr.id = R.createUUID();\r\n            $(blur, {stdDeviation: +size || 1.5});\r\n            fltr.appendChild(blur);\r\n            t.paper.defs.appendChild(fltr);\r\n            t._blur = fltr;\r\n            $(t.node, {filter: \"url(#\" + fltr.id + \")\"});\r\n        } else {\r\n            if (t._blur) {\r\n                t._blur.parentNode.removeChild(t._blur);\r\n                delete t._blur;\r\n                delete t.attrs.blur;\r\n            }\r\n            t.node.removeAttribute(\"filter\");\r\n        }\r\n        return t;\r\n    };\r\n    R._engine.circle = function (svg, x, y, r) {\r\n        var el = $(\"circle\");\r\n        svg.canvas && svg.canvas.appendChild(el);\r\n        var res = new Element(el, svg);\r\n        res.attrs = {cx: x, cy: y, r: r, fill: \"none\", stroke: \"#000\"};\r\n        res.type = \"circle\";\r\n        $(el, res.attrs);\r\n        return res;\r\n    };\r\n    R._engine.rect = function (svg, x, y, w, h, r) {\r\n        var el = $(\"rect\");\r\n        svg.canvas && svg.canvas.appendChild(el);\r\n        var res = new Element(el, svg);\r\n        res.attrs = {x: x, y: y, width: w, height: h, rx: r || 0, ry: r || 0, fill: \"none\", stroke: \"#000\"};\r\n        res.type = \"rect\";\r\n        $(el, res.attrs);\r\n        return res;\r\n    };\r\n    R._engine.ellipse = function (svg, x, y, rx, ry) {\r\n        var el = $(\"ellipse\");\r\n        svg.canvas && svg.canvas.appendChild(el);\r\n        var res = new Element(el, svg);\r\n        res.attrs = {cx: x, cy: y, rx: rx, ry: ry, fill: \"none\", stroke: \"#000\"};\r\n        res.type = \"ellipse\";\r\n        $(el, res.attrs);\r\n        return res;\r\n    };\r\n    R._engine.image = function (svg, src, x, y, w, h) {\r\n        var el = $(\"image\");\r\n        $(el, {x: x, y: y, width: w, height: h, preserveAspectRatio: \"none\"});\r\n        el.setAttributeNS(xlink, \"href\", src);\r\n        svg.canvas && svg.canvas.appendChild(el);\r\n        var res = new Element(el, svg);\r\n        res.attrs = {x: x, y: y, width: w, height: h, src: src};\r\n        res.type = \"image\";\r\n        return res;\r\n    };\r\n    R._engine.text = function (svg, x, y, text) {\r\n        var el = $(\"text\");\r\n        svg.canvas && svg.canvas.appendChild(el);\r\n        var res = new Element(el, svg);\r\n        res.attrs = {\r\n            x: x,\r\n            y: y,\r\n            \"text-anchor\": \"middle\",\r\n            text: text,\r\n            \"font-family\": R._availableAttrs[\"font-family\"],\r\n            \"font-size\": R._availableAttrs[\"font-size\"],\r\n            stroke: \"none\",\r\n            fill: \"#000\"\r\n        };\r\n        res.type = \"text\";\r\n        setFillAndStroke(res, res.attrs);\r\n        return res;\r\n    };\r\n    R._engine.setSize = function (width, height) {\r\n        this.width = width || this.width;\r\n        this.height = height || this.height;\r\n        this.canvas.setAttribute(\"width\", this.width);\r\n        this.canvas.setAttribute(\"height\", this.height);\r\n        if (this._viewBox) {\r\n            this.setViewBox.apply(this, this._viewBox);\r\n        }\r\n        return this;\r\n    };\r\n    R._engine.create = function () {\r\n        var con = R._getContainer.apply(0, arguments),\r\n            container = con && con.container,\r\n            x = con.x,\r\n            y = con.y,\r\n            width = con.width,\r\n            height = con.height;\r\n        if (!container) {\r\n            throw new Error(\"SVG container not found.\");\r\n        }\r\n        var cnvs = $(\"svg\"),\r\n            css = \"overflow:hidden;\",\r\n            isFloating;\r\n        x = x || 0;\r\n        y = y || 0;\r\n        width = width || 512;\r\n        height = height || 342;\r\n        $(cnvs, {\r\n            height: height,\r\n            version: 1.1,\r\n            width: width,\r\n            xmlns: \"http://www.w3.org/2000/svg\",\r\n            \"xmlns:xlink\": \"http://www.w3.org/1999/xlink\"\r\n        });\r\n        if (container == 1) {\r\n            cnvs.style.cssText = css + \"position:absolute;left:\" + x + \"px;top:\" + y + \"px\";\r\n            R._g.doc.body.appendChild(cnvs);\r\n            isFloating = 1;\r\n        } else {\r\n            cnvs.style.cssText = css + \"position:relative\";\r\n            if (container.firstChild) {\r\n                container.insertBefore(cnvs, container.firstChild);\r\n            } else {\r\n                container.appendChild(cnvs);\r\n            }\r\n        }\r\n        container = new R._Paper;\r\n        container.width = width;\r\n        container.height = height;\r\n        container.canvas = cnvs;\r\n        container.clear();\r\n        container._left = container._top = 0;\r\n        isFloating && (container.renderfix = function () {});\r\n        container.renderfix();\r\n        return container;\r\n    };\r\n    R._engine.setViewBox = function (x, y, w, h, fit) {\r\n        eve(\"raphael.setViewBox\", this, this._viewBox, [x, y, w, h, fit]);\r\n        var paperSize = this.getSize(),\r\n            size = mmax(w / paperSize.width, h / paperSize.height),\r\n            top = this.top,\r\n            aspectRatio = fit ? \"xMidYMid meet\" : \"xMinYMin\",\r\n            vb,\r\n            sw;\r\n        if (x == null) {\r\n            if (this._vbSize) {\r\n                size = 1;\r\n            }\r\n            delete this._vbSize;\r\n            vb = \"0 0 \" + this.width + S + this.height;\r\n        } else {\r\n            this._vbSize = size;\r\n            vb = x + S + y + S + w + S + h;\r\n        }\r\n        $(this.canvas, {\r\n            viewBox: vb,\r\n            preserveAspectRatio: aspectRatio\r\n        });\r\n        while (size && top) {\r\n            sw = \"stroke-width\" in top.attrs ? top.attrs[\"stroke-width\"] : 1;\r\n            top.attr({\"stroke-width\": sw});\r\n            top._.dirty = 1;\r\n            top._.dirtyT = 1;\r\n            top = top.prev;\r\n        }\r\n        this._viewBox = [x, y, w, h, !!fit];\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Paper.renderfix\r\n     [ method ]\r\n     **\r\n     * Fixes the issue of Firefox and IE9 regarding subpixel rendering. If paper is dependant\r\n     * on other elements after reflow it could shift half pixel which cause for lines to lost their crispness.\r\n     * This method fixes the issue.\r\n     **\r\n       Special thanks to Mariusz Nowak (http://www.medikoo.com/) for this method.\r\n    \\*/\r\n    R.prototype.renderfix = function () {\r\n        var cnvs = this.canvas,\r\n            s = cnvs.style,\r\n            pos;\r\n        try {\r\n            pos = cnvs.getScreenCTM() || cnvs.createSVGMatrix();\r\n        } catch (e) {\r\n            pos = cnvs.createSVGMatrix();\r\n        }\r\n        var left = -pos.e % 1,\r\n            top = -pos.f % 1;\r\n        if (left || top) {\r\n            if (left) {\r\n                this._left = (this._left + left) % 1;\r\n                s.left = this._left + \"px\";\r\n            }\r\n            if (top) {\r\n                this._top = (this._top + top) % 1;\r\n                s.top = this._top + \"px\";\r\n            }\r\n        }\r\n    };\r\n    /*\\\r\n     * Paper.clear\r\n     [ method ]\r\n     **\r\n     * Clears the paper, i.e. removes all the elements.\r\n    \\*/\r\n    R.prototype.clear = function () {\r\n        R.eve(\"raphael.clear\", this);\r\n        var c = this.canvas;\r\n        while (c.firstChild) {\r\n            c.removeChild(c.firstChild);\r\n        }\r\n        this.bottom = this.top = null;\r\n        (this.desc = $(\"desc\")).appendChild(R._g.doc.createTextNode(\"Created with Rapha\\xebl \" + R.version));\r\n        c.appendChild(this.desc);\r\n        c.appendChild(this.defs = $(\"defs\"));\r\n    };\r\n    /*\\\r\n     * Paper.remove\r\n     [ method ]\r\n     **\r\n     * Removes the paper from the DOM.\r\n    \\*/\r\n    R.prototype.remove = function () {\r\n        eve(\"raphael.remove\", this);\r\n        this.canvas.parentNode && this.canvas.parentNode.removeChild(this.canvas);\r\n        for (var i in this) {\r\n            this[i] = typeof this[i] == \"function\" ? R._removedFactory(i) : null;\r\n        }\r\n    };\r\n    var setproto = R.st;\r\n    for (var method in elproto) if (elproto[has](method) && !setproto[has](method)) {\r\n        setproto[method] = (function (methodname) {\r\n            return function () {\r\n                var arg = arguments;\r\n                return this.forEach(function (el) {\r\n                    el[methodname].apply(el, arg);\r\n                });\r\n            };\r\n        })(method);\r\n    }\r\n})();\r\n\r\n// ┌─────────────────────────────────────────────────────────────────────┐ \\\\\r\n// │ Raphaël - JavaScript Vector Library                                 │ \\\\\r\n// ├─────────────────────────────────────────────────────────────────────┤ \\\\\r\n// │ VML Module                                                          │ \\\\\r\n// ├─────────────────────────────────────────────────────────────────────┤ \\\\\r\n// │ Copyright (c) 2008-2011 Dmitry Baranovskiy (http://raphaeljs.com)   │ \\\\\r\n// │ Copyright (c) 2008-2011 Sencha Labs (http://sencha.com)             │ \\\\\r\n// │ Licensed under the MIT (http://raphaeljs.com/license.html) license. │ \\\\\r\n// └─────────────────────────────────────────────────────────────────────┘ \\\\\r\n\r\n(function(){\r\n    if (!R.vml) {\r\n        return;\r\n    }\r\n    var has = \"hasOwnProperty\",\r\n        Str = String,\r\n        toFloat = parseFloat,\r\n        math = Math,\r\n        round = math.round,\r\n        mmax = math.max,\r\n        mmin = math.min,\r\n        abs = math.abs,\r\n        fillString = \"fill\",\r\n        separator = /[, ]+/,\r\n        eve = R.eve,\r\n        ms = \" progid:DXImageTransform.Microsoft\",\r\n        S = \" \",\r\n        E = \"\",\r\n        map = {M: \"m\", L: \"l\", C: \"c\", Z: \"x\", m: \"t\", l: \"r\", c: \"v\", z: \"x\"},\r\n        bites = /([clmz]),?([^clmz]*)/gi,\r\n        blurregexp = / progid:\\S+Blur\\([^\\)]+\\)/g,\r\n        val = /-?[^,\\s-]+/g,\r\n        cssDot = \"position:absolute;left:0;top:0;width:1px;height:1px;behavior:url(#default#VML)\",\r\n        zoom = 21600,\r\n        pathTypes = {path: 1, rect: 1, image: 1},\r\n        ovalTypes = {circle: 1, ellipse: 1},\r\n        path2vml = function (path) {\r\n            var total =  /[ahqstv]/ig,\r\n                command = R._pathToAbsolute;\r\n            Str(path).match(total) && (command = R._path2curve);\r\n            total = /[clmz]/g;\r\n            if (command == R._pathToAbsolute && !Str(path).match(total)) {\r\n                var res = Str(path).replace(bites, function (all, command, args) {\r\n                    var vals = [],\r\n                        isMove = command.toLowerCase() == \"m\",\r\n                        res = map[command];\r\n                    args.replace(val, function (value) {\r\n                        if (isMove && vals.length == 2) {\r\n                            res += vals + map[command == \"m\" ? \"l\" : \"L\"];\r\n                            vals = [];\r\n                        }\r\n                        vals.push(round(value * zoom));\r\n                    });\r\n                    return res + vals;\r\n                });\r\n                return res;\r\n            }\r\n            var pa = command(path), p, r;\r\n            res = [];\r\n            for (var i = 0, ii = pa.length; i < ii; i++) {\r\n                p = pa[i];\r\n                r = pa[i][0].toLowerCase();\r\n                r == \"z\" && (r = \"x\");\r\n                for (var j = 1, jj = p.length; j < jj; j++) {\r\n                    r += round(p[j] * zoom) + (j != jj - 1 ? \",\" : E);\r\n                }\r\n                res.push(r);\r\n            }\r\n            return res.join(S);\r\n        },\r\n        compensation = function (deg, dx, dy) {\r\n            var m = R.matrix();\r\n            m.rotate(-deg, .5, .5);\r\n            return {\r\n                dx: m.x(dx, dy),\r\n                dy: m.y(dx, dy)\r\n            };\r\n        },\r\n        setCoords = function (p, sx, sy, dx, dy, deg) {\r\n            var _ = p._,\r\n                m = p.matrix,\r\n                fillpos = _.fillpos,\r\n                o = p.node,\r\n                s = o.style,\r\n                y = 1,\r\n                flip = \"\",\r\n                dxdy,\r\n                kx = zoom / sx,\r\n                ky = zoom / sy;\r\n            s.visibility = \"hidden\";\r\n            if (!sx || !sy) {\r\n                return;\r\n            }\r\n            o.coordsize = abs(kx) + S + abs(ky);\r\n            s.rotation = deg * (sx * sy < 0 ? -1 : 1);\r\n            if (deg) {\r\n                var c = compensation(deg, dx, dy);\r\n                dx = c.dx;\r\n                dy = c.dy;\r\n            }\r\n            sx < 0 && (flip += \"x\");\r\n            sy < 0 && (flip += \" y\") && (y = -1);\r\n            s.flip = flip;\r\n            o.coordorigin = (dx * -kx) + S + (dy * -ky);\r\n            if (fillpos || _.fillsize) {\r\n                var fill = o.getElementsByTagName(fillString);\r\n                fill = fill && fill[0];\r\n                o.removeChild(fill);\r\n                if (fillpos) {\r\n                    c = compensation(deg, m.x(fillpos[0], fillpos[1]), m.y(fillpos[0], fillpos[1]));\r\n                    fill.position = c.dx * y + S + c.dy * y;\r\n                }\r\n                if (_.fillsize) {\r\n                    fill.size = _.fillsize[0] * abs(sx) + S + _.fillsize[1] * abs(sy);\r\n                }\r\n                o.appendChild(fill);\r\n            }\r\n            s.visibility = \"visible\";\r\n        };\r\n    R.toString = function () {\r\n        return  \"Your browser doesn\\u2019t support SVG. Falling down to VML.\\nYou are running Rapha\\xebl \" + this.version;\r\n    };\r\n    var addArrow = function (o, value, isEnd) {\r\n        var values = Str(value).toLowerCase().split(\"-\"),\r\n            se = isEnd ? \"end\" : \"start\",\r\n            i = values.length,\r\n            type = \"classic\",\r\n            w = \"medium\",\r\n            h = \"medium\";\r\n        while (i--) {\r\n            switch (values[i]) {\r\n                case \"block\":\r\n                case \"classic\":\r\n                case \"oval\":\r\n                case \"diamond\":\r\n                case \"open\":\r\n                case \"none\":\r\n                    type = values[i];\r\n                    break;\r\n                case \"wide\":\r\n                case \"narrow\": h = values[i]; break;\r\n                case \"long\":\r\n                case \"short\": w = values[i]; break;\r\n            }\r\n        }\r\n        var stroke = o.node.getElementsByTagName(\"stroke\")[0];\r\n        stroke[se + \"arrow\"] = type;\r\n        stroke[se + \"arrowlength\"] = w;\r\n        stroke[se + \"arrowwidth\"] = h;\r\n    },\r\n    setFillAndStroke = function (o, params) {\r\n        // o.paper.canvas.style.display = \"none\";\r\n        o.attrs = o.attrs || {};\r\n        var node = o.node,\r\n            a = o.attrs,\r\n            s = node.style,\r\n            xy,\r\n            newpath = pathTypes[o.type] && (params.x != a.x || params.y != a.y || params.width != a.width || params.height != a.height || params.cx != a.cx || params.cy != a.cy || params.rx != a.rx || params.ry != a.ry || params.r != a.r),\r\n            isOval = ovalTypes[o.type] && (a.cx != params.cx || a.cy != params.cy || a.r != params.r || a.rx != params.rx || a.ry != params.ry),\r\n            res = o;\r\n\r\n\r\n        for (var par in params) if (params[has](par)) {\r\n            a[par] = params[par];\r\n        }\r\n        if (newpath) {\r\n            a.path = R._getPath[o.type](o);\r\n            o._.dirty = 1;\r\n        }\r\n        params.href && (node.href = params.href);\r\n        params.title && (node.title = params.title);\r\n        params.target && (node.target = params.target);\r\n        params.cursor && (s.cursor = params.cursor);\r\n        \"blur\" in params && o.blur(params.blur);\r\n        if (params.path && o.type == \"path\" || newpath) {\r\n            node.path = path2vml(~Str(a.path).toLowerCase().indexOf(\"r\") ? R._pathToAbsolute(a.path) : a.path);\r\n            o._.dirty = 1;\r\n            if (o.type == \"image\") {\r\n                o._.fillpos = [a.x, a.y];\r\n                o._.fillsize = [a.width, a.height];\r\n                setCoords(o, 1, 1, 0, 0, 0);\r\n            }\r\n        }\r\n        \"transform\" in params && o.transform(params.transform);\r\n        if (isOval) {\r\n            var cx = +a.cx,\r\n                cy = +a.cy,\r\n                rx = +a.rx || +a.r || 0,\r\n                ry = +a.ry || +a.r || 0;\r\n            node.path = R.format(\"ar{0},{1},{2},{3},{4},{1},{4},{1}x\", round((cx - rx) * zoom), round((cy - ry) * zoom), round((cx + rx) * zoom), round((cy + ry) * zoom), round(cx * zoom));\r\n            o._.dirty = 1;\r\n        }\r\n        if (\"clip-rect\" in params) {\r\n            var rect = Str(params[\"clip-rect\"]).split(separator);\r\n            if (rect.length == 4) {\r\n                rect[2] = +rect[2] + (+rect[0]);\r\n                rect[3] = +rect[3] + (+rect[1]);\r\n                var div = node.clipRect || R._g.doc.createElement(\"div\"),\r\n                    dstyle = div.style;\r\n                dstyle.clip = R.format(\"rect({1}px {2}px {3}px {0}px)\", rect);\r\n                if (!node.clipRect) {\r\n                    dstyle.position = \"absolute\";\r\n                    dstyle.top = 0;\r\n                    dstyle.left = 0;\r\n                    dstyle.width = o.paper.width + \"px\";\r\n                    dstyle.height = o.paper.height + \"px\";\r\n                    node.parentNode.insertBefore(div, node);\r\n                    div.appendChild(node);\r\n                    node.clipRect = div;\r\n                }\r\n            }\r\n            if (!params[\"clip-rect\"]) {\r\n                node.clipRect && (node.clipRect.style.clip = \"auto\");\r\n            }\r\n        }\r\n        if (o.textpath) {\r\n            var textpathStyle = o.textpath.style;\r\n            params.font && (textpathStyle.font = params.font);\r\n            params[\"font-family\"] && (textpathStyle.fontFamily = '\"' + params[\"font-family\"].split(\",\")[0].replace(/^['\"]+|['\"]+$/g, E) + '\"');\r\n            params[\"font-size\"] && (textpathStyle.fontSize = params[\"font-size\"]);\r\n            params[\"font-weight\"] && (textpathStyle.fontWeight = params[\"font-weight\"]);\r\n            params[\"font-style\"] && (textpathStyle.fontStyle = params[\"font-style\"]);\r\n        }\r\n        if (\"arrow-start\" in params) {\r\n            addArrow(res, params[\"arrow-start\"]);\r\n        }\r\n        if (\"arrow-end\" in params) {\r\n            addArrow(res, params[\"arrow-end\"], 1);\r\n        }\r\n        if (params.opacity != null || \r\n            params[\"stroke-width\"] != null ||\r\n            params.fill != null ||\r\n            params.src != null ||\r\n            params.stroke != null ||\r\n            params[\"stroke-width\"] != null ||\r\n            params[\"stroke-opacity\"] != null ||\r\n            params[\"fill-opacity\"] != null ||\r\n            params[\"stroke-dasharray\"] != null ||\r\n            params[\"stroke-miterlimit\"] != null ||\r\n            params[\"stroke-linejoin\"] != null ||\r\n            params[\"stroke-linecap\"] != null) {\r\n            var fill = node.getElementsByTagName(fillString),\r\n                newfill = false;\r\n            fill = fill && fill[0];\r\n            !fill && (newfill = fill = createNode(fillString));\r\n            if (o.type == \"image\" && params.src) {\r\n                fill.src = params.src;\r\n            }\r\n            params.fill && (fill.on = true);\r\n            if (fill.on == null || params.fill == \"none\" || params.fill === null) {\r\n                fill.on = false;\r\n            }\r\n            if (fill.on && params.fill) {\r\n                var isURL = Str(params.fill).match(R._ISURL);\r\n                if (isURL) {\r\n                    fill.parentNode == node && node.removeChild(fill);\r\n                    fill.rotate = true;\r\n                    fill.src = isURL[1];\r\n                    fill.type = \"tile\";\r\n                    var bbox = o.getBBox(1);\r\n                    fill.position = bbox.x + S + bbox.y;\r\n                    o._.fillpos = [bbox.x, bbox.y];\r\n\r\n                    R._preload(isURL[1], function () {\r\n                        o._.fillsize = [this.offsetWidth, this.offsetHeight];\r\n                    });\r\n                } else {\r\n                    fill.color = R.getRGB(params.fill).hex;\r\n                    fill.src = E;\r\n                    fill.type = \"solid\";\r\n                    if (R.getRGB(params.fill).error && (res.type in {circle: 1, ellipse: 1} || Str(params.fill).charAt() != \"r\") && addGradientFill(res, params.fill, fill)) {\r\n                        a.fill = \"none\";\r\n                        a.gradient = params.fill;\r\n                        fill.rotate = false;\r\n                    }\r\n                }\r\n            }\r\n            if (\"fill-opacity\" in params || \"opacity\" in params) {\r\n                var opacity = ((+a[\"fill-opacity\"] + 1 || 2) - 1) * ((+a.opacity + 1 || 2) - 1) * ((+R.getRGB(params.fill).o + 1 || 2) - 1);\r\n                opacity = mmin(mmax(opacity, 0), 1);\r\n                fill.opacity = opacity;\r\n                if (fill.src) {\r\n                    fill.color = \"none\";\r\n                }\r\n            }\r\n            node.appendChild(fill);\r\n            var stroke = (node.getElementsByTagName(\"stroke\") && node.getElementsByTagName(\"stroke\")[0]),\r\n            newstroke = false;\r\n            !stroke && (newstroke = stroke = createNode(\"stroke\"));\r\n            if ((params.stroke && params.stroke != \"none\") ||\r\n                params[\"stroke-width\"] ||\r\n                params[\"stroke-opacity\"] != null ||\r\n                params[\"stroke-dasharray\"] ||\r\n                params[\"stroke-miterlimit\"] ||\r\n                params[\"stroke-linejoin\"] ||\r\n                params[\"stroke-linecap\"]) {\r\n                stroke.on = true;\r\n            }\r\n            (params.stroke == \"none\" || params.stroke === null || stroke.on == null || params.stroke == 0 || params[\"stroke-width\"] == 0) && (stroke.on = false);\r\n            var strokeColor = R.getRGB(params.stroke);\r\n            stroke.on && params.stroke && (stroke.color = strokeColor.hex);\r\n            opacity = ((+a[\"stroke-opacity\"] + 1 || 2) - 1) * ((+a.opacity + 1 || 2) - 1) * ((+strokeColor.o + 1 || 2) - 1);\r\n            var width = (toFloat(params[\"stroke-width\"]) || 1) * .75;\r\n            opacity = mmin(mmax(opacity, 0), 1);\r\n            params[\"stroke-width\"] == null && (width = a[\"stroke-width\"]);\r\n            params[\"stroke-width\"] && (stroke.weight = width);\r\n            width && width < 1 && (opacity *= width) && (stroke.weight = 1);\r\n            stroke.opacity = opacity;\r\n        \r\n            params[\"stroke-linejoin\"] && (stroke.joinstyle = params[\"stroke-linejoin\"] || \"miter\");\r\n            stroke.miterlimit = params[\"stroke-miterlimit\"] || 8;\r\n            params[\"stroke-linecap\"] && (stroke.endcap = params[\"stroke-linecap\"] == \"butt\" ? \"flat\" : params[\"stroke-linecap\"] == \"square\" ? \"square\" : \"round\");\r\n            if (\"stroke-dasharray\" in params) {\r\n                var dasharray = {\r\n                    \"-\": \"shortdash\",\r\n                    \".\": \"shortdot\",\r\n                    \"-.\": \"shortdashdot\",\r\n                    \"-..\": \"shortdashdotdot\",\r\n                    \". \": \"dot\",\r\n                    \"- \": \"dash\",\r\n                    \"--\": \"longdash\",\r\n                    \"- .\": \"dashdot\",\r\n                    \"--.\": \"longdashdot\",\r\n                    \"--..\": \"longdashdotdot\"\r\n                };\r\n                stroke.dashstyle = dasharray[has](params[\"stroke-dasharray\"]) ? dasharray[params[\"stroke-dasharray\"]] : E;\r\n            }\r\n            newstroke && node.appendChild(stroke);\r\n        }\r\n        if (res.type == \"text\") {\r\n            res.paper.canvas.style.display = E;\r\n            var span = res.paper.span,\r\n                m = 100,\r\n                fontSize = a.font && a.font.match(/\\d+(?:\\.\\d*)?(?=px)/);\r\n            s = span.style;\r\n            a.font && (s.font = a.font);\r\n            a[\"font-family\"] && (s.fontFamily = a[\"font-family\"]);\r\n            a[\"font-weight\"] && (s.fontWeight = a[\"font-weight\"]);\r\n            a[\"font-style\"] && (s.fontStyle = a[\"font-style\"]);\r\n            fontSize = toFloat(a[\"font-size\"] || fontSize && fontSize[0]) || 10;\r\n            s.fontSize = fontSize * m + \"px\";\r\n            res.textpath.string && (span.innerHTML = Str(res.textpath.string).replace(/</g, \"&#60;\").replace(/&/g, \"&#38;\").replace(/\\n/g, \"<br>\"));\r\n            var brect = span.getBoundingClientRect();\r\n            res.W = a.w = (brect.right - brect.left) / m;\r\n            res.H = a.h = (brect.bottom - brect.top) / m;\r\n            // res.paper.canvas.style.display = \"none\";\r\n            res.X = a.x;\r\n            res.Y = a.y + res.H / 2;\r\n\r\n            (\"x\" in params || \"y\" in params) && (res.path.v = R.format(\"m{0},{1}l{2},{1}\", round(a.x * zoom), round(a.y * zoom), round(a.x * zoom) + 1));\r\n            var dirtyattrs = [\"x\", \"y\", \"text\", \"font\", \"font-family\", \"font-weight\", \"font-style\", \"font-size\"];\r\n            for (var d = 0, dd = dirtyattrs.length; d < dd; d++) if (dirtyattrs[d] in params) {\r\n                res._.dirty = 1;\r\n                break;\r\n            }\r\n        \r\n            // text-anchor emulation\r\n            switch (a[\"text-anchor\"]) {\r\n                case \"start\":\r\n                    res.textpath.style[\"v-text-align\"] = \"left\";\r\n                    res.bbx = res.W / 2;\r\n                break;\r\n                case \"end\":\r\n                    res.textpath.style[\"v-text-align\"] = \"right\";\r\n                    res.bbx = -res.W / 2;\r\n                break;\r\n                default:\r\n                    res.textpath.style[\"v-text-align\"] = \"center\";\r\n                    res.bbx = 0;\r\n                break;\r\n            }\r\n            res.textpath.style[\"v-text-kern\"] = true;\r\n        }\r\n        // res.paper.canvas.style.display = E;\r\n    },\r\n    addGradientFill = function (o, gradient, fill) {\r\n        o.attrs = o.attrs || {};\r\n        var attrs = o.attrs,\r\n            pow = Math.pow,\r\n            opacity,\r\n            oindex,\r\n            type = \"linear\",\r\n            fxfy = \".5 .5\";\r\n        o.attrs.gradient = gradient;\r\n        gradient = Str(gradient).replace(R._radial_gradient, function (all, fx, fy) {\r\n            type = \"radial\";\r\n            if (fx && fy) {\r\n                fx = toFloat(fx);\r\n                fy = toFloat(fy);\r\n                pow(fx - .5, 2) + pow(fy - .5, 2) > .25 && (fy = math.sqrt(.25 - pow(fx - .5, 2)) * ((fy > .5) * 2 - 1) + .5);\r\n                fxfy = fx + S + fy;\r\n            }\r\n            return E;\r\n        });\r\n        gradient = gradient.split(/\\s*\\-\\s*/);\r\n        if (type == \"linear\") {\r\n            var angle = gradient.shift();\r\n            angle = -toFloat(angle);\r\n            if (isNaN(angle)) {\r\n                return null;\r\n            }\r\n        }\r\n        var dots = R._parseDots(gradient);\r\n        if (!dots) {\r\n            return null;\r\n        }\r\n        o = o.shape || o.node;\r\n        if (dots.length) {\r\n            o.removeChild(fill);\r\n            fill.on = true;\r\n            fill.method = \"none\";\r\n            fill.color = dots[0].color;\r\n            fill.color2 = dots[dots.length - 1].color;\r\n            var clrs = [];\r\n            for (var i = 0, ii = dots.length; i < ii; i++) {\r\n                dots[i].offset && clrs.push(dots[i].offset + S + dots[i].color);\r\n            }\r\n            fill.colors = clrs.length ? clrs.join() : \"0% \" + fill.color;\r\n            if (type == \"radial\") {\r\n                fill.type = \"gradientTitle\";\r\n                fill.focus = \"100%\";\r\n                fill.focussize = \"0 0\";\r\n                fill.focusposition = fxfy;\r\n                fill.angle = 0;\r\n            } else {\r\n                // fill.rotate= true;\r\n                fill.type = \"gradient\";\r\n                fill.angle = (270 - angle) % 360;\r\n            }\r\n            o.appendChild(fill);\r\n        }\r\n        return 1;\r\n    },\r\n    Element = function (node, vml) {\r\n        this[0] = this.node = node;\r\n        node.raphael = true;\r\n        this.id = R._oid++;\r\n        node.raphaelid = this.id;\r\n        this.X = 0;\r\n        this.Y = 0;\r\n        this.attrs = {};\r\n        this.paper = vml;\r\n        this.matrix = R.matrix();\r\n        this._ = {\r\n            transform: [],\r\n            sx: 1,\r\n            sy: 1,\r\n            dx: 0,\r\n            dy: 0,\r\n            deg: 0,\r\n            dirty: 1,\r\n            dirtyT: 1\r\n        };\r\n        !vml.bottom && (vml.bottom = this);\r\n        this.prev = vml.top;\r\n        vml.top && (vml.top.next = this);\r\n        vml.top = this;\r\n        this.next = null;\r\n    };\r\n    var elproto = R.el;\r\n\r\n    Element.prototype = elproto;\r\n    elproto.constructor = Element;\r\n    elproto.transform = function (tstr) {\r\n        if (tstr == null) {\r\n            return this._.transform;\r\n        }\r\n        var vbs = this.paper._viewBoxShift,\r\n            vbt = vbs ? \"s\" + [vbs.scale, vbs.scale] + \"-1-1t\" + [vbs.dx, vbs.dy] : E,\r\n            oldt;\r\n        if (vbs) {\r\n            oldt = tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, this._.transform || E);\r\n        }\r\n        R._extractTransform(this, vbt + tstr);\r\n        var matrix = this.matrix.clone(),\r\n            skew = this.skew,\r\n            o = this.node,\r\n            split,\r\n            isGrad = ~Str(this.attrs.fill).indexOf(\"-\"),\r\n            isPatt = !Str(this.attrs.fill).indexOf(\"url(\");\r\n        matrix.translate(1, 1);\r\n        if (isPatt || isGrad || this.type == \"image\") {\r\n            skew.matrix = \"1 0 0 1\";\r\n            skew.offset = \"0 0\";\r\n            split = matrix.split();\r\n            if ((isGrad && split.noRotation) || !split.isSimple) {\r\n                o.style.filter = matrix.toFilter();\r\n                var bb = this.getBBox(),\r\n                    bbt = this.getBBox(1),\r\n                    dx = bb.x - bbt.x,\r\n                    dy = bb.y - bbt.y;\r\n                o.coordorigin = (dx * -zoom) + S + (dy * -zoom);\r\n                setCoords(this, 1, 1, dx, dy, 0);\r\n            } else {\r\n                o.style.filter = E;\r\n                setCoords(this, split.scalex, split.scaley, split.dx, split.dy, split.rotate);\r\n            }\r\n        } else {\r\n            o.style.filter = E;\r\n            skew.matrix = Str(matrix);\r\n            skew.offset = matrix.offset();\r\n        }\r\n        if (oldt !== null) { // empty string value is true as well\r\n            this._.transform = oldt;\r\n            R._extractTransform(this, oldt);\r\n        }\r\n        return this;\r\n    };\r\n    elproto.rotate = function (deg, cx, cy) {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        if (deg == null) {\r\n            return;\r\n        }\r\n        deg = Str(deg).split(separator);\r\n        if (deg.length - 1) {\r\n            cx = toFloat(deg[1]);\r\n            cy = toFloat(deg[2]);\r\n        }\r\n        deg = toFloat(deg[0]);\r\n        (cy == null) && (cx = cy);\r\n        if (cx == null || cy == null) {\r\n            var bbox = this.getBBox(1);\r\n            cx = bbox.x + bbox.width / 2;\r\n            cy = bbox.y + bbox.height / 2;\r\n        }\r\n        this._.dirtyT = 1;\r\n        this.transform(this._.transform.concat([[\"r\", deg, cx, cy]]));\r\n        return this;\r\n    };\r\n    elproto.translate = function (dx, dy) {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        dx = Str(dx).split(separator);\r\n        if (dx.length - 1) {\r\n            dy = toFloat(dx[1]);\r\n        }\r\n        dx = toFloat(dx[0]) || 0;\r\n        dy = +dy || 0;\r\n        if (this._.bbox) {\r\n            this._.bbox.x += dx;\r\n            this._.bbox.y += dy;\r\n        }\r\n        this.transform(this._.transform.concat([[\"t\", dx, dy]]));\r\n        return this;\r\n    };\r\n    elproto.scale = function (sx, sy, cx, cy) {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        sx = Str(sx).split(separator);\r\n        if (sx.length - 1) {\r\n            sy = toFloat(sx[1]);\r\n            cx = toFloat(sx[2]);\r\n            cy = toFloat(sx[3]);\r\n            isNaN(cx) && (cx = null);\r\n            isNaN(cy) && (cy = null);\r\n        }\r\n        sx = toFloat(sx[0]);\r\n        (sy == null) && (sy = sx);\r\n        (cy == null) && (cx = cy);\r\n        if (cx == null || cy == null) {\r\n            var bbox = this.getBBox(1);\r\n        }\r\n        cx = cx == null ? bbox.x + bbox.width / 2 : cx;\r\n        cy = cy == null ? bbox.y + bbox.height / 2 : cy;\r\n    \r\n        this.transform(this._.transform.concat([[\"s\", sx, sy, cx, cy]]));\r\n        this._.dirtyT = 1;\r\n        return this;\r\n    };\r\n    elproto.hide = function () {\r\n        !this.removed && (this.node.style.display = \"none\");\r\n        return this;\r\n    };\r\n    elproto.show = function () {\r\n        !this.removed && (this.node.style.display = E);\r\n        return this;\r\n    };\r\n    // Needed to fix the vml setViewBox issues\r\n    elproto.auxGetBBox = R.el.getBBox;\r\n    elproto.getBBox = function(){\r\n      var b = this.auxGetBBox();\r\n      if (this.paper && this.paper._viewBoxShift)\r\n      {\r\n        var c = {};\r\n        var z = 1/this.paper._viewBoxShift.scale;\r\n        c.x = b.x - this.paper._viewBoxShift.dx;\r\n        c.x *= z;\r\n        c.y = b.y - this.paper._viewBoxShift.dy;\r\n        c.y *= z;\r\n        c.width  = b.width  * z;\r\n        c.height = b.height * z;\r\n        c.x2 = c.x + c.width;\r\n        c.y2 = c.y + c.height;\r\n        return c;\r\n      }\r\n      return b;\r\n    };\r\n    elproto._getBBox = function () {\r\n        if (this.removed) {\r\n            return {};\r\n        }\r\n        return {\r\n            x: this.X + (this.bbx || 0) - this.W / 2,\r\n            y: this.Y - this.H,\r\n            width: this.W,\r\n            height: this.H\r\n        };\r\n    };\r\n    elproto.remove = function () {\r\n        if (this.removed || !this.node.parentNode) {\r\n            return;\r\n        }\r\n        this.paper.__set__ && this.paper.__set__.exclude(this);\r\n        R.eve.unbind(\"raphael.*.*.\" + this.id);\r\n        R._tear(this, this.paper);\r\n        this.node.parentNode.removeChild(this.node);\r\n        this.shape && this.shape.parentNode.removeChild(this.shape);\r\n        for (var i in this) {\r\n            this[i] = typeof this[i] == \"function\" ? R._removedFactory(i) : null;\r\n        }\r\n        this.removed = true;\r\n    };\r\n    elproto.attr = function (name, value) {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        if (name == null) {\r\n            var res = {};\r\n            for (var a in this.attrs) if (this.attrs[has](a)) {\r\n                res[a] = this.attrs[a];\r\n            }\r\n            res.gradient && res.fill == \"none\" && (res.fill = res.gradient) && delete res.gradient;\r\n            res.transform = this._.transform;\r\n            return res;\r\n        }\r\n        if (value == null && R.is(name, \"string\")) {\r\n            if (name == fillString && this.attrs.fill == \"none\" && this.attrs.gradient) {\r\n                return this.attrs.gradient;\r\n            }\r\n            var names = name.split(separator),\r\n                out = {};\r\n            for (var i = 0, ii = names.length; i < ii; i++) {\r\n                name = names[i];\r\n                if (name in this.attrs) {\r\n                    out[name] = this.attrs[name];\r\n                } else if (R.is(this.paper.customAttributes[name], \"function\")) {\r\n                    out[name] = this.paper.customAttributes[name].def;\r\n                } else {\r\n                    out[name] = R._availableAttrs[name];\r\n                }\r\n            }\r\n            return ii - 1 ? out : out[names[0]];\r\n        }\r\n        if (this.attrs && value == null && R.is(name, \"array\")) {\r\n            out = {};\r\n            for (i = 0, ii = name.length; i < ii; i++) {\r\n                out[name[i]] = this.attr(name[i]);\r\n            }\r\n            return out;\r\n        }\r\n        var params;\r\n        if (value != null) {\r\n            params = {};\r\n            params[name] = value;\r\n        }\r\n        value == null && R.is(name, \"object\") && (params = name);\r\n        for (var key in params) {\r\n            eve(\"raphael.attr.\" + key + \".\" + this.id, this, params[key]);\r\n        }\r\n        if (params) {\r\n            for (key in this.paper.customAttributes) if (this.paper.customAttributes[has](key) && params[has](key) && R.is(this.paper.customAttributes[key], \"function\")) {\r\n                var par = this.paper.customAttributes[key].apply(this, [].concat(params[key]));\r\n                this.attrs[key] = params[key];\r\n                for (var subkey in par) if (par[has](subkey)) {\r\n                    params[subkey] = par[subkey];\r\n                }\r\n            }\r\n            // this.paper.canvas.style.display = \"none\";\r\n            if (params.text && this.type == \"text\") {\r\n                this.textpath.string = params.text;\r\n            }\r\n            setFillAndStroke(this, params);\r\n            // this.paper.canvas.style.display = E;\r\n        }\r\n        return this;\r\n    };\r\n    elproto.toFront = function () {\r\n        !this.removed && this.node.parentNode.appendChild(this.node);\r\n        this.paper && this.paper.top != this && R._tofront(this, this.paper);\r\n        return this;\r\n    };\r\n    elproto.toBack = function () {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        if (this.node.parentNode.firstChild != this.node) {\r\n            this.node.parentNode.insertBefore(this.node, this.node.parentNode.firstChild);\r\n            R._toback(this, this.paper);\r\n        }\r\n        return this;\r\n    };\r\n    elproto.insertAfter = function (element) {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        if (element.constructor == R.st.constructor) {\r\n            element = element[element.length - 1];\r\n        }\r\n        if (element.node.nextSibling) {\r\n            element.node.parentNode.insertBefore(this.node, element.node.nextSibling);\r\n        } else {\r\n            element.node.parentNode.appendChild(this.node);\r\n        }\r\n        R._insertafter(this, element, this.paper);\r\n        return this;\r\n    };\r\n    elproto.insertBefore = function (element) {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        if (element.constructor == R.st.constructor) {\r\n            element = element[0];\r\n        }\r\n        element.node.parentNode.insertBefore(this.node, element.node);\r\n        R._insertbefore(this, element, this.paper);\r\n        return this;\r\n    };\r\n    elproto.blur = function (size) {\r\n        var s = this.node.runtimeStyle,\r\n            f = s.filter;\r\n        f = f.replace(blurregexp, E);\r\n        if (+size !== 0) {\r\n            this.attrs.blur = size;\r\n            s.filter = f + S + ms + \".Blur(pixelradius=\" + (+size || 1.5) + \")\";\r\n            s.margin = R.format(\"-{0}px 0 0 -{0}px\", round(+size || 1.5));\r\n        } else {\r\n            s.filter = f;\r\n            s.margin = 0;\r\n            delete this.attrs.blur;\r\n        }\r\n        return this;\r\n    };\r\n\r\n    R._engine.path = function (pathString, vml) {\r\n        var el = createNode(\"shape\");\r\n        el.style.cssText = cssDot;\r\n        el.coordsize = zoom + S + zoom;\r\n        el.coordorigin = vml.coordorigin;\r\n        var p = new Element(el, vml),\r\n            attr = {fill: \"none\", stroke: \"#000\"};\r\n        pathString && (attr.path = pathString);\r\n        p.type = \"path\";\r\n        p.path = [];\r\n        p.Path = E;\r\n        setFillAndStroke(p, attr);\r\n        vml.canvas.appendChild(el);\r\n        var skew = createNode(\"skew\");\r\n        skew.on = true;\r\n        el.appendChild(skew);\r\n        p.skew = skew;\r\n        p.transform(E);\r\n        return p;\r\n    };\r\n    R._engine.rect = function (vml, x, y, w, h, r) {\r\n        var path = R._rectPath(x, y, w, h, r),\r\n            res = vml.path(path),\r\n            a = res.attrs;\r\n        res.X = a.x = x;\r\n        res.Y = a.y = y;\r\n        res.W = a.width = w;\r\n        res.H = a.height = h;\r\n        a.r = r;\r\n        a.path = path;\r\n        res.type = \"rect\";\r\n        return res;\r\n    };\r\n    R._engine.ellipse = function (vml, x, y, rx, ry) {\r\n        var res = vml.path(),\r\n            a = res.attrs;\r\n        res.X = x - rx;\r\n        res.Y = y - ry;\r\n        res.W = rx * 2;\r\n        res.H = ry * 2;\r\n        res.type = \"ellipse\";\r\n        setFillAndStroke(res, {\r\n            cx: x,\r\n            cy: y,\r\n            rx: rx,\r\n            ry: ry\r\n        });\r\n        return res;\r\n    };\r\n    R._engine.circle = function (vml, x, y, r) {\r\n        var res = vml.path(),\r\n            a = res.attrs;\r\n        res.X = x - r;\r\n        res.Y = y - r;\r\n        res.W = res.H = r * 2;\r\n        res.type = \"circle\";\r\n        setFillAndStroke(res, {\r\n            cx: x,\r\n            cy: y,\r\n            r: r\r\n        });\r\n        return res;\r\n    };\r\n    R._engine.image = function (vml, src, x, y, w, h) {\r\n        var path = R._rectPath(x, y, w, h),\r\n            res = vml.path(path).attr({stroke: \"none\"}),\r\n            a = res.attrs,\r\n            node = res.node,\r\n            fill = node.getElementsByTagName(fillString)[0];\r\n        a.src = src;\r\n        res.X = a.x = x;\r\n        res.Y = a.y = y;\r\n        res.W = a.width = w;\r\n        res.H = a.height = h;\r\n        a.path = path;\r\n        res.type = \"image\";\r\n        fill.parentNode == node && node.removeChild(fill);\r\n        fill.rotate = true;\r\n        fill.src = src;\r\n        fill.type = \"tile\";\r\n        res._.fillpos = [x, y];\r\n        res._.fillsize = [w, h];\r\n        node.appendChild(fill);\r\n        setCoords(res, 1, 1, 0, 0, 0);\r\n        return res;\r\n    };\r\n    R._engine.text = function (vml, x, y, text) {\r\n        var el = createNode(\"shape\"),\r\n            path = createNode(\"path\"),\r\n            o = createNode(\"textpath\");\r\n        x = x || 0;\r\n        y = y || 0;\r\n        text = text || \"\";\r\n        path.v = R.format(\"m{0},{1}l{2},{1}\", round(x * zoom), round(y * zoom), round(x * zoom) + 1);\r\n        path.textpathok = true;\r\n        o.string = Str(text);\r\n        o.on = true;\r\n        el.style.cssText = cssDot;\r\n        el.coordsize = zoom + S + zoom;\r\n        el.coordorigin = \"0 0\";\r\n        var p = new Element(el, vml),\r\n            attr = {\r\n                fill: \"#000\",\r\n                stroke: \"none\",\r\n                font: R._availableAttrs.font,\r\n                text: text\r\n            };\r\n        p.shape = el;\r\n        p.path = path;\r\n        p.textpath = o;\r\n        p.type = \"text\";\r\n        p.attrs.text = Str(text);\r\n        p.attrs.x = x;\r\n        p.attrs.y = y;\r\n        p.attrs.w = 1;\r\n        p.attrs.h = 1;\r\n        setFillAndStroke(p, attr);\r\n        el.appendChild(o);\r\n        el.appendChild(path);\r\n        vml.canvas.appendChild(el);\r\n        var skew = createNode(\"skew\");\r\n        skew.on = true;\r\n        el.appendChild(skew);\r\n        p.skew = skew;\r\n        p.transform(E);\r\n        return p;\r\n    };\r\n    R._engine.setSize = function (width, height) {\r\n        var cs = this.canvas.style;\r\n        this.width = width;\r\n        this.height = height;\r\n        width == +width && (width += \"px\");\r\n        height == +height && (height += \"px\");\r\n        cs.width = width;\r\n        cs.height = height;\r\n        cs.clip = \"rect(0 \" + width + \" \" + height + \" 0)\";\r\n        if (this._viewBox) {\r\n            R._engine.setViewBox.apply(this, this._viewBox);\r\n        }\r\n        return this;\r\n    };\r\n    R._engine.setViewBox = function (x, y, w, h, fit) {\r\n        R.eve(\"raphael.setViewBox\", this, this._viewBox, [x, y, w, h, fit]);\r\n        var paperSize = this.getSize(),\r\n            width = paperSize.width,\r\n            height = paperSize.height,\r\n            H, W;\r\n        if (fit) {\r\n            H = height / h;\r\n            W = width / w;\r\n            if (w * H < width) {\r\n                x -= (width - w * H) / 2 / H;\r\n            }\r\n            if (h * W < height) {\r\n                y -= (height - h * W) / 2 / W;\r\n            }\r\n        }\r\n        this._viewBox = [x, y, w, h, !!fit];\r\n        this._viewBoxShift = {\r\n            dx: -x,\r\n            dy: -y,\r\n            scale: paperSize\r\n        };\r\n        this.forEach(function (el) {\r\n            el.transform(\"...\");\r\n        });\r\n        return this;\r\n    };\r\n    var createNode;\r\n    R._engine.initWin = function (win) {\r\n            var doc = win.document;\r\n            if (doc.styleSheets.length < 31) {\r\n                doc.createStyleSheet().addRule(\".rvml\", \"behavior:url(#default#VML)\");\r\n            } else {\r\n                // no more room, add to the existing one\r\n                // http://msdn.microsoft.com/en-us/library/ms531194%28VS.85%29.aspx\r\n                doc.styleSheets[0].addRule(\".rvml\", \"behavior:url(#default#VML)\");\r\n            }\r\n            try {\r\n                !doc.namespaces.rvml && doc.namespaces.add(\"rvml\", \"urn:schemas-microsoft-com:vml\");\r\n                createNode = function (tagName) {\r\n                    return doc.createElement('<rvml:' + tagName + ' class=\"rvml\">');\r\n                };\r\n            } catch (e) {\r\n                createNode = function (tagName) {\r\n                    return doc.createElement('<' + tagName + ' xmlns=\"urn:schemas-microsoft.com:vml\" class=\"rvml\">');\r\n                };\r\n            }\r\n        };\r\n    R._engine.initWin(R._g.win);\r\n    R._engine.create = function () {\r\n        var con = R._getContainer.apply(0, arguments),\r\n            container = con.container,\r\n            height = con.height,\r\n            s,\r\n            width = con.width,\r\n            x = con.x,\r\n            y = con.y;\r\n        if (!container) {\r\n            throw new Error(\"VML container not found.\");\r\n        }\r\n        var res = new R._Paper,\r\n            c = res.canvas = R._g.doc.createElement(\"div\"),\r\n            cs = c.style;\r\n        x = x || 0;\r\n        y = y || 0;\r\n        width = width || 512;\r\n        height = height || 342;\r\n        res.width = width;\r\n        res.height = height;\r\n        width == +width && (width += \"px\");\r\n        height == +height && (height += \"px\");\r\n        res.coordsize = zoom * 1e3 + S + zoom * 1e3;\r\n        res.coordorigin = \"0 0\";\r\n        res.span = R._g.doc.createElement(\"span\");\r\n        res.span.style.cssText = \"position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;\";\r\n        c.appendChild(res.span);\r\n        cs.cssText = R.format(\"top:0;left:0;width:{0};height:{1};display:inline-block;position:relative;clip:rect(0 {0} {1} 0);overflow:hidden\", width, height);\r\n        if (container == 1) {\r\n            R._g.doc.body.appendChild(c);\r\n            cs.left = x + \"px\";\r\n            cs.top = y + \"px\";\r\n            cs.position = \"absolute\";\r\n        } else {\r\n            if (container.firstChild) {\r\n                container.insertBefore(c, container.firstChild);\r\n            } else {\r\n                container.appendChild(c);\r\n            }\r\n        }\r\n        res.renderfix = function () {};\r\n        return res;\r\n    };\r\n    R.prototype.clear = function () {\r\n        R.eve(\"raphael.clear\", this);\r\n        this.canvas.innerHTML = E;\r\n        this.span = R._g.doc.createElement(\"span\");\r\n        this.span.style.cssText = \"position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;display:inline;\";\r\n        this.canvas.appendChild(this.span);\r\n        this.bottom = this.top = null;\r\n    };\r\n    R.prototype.remove = function () {\r\n        R.eve(\"raphael.remove\", this);\r\n        this.canvas.parentNode.removeChild(this.canvas);\r\n        for (var i in this) {\r\n            this[i] = typeof this[i] == \"function\" ? R._removedFactory(i) : null;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    var setproto = R.st;\r\n    for (var method in elproto) if (elproto[has](method) && !setproto[has](method)) {\r\n        setproto[method] = (function (methodname) {\r\n            return function () {\r\n                var arg = arguments;\r\n                return this.forEach(function (el) {\r\n                    el[methodname].apply(el, arg);\r\n                });\r\n            };\r\n        })(method);\r\n    }\r\n})();\r\n\r\n    // EXPOSE\r\n    // SVG and VML are appended just before the EXPOSE line\r\n    // Even with AMD, Raphael should be defined globally\r\n    oldRaphael.was ? (g.win.Raphael = R) : (Raphael = R);\r\n\r\n    if(typeof exports == \"object\"){\r\n        module.exports = R;\r\n    }\r\n    return R;\r\n}));","// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\r\n// \r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n// \r\n// http://www.apache.org/licenses/LICENSE-2.0\r\n// \r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// ┌────────────────────────────────────────────────────────────┐ \\\\\r\n// │ Eve 0.5.0 - JavaScript Events Library                      │ \\\\\r\n// ├────────────────────────────────────────────────────────────┤ \\\\\r\n// │ Author Dmitry Baranovskiy (http://dmitry.baranovskiy.com/) │ \\\\\r\n// └────────────────────────────────────────────────────────────┘ \\\\\r\n\r\n(function (glob) {\r\n    var version = \"0.5.0\",\r\n        has = \"hasOwnProperty\",\r\n        separator = /[\\.\\/]/,\r\n        comaseparator = /\\s*,\\s*/,\r\n        wildcard = \"*\",\r\n        fun = function () {},\r\n        numsort = function (a, b) {\r\n            return a - b;\r\n        },\r\n        current_event,\r\n        stop,\r\n        events = {n: {}},\r\n        firstDefined = function () {\r\n            for (var i = 0, ii = this.length; i < ii; i++) {\r\n                if (typeof this[i] != \"undefined\") {\r\n                    return this[i];\r\n                }\r\n            }\r\n        },\r\n        lastDefined = function () {\r\n            var i = this.length;\r\n            while (--i) {\r\n                if (typeof this[i] != \"undefined\") {\r\n                    return this[i];\r\n                }\r\n            }\r\n        },\r\n        objtos = Object.prototype.toString,\r\n        Str = String,\r\n        isArray = Array.isArray || function (ar) {\r\n            return ar instanceof Array || objtos.call(ar) == \"[object Array]\";\r\n        };\r\n    /*\\\r\n     * eve\r\n     [ method ]\r\n\r\n     * Fires event with given `name`, given scope and other parameters.\r\n\r\n     > Arguments\r\n\r\n     - name (string) name of the *event*, dot (`.`) or slash (`/`) separated\r\n     - scope (object) context for the event handlers\r\n     - varargs (...) the rest of arguments will be sent to event handlers\r\n\r\n     = (object) array of returned values from the listeners. Array has two methods `.firstDefined()` and `.lastDefined()` to get first or last not `undefined` value.\r\n    \\*/\r\n        eve = function (name, scope) {\r\n            var e = events,\r\n                oldstop = stop,\r\n                args = Array.prototype.slice.call(arguments, 2),\r\n                listeners = eve.listeners(name),\r\n                z = 0,\r\n                f = false,\r\n                l,\r\n                indexed = [],\r\n                queue = {},\r\n                out = [],\r\n                ce = current_event,\r\n                errors = [];\r\n            out.firstDefined = firstDefined;\r\n            out.lastDefined = lastDefined;\r\n            current_event = name;\r\n            stop = 0;\r\n            for (var i = 0, ii = listeners.length; i < ii; i++) if (\"zIndex\" in listeners[i]) {\r\n                indexed.push(listeners[i].zIndex);\r\n                if (listeners[i].zIndex < 0) {\r\n                    queue[listeners[i].zIndex] = listeners[i];\r\n                }\r\n            }\r\n            indexed.sort(numsort);\r\n            while (indexed[z] < 0) {\r\n                l = queue[indexed[z++]];\r\n                out.push(l.apply(scope, args));\r\n                if (stop) {\r\n                    stop = oldstop;\r\n                    return out;\r\n                }\r\n            }\r\n            for (i = 0; i < ii; i++) {\r\n                l = listeners[i];\r\n                if (\"zIndex\" in l) {\r\n                    if (l.zIndex == indexed[z]) {\r\n                        out.push(l.apply(scope, args));\r\n                        if (stop) {\r\n                            break;\r\n                        }\r\n                        do {\r\n                            z++;\r\n                            l = queue[indexed[z]];\r\n                            l && out.push(l.apply(scope, args));\r\n                            if (stop) {\r\n                                break;\r\n                            }\r\n                        } while (l)\r\n                    } else {\r\n                        queue[l.zIndex] = l;\r\n                    }\r\n                } else {\r\n                    out.push(l.apply(scope, args));\r\n                    if (stop) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            stop = oldstop;\r\n            current_event = ce;\r\n            return out;\r\n        };\r\n        // Undocumented. Debug only.\r\n        eve._events = events;\r\n    /*\\\r\n     * eve.listeners\r\n     [ method ]\r\n\r\n     * Internal method which gives you array of all event handlers that will be triggered by the given `name`.\r\n\r\n     > Arguments\r\n\r\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated\r\n\r\n     = (array) array of event handlers\r\n    \\*/\r\n    eve.listeners = function (name) {\r\n        var names = isArray(name) ? name : name.split(separator),\r\n            e = events,\r\n            item,\r\n            items,\r\n            k,\r\n            i,\r\n            ii,\r\n            j,\r\n            jj,\r\n            nes,\r\n            es = [e],\r\n            out = [];\r\n        for (i = 0, ii = names.length; i < ii; i++) {\r\n            nes = [];\r\n            for (j = 0, jj = es.length; j < jj; j++) {\r\n                e = es[j].n;\r\n                items = [e[names[i]], e[wildcard]];\r\n                k = 2;\r\n                while (k--) {\r\n                    item = items[k];\r\n                    if (item) {\r\n                        nes.push(item);\r\n                        out = out.concat(item.f || []);\r\n                    }\r\n                }\r\n            }\r\n            es = nes;\r\n        }\r\n        return out;\r\n    };\r\n    /*\\\r\n     * eve.separator\r\n     [ method ]\r\n\r\n     * If for some reasons you don’t like default separators (`.` or `/`) you can specify yours\r\n     * here. Be aware that if you pass a string longer than one character it will be treated as\r\n     * a list of characters.\r\n\r\n     - separator (string) new separator. Empty string resets to default: `.` or `/`.\r\n    \\*/\r\n    eve.separator = function (sep) {\r\n        if (sep) {\r\n            sep = Str(sep).replace(/(?=[\\.\\^\\]\\[\\-])/g, \"\\\\\");\r\n            sep = \"[\" + sep + \"]\";\r\n            separator = new RegExp(sep);\r\n        } else {\r\n            separator = /[\\.\\/]/;\r\n        }\r\n    };\r\n    /*\\\r\n     * eve.on\r\n     [ method ]\r\n     **\r\n     * Binds given event handler with a given name. You can use wildcards “`*`” for the names:\r\n     | eve.on(\"*.under.*\", f);\r\n     | eve(\"mouse.under.floor\"); // triggers f\r\n     * Use @eve to trigger the listener.\r\n     **\r\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\r\n     - f (function) event handler function\r\n     **\r\n     - name (array) if you don’t want to use separators, you can use array of strings\r\n     - f (function) event handler function\r\n     **\r\n     = (function) returned function accepts a single numeric parameter that represents z-index of the handler. It is an optional feature and only used when you need to ensure that some subset of handlers will be invoked in a given order, despite of the order of assignment. \r\n     > Example:\r\n     | eve.on(\"mouse\", eatIt)(2);\r\n     | eve.on(\"mouse\", scream);\r\n     | eve.on(\"mouse\", catchIt)(1);\r\n     * This will ensure that `catchIt` function will be called before `eatIt`.\r\n     *\r\n     * If you want to put your handler before non-indexed handlers, specify a negative value.\r\n     * Note: I assume most of the time you don’t need to worry about z-index, but it’s nice to have this feature “just in case”.\r\n    \\*/\r\n    eve.on = function (name, f) {\r\n        if (typeof f != \"function\") {\r\n            return function () {};\r\n        }\r\n        var names = isArray(name) ? (isArray(name[0]) ? name : [name]) : Str(name).split(comaseparator);\r\n        for (var i = 0, ii = names.length; i < ii; i++) {\r\n            (function (name) {\r\n                var names = isArray(name) ? name : Str(name).split(separator),\r\n                    e = events,\r\n                    exist;\r\n                for (var i = 0, ii = names.length; i < ii; i++) {\r\n                    e = e.n;\r\n                    e = e.hasOwnProperty(names[i]) && e[names[i]] || (e[names[i]] = {n: {}});\r\n                }\r\n                e.f = e.f || [];\r\n                for (i = 0, ii = e.f.length; i < ii; i++) if (e.f[i] == f) {\r\n                    exist = true;\r\n                    break;\r\n                }\r\n                !exist && e.f.push(f);\r\n            }(names[i]));\r\n        }\r\n        return function (zIndex) {\r\n            if (+zIndex == +zIndex) {\r\n                f.zIndex = +zIndex;\r\n            }\r\n        };\r\n    };\r\n    /*\\\r\n     * eve.f\r\n     [ method ]\r\n     **\r\n     * Returns function that will fire given event with optional arguments.\r\n     * Arguments that will be passed to the result function will be also\r\n     * concated to the list of final arguments.\r\n     | el.onclick = eve.f(\"click\", 1, 2);\r\n     | eve.on(\"click\", function (a, b, c) {\r\n     |     console.log(a, b, c); // 1, 2, [event object]\r\n     | });\r\n     > Arguments\r\n     - event (string) event name\r\n     - varargs (…) and any other arguments\r\n     = (function) possible event handler function\r\n    \\*/\r\n    eve.f = function (event) {\r\n        var attrs = [].slice.call(arguments, 1);\r\n        return function () {\r\n            eve.apply(null, [event, null].concat(attrs).concat([].slice.call(arguments, 0)));\r\n        };\r\n    };\r\n    /*\\\r\n     * eve.stop\r\n     [ method ]\r\n     **\r\n     * Is used inside an event handler to stop the event, preventing any subsequent listeners from firing.\r\n    \\*/\r\n    eve.stop = function () {\r\n        stop = 1;\r\n    };\r\n    /*\\\r\n     * eve.nt\r\n     [ method ]\r\n     **\r\n     * Could be used inside event handler to figure out actual name of the event.\r\n     **\r\n     > Arguments\r\n     **\r\n     - subname (string) #optional subname of the event\r\n     **\r\n     = (string) name of the event, if `subname` is not specified\r\n     * or\r\n     = (boolean) `true`, if current event’s name contains `subname`\r\n    \\*/\r\n    eve.nt = function (subname) {\r\n        var cur = isArray(current_event) ? current_event.join(\".\") : current_event;\r\n        if (subname) {\r\n            return new RegExp(\"(?:\\\\.|\\\\/|^)\" + subname + \"(?:\\\\.|\\\\/|$)\").test(cur);\r\n        }\r\n        return cur;\r\n    };\r\n    /*\\\r\n     * eve.nts\r\n     [ method ]\r\n     **\r\n     * Could be used inside event handler to figure out actual name of the event.\r\n     **\r\n     **\r\n     = (array) names of the event\r\n    \\*/\r\n    eve.nts = function () {\r\n        return isArray(current_event) ? current_event : current_event.split(separator);\r\n    };\r\n    /*\\\r\n     * eve.off\r\n     [ method ]\r\n     **\r\n     * Removes given function from the list of event listeners assigned to given name.\r\n     * If no arguments specified all the events will be cleared.\r\n     **\r\n     > Arguments\r\n     **\r\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\r\n     - f (function) event handler function\r\n    \\*/\r\n    /*\\\r\n     * eve.unbind\r\n     [ method ]\r\n     **\r\n     * See @eve.off\r\n    \\*/\r\n    eve.off = eve.unbind = function (name, f) {\r\n        if (!name) {\r\n            eve._events = events = {n: {}};\r\n            return;\r\n        }\r\n        var names = isArray(name) ? (isArray(name[0]) ? name : [name]) : Str(name).split(comaseparator);\r\n        if (names.length > 1) {\r\n            for (var i = 0, ii = names.length; i < ii; i++) {\r\n                eve.off(names[i], f);\r\n            }\r\n            return;\r\n        }\r\n        names = isArray(name) ? name : Str(name).split(separator);\r\n        var e,\r\n            key,\r\n            splice,\r\n            i, ii, j, jj,\r\n            cur = [events];\r\n        for (i = 0, ii = names.length; i < ii; i++) {\r\n            for (j = 0; j < cur.length; j += splice.length - 2) {\r\n                splice = [j, 1];\r\n                e = cur[j].n;\r\n                if (names[i] != wildcard) {\r\n                    if (e[names[i]]) {\r\n                        splice.push(e[names[i]]);\r\n                    }\r\n                } else {\r\n                    for (key in e) if (e[has](key)) {\r\n                        splice.push(e[key]);\r\n                    }\r\n                }\r\n                cur.splice.apply(cur, splice);\r\n            }\r\n        }\r\n        for (i = 0, ii = cur.length; i < ii; i++) {\r\n            e = cur[i];\r\n            while (e.n) {\r\n                if (f) {\r\n                    if (e.f) {\r\n                        for (j = 0, jj = e.f.length; j < jj; j++) if (e.f[j] == f) {\r\n                            e.f.splice(j, 1);\r\n                            break;\r\n                        }\r\n                        !e.f.length && delete e.f;\r\n                    }\r\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\r\n                        var funcs = e.n[key].f;\r\n                        for (j = 0, jj = funcs.length; j < jj; j++) if (funcs[j] == f) {\r\n                            funcs.splice(j, 1);\r\n                            break;\r\n                        }\r\n                        !funcs.length && delete e.n[key].f;\r\n                    }\r\n                } else {\r\n                    delete e.f;\r\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\r\n                        delete e.n[key].f;\r\n                    }\r\n                }\r\n                e = e.n;\r\n            }\r\n        }\r\n    };\r\n    /*\\\r\n     * eve.once\r\n     [ method ]\r\n     **\r\n     * Binds given event handler with a given name to only run once then unbind itself.\r\n     | eve.once(\"login\", f);\r\n     | eve(\"login\"); // triggers f\r\n     | eve(\"login\"); // no listeners\r\n     * Use @eve to trigger the listener.\r\n     **\r\n     > Arguments\r\n     **\r\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\r\n     - f (function) event handler function\r\n     **\r\n     = (function) same return function as @eve.on\r\n    \\*/\r\n    eve.once = function (name, f) {\r\n        var f2 = function () {\r\n            eve.off(name, f2);\r\n            return f.apply(this, arguments);\r\n        };\r\n        return eve.on(name, f2);\r\n    };\r\n    /*\\\r\n     * eve.version\r\n     [ property (string) ]\r\n     **\r\n     * Current version of the library.\r\n    \\*/\r\n    eve.version = version;\r\n    eve.toString = function () {\r\n        return \"You are running Eve \" + version;\r\n    };\r\n    (typeof module != \"undefined\" && module.exports) ? (module.exports = eve) : (typeof define === \"function\" && define.amd ? (define(\"eve\", [], function() { return eve; })) : (glob.eve = eve));\r\n})(this);","import { GuitarString, getGuitarStrings, IGuitarString,IFretInfo} from './GuitarString';\r\nimport {hasFromObject} from './Util/Decorators';\r\nimport {MusicNoteName} from './MusicNote';\r\n// import {Strum} from './Strum';\r\nimport {GuitarStrum} from './GuitarStrum';\r\n\r\n@hasFromObject\r\nexport class Guitar {\r\n    public strings: GuitarString[] = [];\r\n    public frets: number = 21;\r\n\r\n    public get stringCount(): number {\r\n        return this.strings.length;\r\n    }\r\n\r\n    constructor() { }\r\n\r\n\r\n    toObject(): IGuitar {\r\n        return {\r\n            strings: this.strings.map(x=> x.toObject()),\r\n            frets: this.frets\r\n        }\r\n    }\r\n\r\n\r\n    getFretsWithNote(noteName: MusicNoteName):IFretInfo[]{\r\n        let results :IFretInfo[] = [];\r\n        this.strings.forEach(str =>{\r\n            str.getFretsWithNote(noteName, this.frets).forEach(x=>{results.push(x);});\r\n        });\r\n        return results;\r\n    }\r\n\r\n    getStrum(positions:number[]):GuitarStrum{\r\n        if(positions.length !== this.stringCount) throw \"String Count does not match\";\r\n\r\n        return new GuitarStrum(this, positions);\r\n    }\r\n\r\n    static fromObject(obj: IGuitar): Guitar {\r\n        var g = new Guitar();\r\n        g.strings = obj.strings.map(x=> GuitarString.fromObject(x));\r\n        return g;\r\n    }\r\n\r\n    static GetNormalGuitar(): Guitar {\r\n        var g = new Guitar();\r\n        g.strings = getGuitarStrings([\"E4\", \"B3\", \"G3\", \"D3\", \"A2\", \"E2\"]);\r\n        return g;\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport interface IGuitar {\r\n    strings: IGuitarString[]\r\n}\r\n","import { MusicNoteName, IMusicNoteAdvanced, MusicNotes, getNote} from './MusicNote';\r\n\r\n/** a single string on the guitar. */\r\nexport class GuitarString {\r\n    private _index: number;\r\n    private _note: IMusicNoteAdvanced;\r\n\r\n    public get index(): number {\r\n        return this._index;\r\n    }\r\n\r\n    public get OpenNoteName(): string {\r\n        return this._note.fullName;\r\n    }\r\n\r\n    constructor(index: number, note: IMusicNoteAdvanced) {\r\n        this._index = index;\r\n        this._note = note;\r\n    }\r\n\r\n    public frequencyAtFret(fret: number) {\r\n        var id = fret + this._note.id;\r\n        return getNote(id).frequency;\r\n    }\r\n\r\n    public noteAtFret(fret: number): IMusicNoteAdvanced {\r\n        var id = fret + this._note.id;\r\n        return getNote(id);\r\n    }\r\n\r\n    public getFretsWithNote(noteName: MusicNoteName, fretCount: number): IFretInfo[] {\r\n        let results: IFretInfo[] = [];\r\n\r\n        for (let i = 0; i < fretCount; i++) {\r\n            let note = this.noteAtFret(i);\r\n            if (note.nameId == noteName) {\r\n                results.push({\r\n                    stringIndex: this.index,\r\n                    fretIndex: i,\r\n                    note: note\r\n                });\r\n            }\r\n        }\r\n\r\n        return results;\r\n    }\r\n\r\n    toObject(): IGuitarString {\r\n        return {\r\n            index: this.index,\r\n            note: this._note\r\n        };\r\n    }\r\n\r\n    static fromObject(obj: IGuitarString) {\r\n        return new GuitarString(obj.index, obj.note);\r\n    }\r\n}\r\n\r\nexport function getGuitarStrings(names: string[]): GuitarString[] {\r\n    var strings: GuitarString[] = [];\r\n    let idx = 0;\r\n    for (var name of names) {\r\n        let note = MusicNotes.filter(x=> x.fullName == name)[0];\r\n        if (note == undefined) debugger;\r\n        strings.push(new GuitarString(idx, note));\r\n        idx++;\r\n    }\r\n\r\n    return strings;\r\n}\r\n\r\nexport interface IGuitarString {\r\n    index: number;\r\n    note: IMusicNoteAdvanced;\r\n}\r\n\r\n\r\n/**\r\n * Info about a fret on a guitar\r\n */\r\nexport interface IFretInfo {\r\n    stringIndex: number;\r\n    fretIndex: number;\r\n    note: IMusicNoteAdvanced;\r\n}\r\n","import {Strum} from './Strum';\r\nimport {Guitar} from './Guitar';\r\n\r\nexport class GuitarStrum extends Strum {\r\n    private _gutiar: Guitar;\r\n\r\n\r\n    constructor(guitar: Guitar, positions: number[]) {\r\n        super(positions);\r\n        this._gutiar = guitar;\r\n    }\r\n\r\n    public get guitar(): Guitar {\r\n        return this._gutiar;\r\n    }\r\n\r\n\r\n    getFullNames(): string[] {\r\n        let g = this.guitar;\r\n        var a = [];\r\n        let idx = 0;\r\n        for (let p of this.positions) {\r\n            if (p != undefined) {\r\n                var s = g.strings[idx];\r\n                a.push(s.noteAtFret(p).fullName);\r\n            } else {\r\n                a.push('x');\r\n            }\r\n            idx++;\r\n        }\r\n        return a;\r\n    }\r\n\r\n    getNames():string[]{\r\n        let g = this.guitar;\r\n        var a = [];\r\n        let idx = 0;\r\n        for (let p of this.positions) {\r\n            if (p != undefined) {\r\n                var s = g.strings[idx];\r\n                a.push(s.noteAtFret(p).name);\r\n            } else {\r\n                a.push('x');\r\n            }\r\n            idx++;\r\n        }\r\n        return a;\r\n    }\r\n}\r\n","export * from './Guitar';\r\nexport * from './GuitarString'\r\nexport * from './MusicNote';\r\nexport * from './TabDocument';\r\nexport * from './Strum';\r\nexport * from './Scale';\r\nexport * from './GuitarStrum';\r\nexport * from './WellKnownChords';\r\n// export * from './UI/GuitarNeck';\r\n// export * from './UI/ChordView';\r\n// export * from './UI/TabEditor';\r\n// export * from './UI/TabView';\r\nexport * from './UI/UI';\r\n\r\n\r\nimport * as u from './Util/Array';\r\n\r\nexport module util {\r\n    export var orderBy = u.orderBy;\r\n}\r\n","\r\n// Interfaces\r\nexport interface IMusicNote {\r\n    nameId: MusicNoteName;\r\n    /** 0-8 */\r\n    octive: number;\r\n}\r\n\r\nexport interface IMusicNoteAdvanced extends IMusicNote {\r\n    /** ex: A4 */\r\n    fullName: string;\r\n    frequency: number;\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\nexport enum MusicNoteName {\r\n    C = 0,\r\n    C_,\r\n    D,\r\n    D_,\r\n    E,\r\n    F,\r\n    F_,\r\n    G,\r\n    G_,\r\n    A,\r\n    A_,\r\n    B //11\r\n}\r\nvar stringNoteNames = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\r\n\r\n/** 2^(1/12) */\r\nconst A = Math.pow(2, 1 / 12);\r\n\r\n\r\nexport var MusicNotes: IMusicNoteAdvanced[] = [];\r\n\r\n\r\nexport module noteMath {\r\n\r\n    export function getFrequencyOfNoteA4(x: number): number {\r\n        return 440 * Math.pow(A, x);\r\n    }\r\n\r\n\r\n    export function getNoteNameFromID(id: number): MusicNoteName {\r\n        return MusicNoteName[MusicNoteName[(id + (12 * 4) + 9 + 1) % 12]];\r\n    }\r\n\r\n\r\n    export function getNoteDiff(name: MusicNoteName, diff: number): MusicNoteName {\r\n        let note = MusicNotes.filter(x=>x.octive == 4 && x.nameId == name)[0];\r\n        let id = note.id + diff;\r\n        return getNoteNameFromID(id);\r\n    }\r\n\r\n    export function getOctiveFromId(id: number): number {\r\n        var x = id + (12 * 4) + 9 + 1;\r\n        return Math.floor(x / 12);\r\n    }\r\n    export function getNoteNameAsString(name:MusicNoteName){\r\n        return MusicNotes.filter(x=>x.nameId == name)[0].name;\r\n    }\r\n}\r\n\r\n//Build music notes array.\r\n\r\nfor (var noteID = -57; noteID <= 68; noteID++) {\r\n\r\n    var nn = noteMath. getNoteNameFromID(noteID);\r\n    var sname = stringNoteNames[nn];\r\n    let octive = noteMath.getOctiveFromId(noteID);\r\n    if (sname === undefined) debugger;\r\n    MusicNotes.push({\r\n        frequency: noteMath.getFrequencyOfNoteA4(noteID),\r\n        nameId: nn,\r\n        fullName: sname + octive.toString(),\r\n        id: noteID,\r\n        octive: octive,\r\n        name: sname\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\nexport function getNote(id: number) {\r\n    return MusicNotes.filter(x=> x.id == id)[0]\r\n}\r\n","import {MusicNoteName, noteMath} from './MusicNote';\r\nimport {Guitar} from './Guitar';\r\nimport {GuitarStrum} from './GuitarStrum';\r\nimport {GuitarString, IFretInfo} from './GuitarString';\r\nimport {findAllPossibleCombos} from './Util/Array';\r\n\r\n\r\nexport class Scale {\r\n\r\n    constructor(protected guitar: Guitar) {\r\n\r\n    }\r\n    protected findStrings(note: MusicNoteName) {\r\n        let g = this.guitar;\r\n        return g.getFretsWithNote(note);\r\n    }\r\n}\r\n\r\nexport class MajorScale extends Scale {\r\n    constructor(guitar: Guitar) {\r\n        super(guitar);\r\n    }\r\n\r\n    getFretInfo(note: MusicNoteName) {\r\n        var major = this.findStrings(note);\r\n        var p4 = this.findStrings(noteMath.getNoteDiff(note, 4));\r\n        var p7 = this.findStrings(noteMath.getNoteDiff(note, 7));\r\n        return {\r\n            major: major,\r\n            p4: p4,\r\n            p7: p7\r\n        };\r\n    }\r\n\r\n    getStrumList(note: MusicNoteName): GuitarStrum[] {\r\n        var results: GuitarStrum[] = [];\r\n        let info = this.getFretInfo(note);\r\n\r\n        let max = 12;\r\n        info.major = info.major.filter(x=> x.fretIndex <= max);\r\n        info.p4 = info.p4.filter(x=> x.fretIndex <= max);\r\n        info.p7 = info.p7.filter(x=> x.fretIndex <= max);\r\n\r\n        //2 major\r\n        let majors = findAllPossibleCombos(info.major, 2, 3);\r\n        let p7Combos = findAllPossibleCombos(info.p7, 1, 2);\r\n\r\n        majors.forEach(m=> {\r\n            let majorFic = new StrumBuilder();\r\n            if (majorFic.addArray(m) == false) return;\r\n\r\n\r\n            // info.p7.forEach(p7=> {\r\n            //     let fic = majorFic.clone();\r\n            //     if (fic.add(p7) == false) return;\r\n            //\r\n            //     info.p4.forEach(p4=> {\r\n            //         let f = fic.clone();\r\n            //         if (f.add(p4) == false) return;\r\n            //         results.push(f.getChord(this.guitar.stringCount));\r\n            //     });\r\n            // });\r\n\r\n            p7Combos.forEach(p7=> {\r\n                let fic = majorFic.clone();\r\n                if (fic.addArray(p7) == false) return;\r\n                info.p4.forEach(p4=> {\r\n                    let f = fic.clone();\r\n                    if (f.add(p4) == false) return;\r\n                    results.push(f.getChord(this.guitar));\r\n                });\r\n            });\r\n        });\r\n\r\n        //    console.log(majors);\r\n\r\n        return results;\r\n    }\r\n}\r\n\r\nexport class StrumBuilder {\r\n    private list: IFretInfo[] = [];\r\n\r\n    add(f: IFretInfo) {\r\n        if (this.isValid(f)) {\r\n            this.list.push(f);\r\n            return true;\r\n        }\r\n        else return false;\r\n    }\r\n\r\n    isValid(f: IFretInfo): boolean {\r\n        return this.list.filter(x=> x.stringIndex == f.stringIndex).length === 0;\r\n    }\r\n\r\n    clone(): StrumBuilder {\r\n        let ret = new StrumBuilder();\r\n        this.list.forEach(x=> ret.add(x));\r\n\r\n        return ret;\r\n    }\r\n    addArray(a: IFretInfo[]): boolean {\r\n        for (let fi of a) {\r\n            if (this.add(fi) == false) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    getChord(g:Guitar): GuitarStrum {\r\n        let u = undefined;\r\n        let stringCount = g.stringCount\r\n        let results = [];\r\n        for (var x = 0; x < stringCount; x++) {\r\n            let fi = this.list.filter(y=> y.stringIndex == x);\r\n            if (fi.length === 0) {\r\n                results.push(u);\r\n            } else {\r\n                results.push(fi[0].fretIndex);\r\n            }\r\n\r\n        }\r\n\r\n        return new GuitarStrum(g,results);\r\n    }\r\n}\r\n","import {Guitar} from './Guitar';\r\n\r\n\r\n/**\r\n * Base Strum Class.\r\n * @abstract\r\n */\r\nexport class Strum {\r\n    get stringCount(): number { return this.positions.length; }\r\n    get maxFret(): number {\r\n        return Math.max(...this.positions.filter(x=> x !== undefined));\r\n    }\r\n    get minFret(): number {\r\n        return Math.min(...this.positions.filter(x=> x !== undefined && x !== 0));\r\n    }\r\n\r\n    get stringsUsed(): number {\r\n        return this.positions.filter(x=> x !== undefined).length;\r\n    }\r\n\r\n    get maxFretDistence(): number {\r\n        return this.maxFret - this.minFret;\r\n    }\r\n\r\n    get firstUsedStringIndex(): number {\r\n        let idx = 0;\r\n        let result = null;\r\n        this.positions.forEach(x=> {\r\n            if (result !== null) return;\r\n            if (x !== undefined) {\r\n                result = idx;\r\n            }\r\n            idx++;\r\n        });\r\n        return result;\r\n    }\r\n\r\n    get lastUsedStringIndex(): number {\r\n        let result = null;\r\n\r\n        for (let i = this.stringCount - 1; i >= 0; i--) {\r\n            if (this.positions[i] !== undefined) return i;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    get positions(): number[] {\r\n        return this._positions;\r\n    }\r\n    private _positions: number[];\r\n    constructor(positions: number[]) {\r\n        this._positions = positions;\r\n    }\r\n\r\n    average(g: Guitar): number {\r\n        var a = [];\r\n        let idx = 0;\r\n        for (let p of this.positions) {\r\n            if (p != undefined) {\r\n                var s = g.strings[idx];\r\n                a.push(s.frequencyAtFret(p));\r\n            }\r\n            idx++;\r\n        }\r\n        return getAverage(a);\r\n    }\r\n\r\n\r\n\r\n    get skipCount(): number {\r\n        let ret = 0;\r\n        for (let i = this.firstUsedStringIndex; i <= this.lastUsedStringIndex; i++) {\r\n            if (this.positions[i] === undefined) ret++;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    rate(): number {\r\n        let ret = 100;\r\n\r\n        //too far appart.\r\n        if (this.maxFretDistence > 5) ret -= 1000;\r\n\r\n        //all at end of neck\r\n        if (this.maxFret < 4) ret += 100;\r\n\r\n\r\n        //Less strings is easier.\r\n        ret += (this.stringCount - this.stringsUsed) * 5;\r\n\r\n        //bonus for open strings\r\n        ret += this.positions.filter(x=> x == 0).length;\r\n\r\n        let skipCount = this.skipCount;\r\n\r\n        ret -= Math.pow(skipCount, 4) * 15;\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * @deprecated\r\n     */\r\n    static New(fretPositions: number[]) {\r\n        var s = new Strum(fretPositions);\r\n        return s;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction getAverage(arry: number[]): number {\r\n    var sum = 0, count = 0;\r\n    sum = arry.reduce(function(previousValue, currentValue, index, array) {\r\n        if (isFinite(currentValue)) {\r\n            count++;\r\n            return previousValue + currentValue;\r\n        }\r\n        return previousValue;\r\n    }, sum);\r\n    return count ? sum / count : 0;\r\n}\r\n","import {Guitar, IGuitar} from './Guitar';\nimport {Strum} from './Strum';\nimport {GuitarString} from './GuitarString';\nimport {IMusicNote, IMusicNoteAdvanced, MusicNoteName, MusicNotes} from './MusicNote';\nimport {LinkedList} from './Util/Collections';\nimport {} from './Util/SimpleEvent';\n\nexport enum TabPartType {\n    Strum\n}\n\n\nexport class TabDocument {\n\n\n    parts: LinkedList<TabPart> = new LinkedList<TabPart>();\n    guitar: Guitar;\n\n    get partCount() {\n        return this.parts.count;\n    }\n\n    constructor(g: Guitar) {\n        this.guitar = g;\n    }\n\n    addStrum(s: Strum, index?: number) {\n        if (s.stringCount != this.guitar.strings.length)\n            return;\n        var ts = new TabStrum(s.positions);\n        this.parts.add(ts, index);\n    }\n\n    addPart(part: TabPart) {\n        this.parts.add(part);\n    }\n\n    toObject(): ITabDocument {\n        return {\n            gutar: this.guitar.toObject(),\n            parts: this.parts.toArray().map(x=> x.toObject())\n        }\n    }\n\n    static fromObject(obj: ITabDocument) {\n        let td = new TabDocument(Guitar.fromObject(obj.gutar));\n        obj.parts.forEach(x=> {\n            switch (x.type) {\n                case TabPartType.Strum:\n                    let strum = <ITabStrum> x;\n                    td.addPart(TabStrum.fromObject(strum));\n            }\n        });\n\n        return td;\n    }\n}\n\nexport class TabStrum extends Strum implements TabPart {\n\n    get type() {\n        return TabPartType.Strum;\n    }\n\n    toObject(): ITabStrum {\n        return {\n            type: TabPartType.Strum,\n            positions: this.positions\n        }\n    }\n\n    static fromObject(obj: ITabStrum): TabStrum {\n        var ts = new TabStrum(obj.positions);\n        return ts;\n    }\n}\n\nexport interface TabPart {\n    type: TabPartType;\n    toObject(): ITabPart;\n}\n\nexport interface ITabPart {\n    type: TabPartType;\n}\n\nexport interface ITabStrum extends ITabPart {\n    positions: number[];\n}\n\nexport interface ITabDocument {\n    gutar: IGuitar;\n    parts: ITabPart[];\n}\n","/// <reference path=\"../../typings/raphael/raphael\" />\r\n\r\nimport * as R from \"Raphael\";\r\n\r\n\r\nexport class BaseUI {\r\n    protected draw: RaphaelPaper;\r\n    protected element: HTMLElement;\r\n\r\n\r\n    constructor(ele: HTMLElement = null) {\r\n        if (ele === null)\r\n            ele = document.createElement('div');\r\n\r\n        //ele.tabIndex = 0; //this allows keyboard events\r\n        this.element = ele;\r\n    }\r\n    public appendTo(ele: HTMLElement) {\r\n        ele.appendChild(this.element);\r\n    }\r\n}\r\n\r\n\r\nexport function pathString(mx, my, lx, ly): string {\r\n    return `M${mx},${my} L${lx},${ly}`;\r\n}\r\n\r\nexport function repeat(times: number, fn: (idx: number) => void) {\r\n    for (let x = 0; x < times; x++) {\r\n        fn(x);\r\n    }\r\n}\r\n","/// <reference path=\"../../typings/raphael/raphael\" />\r\n\r\nimport * as R from \"Raphael\";\r\nimport { Guitar } from \"../Guitar\";\r\nimport {BaseUI, pathString, repeat} from './BaseUI';\r\nimport {GuitarStrum} from '../GuitarStrum';\r\n\r\n\r\nexport interface IChordViewSize {\r\n    stringSeperation: number;\r\n    fretSeperation: number;\r\n    circleRadius: number;\r\n}\r\n\r\nexport class ChordView extends BaseUI {\r\n\r\n    public static get DefaultSize(): IChordViewSize {\r\n        return {\r\n            stringSeperation: 8,\r\n            fretSeperation: 10,\r\n            circleRadius: 3\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @param  {number}            x [description]\r\n     * @param  {IChordViewSize} s defaults to the chord view.\r\n     * @return {IChordViewSize}      [description]\r\n     */\r\n    static scaleSize(x: number, s: IChordViewSize = ChordView.DefaultSize): IChordViewSize {\r\n        s.circleRadius *= x;\r\n        s.fretSeperation *= x;\r\n        s.stringSeperation *= x;\r\n\r\n        return s;\r\n    }\r\n\r\n    private _showLetters: boolean = false;\r\n\r\n    private _size: IChordViewSize; // = ChordView.DefaultSize;\r\n\r\n    private get stringCount(): number {\r\n        return this.strum.positions.length;\r\n    }\r\n\r\n    private get fretCount(): number {\r\n        let r = Math.max(5, this.strum.maxFret);\r\n        //    console.log(r);\r\n        return r + 1 /* open fret */;\r\n    }\r\n\r\n    constructor(private strum: GuitarStrum, ele: HTMLElement = null, size: IChordViewSize = ChordView.DefaultSize) {\r\n        super(ele);\r\n        this._size = size;\r\n        this.draw = Raphael(this.element, 1, 1);\r\n\r\n        this._drawParts();\r\n    }\r\n\r\n    private _drawParts() {\r\n\r\n        let d = this.draw;\r\n        let ps = [];\r\n        this._drawStrings(ps);\r\n        this._drawFrets(ps);\r\n        d.path(ps.join(' '));\r\n\r\n        this._drawFingerPositions();\r\n        this._drawLetters();\r\n\r\n        //Sizes SVG from 1x1 to correct size based on size data\r\n        this._resize();\r\n    }\r\n\r\n    private _resize() {\r\n        let s = this.lastStringX() + this._size.stringSeperation\r\n        let f = this.lastFretY() + this._size.fretSeperation;\r\n        if (this._showLetters) {\r\n            f += this._size.fretSeperation;\r\n        }\r\n        this.draw.setSize(s, f);\r\n    }\r\n\r\n    private _drawStrings(ps: string[]) {\r\n        let size = this._size;\r\n        let strum = this.strum;\r\n        let f = size.fretSeperation;\r\n        repeat(this.stringCount, s=> {\r\n            let x = this.stringX(s);\r\n            let line = pathString(x, f, x, this.lastFretY());\r\n            ps.push(line);\r\n        });\r\n    }\r\n\r\n    private _drawFrets(ps: string[]) {\r\n        let size = this._size;\r\n        let strum = this.strum;\r\n\r\n        repeat(this.fretCount, f=> {\r\n            let y = this.fretY(f);\r\n            ps.push(pathString(size.stringSeperation, y, this.lastStringX(), y));\r\n        });\r\n        //d.path(ps.join(' '));\r\n\r\n    }\r\n\r\n    private lastStringX() {\r\n        return this.stringX(0);\r\n    }\r\n\r\n    private stringX(strIdx: number) {\r\n        strIdx = (this.stringCount - 1) - strIdx;\r\n        return this._size.stringSeperation * (strIdx + 1)\r\n    }\r\n\r\n    private fretY(fretIdx: number): number {\r\n        return this._size.fretSeperation * (fretIdx + 1)\r\n    }\r\n    private fretYMiddle(fretIdx: number): number {\r\n        return this.fretY(fretIdx) - (this._size.fretSeperation / 2);\r\n    }\r\n\r\n    private lastFretY() {\r\n        return this.fretY(this.fretCount - 1);\r\n    }\r\n\r\n    private _drawFingerPositions() {\r\n        let d = this.draw;\r\n\r\n        repeat(this.stringCount, s=> {\r\n            let f = this.strum.positions[s];\r\n            if (f === undefined) return;\r\n            let x = this.stringX(s);\r\n            let circle = d.circle(x, this.fretYMiddle(f), this._size.circleRadius);\r\n            if (f !== 0) {\r\n                circle.attr('fill', 'black');\r\n            }\r\n        });\r\n    }\r\n\r\n    private _drawLetters() {\r\n        if (this._showLetters) {\r\n\r\n            let d = this.draw;\r\n            let strum = this.strum;\r\n\r\n            let names = strum.getNames();\r\n            repeat(this.stringCount, s=> {\r\n                let x = this.stringX(s);\r\n                let y = this.fretYMiddle(this.fretCount + 1);\r\n\r\n                d.text(x, y - this._size.fretSeperation, names[s]);\r\n\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    showLetters() {\r\n        this._showLetters = true;\r\n        this._drawLetters();\r\n        this._resize();\r\n    }\r\n\r\n    /**\r\n     * Scales all contents. Note that this is expensive. Try to do this in the constructor.\r\n     * @param  {number} x [description]\r\n     */\r\n    scale(x: number) {\r\n        if (x === 1) return;\r\n        this.draw.clear();\r\n        let s = this._size;\r\n        this._size = ChordView.scaleSize(x, s);\r\n        this._drawParts();\r\n    }\r\n\r\n\r\n\r\n}\r\n","/// <reference path=\"../../typings/raphael/raphael\" />\r\n/// <reference path=\"../Guitar\"/>\r\n\r\nimport * as R from \"Raphael\";\r\nimport { GuitarString, IFretInfo } from '../GuitarString';\r\nimport {BaseUI, pathString, repeat} from './BaseUI';\r\nimport {Strum} from '../Strum';\r\nimport { Guitar } from \"../Guitar\";\r\n\r\nexport interface IGuitarNeckSizing {\r\n    startStringLine: number;\r\n    firstStringHeight: number\r\n    stringSeperation: number\r\n    fretSeperation: number;\r\n    opacityToggleTime: number;\r\n    fingerPositionRadius: number;\r\n}\r\n\r\nexport class GuitarNeck extends BaseUI {\r\n\r\n\r\n    private size: IGuitarNeckSizing = {\r\n        firstStringHeight: 25,\r\n        stringSeperation: 25,\r\n        fretSeperation: 40,\r\n        startStringLine: 40,\r\n        opacityToggleTime: 500,\r\n        fingerPositionRadius: 5\r\n    };\r\n\r\n    private _maxFrets: number = 25;\r\n\r\n    /**\r\n     * the strum circles\r\n     * @type {RaphaelElement[]}\r\n     */\r\n    private _strumElements: RaphaelElement[] = [];\r\n\r\n    get fretCount(): number {\r\n        return Math.min(this._maxFrets, this.guitar.frets);\r\n    }\r\n\r\n    get stringCount(): number {\r\n        return this.guitar.strings.length;\r\n    }\r\n\r\n\r\n    constructor(public guitar: Guitar, ele: HTMLElement = document.createElement('div')) {\r\n        super(ele);\r\n        let size = this.size;\r\n        this.element = ele;\r\n        document.body.appendChild(this.element);\r\n        this.draw = R(ele, 1024, (this.size.firstStringHeight * 2) + (guitar.strings.length * size.stringSeperation));\r\n        this.drawParts();\r\n    }\r\n\r\n    //Maths\r\n    private getStringY(idx: number) {\r\n        return (idx * this.size.stringSeperation) + this.size.firstStringHeight;\r\n    }\r\n\r\n    private getLastStringY(): number {\r\n        return this.getStringY(this.stringCount - 1);\r\n    }\r\n\r\n    private getFretX(idx: number): number {\r\n        let s = this.size;\r\n        return s.fretSeperation * (idx + 1);\r\n    }\r\n\r\n    private getLastFretX() {\r\n        return this.getFretX(this.fretCount);\r\n    }\r\n\r\n    private getStringLength(): number {\r\n        let s = this.size;\r\n        return this.getFretX(this.fretCount - 1) + s.fretSeperation;\r\n        return s.fretSeperation * (this.fretCount + 1);\r\n    }\r\n\r\n    private getPointOfStringFret(str: number, fret: number): IPoint {\r\n        let size = this.size;\r\n        return {\r\n            x: 20 + (fret * size.fretSeperation),\r\n            y: size.firstStringHeight + (str * size.stringSeperation)\r\n        };\r\n    }\r\n\r\n    private getFretHorizontalCenter(fret: number): number {\r\n        let size = this.size;\r\n\r\n        return size.startStringLine + (size.fretSeperation * fret) - (size.fretSeperation / 2);\r\n    }\r\n\r\n    private drawParts() {\r\n        this.drawDoubleFretLine();\r\n        this.drawStrings();\r\n        this.drawFrets();\r\n        this.drawFretBubbles();\r\n        if (this.noteLettersDrawn == true)\r\n            this.drawNoteLetters();\r\n        this.resize();\r\n    }\r\n\r\n    private resize() {\r\n        this.draw.setSize(this.getLastFretX() + this.size.fretSeperation, this.getLastStringY() + this.size.stringSeperation);\r\n    }\r\n\r\n\r\n    private drawStrings() {\r\n        let g = this.guitar;\r\n        let d = this.draw;\r\n        let size = this.size;\r\n        let stringLength = this.getStringLength();\r\n        repeat(this.stringCount, idx=> {\r\n            let height = this.getStringY(idx);\r\n            let pth = pathString(size.startStringLine, height, stringLength, height);\r\n            d.path(pth).attr('stroke', 'solid');\r\n        });\r\n    }\r\n\r\n\r\n\r\n    private drawDoubleFretLine() {\r\n        let g = this.guitar;\r\n        let d = this.draw;\r\n        let size = this.size;\r\n        //Double Starting Line\r\n        let x = size.startStringLine - 5;\r\n        let lastString = this.getLastStringY();\r\n        let path = pathString(x, size.firstStringHeight, x, lastString);\r\n        d.path(path).attr('stroke', 'solid');\r\n    }\r\n\r\n\r\n    private drawFrets() {\r\n        let g = this.guitar;\r\n        let d = this.draw;\r\n        let size = this.size;\r\n\r\n        let lastString = this.getLastStringY();\r\n\r\n        //Draw each fret Line\r\n        repeat(g.frets + 1, f=> {\r\n            let y = size.startStringLine + (f * size.fretSeperation);\r\n            let path = pathString(y, size.firstStringHeight, y, lastString);\r\n            d.path(path).attr('stroke', 'solid');\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n    private drawFretBubbles() {\r\n        let d = this.draw;\r\n        let g = this.guitar;\r\n        let size = this.size;\r\n\r\n        let applyStyles = (ele: RaphaelElement) => { ele.attr('fill', 'solid'); };\r\n\r\n        let single = (fret: number) => {\r\n            if (this.fretCount < fret) return;\r\n            let c = d.circle(this.getFretHorizontalCenter(fret), size.firstStringHeight + (size.stringSeperation * (g.strings.length / 2)) - (size.stringSeperation / 2), 5);\r\n            applyStyles(c);\r\n        }\r\n\r\n\r\n        let double = (fret: number) => {\r\n            if (this.fretCount < fret) return;\r\n            let c = d.circle(this.getFretHorizontalCenter(fret), size.firstStringHeight + (size.stringSeperation * (1)) - (size.stringSeperation / 2), 5)\r\n            applyStyles(c);\r\n            c = d.circle(this.getFretHorizontalCenter(fret), size.firstStringHeight + (size.stringSeperation * (g.strings.length - 1)) - (size.stringSeperation / 2), 5)\r\n            applyStyles(c);\r\n        };\r\n\r\n        single(3);\r\n        single(5);\r\n        single(7);\r\n        single(9);\r\n        double(12);\r\n        single(15);\r\n        single(17);\r\n        single(19);\r\n        single(21);\r\n        double(24);\r\n\r\n    }\r\n\r\n    private _noteLetters: NoteLetterElement[] = [];\r\n    private _noteLettersSet: RaphaelSet = null;\r\n\r\n    /** Clears all of the letters from the neck */\r\n    hideAllNoteLetters() {\r\n        let s = this.size;\r\n        let nls = this._noteLettersSet;\r\n        nls.attr({ opacity: 0 });\r\n\r\n        //    nls.animate({ opacity: 0 }, s.opacityToggleTime);\r\n\r\n    }\r\n\r\n    /**\r\n     * Makes all note letters visible\r\n     */\r\n    showAllNoteLetters() {\r\n        if (this.noteLettersDrawn == false) {\r\n            this.noteLettersDrawn = true;\r\n            this.drawNoteLetters();\r\n        }\r\n        let s = this.size;\r\n        let nls = this._noteLettersSet;\r\n        nls.attr({ opacity: 1 });\r\n        //    nls.animate({ opacity: 1 }, s.opacityToggleTime);\r\n    }\r\n\r\n    noteLettersDrawn = false;\r\n\r\n    /**\r\n     * Draw all note letters on fret board\r\n     */\r\n    private drawNoteLetters() {\r\n        let d = this.draw;\r\n        let g = this.guitar;\r\n\r\n        if (this._noteLettersSet === null) {\r\n            this._noteLettersSet = d.set();\r\n        }\r\n\r\n        let nls = this._noteLettersSet;\r\n\r\n        let sIdx = 0;\r\n        for (var s of g.strings) {\r\n\r\n            for (var f = 0; f < g.frets + 1; f++) {\r\n\r\n\r\n                var noteAtFret = s.noteAtFret(f);\r\n\r\n\r\n\r\n                let point = this.getPointOfStringFret(sIdx, f);\r\n\r\n                let text = d.text(point.x, point.y, noteAtFret.name).attr({\r\n                    \"font-size\": 12,\r\n                    \"fill\": \"green\",\r\n                    \"font-weight\": \"bold\",\r\n                    opacity: 0\r\n                });\r\n\r\n                //create white background for text, uses the text to calculate size.\r\n                let box = text.getBBox();\r\n                let rect = d.rect(box.x, box.y, box.width, box.height)\r\n                    .attr('fill', 'white')\r\n                    .attr('stroke', 'white')\r\n                    .attr('opacity', 0);\r\n                text.toFront();\r\n\r\n\r\n                this._noteLetters.push(new NoteLetterElement(s, f, text, rect));\r\n                nls.push(rect, text);\r\n            }\r\n\r\n\r\n            sIdx++;\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    clearStrum() {\r\n        for (let e of this._strumElements) {\r\n            e.remove();\r\n        }\r\n        this._strumElements = [];\r\n    }\r\n\r\n    drawStrum(s: Strum, clearStrum: boolean = true) {\r\n        let d = this.draw;\r\n        let g = this.guitar;\r\n        let size = this.size;\r\n        if (clearStrum) {\r\n            this.clearStrum();\r\n        }\r\n\r\n        let idx = 0;\r\n        var added = [];\r\n        for (let p of s.positions) {\r\n            if (p !== undefined) {\r\n                let point = this.getPointOfStringFret(idx, p);\r\n                let ele = d.circle(point.x, point.y, size.fingerPositionRadius)\r\n                    .attr('fill', 'red');\r\n                this._strumElements.push(ele);\r\n                added.push(ele);\r\n            }\r\n            idx++;\r\n        }\r\n        return added;\r\n    }\r\n\r\n    addStrumMarker(fi: IFretInfo) {\r\n        let arr = [];\r\n        repeat(this.stringCount, idx=> arr.push(undefined));\r\n        arr[fi.stringIndex] = fi.fretIndex;\r\n        return this.drawStrum(Strum.New(arr), false)[0];\r\n    }\r\n\r\n    removeBar() {\r\n\r\n    }\r\n\r\n    barFret(fret: number) {\r\n        let h = this.getFretHorizontalCenter(fret);\r\n        let d = this.draw;\r\n        //todo\r\n    }\r\n\r\n    scale(x: number) {\r\n        let s = this.size;\r\n        s.startStringLine *= x;\r\n        s.firstStringHeight *= x;\r\n        s.stringSeperation *= x;\r\n        s.fretSeperation *= x;\r\n        s.opacityToggleTime *= x;\r\n        s.fingerPositionRadius *= x;\r\n        this.draw.clear();\r\n        this.drawParts();\r\n\r\n    }\r\n\r\n    setMaxFrets(n: number) {\r\n        this._maxFrets = n;\r\n        this.drawParts();\r\n    }\r\n}\r\n\r\n\r\nmodule GuitarStringMath {\r\n    /**\r\n     * @param stringLength in pixels\r\n     * @param frets total frets\r\n     */\r\n    export function getFretLengths(stringLength: number, frets: number): number[] {\r\n        var l = stringLength;\r\n        var ret = [];\r\n        for (var i = 0; i < frets; i++) {\r\n            var c = l / 18;\r\n            l = l - c;\r\n            ret.push(c);\r\n        }\r\n        return ret;\r\n    }\r\n}\r\n\r\ninterface IPoint {\r\n    x: number;\r\n    y: number;\r\n}\r\n\r\ninterface INoteLetterElement {\r\n    text: RaphaelElement;\r\n    background: RaphaelElement;\r\n    note: IFretPosition;\r\n}\r\n\r\ninterface IFretPosition {\r\n    fret: number;\r\n    stringIndex: number;\r\n}\r\n\r\n\r\nclass NoteLetterElement {\r\n    constructor(private s: GuitarString, private fret: number, private text: RaphaelElement, private bg: RaphaelElement) {\r\n        text.click(() => this.click());\r\n        bg.click(() => this.click());\r\n    }\r\n\r\n    click() {\r\n        console.log('click', this);\r\n    }\r\n}\r\n","\nimport {repeat} from './BaseUI';\nimport {KeyManager} from '../Util/KeyManager';\nimport {SimpleEvent} from '../Util/SimpleEvent';\nimport { TabView } from './TabView';\nimport { Guitar } from \"../Guitar\";\nimport {TabCell} from './Tab/TabCell';\nimport {TabColumn} from './Tab/TabColumn';\nimport {TabDocument} from '../TabDocument';\n\nexport class TabEditor extends TabView {\n    keys: KeyManager;\n    private _onChange = SimpleEvent.New();\n\n    constructor(ele: HTMLElement, td: TabDocument) {\n        super(ele, td);\n        this.keys = new KeyManager(this.element);\n        this.bindKeys();\n        this._allowSelect = true;\n    }\n\n    private bindKeys() {\n        let k = this.keys;\n\n        k.bind('up', (e) => {\n            e.preventDefault();\n            this.selectUp();\n        });\n\n        k.bind('down', (e) => {\n            e.preventDefault();\n            this.selectDown();\n        });\n\n        k.bind('left', e=> {\n            e.preventDefault();\n            this.selectedCell.left().select();\n        });\n\n        k.bind('right', e=> {\n            e.preventDefault();\n            this.selectedCell.right().select();\n        });\n\n        k.bind('del', e=> {\n            e.preventDefault();\n            this.selectedCell.setText('');\n        });\n\n        k.bind('/', e=> {\n            e.preventDefault();\n            this.selectedCell.appendText('/');\n        });\n\n        repeat(10, idx=> {\n            k.bind(idx.toString(), (e) => {\n                e.preventDefault();\n                this.selectedCell.appendText(idx.toString());\n            });\n        });\n\n\n    }\n\n    private selectUp() {\n        this.selectedCell.up().select();\n    }\n\n    private selectDown() {\n        this.selectedCell.down().select();\n    }\n\n    private setUpEvents() {\n\n    }\n\n}\n","/// <reference path=\"../../typings/raphael/raphael\" />\r\n\r\nimport * as R from \"Raphael\";\r\nimport { Guitar } from \"../Guitar\";\r\nimport {BaseUI, pathString, repeat} from './BaseUI';\r\nimport {TabViewSize} from './Tab/TabCommon';\r\nimport {TabCell} from './Tab/TabCell';\r\nimport {TabColumn} from './Tab/TabColumn';\r\n\r\nimport {SimpleEvent, ISimpleEventBase, ISimpleEvent1, ISimpleEvent2, ISimpleEvent3} from '../Util/SimpleEvent';\r\nimport {TabDocument, TabPartType, TabStrum} from '../TabDocument';\r\n\r\nimport {Strum} from '../Strum';\r\n\r\n\r\nexport class TabView extends BaseUI {\r\n\r\n    protected _allowSelect: boolean = false;\r\n\r\n    private _document: TabDocument;\r\n\r\n    public get document(): TabDocument {\r\n        return this._document;\r\n    }\r\n\r\n    size: TabViewSize = {\r\n        stringSeperation: 20,\r\n        noteSpeperation: 20\r\n    };\r\n\r\n    get stringCount(): number {\r\n        return this.guitar.strings.length;\r\n    }\r\n\r\n    get selectedCell(): TabCell {\r\n        return this.columns.filter(x=> x.hasSelectedCell)[0].cells\r\n            .filter(x=> x.isSelected)[0];\r\n    }\r\n\r\n    public get guitar(): Guitar {\r\n        return this.document.guitar;\r\n    };\r\n\r\n    public get allowSelect() {\r\n        return this._allowSelect;\r\n    }\r\n\r\n    protected _columnAdded = SimpleEvent.New<TabColumn>();\r\n\r\n    constructor(ele: HTMLElement, doc: TabDocument) {\r\n        super(ele);\r\n        this._document = doc;\r\n        this.draw = R(this.element, 300, 300);\r\n        this.draw.canvas.onclick = () => {\r\n            console.log('canvas click');\r\n            this.element.focus();\r\n        };\r\n        this._drawAllParts();\r\n    }\r\n\r\n    //math\r\n\r\n    protected getStringY(idx) {\r\n        let s = this.size;\r\n        return (idx * s.stringSeperation) + s.stringSeperation;\r\n    }\r\n\r\n    protected getStringStartX() {\r\n        return 20;\r\n    }\r\n\r\n    private _drawAllParts() {\r\n        this._drawStringLines();\r\n        this._drawStringLetters();\r\n        this._drawStringVertLines();\r\n        this._buildTabColumns();\r\n        // var firstCell = this.columns[0].cells[0];\r\n        //firstCell.setText('0');\r\n        // firstCell.select();\r\n\r\n        this._calculateSize();\r\n    }\r\n\r\n    private _drawStringLines() {\r\n        //todo: make one path, keep refrence\r\n\r\n        let d = this.draw;\r\n        let x = this.getStringStartX();\r\n        repeat(this.stringCount, idx=> {\r\n            let y = this.getStringY(idx);\r\n            let line = pathString(x, y, 1000, y);\r\n            d.path(line);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * letters on left side\r\n     */\r\n    private _drawStringLetters() {\r\n        let d = this.draw;\r\n        let x = this.getStringStartX() / 2;\r\n        let g = this.guitar;\r\n        repeat(this.stringCount, idx=> {\r\n            let y = this.getStringY(idx);\r\n            let letter = d.text(x, y, g.strings[idx].OpenNoteName);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Vertical lines at start of tab\r\n     */\r\n    private _drawStringVertLines() {\r\n        //todo: make one path, keep refrence\r\n\r\n        let d = this.draw;\r\n        let x = this.getStringStartX();\r\n        let g = this.guitar;\r\n        let length = this.size.stringSeperation / 4;\r\n        repeat(this.stringCount, idx=> {\r\n            let y = this.getStringY(idx);\r\n\r\n            let line = pathString(x, y - length, x, y + length);\r\n            d.path(line);\r\n\r\n        });\r\n    }\r\n\r\n    columns: TabColumn[] = [];\r\n\r\n    private _addColumn(c: TabColumn) {\r\n        this.columns.push(c);\r\n        this._columnAdded.trigger(c);\r\n    }\r\n\r\n    private _buildTabColumns() {\r\n        let d = this.draw;\r\n        let g = this.guitar;\r\n        let ns = this.size.noteSpeperation;\r\n        let x = ns + this.getStringStartX();\r\n\r\n        repeat(this.document.partCount, (colIndex) => {\r\n            let column = new TabColumn(this.draw, this, colIndex);\r\n            this._addColumn(column);\r\n\r\n            let part = this.document.parts.elementAtIndex(colIndex);\r\n\r\n\r\n            repeat(this.stringCount, idx=> {\r\n\r\n\r\n                let y = this.getStringY(idx);\r\n                let cell = column.defineCell(x, y, idx);\r\n\r\n                if (part.type == TabPartType.Strum) {\r\n                    let p = <TabStrum>part;\r\n                    let pos = p.positions[idx];\r\n                    if (pos != undefined) {\r\n                        cell.setText(pos.toString());\r\n                    }\r\n                }\r\n\r\n                // cell.setText('X');\r\n\r\n            });\r\n            x = x + ns;\r\n        });\r\n    }\r\n\r\n    private get rightX() {\r\n        let x = this.columns[this.columns.length - 1].topCell.x + this.size.noteSpeperation;\r\n        return x;\r\n    }\r\n\r\n    private _calculateSize() {\r\n        //note that this points to the position after the last string\r\n        let y = this.getStringY(this.stringCount);\r\n\r\n        this.draw.setSize(this.rightX, y);\r\n    }\r\n\r\n\r\n    unselectAll() {\r\n        this.columns.forEach(x=> x.unselectAll());\r\n    }\r\n\r\n    toArray(): string[][] {\r\n        let ret: string[][] = [];\r\n\r\n        this.columns.forEach(function(c) {\r\n            let col = [];\r\n            c.cells.forEach(function(c) {\r\n                col.push(c.getText());\r\n            }, this);\r\n            ret.push(col);\r\n        }, this);\r\n\r\n        return ret;\r\n    }\r\n\r\n    toString() {\r\n\r\n        let array = this.toArray();\r\n\r\n        let lines = [];\r\n\r\n        repeat(this.stringCount, idx=> lines[idx] = []);\r\n\r\n        array.forEach(a=> {\r\n            let longest = 0;\r\n            a.forEach(x=> {\r\n                if (longest < x.length)\r\n                    longest = x.length;\r\n            });\r\n\r\n            repeat(this.stringCount, idx=> {\r\n                let p = a[idx];\r\n                if (p == undefined || p==' ') p = '';\r\n                lines[idx].push(lpad(longest, '-----', p));\r\n            });\r\n\r\n            repeat(this.stringCount, idx=> {\r\n                lines[idx].push('-');\r\n            });\r\n        });\r\n        let lines2 = [];\r\n        lines.forEach(l=> lines2.push(l.join('')));\r\n        return lines2.join('\\n');\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nfunction lpad(length, pad, str) {\r\n    if (length < this.length) return str;\r\n\r\n    pad = pad || ' ';\r\n\r\n    while (str.length < length) {\r\n        str = pad + str;\r\n    }\r\n\r\n    return str.substr(-length);\r\n}\r\n","import * as R from \"Raphael\";\nimport {TabView} from '../TabView';\nimport {pathString} from '../BaseUI';\nimport {TabColumn} from './TabColumn';\n\n\n\nexport class TabCell {\n\n    private textElement: RaphaelElement = null;\n    private backgroundElement: RaphaelElement = null;\n    private clickElement: RaphaelElement = null;\n    private selectElement: RaphaelElement = null;\n\n    private get elements(): RaphaelSet {\n        return this.draw.set([\n            this.textElement,\n            this.backgroundElement,\n            this.clickElement,\n            this.selectElement\n        ]);\n    }\n\n\n    private col: TabColumn;\n\n\n    private get tabView(): TabView {\n        return this.col.tabView;\n    }\n\n    get rowIndex(): number {\n        return this.index;\n    }\n\n    get colIndex(): number {\n        return this.col.index;\n    }\n\n    constructor(\n        public x: number,\n        public y: number,\n        private draw: RaphaelPaper,\n        c: TabColumn,\n        private index: number) {\n\n\n        this.col = c;\n\n        this.createElements();\n    }\n\n    private createElements() {\n        if (this.textElement !== null) return;\n\n        let d = this.draw;\n        let x = this.x;\n        let y = this.y;\n\n\n        let text = this.textElement = d.text(x, y, \" \").attr({\n            \"font-size\": 14\n        });\n        let box = text.getBBox();\n        this.backgroundElement = d.rect(box.x, box.y, box.width, box.height)\n            .attr('fill', 'white')\n            .attr('stroke', 'white');\n        text.toFront();\n\n\n        this.createClickElement();\n        this.createSelectElement();\n        this._bindEvents();\n    }\n\n\n\n    private _bindEvents() {\n        if(this.tabView.allowSelect == false) return;\n        let onClick = () => this.click();\n        this.elements.click(onClick);\n    }\n\n    private createClickElement() {\n        let d = this.draw;\n        let x = this.x;\n        let y = this.y;\n        let s = this.col.tabView.size;\n\n        let diffNote = s.noteSpeperation / 2;\n        let diffString = s.stringSeperation / 2;\n\n        this.clickElement = d.rect(x - diffNote, y - diffString, s.noteSpeperation, s.stringSeperation)\n            .attr({\n                stroke: 'rgba(0,0,0,0)',\n                fill: 'white'\n            });\n        this.clickElement.toBack();\n        //this.clickElement.click(() => { this.click() });\n    }\n\n    private createSelectElement() {\n        let d = this.draw;\n        let x = this.x;\n        let y = this.y;\n        let s = this.col.tabView.size;\n\n        let diffNote = s.noteSpeperation / 2;\n        let diffString = s.stringSeperation / 2;\n        diffString -= 1;\n\n        let path = pathString(x - diffNote, y + diffString, x + diffNote, y + diffString);\n        this.selectElement = d.path(path)\n            .attr({ stroke: 'rgb(255,0,0)' })\n            .attr('opacity', .1);\n    }\n\n    private recalcBackground() {\n        let box = this.textElement.getBBox();\n\n        this.backgroundElement.attr({\n            x: box.x,\n            y: box.y,\n            width: box.width,\n            height: box.height\n        });\n    }\n\n    setText(str: string) {\n        this.textElement.attr({\n            text: str\n        });\n        this.recalcBackground();\n    }\n\n    getText(): string {\n        return this.textElement.attr('text');\n    }\n\n    appendText(s: string) {\n        this.setText(this.getText() + s);\n    }\n\n\n    isSelected: boolean = false;\n    select() {\n        this.tabView.unselectAll();\n        this.isSelected = true;\n        this.backgroundElement.attr('stroke', 'blue');\n        this.selectElement.attr('opacity', 1);\n    }\n\n    unselect() {\n        this.isSelected = false;\n        this.backgroundElement.attr('stroke', 'white');\n        this.selectElement.attr('opacity', '0');\n    }\n\n    private click() {\n        console.log(this);\n        console.log('click');\n        this.select();\n    }\n\n    up(): TabCell {\n        if (this.index == 0) {\n            return this.col.cells[this.col.cells.length - 1];\n        }\n        return this.col.cells[this.index - 1];\n    }\n\n    down(): TabCell {\n        if (this.index == this.col.cells.length - 1) {\n            return this.col.cells[0];\n        }\n        return this.col.cells[this.index + 1];\n    }\n\n    left(): TabCell {\n        return this.col.getLeft().cells[this.index];\n    }\n\n    right(): TabCell {\n        return this.col.getRight().cells[this.index];\n    }\n\n}\n","import * as R from \"Raphael\";\nimport {TabView} from '../TabView';\nimport {pathString} from '../BaseUI';\nimport {TabCell} from './TabCell';\nimport {TabPart} from '../../TabDocument';\n\nexport class TabColumn {\n    cells: TabCell[] = [];\n    tabView: TabView;\n    index: number;\n\n    get part():TabPart{\n        return this.tabView.document.parts.elementAtIndex(this.index);\n    }\n\n    get hasSelectedCell(): boolean {\n        return this.cells.filter(x=> x.isSelected).length !== 0;\n    }\n\n    constructor(private draw: RaphaelPaper, tv: TabView, idx: number) {\n        this.index = idx;\n        this.tabView = tv;\n    }\n\n    defineCell(x, y, idx): TabCell {\n        let tc = new TabCell(x, y, this.draw, this, idx);\n        this.cells.push(tc);\n        return tc;\n    }\n\n    unselectAll() {\n        this.cells.forEach(x=> x.unselect());\n    }\n\n    getLeft(): TabColumn {\n        return this.tabView.columns[this.index - 1];\n    }\n\n    getRight(): TabColumn {\n        return this.tabView.columns[this.index + 1];\n    }\n\nget topCell():TabCell{\n    return this.cells[0];\n}\n\n}\n","export * from './TabView';\r\nexport * from './TabEditor';\r\nexport * from './ChordView';\r\nexport * from './GuitarNeck';\r\n// export * from './BaseUI';\r\n","/// <reference path=\"../../typings/lodash/lodash.d.ts\"/>\r\nimport {sortBy} from 'lodash';\r\nexport function orderBy<T>(arr: T[], fn: (x: T) => any): T[] {\r\n    return sortBy(arr, x=> fn(x));\r\n}\r\n\r\nexport function findAllPossibleCombos<T>(a: T[], min: number, max: number = null): T[][] {\r\n    if (max === null) max = a.length;\r\n    max += 1;\r\n    var fn = function(n, src, got, all) {\r\n        if (n == 0) {\r\n            if (got.length > 0) {\r\n                all[all.length] = got;\r\n            }\r\n            return;\r\n        }\r\n        for (var j = 0; j < src.length; j++) {\r\n            fn(n - 1, src.slice(j + 1), got.concat([src[j]]), all);\r\n        }\r\n        return;\r\n    }\r\n    var all = [];\r\n    for (var i = min; i < max; i++) {\r\n        fn(i, a, [], all);\r\n    }\r\n    //all.push(a);\r\n    return all;\r\n}\r\n","// Copyright 2013 Basarat Ali Syed. All Rights Reserved.\r\n//\r\n// Licensed under MIT open source license http://opensource.org/licenses/MIT\r\n//\r\n// Orginal javascript code was by Mauricio Santos\r\n\r\n\r\n\r\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\r\nvar has = function(obj, prop) {\r\n    return _hasOwnProperty.call(obj, prop);\r\n}\r\n\r\n/**\r\n* Function signature for comparing\r\n* <0 means a is smaller\r\n* = 0 means they are equal\r\n* >0 means a is larger\r\n*/\r\nexport interface ICompareFunction<T> {\r\n    (a: T, b: T): number;\r\n}\r\n\r\n/**\r\n* Function signature for checking equality\r\n*/\r\nexport interface IEqualsFunction<T> {\r\n    (a: T, b: T): boolean;\r\n}\r\n\r\n/**\r\n* Function signature for Iterations. Return false to break from loop\r\n*/\r\nexport interface ILoopFunction<T> {\r\n    (a: T): boolean;\r\n}\r\n\r\n/**\r\n * Default function to compare element order.\r\n * @function\r\n */\r\nexport function defaultCompare<T>(a: T, b: T): number {\r\n    if (a < b) {\r\n        return -1;\r\n    } else if (a === b) {\r\n        return 0;\r\n    } else {\r\n        return 1;\r\n    }\r\n}\r\n\r\n/**\r\n * Default function to test equality.\r\n * @function\r\n */\r\nexport function defaultEquals<T>(a: T, b: T): boolean {\r\n    return a === b;\r\n}\r\n\r\n/**\r\n * Default function to convert an object to a string.\r\n * @function\r\n */\r\nexport function defaultToString(item: any): string {\r\n    if (item === null) {\r\n        return 'COLLECTION_NULL';\r\n    } else if (isUndefined(item)) {\r\n        return 'COLLECTION_UNDEFINED';\r\n    } else if (isString(item)) {\r\n        return '$s' + item;\r\n    } else {\r\n        return '$o' + item.toString();\r\n    }\r\n}\r\n\r\n/**\r\n* Joins all the properies of the object using the provided join string\r\n*/\r\nexport function makeString<T>(item: T, join: string = \",\"): string {\r\n    if (item === null) {\r\n        return 'COLLECTION_NULL';\r\n    } else if (isUndefined(item)) {\r\n        return 'COLLECTION_UNDEFINED';\r\n    } else if (isString(item)) {\r\n        return item.toString();\r\n    } else {\r\n        var toret = \"{\";\r\n        var first = true;\r\n        for (var prop in item) {\r\n            if (has(item, prop)) {\r\n                if (first)\r\n                    first = false;\r\n                else\r\n                    toret = toret + join;\r\n                toret = toret + prop + \":\" + item[prop];\r\n            }\r\n        }\r\n        return toret + \"}\";\r\n    }\r\n}\r\n\r\n/**\r\n * Checks if the given argument is a function.\r\n * @function\r\n */\r\nexport function isFunction(func: any): boolean {\r\n    return (typeof func) === 'function';\r\n}\r\n\r\n/**\r\n * Checks if the given argument is undefined.\r\n * @function\r\n */\r\nexport function isUndefined(obj: any): boolean {\r\n    return (typeof obj) === 'undefined';\r\n}\r\n\r\n/**\r\n * Checks if the given argument is a string.\r\n * @function\r\n */\r\nexport function isString(obj: any): boolean {\r\n    return Object.prototype.toString.call(obj) === '[object String]';\r\n}\r\n\r\n/**\r\n * Reverses a compare function.\r\n * @function\r\n */\r\nexport function reverseCompareFunction<T>(compareFunction: ICompareFunction<T>): ICompareFunction<T> {\r\n    if (!isFunction(compareFunction)) {\r\n        return function(a, b) {\r\n            if (a < b) {\r\n                return 1;\r\n            } else if (a === b) {\r\n                return 0;\r\n            } else {\r\n                return -1;\r\n            }\r\n        };\r\n    } else {\r\n        return function(d: T, v: T) {\r\n            return compareFunction(d, v) * -1;\r\n        };\r\n    }\r\n}\r\n\r\n/**\r\n * Returns an equal function given a compare function.\r\n * @function\r\n */\r\nexport function compareToEquals<T>(compareFunction: ICompareFunction<T>): IEqualsFunction<T> {\r\n    return function(a: T, b: T) {\r\n        return compareFunction(a, b) === 0;\r\n    };\r\n}\r\n\r\n/**\r\n * @namespace Contains various functions for manipulating arrays.\r\n */\r\nexport module arrays {\r\n\r\n    /**\r\n     * Returns the position of the first occurrence of the specified item\r\n     * within the specified array.\r\n     * @param {*} array the array in which to search the element.\r\n     * @param {Object} item the element to search.\r\n     * @param {function(Object,Object):boolean=} equalsFunction optional function used to\r\n     * check equality between 2 elements.\r\n     * @return {number} the position of the first occurrence of the specified element\r\n     * within the specified array, or -1 if not found.\r\n     */\r\n    export function indexOf<T>(array: T[], item: T, equalsFunction?: IEqualsFunction<T>): number {\r\n        var equals = equalsFunction || defaultEquals;\r\n        var length = array.length;\r\n        for (var i = 0; i < length; i++) {\r\n            if (equals(array[i], item)) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    /**\r\n     * Returns the position of the last occurrence of the specified element\r\n     * within the specified array.\r\n     * @param {*} array the array in which to search the element.\r\n     * @param {Object} item the element to search.\r\n     * @param {function(Object,Object):boolean=} equalsFunction optional function used to\r\n     * check equality between 2 elements.\r\n     * @return {number} the position of the last occurrence of the specified element\r\n     * within the specified array or -1 if not found.\r\n     */\r\n    export function lastIndexOf<T>(array: T[], item: T, equalsFunction?: IEqualsFunction<T>): number {\r\n        var equals = equalsFunction || defaultEquals;\r\n        var length = array.length;\r\n        for (var i = length - 1; i >= 0; i--) {\r\n            if (equals(array[i], item)) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    /**\r\n     * Returns true if the specified array contains the specified element.\r\n     * @param {*} array the array in which to search the element.\r\n     * @param {Object} item the element to search.\r\n     * @param {function(Object,Object):boolean=} equalsFunction optional function to\r\n     * check equality between 2 elements.\r\n     * @return {boolean} true if the specified array contains the specified element.\r\n     */\r\n    export function contains<T>(array: T[], item: T, equalsFunction?: IEqualsFunction<T>): boolean {\r\n        return arrays.indexOf(array, item, equalsFunction) >= 0;\r\n    }\r\n\r\n\r\n    /**\r\n     * Removes the first ocurrence of the specified element from the specified array.\r\n     * @param {*} array the array in which to search element.\r\n     * @param {Object} item the element to search.\r\n     * @param {function(Object,Object):boolean=} equalsFunction optional function to\r\n     * check equality between 2 elements.\r\n     * @return {boolean} true if the array changed after this call.\r\n     */\r\n    export function remove<T>(array: T[], item: T, equalsFunction?: IEqualsFunction<T>): boolean {\r\n        var index = arrays.indexOf(array, item, equalsFunction);\r\n        if (index < 0) {\r\n            return false;\r\n        }\r\n        array.splice(index, 1);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Returns the number of elements in the specified array equal\r\n     * to the specified object.\r\n     * @param {Array} array the array in which to determine the frequency of the element.\r\n     * @param {Object} item the element whose frequency is to be determined.\r\n     * @param {function(Object,Object):boolean=} equalsFunction optional function used to\r\n     * check equality between 2 elements.\r\n     * @return {number} the number of elements in the specified array\r\n     * equal to the specified object.\r\n     */\r\n    export function frequency<T>(array: T[], item: T, equalsFunction?: IEqualsFunction<T>): number {\r\n        var equals = equalsFunction || defaultEquals;\r\n        var length = array.length;\r\n        var freq = 0;\r\n        for (var i = 0; i < length; i++) {\r\n            if (equals(array[i], item)) {\r\n                freq++;\r\n            }\r\n        }\r\n        return freq;\r\n    }\r\n\r\n    /**\r\n     * Returns true if the two specified arrays are equal to one another.\r\n     * Two arrays are considered equal if both arrays contain the same number\r\n     * of elements, and all corresponding pairs of elements in the two\r\n     * arrays are equal and are in the same order.\r\n     * @param {Array} array1 one array to be tested for equality.\r\n     * @param {Array} array2 the other array to be tested for equality.\r\n     * @param {function(Object,Object):boolean=} equalsFunction optional function used to\r\n     * check equality between elemements in the arrays.\r\n     * @return {boolean} true if the two arrays are equal\r\n     */\r\n    export function equals<T>(array1: T[], array2: T[], equalsFunction?: IEqualsFunction<T>): boolean {\r\n        var equals = equalsFunction || defaultEquals;\r\n\r\n        if (array1.length !== array2.length) {\r\n            return false;\r\n        }\r\n        var length = array1.length;\r\n        for (var i = 0; i < length; i++) {\r\n            if (!equals(array1[i], array2[i])) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Returns shallow a copy of the specified array.\r\n     * @param {*} array the array to copy.\r\n     * @return {Array} a copy of the specified array\r\n     */\r\n    export function copy<T>(array: T[]): T[] {\r\n        return array.concat();\r\n    }\r\n\r\n    /**\r\n     * Swaps the elements at the specified positions in the specified array.\r\n     * @param {Array} array The array in which to swap elements.\r\n     * @param {number} i the index of one element to be swapped.\r\n     * @param {number} j the index of the other element to be swapped.\r\n     * @return {boolean} true if the array is defined and the indexes are valid.\r\n     */\r\n    export function swap<T>(array: T[], i: number, j: number): boolean {\r\n        if (i < 0 || i >= array.length || j < 0 || j >= array.length) {\r\n            return false;\r\n        }\r\n        var temp = array[i];\r\n        array[i] = array[j];\r\n        array[j] = temp;\r\n        return true;\r\n    }\r\n\r\n    export function toString<T>(array: T[]): string {\r\n        return '[' + array.toString() + ']';\r\n    }\r\n\r\n    /**\r\n     * Executes the provided function once for each element present in this array\r\n     * starting from index 0 to length - 1.\r\n     * @param {Array} array The array in which to iterate.\r\n     * @param {function(Object):*} callback function to execute, it is\r\n     * invoked with one argument: the element value, to break the iteration you can\r\n     * optionally return false.\r\n     */\r\n    export function forEach<T>(array: T[], callback: (item: T) => boolean): void {\r\n        var lenght = array.length;\r\n        for (var i = 0; i < lenght; i++) {\r\n            if (callback(array[i]) === false) {\r\n                return;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// A linked list node\r\nexport interface ILinkedListNode<T> {\r\n    element: T;\r\n    next: ILinkedListNode<T>;\r\n}\r\n\r\nexport class LinkedList<T> {\r\n\r\n    /**\r\n    * First node in the list\r\n    * @type {Object}\r\n    * @private\r\n    */\r\n    public firstNode: ILinkedListNode<T> = null;\r\n    /**\r\n    * Last node in the list\r\n    * @type {Object}\r\n    * @private\r\n    */\r\n    private lastNode: ILinkedListNode<T> = null;\r\n\r\n    /**\r\n    * Number of elements in the list\r\n    * @type {number}\r\n    * @private\r\n    */\r\n    private nElements = 0;\r\n\r\n    public get count(){\r\n        return this.nElements;\r\n    }\r\n\r\n    /**\r\n    * Creates an empty Linked List.\r\n    * @class A linked list is a data structure consisting of a group of nodes\r\n    * which together represent a sequence.\r\n    * @constructor\r\n    */\r\n    constructor() {\r\n    }\r\n\r\n    /**\r\n    * Adds an element to this list.\r\n    * @param {Object} item element to be added.\r\n    * @param {number=} index optional index to add the element. If no index is specified\r\n    * the element is added to the end of this list.\r\n    * @return {boolean} true if the element was added or false if the index is invalid\r\n    * or if the element is undefined.\r\n    */\r\n    add(item: T, index?: number): boolean {\r\n        if (isUndefined(index)) {\r\n            index = this.nElements;\r\n        }\r\n        if (index < 0 || index > this.nElements || isUndefined(item)) {\r\n            return false;\r\n        }\r\n        var newNode = this.createNode(item);\r\n        if (this.nElements === 0) {\r\n            // First node in the list.\r\n            this.firstNode = newNode;\r\n            this.lastNode = newNode;\r\n        } else if (index === this.nElements) {\r\n            // Insert at the end.\r\n            this.lastNode.next = newNode;\r\n            this.lastNode = newNode;\r\n        } else if (index === 0) {\r\n            // Change first node.\r\n            newNode.next = this.firstNode;\r\n            this.firstNode = newNode;\r\n        } else {\r\n            var prev = this.nodeAtIndex(index - 1);\r\n            newNode.next = prev.next;\r\n            prev.next = newNode;\r\n        }\r\n        this.nElements++;\r\n        return true;\r\n    }\r\n\r\n    /**\r\n    * Returns the first element in this list.\r\n    * @return {*} the first element of the list or undefined if the list is\r\n    * empty.\r\n    */\r\n    first(): T {\r\n\r\n        if (this.firstNode !== null) {\r\n            return this.firstNode.element;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n    * Returns the last element in this list.\r\n    * @return {*} the last element in the list or undefined if the list is\r\n    * empty.\r\n    */\r\n    last(): T {\r\n\r\n        if (this.lastNode !== null) {\r\n            return this.lastNode.element;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Returns the element at the specified position in this list.\r\n     * @param {number} index desired index.\r\n     * @return {*} the element at the given index or undefined if the index is\r\n     * out of bounds.\r\n     */\r\n    elementAtIndex(index: number): T {\r\n\r\n        var node = this.nodeAtIndex(index);\r\n        if (node === null) {\r\n            return undefined;\r\n        }\r\n        return node.element;\r\n    }\r\n\r\n    /**\r\n     * Returns the index in this list of the first occurrence of the\r\n     * specified element, or -1 if the List does not contain this element.\r\n     * <p>If the elements inside this list are\r\n     * not comparable with the === operator a custom equals function should be\r\n     * provided to perform searches, the function must receive two arguments and\r\n     * return true if they are equal, false otherwise. Example:</p>\r\n     *\r\n     * <pre>\r\n     * var petsAreEqualByName = function(pet1, pet2) {\r\n     *  return pet1.name === pet2.name;\r\n     * }\r\n     * </pre>\r\n     * @param {Object} item element to search for.\r\n     * @param {function(Object,Object):boolean=} equalsFunction Optional\r\n     * function used to check if two elements are equal.\r\n     * @return {number} the index in this list of the first occurrence\r\n     * of the specified element, or -1 if this list does not contain the\r\n     * element.\r\n     */\r\n    indexOf(item: T, equalsFunction?: IEqualsFunction<T>): number {\r\n\r\n        var equalsF = equalsFunction || defaultEquals;\r\n        if (isUndefined(item)) {\r\n            return -1;\r\n        }\r\n        var currentNode = this.firstNode;\r\n        var index = 0;\r\n        while (currentNode !== null) {\r\n            if (equalsF(currentNode.element, item)) {\r\n                return index;\r\n            }\r\n            index++;\r\n            currentNode = currentNode.next;\r\n        }\r\n        return -1;\r\n    }\r\n\r\n\r\n    /**\r\n       * Returns true if this list contains the specified element.\r\n       * <p>If the elements inside the list are\r\n       * not comparable with the === operator a custom equals function should be\r\n       * provided to perform searches, the function must receive two arguments and\r\n       * return true if they are equal, false otherwise. Example:</p>\r\n       *\r\n       * <pre>\r\n       * var petsAreEqualByName = function(pet1, pet2) {\r\n       *  return pet1.name === pet2.name;\r\n       * }\r\n       * </pre>\r\n       * @param {Object} item element to search for.\r\n       * @param {function(Object,Object):boolean=} equalsFunction Optional\r\n       * function used to check if two elements are equal.\r\n       * @return {boolean} true if this list contains the specified element, false\r\n       * otherwise.\r\n       */\r\n    contains(item: T, equalsFunction?: IEqualsFunction<T>): boolean {\r\n        return (this.indexOf(item, equalsFunction) >= 0);\r\n    }\r\n\r\n    /**\r\n     * Removes the first occurrence of the specified element in this list.\r\n     * <p>If the elements inside the list are\r\n     * not comparable with the === operator a custom equals function should be\r\n     * provided to perform searches, the function must receive two arguments and\r\n     * return true if they are equal, false otherwise. Example:</p>\r\n     *\r\n     * <pre>\r\n     * var petsAreEqualByName = function(pet1, pet2) {\r\n     *  return pet1.name === pet2.name;\r\n     * }\r\n     * </pre>\r\n     * @param {Object} item element to be removed from this list, if present.\r\n     * @return {boolean} true if the list contained the specified element.\r\n     */\r\n    remove(item: T, equalsFunction?: IEqualsFunction<T>): boolean {\r\n        var equalsF = equalsFunction || defaultEquals;\r\n        if (this.nElements < 1 || isUndefined(item)) {\r\n            return false;\r\n        }\r\n        var previous: ILinkedListNode<T> = null;\r\n        var currentNode: ILinkedListNode<T> = this.firstNode;\r\n\r\n        while (currentNode !== null) {\r\n            if (equalsF(currentNode.element, item)) {\r\n\r\n                if (currentNode === this.firstNode) {\r\n                    this.firstNode = this.firstNode.next;\r\n                    if (currentNode === this.lastNode) {\r\n                        this.lastNode = null;\r\n                    }\r\n                } else if (currentNode === this.lastNode) {\r\n                    this.lastNode = previous;\r\n                    previous.next = currentNode.next;\r\n                    currentNode.next = null;\r\n                } else {\r\n                    previous.next = currentNode.next;\r\n                    currentNode.next = null;\r\n                }\r\n                this.nElements--;\r\n                return true;\r\n            }\r\n            previous = currentNode;\r\n            currentNode = currentNode.next;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Removes all of the elements from this list.\r\n     */\r\n    clear(): void {\r\n        this.firstNode = null;\r\n        this.lastNode = null;\r\n        this.nElements = 0;\r\n    }\r\n\r\n    /**\r\n     * Returns true if this list is equal to the given list.\r\n     * Two lists are equal if they have the same elements in the same order.\r\n     * @param {LinkedList} other the other list.\r\n     * @param {function(Object,Object):boolean=} equalsFunction optional\r\n     * function used to check if two elements are equal. If the elements in the lists\r\n     * are custom objects you should provide a function, otherwise\r\n     * the === operator is used to check equality between elements.\r\n     * @return {boolean} true if this list is equal to the given list.\r\n     */\r\n    equals(other: LinkedList<T>, equalsFunction?: IEqualsFunction<T>): boolean {\r\n        var eqF = equalsFunction || defaultEquals;\r\n        if (!(other instanceof LinkedList)) {\r\n            return false;\r\n        }\r\n        if (this.size() !== other.size()) {\r\n            return false;\r\n        }\r\n        return this.equalsAux(this.firstNode, other.firstNode, eqF);\r\n    }\r\n\r\n    /**\r\n    * @private\r\n    */\r\n    private equalsAux(n1: ILinkedListNode<T>, n2: ILinkedListNode<T>, eqF: IEqualsFunction<T>): boolean {\r\n        while (n1 !== null) {\r\n            if (!eqF(n1.element, n2.element)) {\r\n                return false;\r\n            }\r\n            n1 = n1.next;\r\n            n2 = n2.next;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Removes the element at the specified position in this list.\r\n     * @param {number} index given index.\r\n     * @return {*} removed element or undefined if the index is out of bounds.\r\n     */\r\n    removeElementAtIndex(index: number): T {\r\n        if (index < 0 || index >= this.nElements) {\r\n            return undefined;\r\n        }\r\n        var element: T;\r\n        if (this.nElements === 1) {\r\n            //First node in the list.\r\n            element = this.firstNode.element;\r\n            this.firstNode = null;\r\n            this.lastNode = null;\r\n        } else {\r\n            var previous = this.nodeAtIndex(index - 1);\r\n            if (previous === null) {\r\n                element = this.firstNode.element;\r\n                this.firstNode = this.firstNode.next;\r\n            } else if (previous.next === this.lastNode) {\r\n                element = this.lastNode.element;\r\n                this.lastNode = previous;\r\n            }\r\n            if (previous !== null) {\r\n                element = previous.next.element;\r\n                previous.next = previous.next.next;\r\n            }\r\n        }\r\n        this.nElements--;\r\n        return element;\r\n    }\r\n\r\n    /**\r\n     * Executes the provided function once for each element present in this list in order.\r\n     * @param {function(Object):*} callback function to execute, it is\r\n     * invoked with one argument: the element value, to break the iteration you can\r\n     * optionally return false.\r\n     */\r\n    forEach(callback: (item: T) => boolean): void {\r\n        var currentNode = this.firstNode;\r\n        while (currentNode !== null) {\r\n            if (callback(currentNode.element) === false) {\r\n                break;\r\n            }\r\n            currentNode = currentNode.next;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reverses the order of the elements in this linked list (makes the last\r\n     * element first, and the first element last).\r\n     */\r\n    reverse(): void {\r\n        var previous: ILinkedListNode<T> = null;\r\n        var current: ILinkedListNode<T> = this.firstNode;\r\n        var temp: ILinkedListNode<T> = null;\r\n        while (current !== null) {\r\n            temp = current.next;\r\n            current.next = previous;\r\n            previous = current;\r\n            current = temp;\r\n        }\r\n        temp = this.firstNode;\r\n        this.firstNode = this.lastNode;\r\n        this.lastNode = temp;\r\n    }\r\n\r\n    /**\r\n     * Returns an array containing all of the elements in this list in proper\r\n     * sequence.\r\n     * @return {Array.<*>} an array containing all of the elements in this list,\r\n     * in proper sequence.\r\n     */\r\n    toArray(): T[] {\r\n        var array: T[] = [];\r\n        var currentNode: ILinkedListNode<T> = this.firstNode;\r\n        while (currentNode !== null) {\r\n            array.push(currentNode.element);\r\n            currentNode = currentNode.next;\r\n        }\r\n        return array;\r\n    }\r\n\r\n    /**\r\n     * Returns the number of elements in this list.\r\n     * @return {number} the number of elements in this list.\r\n     */\r\n    size(): number {\r\n        return this.nElements;\r\n    }\r\n\r\n    /**\r\n     * Returns true if this list contains no elements.\r\n     * @return {boolean} true if this list contains no elements.\r\n     */\r\n    isEmpty(): boolean {\r\n        return this.nElements <= 0;\r\n    }\r\n\r\n    toString(): string {\r\n        return arrays.toString(this.toArray());\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private nodeAtIndex(index: number): ILinkedListNode<T> {\r\n\r\n        if (index < 0 || index >= this.nElements) {\r\n            return null;\r\n        }\r\n        if (index === (this.nElements - 1)) {\r\n            return this.lastNode;\r\n        }\r\n        var node = this.firstNode;\r\n        for (var i = 0; i < index; i++) {\r\n            node = node.next;\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private createNode(item: T): ILinkedListNode<T> {\r\n        return {\r\n            element: item,\r\n            next: null\r\n        };\r\n    }\r\n} // End of linked list\r\n\r\n\r\n\r\n// Used internally by dictionary\r\nexport interface IDictionaryPair<K, V> {\r\n    key: K;\r\n    value: V;\r\n}\r\n\r\nexport class Dictionary<K, V>{\r\n\r\n    /**\r\n     * Object holding the key-value pairs.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    protected table: { [key: string]: IDictionaryPair<K, V> };\r\n    //: [key: K] will not work since indices can only by strings in javascript and typescript enforces this.\r\n\r\n    /**\r\n     * Number of elements in the list.\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    protected nElements: number;\r\n\r\n    /**\r\n     * Function used to convert keys to strings.\r\n     * @type {function(Object):string}\r\n     * @protected\r\n     */\r\n    protected toStr: (key: K) => string;\r\n\r\n\r\n    /**\r\n     * Creates an empty dictionary.\r\n     * @class <p>Dictionaries map keys to values; each key can map to at most one value.\r\n     * This implementation accepts any kind of objects as keys.</p>\r\n     *\r\n     * <p>If the keys are custom objects a function which converts keys to unique\r\n     * strings must be provided. Example:</p>\r\n     * <pre>\r\n     * function petToString(pet) {\r\n     *  return pet.name;\r\n     * }\r\n     * </pre>\r\n     * @constructor\r\n     * @param {function(Object):string=} toStrFunction optional function used\r\n     * to convert keys to strings. If the keys aren't strings or if toString()\r\n     * is not appropriate, a custom function which receives a key and returns a\r\n     * unique string must be provided.\r\n     */\r\n    constructor(toStrFunction?: (key: K) => string) {\r\n        this.table = {};\r\n        this.nElements = 0;\r\n        this.toStr = toStrFunction || defaultToString;\r\n    }\r\n\r\n\r\n    /**\r\n     * Returns the value to which this dictionary maps the specified key.\r\n     * Returns undefined if this dictionary contains no mapping for this key.\r\n     * @param {Object} key key whose associated value is to be returned.\r\n     * @return {*} the value to which this dictionary maps the specified key or\r\n     * undefined if the map contains no mapping for this key.\r\n     */\r\n    getValue(key: K): V {\r\n        var pair: IDictionaryPair<K, V> = this.table['$' + this.toStr(key)];\r\n        if (isUndefined(pair)) {\r\n            return undefined;\r\n        }\r\n        return pair.value;\r\n    }\r\n\r\n\r\n    /**\r\n     * Associates the specified value with the specified key in this dictionary.\r\n     * If the dictionary previously contained a mapping for this key, the old\r\n     * value is replaced by the specified value.\r\n     * @param {Object} key key with which the specified value is to be\r\n     * associated.\r\n     * @param {Object} value value to be associated with the specified key.\r\n     * @return {*} previous value associated with the specified key, or undefined if\r\n     * there was no mapping for the key or if the key/value are undefined.\r\n     */\r\n    setValue(key: K, value: V): V {\r\n\r\n        if (isUndefined(key) || isUndefined(value)) {\r\n            return undefined;\r\n        }\r\n\r\n        var ret: V;\r\n        var k = '$' + this.toStr(key);\r\n        var previousElement: IDictionaryPair<K, V> = this.table[k];\r\n        if (isUndefined(previousElement)) {\r\n            this.nElements++;\r\n            ret = undefined;\r\n        } else {\r\n            ret = previousElement.value;\r\n        }\r\n        this.table[k] = {\r\n            key: key,\r\n            value: value\r\n        };\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * Removes the mapping for this key from this dictionary if it is present.\r\n     * @param {Object} key key whose mapping is to be removed from the\r\n     * dictionary.\r\n     * @return {*} previous value associated with specified key, or undefined if\r\n     * there was no mapping for key.\r\n     */\r\n    remove(key: K): V {\r\n        var k = '$' + this.toStr(key);\r\n        var previousElement: IDictionaryPair<K, V> = this.table[k];\r\n        if (!isUndefined(previousElement)) {\r\n            delete this.table[k];\r\n            this.nElements--;\r\n            return previousElement.value;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Returns an array containing all of the keys in this dictionary.\r\n     * @return {Array} an array containing all of the keys in this dictionary.\r\n     */\r\n    keys(): K[] {\r\n        var array: K[] = [];\r\n        for (var name in this.table) {\r\n            if (has(this.table, name)) {\r\n                var pair: IDictionaryPair<K, V> = this.table[name];\r\n                array.push(pair.key);\r\n            }\r\n        }\r\n        return array;\r\n    }\r\n\r\n    /**\r\n     * Returns an array containing all of the values in this dictionary.\r\n     * @return {Array} an array containing all of the values in this dictionary.\r\n     */\r\n    values(): V[] {\r\n        var array: V[] = [];\r\n        for (var name in this.table) {\r\n            if (has(this.table, name)) {\r\n                var pair: IDictionaryPair<K, V> = this.table[name];\r\n                array.push(pair.value);\r\n            }\r\n        }\r\n        return array;\r\n    }\r\n\r\n    /**\r\n    * Executes the provided function once for each key-value pair\r\n    * present in this dictionary.\r\n    * @param {function(Object,Object):*} callback function to execute, it is\r\n    * invoked with two arguments: key and value. To break the iteration you can\r\n    * optionally return false.\r\n    */\r\n    forEach(callback: (key: K, value: V) => any): void {\r\n        for (var name in this.table) {\r\n            if (has(this.table, name)) {\r\n                var pair: IDictionaryPair<K, V> = this.table[name];\r\n                var ret = callback(pair.key, pair.value);\r\n                if (ret === false) {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns true if this dictionary contains a mapping for the specified key.\r\n     * @param {Object} key key whose presence in this dictionary is to be\r\n     * tested.\r\n     * @return {boolean} true if this dictionary contains a mapping for the\r\n     * specified key.\r\n     */\r\n    containsKey(key: K): boolean {\r\n        return !isUndefined(this.getValue(key));\r\n    }\r\n\r\n    /**\r\n    * Removes all mappings from this dictionary.\r\n    * @this {Dictionary}\r\n    */\r\n    clear() {\r\n        this.table = {};\r\n        this.nElements = 0;\r\n    }\r\n\r\n    /**\r\n     * Returns the number of keys in this dictionary.\r\n     * @return {number} the number of key-value mappings in this dictionary.\r\n     */\r\n    size(): number {\r\n        return this.nElements;\r\n    }\r\n\r\n    /**\r\n     * Returns true if this dictionary contains no mappings.\r\n     * @return {boolean} true if this dictionary contains no mappings.\r\n     */\r\n    isEmpty(): boolean {\r\n        return this.nElements <= 0;\r\n    }\r\n\r\n    toString(): string {\r\n        var toret = \"{\";\r\n        this.forEach((k, v) => {\r\n            toret = toret + \"\\n\\t\" + k.toString() + \" : \" + v.toString();\r\n        });\r\n        return toret + \"\\n}\";\r\n    }\r\n} // End of dictionary\r\n\r\n/**\r\n * This class is used by the LinkedDictionary Internally\r\n * Has to be a class, not an interface, because it needs to have\r\n * the 'unlink' function defined.\r\n */\r\nclass LinkedDictionaryPair<K, V> implements IDictionaryPair<K, V> {\r\n    prev: LinkedDictionaryPair<K, V>;\r\n    next: LinkedDictionaryPair<K, V>;\r\n\r\n    constructor(public key: K, public value: V) { }\r\n\r\n    unlink() {\r\n        this.prev.next = this.next;\r\n        this.next.prev = this.prev;\r\n    }\r\n}\r\n\r\nexport class LinkedDictionary<K, V> extends Dictionary<K, V> {\r\n    private head: LinkedDictionaryPair<K, V>; // Head Identifier of the list.  holds no Key or Value\r\n    private tail: LinkedDictionaryPair<K, V>; // Tail Identifier of the list.  holds no Key or Value\r\n\r\n    constructor(toStrFunction?: (key: K) => string) {\r\n        super(toStrFunction);\r\n        this.head = new LinkedDictionaryPair(null, null);\r\n        this.tail = new LinkedDictionaryPair(null, null);\r\n        this.head.next = this.tail;\r\n        this.tail.prev = this.head;\r\n    }\r\n\r\n    /**\r\n     * Inserts the new node to the 'tail' of the list, updating the\r\n     * neighbors, and moving 'this.tail' (the End of List indicator) that\r\n     * to the end.\r\n     */\r\n    private appendToTail(entry: LinkedDictionaryPair<K, V>) {\r\n        var lastNode = this.tail.prev;\r\n        lastNode.next = entry;\r\n        entry.prev = lastNode;\r\n        entry.next = this.tail;\r\n        this.tail.prev = entry;\r\n    }\r\n\r\n    /**\r\n     * Retrieves a linked dictionary from the table internally\r\n     */\r\n    private getLinkedDictionaryPair(key: K): LinkedDictionaryPair<K, V> {\r\n        if (isUndefined(key)) {\r\n            return undefined;\r\n        }\r\n        var k = '$' + this.toStr(key);\r\n        var pair = <LinkedDictionaryPair<K, V>>(this.table[k]);\r\n        return pair;\r\n    }\r\n\r\n    /**\r\n     * Returns the value to which this dictionary maps the specified key.\r\n     * Returns undefined if this dictionary contains no mapping for this key.\r\n     * @param {Object} key key whose associated value is to be returned.\r\n     * @return {*} the value to which this dictionary maps the specified key or\r\n     * undefined if the map contains no mapping for this key.\r\n     */\r\n    getValue(key: K): V {\r\n        var pair = this.getLinkedDictionaryPair(key);\r\n        if (!isUndefined(pair)) {\r\n            return pair.value;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Removes the mapping for this key from this dictionary if it is present.\r\n     * Also, if a value is present for this key, the entry is removed from the\r\n     * insertion ordering.\r\n     * @param {Object} key key whose mapping is to be removed from the\r\n     * dictionary.\r\n     * @return {*} previous value associated with specified key, or undefined if\r\n     * there was no mapping for key.\r\n     */\r\n    remove(key: K): V {\r\n        var pair = this.getLinkedDictionaryPair(key);\r\n        if (!isUndefined(pair)) {\r\n            super.remove(key); // This will remove it from the table\r\n            pair.unlink(); // This will unlink it from the chain\r\n            return pair.value;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n    * Removes all mappings from this LinkedDictionary.\r\n    * @this {LinkedDictionary}\r\n    */\r\n    clear() {\r\n        super.clear();\r\n        this.head.next = this.tail;\r\n        this.tail.prev = this.head;\r\n    }\r\n\r\n    /**\r\n     * Internal function used when updating an existing KeyValue pair.\r\n     * It places the new value indexed by key into the table, but maintains\r\n     * its place in the linked ordering.\r\n     */\r\n    private replace(oldPair: LinkedDictionaryPair<K, V>, newPair: LinkedDictionaryPair<K, V>) {\r\n        var k = '$' + this.toStr(newPair.key);\r\n\r\n        // set the new Pair's links to existingPair's links\r\n        newPair.next = oldPair.next;\r\n        newPair.prev = oldPair.prev;\r\n\r\n        // Delete Existing Pair from the table, unlink it from chain.\r\n        // As a result, the nElements gets decremented by this operation\r\n        this.remove(oldPair.key);\r\n\r\n        // Link new Pair in place of where oldPair was,\r\n        // by pointing the old pair's neighbors to it.\r\n        newPair.prev.next = newPair;\r\n        newPair.next.prev = newPair;\r\n\r\n        this.table[k] = newPair;\r\n\r\n        // To make up for the fact that the number of elements was decremented,\r\n        // We need to increase it by one.\r\n        ++this.nElements;\r\n\r\n    }\r\n\r\n    /**\r\n     * Associates the specified value with the specified key in this dictionary.\r\n     * If the dictionary previously contained a mapping for this key, the old\r\n     * value is replaced by the specified value.\r\n     * Updating of a key that already exists maintains its place in the\r\n     * insertion order into the map.\r\n     * @param {Object} key key with which the specified value is to be\r\n     * associated.\r\n     * @param {Object} value value to be associated with the specified key.\r\n     * @return {*} previous value associated with the specified key, or undefined if\r\n     * there was no mapping for the key or if the key/value are undefined.\r\n     */\r\n    setValue(key: K, value: V): V {\r\n\r\n        if (isUndefined(key) || isUndefined(value)) {\r\n            return undefined;\r\n        }\r\n\r\n        var existingPair = this.getLinkedDictionaryPair(key);\r\n        var newPair = new LinkedDictionaryPair<K, V>(key, value);\r\n\r\n        var k = '$' + this.toStr(key);\r\n\r\n        // If there is already an element for that key, we\r\n        // keep it's place in the LinkedList\r\n        if (!isUndefined(existingPair)) {\r\n            this.replace(existingPair, newPair);\r\n\r\n            return existingPair.value;\r\n        } else {\r\n            this.appendToTail(newPair);\r\n            this.table[k] = newPair;\r\n            ++this.nElements;\r\n\r\n            return undefined;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Returns an array containing all of the keys in this LinkedDictionary, ordered\r\n     * by insertion order.\r\n     * @return {Array} an array containing all of the keys in this LinkedDictionary,\r\n     * ordered by insertion order.\r\n     */\r\n    keys(): K[] {\r\n        var array: K[] = [];\r\n        this.forEach((key, value) => {\r\n            array.push(key);\r\n        });\r\n        return array;\r\n    }\r\n\r\n    /**\r\n     * Returns an array containing all of the values in this LinkedDictionary, ordered by\r\n     * insertion order.\r\n     * @return {Array} an array containing all of the values in this LinkedDictionary,\r\n     * ordered by insertion order.\r\n     */\r\n    values(): V[] {\r\n        var array: V[] = [];\r\n        this.forEach((key, value) => {\r\n            array.push(value);\r\n        });\r\n        return array;\r\n    }\r\n\r\n    /**\r\n    * Executes the provided function once for each key-value pair\r\n    * present in this LinkedDictionary. It is done in the order of insertion\r\n    * into the LinkedDictionary\r\n    * @param {function(Object,Object):*} callback function to execute, it is\r\n    * invoked with two arguments: key and value. To break the iteration you can\r\n    * optionally return false.\r\n    */\r\n    forEach(callback: (key: K, value: V) => any): void {\r\n        var crawlNode = this.head.next;\r\n        while (crawlNode.next != null) {\r\n            var ret = callback(crawlNode.key, crawlNode.value);\r\n            if (ret === false) {\r\n                return;\r\n            }\r\n            crawlNode = crawlNode.next;\r\n        }\r\n    }\r\n\r\n} // End of LinkedDictionary\r\n// /**\r\n//  * Returns true if this dictionary is equal to the given dictionary.\r\n//  * Two dictionaries are equal if they contain the same mappings.\r\n//  * @param {Dictionary} other the other dictionary.\r\n//  * @param {function(Object,Object):boolean=} valuesEqualFunction optional\r\n//  * function used to check if two values are equal.\r\n//  * @return {boolean} true if this dictionary is equal to the given dictionary.\r\n//  */\r\n// Dictionary.prototype.equals = function(other,valuesEqualFunction) {\r\n// \tvar eqF = valuesEqualFunction || defaultEquals;\r\n// \tif(!(other instanceof Dictionary)){\r\n// \t\treturn false;\r\n// \t}\r\n// \tif(this.size() !== other.size()){\r\n// \t\treturn false;\r\n// \t}\r\n// \treturn this.equalsAux(this.firstNode,other.firstNode,eqF);\r\n// }\r\n\r\nexport class MultiDictionary<K, V> {\r\n\r\n    // Cannot do:\r\n    // class MultiDictionary<K,V> extends Dictionary<K,Array<V>> {\r\n    // Since we want to reuse the function name setValue and types in signature become incompatible\r\n    // Therefore we are using composition instead of inheritance\r\n    private dict: Dictionary<K, Array<V>>;\r\n    private equalsF: IEqualsFunction<V>;\r\n    private allowDuplicate: boolean;\r\n\r\n    /**\r\n     * Creates an empty multi dictionary.\r\n     * @class <p>A multi dictionary is a special kind of dictionary that holds\r\n     * multiple values against each key. Setting a value into the dictionary will\r\n     * add the value to an array at that key. Getting a key will return an array,\r\n     * holding all the values set to that key.\r\n     * You can configure to allow duplicates in the values.\r\n     * This implementation accepts any kind of objects as keys.</p>\r\n     *\r\n     * <p>If the keys are custom objects a function which converts keys to strings must be\r\n     * provided. Example:</p>\r\n     *\r\n     * <pre>\r\n     * function petToString(pet) {\r\n       *  return pet.name;\r\n       * }\r\n     * </pre>\r\n     * <p>If the values are custom objects a function to check equality between values\r\n     * must be provided. Example:</p>\r\n     *\r\n     * <pre>\r\n     * function petsAreEqualByAge(pet1,pet2) {\r\n       *  return pet1.age===pet2.age;\r\n       * }\r\n     * </pre>\r\n     * @constructor\r\n     * @param {function(Object):string=} toStrFunction optional function\r\n     * to convert keys to strings. If the keys aren't strings or if toString()\r\n     * is not appropriate, a custom function which receives a key and returns a\r\n     * unique string must be provided.\r\n     * @param {function(Object,Object):boolean=} valuesEqualsFunction optional\r\n     * function to check if two values are equal.\r\n     *\r\n     * @param allowDuplicateValues\r\n     */\r\n    constructor(toStrFunction?: (key: K) => string, valuesEqualsFunction?: IEqualsFunction<V>, allowDuplicateValues = false) {\r\n        this.dict = new Dictionary<K, Array<V>>(toStrFunction);\r\n        this.equalsF = valuesEqualsFunction || defaultEquals;\r\n        this.allowDuplicate = allowDuplicateValues;\r\n    }\r\n    /**\r\n    * Returns an array holding the values to which this dictionary maps\r\n    * the specified key.\r\n    * Returns an empty array if this dictionary contains no mappings for this key.\r\n    * @param {Object} key key whose associated values are to be returned.\r\n    * @return {Array} an array holding the values to which this dictionary maps\r\n    * the specified key.\r\n    */\r\n    getValue(key: K): V[] {\r\n        var values = this.dict.getValue(key);\r\n        if (isUndefined(values)) {\r\n            return [];\r\n        }\r\n        return arrays.copy(values);\r\n    }\r\n\r\n    /**\r\n     * Adds the value to the array associated with the specified key, if\r\n     * it is not already present.\r\n     * @param {Object} key key with which the specified value is to be\r\n     * associated.\r\n     * @param {Object} value the value to add to the array at the key\r\n     * @return {boolean} true if the value was not already associated with that key.\r\n     */\r\n    setValue(key: K, value: V): boolean {\r\n\r\n        if (isUndefined(key) || isUndefined(value)) {\r\n            return false;\r\n        }\r\n        if (!this.containsKey(key)) {\r\n            this.dict.setValue(key, [value]);\r\n            return true;\r\n        }\r\n        var array = this.dict.getValue(key);\r\n        if (!this.allowDuplicate) {\r\n            if (arrays.contains(array, value, this.equalsF)) {\r\n                return false;\r\n            }\r\n        }\r\n        array.push(value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Removes the specified values from the array of values associated with the\r\n     * specified key. If a value isn't given, all values associated with the specified\r\n     * key are removed.\r\n     * @param {Object} key key whose mapping is to be removed from the\r\n     * dictionary.\r\n     * @param {Object=} value optional argument to specify the value to remove\r\n     * from the array associated with the specified key.\r\n     * @return {*} true if the dictionary changed, false if the key doesn't exist or\r\n     * if the specified value isn't associated with the specified key.\r\n     */\r\n    remove(key: K, value?: V): boolean {\r\n        if (isUndefined(value)) {\r\n            var v = this.dict.remove(key);\r\n            return !isUndefined(v);\r\n        }\r\n        var array = this.dict.getValue(key);\r\n        if (arrays.remove(array, value, this.equalsF)) {\r\n            if (array.length === 0) {\r\n                this.dict.remove(key);\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Returns an array containing all of the keys in this dictionary.\r\n     * @return {Array} an array containing all of the keys in this dictionary.\r\n     */\r\n    keys(): K[] {\r\n        return this.dict.keys();\r\n    }\r\n\r\n    /**\r\n     * Returns an array containing all of the values in this dictionary.\r\n     * @return {Array} an array containing all of the values in this dictionary.\r\n     */\r\n    values(): V[] {\r\n        var values = this.dict.values();\r\n        var array: Array<V> = [];\r\n        for (var i = 0; i < values.length; i++) {\r\n            var v = values[i];\r\n            for (var j = 0; j < v.length; j++) {\r\n                array.push(v[j]);\r\n            }\r\n        }\r\n        return array;\r\n    }\r\n\r\n    /**\r\n     * Returns true if this dictionary at least one value associatted the specified key.\r\n     * @param {Object} key key whose presence in this dictionary is to be\r\n     * tested.\r\n     * @return {boolean} true if this dictionary at least one value associatted\r\n     * the specified key.\r\n     */\r\n    containsKey(key: K): boolean {\r\n        return this.dict.containsKey(key);\r\n    }\r\n\r\n    /**\r\n     * Removes all mappings from this dictionary.\r\n     */\r\n    clear(): void {\r\n        this.dict.clear();\r\n    }\r\n\r\n    /**\r\n     * Returns the number of keys in this dictionary.\r\n     * @return {number} the number of key-value mappings in this dictionary.\r\n     */\r\n    size(): number {\r\n        return this.dict.size();\r\n    }\r\n\r\n    /**\r\n     * Returns true if this dictionary contains no mappings.\r\n     * @return {boolean} true if this dictionary contains no mappings.\r\n     */\r\n    isEmpty(): boolean {\r\n        return this.dict.isEmpty();\r\n    }\r\n}// end of multi dictionary\r\n\r\nexport class Heap<T> {\r\n    /**\r\n     * Array used to store the elements od the heap.\r\n     * @type {Array.<Object>}\r\n     * @private\r\n     */\r\n    private data: T[] = [];\r\n    /**\r\n     * Function used to compare elements.\r\n     * @type {function(Object,Object):number}\r\n     * @private\r\n     */\r\n    private compare: ICompareFunction<T>;\r\n    /**\r\n     * Creates an empty Heap.\r\n     * @class\r\n     * <p>A heap is a binary tree, where the nodes maintain the heap property:\r\n     * each node is smaller than each of its children and therefore a MinHeap\r\n     * This implementation uses an array to store elements.</p>\r\n     * <p>If the inserted elements are custom objects a compare function must be provided,\r\n     *  at construction time, otherwise the <=, === and >= operators are\r\n     * used to compare elements. Example:</p>\r\n     *\r\n     * <pre>\r\n     * function compare(a, b) {\r\n     *  if (a is less than b by some ordering criterion) {\r\n     *     return -1;\r\n     *  } if (a is greater than b by the ordering criterion) {\r\n     *     return 1;\r\n     *  }\r\n     *  // a must be equal to b\r\n     *  return 0;\r\n     * }\r\n     * </pre>\r\n     *\r\n     * <p>If a Max-Heap is wanted (greater elements on top) you can a provide a\r\n     * reverse compare function to accomplish that behavior. Example:</p>\r\n     *\r\n     * <pre>\r\n     * function reverseCompare(a, b) {\r\n     *  if (a is less than b by some ordering criterion) {\r\n     *     return 1;\r\n     *  } if (a is greater than b by the ordering criterion) {\r\n     *     return -1;\r\n     *  }\r\n     *  // a must be equal to b\r\n     *  return 0;\r\n     * }\r\n     * </pre>\r\n     *\r\n     * @constructor\r\n     * @param {function(Object,Object):number=} compareFunction optional\r\n     * function used to compare two elements. Must return a negative integer,\r\n     * zero, or a positive integer as the first argument is less than, equal to,\r\n     * or greater than the second.\r\n     */\r\n    constructor(compareFunction?: ICompareFunction<T>) {\r\n        this.compare = compareFunction || defaultCompare;\r\n    }\r\n\r\n    /**\r\n     * Returns the index of the left child of the node at the given index.\r\n     * @param {number} nodeIndex The index of the node to get the left child\r\n     * for.\r\n     * @return {number} The index of the left child.\r\n     * @private\r\n     */\r\n    private leftChildIndex(nodeIndex: number): number {\r\n        return (2 * nodeIndex) + 1;\r\n    }\r\n    /**\r\n     * Returns the index of the right child of the node at the given index.\r\n     * @param {number} nodeIndex The index of the node to get the right child\r\n     * for.\r\n     * @return {number} The index of the right child.\r\n     * @private\r\n     */\r\n    private rightChildIndex(nodeIndex: number): number {\r\n        return (2 * nodeIndex) + 2;\r\n    }\r\n    /**\r\n     * Returns the index of the parent of the node at the given index.\r\n     * @param {number} nodeIndex The index of the node to get the parent for.\r\n     * @return {number} The index of the parent.\r\n     * @private\r\n     */\r\n    private parentIndex(nodeIndex: number): number {\r\n        return Math.floor((nodeIndex - 1) / 2);\r\n    }\r\n    /**\r\n     * Returns the index of the smaller child node (if it exists).\r\n     * @param {number} leftChild left child index.\r\n     * @param {number} rightChild right child index.\r\n     * @return {number} the index with the minimum value or -1 if it doesn't\r\n     * exists.\r\n     * @private\r\n     */\r\n    private minIndex(leftChild: number, rightChild: number): number {\r\n\r\n        if (rightChild >= this.data.length) {\r\n            if (leftChild >= this.data.length) {\r\n                return -1;\r\n            } else {\r\n                return leftChild;\r\n            }\r\n        } else {\r\n            if (this.compare(this.data[leftChild], this.data[rightChild]) <= 0) {\r\n                return leftChild;\r\n            } else {\r\n                return rightChild;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Moves the node at the given index up to its proper place in the heap.\r\n     * @param {number} index The index of the node to move up.\r\n     * @private\r\n     */\r\n    private siftUp(index: number): void {\r\n\r\n        var parent = this.parentIndex(index);\r\n        while (index > 0 && this.compare(this.data[parent], this.data[index]) > 0) {\r\n            arrays.swap(this.data, parent, index);\r\n            index = parent;\r\n            parent = this.parentIndex(index);\r\n        }\r\n    }\r\n    /**\r\n     * Moves the node at the given index down to its proper place in the heap.\r\n     * @param {number} nodeIndex The index of the node to move down.\r\n     * @private\r\n     */\r\n    private siftDown(nodeIndex: number): void {\r\n\r\n        //smaller child index\r\n        var min = this.minIndex(this.leftChildIndex(nodeIndex),\r\n            this.rightChildIndex(nodeIndex));\r\n\r\n        while (min >= 0 && this.compare(this.data[nodeIndex],\r\n            this.data[min]) > 0) {\r\n            arrays.swap(this.data, min, nodeIndex);\r\n            nodeIndex = min;\r\n            min = this.minIndex(this.leftChildIndex(nodeIndex),\r\n                this.rightChildIndex(nodeIndex));\r\n        }\r\n    }\r\n    /**\r\n     * Retrieves but does not remove the root element of this heap.\r\n     * @return {*} The value at the root of the heap. Returns undefined if the\r\n     * heap is empty.\r\n     */\r\n    peek(): T {\r\n\r\n        if (this.data.length > 0) {\r\n            return this.data[0];\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n    /**\r\n     * Adds the given element into the heap.\r\n     * @param {*} element the element.\r\n     * @return true if the element was added or fals if it is undefined.\r\n     */\r\n    add(element: T): boolean {\r\n        if (isUndefined(element)) {\r\n            return undefined;\r\n        }\r\n        this.data.push(element);\r\n        this.siftUp(this.data.length - 1);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Retrieves and removes the root element of this heap.\r\n     * @return {*} The value removed from the root of the heap. Returns\r\n     * undefined if the heap is empty.\r\n     */\r\n    removeRoot(): T {\r\n\r\n        if (this.data.length > 0) {\r\n            var obj = this.data[0];\r\n            this.data[0] = this.data[this.data.length - 1];\r\n            this.data.splice(this.data.length - 1, 1);\r\n            if (this.data.length > 0) {\r\n                this.siftDown(0);\r\n            }\r\n            return obj;\r\n        }\r\n        return undefined;\r\n    }\r\n    /**\r\n     * Returns true if this heap contains the specified element.\r\n     * @param {Object} element element to search for.\r\n     * @return {boolean} true if this Heap contains the specified element, false\r\n     * otherwise.\r\n     */\r\n    contains(element: T): boolean {\r\n        var equF = compareToEquals(this.compare);\r\n        return arrays.contains(this.data, element, equF);\r\n    }\r\n    /**\r\n     * Returns the number of elements in this heap.\r\n     * @return {number} the number of elements in this heap.\r\n     */\r\n    size(): number {\r\n        return this.data.length;\r\n    }\r\n    /**\r\n     * Checks if this heap is empty.\r\n     * @return {boolean} true if and only if this heap contains no items; false\r\n     * otherwise.\r\n     */\r\n    isEmpty(): boolean {\r\n        return this.data.length <= 0;\r\n    }\r\n    /**\r\n     * Removes all of the elements from this heap.\r\n     */\r\n    clear(): void {\r\n        this.data.length = 0;\r\n    }\r\n\r\n    /**\r\n     * Executes the provided function once for each element present in this heap in\r\n     * no particular order.\r\n     * @param {function(Object):*} callback function to execute, it is\r\n     * invoked with one argument: the element value, to break the iteration you can\r\n     * optionally return false.\r\n     */\r\n    forEach(callback: (item: T) => boolean) {\r\n        arrays.forEach(this.data, callback);\r\n    }\r\n}\r\n\r\nexport class Stack<T> {\r\n    /**\r\n     * List containing the elements.\r\n     * @type LinkedList\r\n     * @private\r\n     */\r\n    private list: LinkedList<T>;\r\n    /**\r\n     * Creates an empty Stack.\r\n     * @class A Stack is a Last-In-First-Out (LIFO) data structure, the last\r\n     * element added to the stack will be the first one to be removed. This\r\n     * implementation uses a linked list as a container.\r\n     * @constructor\r\n     */\r\n    constructor() {\r\n        this.list = new LinkedList<T>();\r\n    }\r\n\r\n    /**\r\n     * Pushes an item onto the top of this stack.\r\n     * @param {Object} elem the element to be pushed onto this stack.\r\n     * @return {boolean} true if the element was pushed or false if it is undefined.\r\n     */\r\n    push(elem: T) {\r\n        return this.list.add(elem, 0);\r\n    }\r\n    /**\r\n     * Pushes an item onto the top of this stack.\r\n     * @param {Object} elem the element to be pushed onto this stack.\r\n     * @return {boolean} true if the element was pushed or false if it is undefined.\r\n     */\r\n    add(elem: T) {\r\n        return this.list.add(elem, 0);\r\n    }\r\n    /**\r\n     * Removes the object at the top of this stack and returns that object.\r\n     * @return {*} the object at the top of this stack or undefined if the\r\n     * stack is empty.\r\n     */\r\n    pop(): T {\r\n        return this.list.removeElementAtIndex(0);\r\n    }\r\n    /**\r\n     * Looks at the object at the top of this stack without removing it from the\r\n     * stack.\r\n     * @return {*} the object at the top of this stack or undefined if the\r\n     * stack is empty.\r\n     */\r\n    peek(): T {\r\n        return this.list.first();\r\n    }\r\n    /**\r\n     * Returns the number of elements in this stack.\r\n     * @return {number} the number of elements in this stack.\r\n     */\r\n    size(): number {\r\n        return this.list.size();\r\n    }\r\n\r\n    /**\r\n     * Returns true if this stack contains the specified element.\r\n     * <p>If the elements inside this stack are\r\n     * not comparable with the === operator, a custom equals function should be\r\n     * provided to perform searches, the function must receive two arguments and\r\n     * return true if they are equal, false otherwise. Example:</p>\r\n     *\r\n     * <pre>\r\n     * var petsAreEqualByName (pet1, pet2) {\r\n     *  return pet1.name === pet2.name;\r\n     * }\r\n     * </pre>\r\n     * @param {Object} elem element to search for.\r\n     * @param {function(Object,Object):boolean=} equalsFunction optional\r\n     * function to check if two elements are equal.\r\n     * @return {boolean} true if this stack contains the specified element,\r\n     * false otherwise.\r\n     */\r\n    contains(elem: T, equalsFunction?: IEqualsFunction<T>) {\r\n        return this.list.contains(elem, equalsFunction);\r\n    }\r\n    /**\r\n     * Checks if this stack is empty.\r\n     * @return {boolean} true if and only if this stack contains no items; false\r\n     * otherwise.\r\n     */\r\n    isEmpty(): boolean {\r\n        return this.list.isEmpty();\r\n    }\r\n    /**\r\n     * Removes all of the elements from this stack.\r\n     */\r\n    clear(): void {\r\n        this.list.clear();\r\n    }\r\n\r\n    /**\r\n     * Executes the provided function once for each element present in this stack in\r\n     * LIFO order.\r\n     * @param {function(Object):*} callback function to execute, it is\r\n     * invoked with one argument: the element value, to break the iteration you can\r\n     * optionally return false.\r\n     */\r\n    forEach(callback: ILoopFunction<T>) {\r\n        this.list.forEach(callback);\r\n    }\r\n} // End of stack\r\n\r\n\r\n\r\nexport class Queue<T>{\r\n\r\n    /**\r\n     * List containing the elements.\r\n     * @type LinkedList\r\n     * @private\r\n     */\r\n    private list: LinkedList<T>;\r\n\r\n    /**\r\n     * Creates an empty queue.\r\n     * @class A queue is a First-In-First-Out (FIFO) data structure, the first\r\n     * element added to the queue will be the first one to be removed. This\r\n     * implementation uses a linked list as a container.\r\n     * @constructor\r\n     */\r\n    constructor() {\r\n        this.list = new LinkedList<T>();\r\n    }\r\n\r\n\r\n    /**\r\n     * Inserts the specified element into the end of this queue.\r\n     * @param {Object} elem the element to insert.\r\n     * @return {boolean} true if the element was inserted, or false if it is undefined.\r\n     */\r\n    enqueue(elem: T): boolean {\r\n        return this.list.add(elem);\r\n    }\r\n    /**\r\n     * Inserts the specified element into the end of this queue.\r\n     * @param {Object} elem the element to insert.\r\n     * @return {boolean} true if the element was inserted, or false if it is undefined.\r\n     */\r\n    add(elem: T): boolean {\r\n        return this.list.add(elem);\r\n    }\r\n    /**\r\n     * Retrieves and removes the head of this queue.\r\n     * @return {*} the head of this queue, or undefined if this queue is empty.\r\n     */\r\n    dequeue(): T {\r\n        if (this.list.size() !== 0) {\r\n            var el = this.list.first();\r\n            this.list.removeElementAtIndex(0);\r\n            return el;\r\n        }\r\n        return undefined;\r\n    }\r\n    /**\r\n     * Retrieves, but does not remove, the head of this queue.\r\n     * @return {*} the head of this queue, or undefined if this queue is empty.\r\n     */\r\n    peek(): T {\r\n\r\n        if (this.list.size() !== 0) {\r\n            return this.list.first();\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Returns the number of elements in this queue.\r\n     * @return {number} the number of elements in this queue.\r\n     */\r\n    size(): number {\r\n        return this.list.size();\r\n    }\r\n\r\n    /**\r\n     * Returns true if this queue contains the specified element.\r\n     * <p>If the elements inside this stack are\r\n     * not comparable with the === operator, a custom equals function should be\r\n     * provided to perform searches, the function must receive two arguments and\r\n     * return true if they are equal, false otherwise. Example:</p>\r\n     *\r\n     * <pre>\r\n     * var petsAreEqualByName (pet1, pet2) {\r\n     *  return pet1.name === pet2.name;\r\n     * }\r\n     * </pre>\r\n     * @param {Object} elem element to search for.\r\n     * @param {function(Object,Object):boolean=} equalsFunction optional\r\n     * function to check if two elements are equal.\r\n     * @return {boolean} true if this queue contains the specified element,\r\n     * false otherwise.\r\n     */\r\n    contains(elem: T, equalsFunction?: IEqualsFunction<T>): boolean {\r\n        return this.list.contains(elem, equalsFunction);\r\n    }\r\n\r\n    /**\r\n     * Checks if this queue is empty.\r\n     * @return {boolean} true if and only if this queue contains no items; false\r\n     * otherwise.\r\n     */\r\n    isEmpty(): boolean {\r\n        return this.list.size() <= 0;\r\n    }\r\n\r\n    /**\r\n     * Removes all of the elements from this queue.\r\n     */\r\n    clear(): void {\r\n        this.list.clear();\r\n    }\r\n\r\n    /**\r\n     * Executes the provided function once for each element present in this queue in\r\n     * FIFO order.\r\n     * @param {function(Object):*} callback function to execute, it is\r\n     * invoked with one argument: the element value, to break the iteration you can\r\n     * optionally return false.\r\n     */\r\n    forEach(callback: ILoopFunction<T>) {\r\n        this.list.forEach(callback);\r\n    }\r\n\r\n} // End of queue\r\n\r\n\r\nexport class PriorityQueue<T> {\r\n\r\n    private heap: Heap<T>;\r\n    /**\r\n     * Creates an empty priority queue.\r\n     * @class <p>In a priority queue each element is associated with a \"priority\",\r\n     * elements are dequeued in highest-priority-first order (the elements with the\r\n     * highest priority are dequeued first). Priority Queues are implemented as heaps.\r\n     * If the inserted elements are custom objects a compare function must be provided,\r\n     * otherwise the <=, === and >= operators are used to compare object priority.</p>\r\n     * <pre>\r\n     * function compare(a, b) {\r\n     *  if (a is less than b by some ordering criterion) {\r\n     *     return -1;\r\n     *  } if (a is greater than b by the ordering criterion) {\r\n     *     return 1;\r\n     *  }\r\n     *  // a must be equal to b\r\n     *  return 0;\r\n     * }\r\n     * </pre>\r\n     * @constructor\r\n     * @param {function(Object,Object):number=} compareFunction optional\r\n     * function used to compare two element priorities. Must return a negative integer,\r\n     * zero, or a positive integer as the first argument is less than, equal to,\r\n     * or greater than the second.\r\n     */\r\n    constructor(compareFunction?: ICompareFunction<T>) {\r\n        this.heap = new Heap<T>(reverseCompareFunction(compareFunction));\r\n    }\r\n\r\n    /**\r\n     * Inserts the specified element into this priority queue.\r\n     * @param {Object} element the element to insert.\r\n     * @return {boolean} true if the element was inserted, or false if it is undefined.\r\n     */\r\n    enqueue(element: T): boolean {\r\n        return this.heap.add(element);\r\n    }\r\n\r\n    /**\r\n     * Inserts the specified element into this priority queue.\r\n     * @param {Object} element the element to insert.\r\n     * @return {boolean} true if the element was inserted, or false if it is undefined.\r\n     */\r\n    add(element: T): boolean {\r\n        return this.heap.add(element);\r\n    }\r\n\r\n    /**\r\n     * Retrieves and removes the highest priority element of this queue.\r\n     * @return {*} the the highest priority element of this queue,\r\n     *  or undefined if this queue is empty.\r\n     */\r\n    dequeue(): T {\r\n        if (this.heap.size() !== 0) {\r\n            var el = this.heap.peek();\r\n            this.heap.removeRoot();\r\n            return el;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Retrieves, but does not remove, the highest priority element of this queue.\r\n     * @return {*} the highest priority element of this queue, or undefined if this queue is empty.\r\n     */\r\n    peek(): T {\r\n        return this.heap.peek();\r\n    }\r\n\r\n    /**\r\n     * Returns true if this priority queue contains the specified element.\r\n     * @param {Object} element element to search for.\r\n     * @return {boolean} true if this priority queue contains the specified element,\r\n     * false otherwise.\r\n     */\r\n    contains(element: T): boolean {\r\n        return this.heap.contains(element);\r\n    }\r\n\r\n    /**\r\n     * Checks if this priority queue is empty.\r\n     * @return {boolean} true if and only if this priority queue contains no items; false\r\n     * otherwise.\r\n     */\r\n    isEmpty(): boolean {\r\n        return this.heap.isEmpty();\r\n    }\r\n\r\n    /**\r\n     * Returns the number of elements in this priority queue.\r\n     * @return {number} the number of elements in this priority queue.\r\n     */\r\n    size(): number {\r\n        return this.heap.size();\r\n    }\r\n\r\n    /**\r\n     * Removes all of the elements from this priority queue.\r\n     */\r\n    clear(): void {\r\n        this.heap.clear();\r\n    }\r\n\r\n    /**\r\n     * Executes the provided function once for each element present in this queue in\r\n     * no particular order.\r\n     * @param {function(Object):*} callback function to execute, it is\r\n     * invoked with one argument: the element value, to break the iteration you can\r\n     * optionally return false.\r\n     */\r\n    forEach(callback: ILoopFunction<T>) {\r\n        this.heap.forEach(callback);\r\n    }\r\n\r\n} // end of priority queue\r\n\r\n\r\n\r\n\r\nexport class Set<T>{\r\n    private dictionary: Dictionary<T, any>;\r\n\r\n    /**\r\n     * Creates an empty set.\r\n     * @class <p>A set is a data structure that contains no duplicate items.</p>\r\n     * <p>If the inserted elements are custom objects a function\r\n     * which converts elements to strings must be provided. Example:</p>\r\n     *\r\n     * <pre>\r\n     * function petToString(pet) {\r\n     *  return pet.name;\r\n     * }\r\n     * </pre>\r\n     *\r\n     * @constructor\r\n     * @param {function(Object):string=} toStringFunction optional function used\r\n     * to convert elements to strings. If the elements aren't strings or if toString()\r\n     * is not appropriate, a custom function which receives a onject and returns a\r\n     * unique string must be provided.\r\n     */\r\n    constructor(toStringFunction?: (item: T) => string) {\r\n        this.dictionary = new Dictionary<T, any>(toStringFunction);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Returns true if this set contains the specified element.\r\n     * @param {Object} element element to search for.\r\n     * @return {boolean} true if this set contains the specified element,\r\n     * false otherwise.\r\n     */\r\n    contains(element: T): boolean {\r\n        return this.dictionary.containsKey(element);\r\n    }\r\n\r\n    /**\r\n     * Adds the specified element to this set if it is not already present.\r\n     * @param {Object} element the element to insert.\r\n     * @return {boolean} true if this set did not already contain the specified element.\r\n     */\r\n    add(element: T): boolean {\r\n        if (this.contains(element) || isUndefined(element)) {\r\n            return false;\r\n        } else {\r\n            this.dictionary.setValue(element, element);\r\n            return true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Performs an intersecion between this an another set.\r\n     * Removes all values that are not present this set and the given set.\r\n     * @param {Set} otherSet other set.\r\n     */\r\n    intersection(otherSet: Set<T>): void {\r\n        var set = this;\r\n        this.forEach(function(element: T): boolean {\r\n            if (!otherSet.contains(element)) {\r\n                set.remove(element);\r\n            }\r\n            return true;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Performs a union between this an another set.\r\n     * Adds all values from the given set to this set.\r\n     * @param {Set} otherSet other set.\r\n     */\r\n    union(otherSet: Set<T>): void {\r\n        var set = this;\r\n        otherSet.forEach(function(element: T): boolean {\r\n            set.add(element);\r\n            return true;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Performs a difference between this an another set.\r\n     * Removes from this set all the values that are present in the given set.\r\n     * @param {Set} otherSet other set.\r\n     */\r\n    difference(otherSet: Set<T>): void {\r\n        var set = this;\r\n        otherSet.forEach(function(element: T): boolean {\r\n            set.remove(element);\r\n            return true;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Checks whether the given set contains all the elements in this set.\r\n     * @param {Set} otherSet other set.\r\n     * @return {boolean} true if this set is a subset of the given set.\r\n     */\r\n    isSubsetOf(otherSet: Set<T>): boolean {\r\n\r\n        if (this.size() > otherSet.size()) {\r\n            return false;\r\n        }\r\n\r\n        var isSub = true;\r\n        this.forEach(function(element) {\r\n            if (!otherSet.contains(element)) {\r\n                isSub = false;\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        return isSub;\r\n    }\r\n\r\n    /**\r\n     * Removes the specified element from this set if it is present.\r\n     * @return {boolean} true if this set contained the specified element.\r\n     */\r\n    remove(element: T): boolean {\r\n        if (!this.contains(element)) {\r\n            return false;\r\n        } else {\r\n            this.dictionary.remove(element);\r\n            return true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Executes the provided function once for each element\r\n     * present in this set.\r\n     * @param {function(Object):*} callback function to execute, it is\r\n     * invoked with one arguments: the element. To break the iteration you can\r\n     * optionally return false.\r\n     */\r\n    forEach(callback: ILoopFunction<T>): void {\r\n        this.dictionary.forEach(function(k, v) {\r\n            return callback(v);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Returns an array containing all of the elements in this set in arbitrary order.\r\n     * @return {Array} an array containing all of the elements in this set.\r\n     */\r\n    toArray(): T[] {\r\n        return this.dictionary.values();\r\n    }\r\n\r\n    /**\r\n     * Returns true if this set contains no elements.\r\n     * @return {boolean} true if this set contains no elements.\r\n     */\r\n    isEmpty(): boolean {\r\n        return this.dictionary.isEmpty();\r\n    }\r\n\r\n    /**\r\n     * Returns the number of elements in this set.\r\n     * @return {number} the number of elements in this set.\r\n     */\r\n    size(): number {\r\n        return this.dictionary.size();\r\n    }\r\n\r\n    /**\r\n     * Removes all of the elements from this set.\r\n     */\r\n    clear(): void {\r\n        this.dictionary.clear();\r\n    }\r\n\r\n    /*\r\n    * Provides a string representation for display\r\n    */\r\n    toString(): string {\r\n        return arrays.toString(this.toArray());\r\n    }\r\n}// end of Set\r\n\r\nexport class Bag<T>{\r\n\r\n    private toStrF: (item: T) => string;\r\n    private dictionary: Dictionary<T, any>;\r\n    private nElements: number;\r\n\r\n    /**\r\n     * Creates an empty bag.\r\n     * @class <p>A bag is a special kind of set in which members are\r\n     * allowed to appear more than once.</p>\r\n     * <p>If the inserted elements are custom objects a function\r\n     * which converts elements to unique strings must be provided. Example:</p>\r\n     *\r\n     * <pre>\r\n     * function petToString(pet) {\r\n     *  return pet.name;\r\n     * }\r\n     * </pre>\r\n     *\r\n     * @constructor\r\n     * @param {function(Object):string=} toStrFunction optional function used\r\n     * to convert elements to strings. If the elements aren't strings or if toString()\r\n     * is not appropriate, a custom function which receives an object and returns a\r\n     * unique string must be provided.\r\n     */\r\n    constructor(toStrFunction?: (item: T) => string) {\r\n        this.toStrF = toStrFunction || defaultToString;\r\n        this.dictionary = new Dictionary<T, any>(this.toStrF);\r\n        this.nElements = 0;\r\n    }\r\n\r\n\r\n    /**\r\n    * Adds nCopies of the specified object to this bag.\r\n    * @param {Object} element element to add.\r\n    * @param {number=} nCopies the number of copies to add, if this argument is\r\n    * undefined 1 copy is added.\r\n    * @return {boolean} true unless element is undefined.\r\n    */\r\n    add(element: T, nCopies: number = 1): boolean {\r\n\r\n        if (isUndefined(element) || nCopies <= 0) {\r\n            return false;\r\n        }\r\n\r\n        if (!this.contains(element)) {\r\n            var node = {\r\n                value: element,\r\n                copies: nCopies\r\n            };\r\n            this.dictionary.setValue(element, node);\r\n        } else {\r\n            this.dictionary.getValue(element).copies += nCopies;\r\n        }\r\n        this.nElements += nCopies;\r\n        return true;\r\n    }\r\n\r\n    /**\r\n    * Counts the number of copies of the specified object in this bag.\r\n    * @param {Object} element the object to search for..\r\n    * @return {number} the number of copies of the object, 0 if not found\r\n    */\r\n    count(element: T): number {\r\n\r\n        if (!this.contains(element)) {\r\n            return 0;\r\n        } else {\r\n            return this.dictionary.getValue(element).copies;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns true if this bag contains the specified element.\r\n     * @param {Object} element element to search for.\r\n     * @return {boolean} true if this bag contains the specified element,\r\n     * false otherwise.\r\n     */\r\n    contains(element: T): boolean {\r\n        return this.dictionary.containsKey(element);\r\n    }\r\n\r\n    /**\r\n    * Removes nCopies of the specified object to this bag.\r\n    * If the number of copies to remove is greater than the actual number\r\n    * of copies in the Bag, all copies are removed.\r\n    * @param {Object} element element to remove.\r\n    * @param {number=} nCopies the number of copies to remove, if this argument is\r\n    * undefined 1 copy is removed.\r\n    * @return {boolean} true if at least 1 element was removed.\r\n    */\r\n    remove(element: T, nCopies: number = 1) {\r\n\r\n        if (isUndefined(element) || nCopies <= 0) {\r\n            return false;\r\n        }\r\n\r\n        if (!this.contains(element)) {\r\n            return false;\r\n        } else {\r\n            var node = this.dictionary.getValue(element);\r\n            if (nCopies > node.copies) {\r\n                this.nElements -= node.copies;\r\n            } else {\r\n                this.nElements -= nCopies;\r\n            }\r\n            node.copies -= nCopies;\r\n            if (node.copies <= 0) {\r\n                this.dictionary.remove(element);\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns an array containing all of the elements in this big in arbitrary order,\r\n     * including multiple copies.\r\n     * @return {Array} an array containing all of the elements in this bag.\r\n     */\r\n    toArray(): T[] {\r\n        var a: Array<T> = [];\r\n        var values = this.dictionary.values();\r\n        var vl = values.length;\r\n        for (var i = 0; i < vl; i++) {\r\n            var node = values[i];\r\n            var element = node.value;\r\n            var copies = node.copies;\r\n            for (var j = 0; j < copies; j++) {\r\n                a.push(element);\r\n            }\r\n        }\r\n        return a;\r\n    }\r\n\r\n    /**\r\n     * Returns a set of unique elements in this bag.\r\n     * @return {Set<T>} a set of unique elements in this bag.\r\n     */\r\n    toSet(): Set<T> {\r\n        var toret = new Set<T>(this.toStrF);\r\n        var elements = this.dictionary.values();\r\n        var l = elements.length;\r\n        for (var i = 0; i < l; i++) {\r\n            var value = elements[i].value;\r\n            toret.add(value);\r\n        }\r\n        return toret;\r\n    }\r\n\r\n    /**\r\n     * Executes the provided function once for each element\r\n     * present in this bag, including multiple copies.\r\n     * @param {function(Object):*} callback function to execute, it is\r\n     * invoked with one argument: the element. To break the iteration you can\r\n     * optionally return false.\r\n     */\r\n    forEach(callback: ILoopFunction<T>) {\r\n        this.dictionary.forEach(function(k, v) {\r\n            var value = v.value;\r\n            var copies = v.copies;\r\n            for (var i = 0; i < copies; i++) {\r\n                if (callback(value) === false) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        });\r\n    }\r\n    /**\r\n     * Returns the number of elements in this bag.\r\n     * @return {number} the number of elements in this bag.\r\n     */\r\n    size(): number {\r\n        return this.nElements;\r\n    }\r\n\r\n    /**\r\n     * Returns true if this bag contains no elements.\r\n     * @return {boolean} true if this bag contains no elements.\r\n     */\r\n    isEmpty(): boolean {\r\n        return this.nElements === 0;\r\n    }\r\n\r\n    /**\r\n     * Removes all of the elements from this bag.\r\n     */\r\n    clear(): void {\r\n        this.nElements = 0;\r\n        this.dictionary.clear();\r\n    }\r\n\r\n}// End of bag\r\n\r\n\r\n// Internal interface for BST\r\ninterface BSTreeNode<T> {\r\n    element: T;\r\n    leftCh: BSTreeNode<T>;\r\n    rightCh: BSTreeNode<T>;\r\n    parent: BSTreeNode<T>;\r\n}\r\nexport class BSTree<T> {\r\n\r\n    private root: BSTreeNode<T>;\r\n    private compare: ICompareFunction<T>;\r\n    private nElements: number;\r\n    /**\r\n     * Creates an empty binary search tree.\r\n     * @class <p>A binary search tree is a binary tree in which each\r\n     * internal node stores an element such that the elements stored in the\r\n     * left subtree are less than it and the elements\r\n     * stored in the right subtree are greater.</p>\r\n     * <p>Formally, a binary search tree is a node-based binary tree data structure which\r\n     * has the following properties:</p>\r\n     * <ul>\r\n     * <li>The left subtree of a node contains only nodes with elements less\r\n     * than the node's element</li>\r\n     * <li>The right subtree of a node contains only nodes with elements greater\r\n     * than the node's element</li>\r\n     * <li>Both the left and right subtrees must also be binary search trees.</li>\r\n     * </ul>\r\n     * <p>If the inserted elements are custom objects a compare function must\r\n     * be provided at construction time, otherwise the <=, === and >= operators are\r\n     * used to compare elements. Example:</p>\r\n     * <pre>\r\n     * function compare(a, b) {\r\n     *  if (a is less than b by some ordering criterion) {\r\n     *     return -1;\r\n     *  } if (a is greater than b by the ordering criterion) {\r\n     *     return 1;\r\n     *  }\r\n     *  // a must be equal to b\r\n     *  return 0;\r\n     * }\r\n     * </pre>\r\n     * @constructor\r\n     * @param {function(Object,Object):number=} compareFunction optional\r\n     * function used to compare two elements. Must return a negative integer,\r\n     * zero, or a positive integer as the first argument is less than, equal to,\r\n     * or greater than the second.\r\n     */\r\n    constructor(compareFunction?: ICompareFunction<T>) {\r\n        this.root = null;\r\n        this.compare = compareFunction || defaultCompare;\r\n        this.nElements = 0;\r\n    }\r\n\r\n    /**\r\n     * Adds the specified element to this tree if it is not already present.\r\n     * @param {Object} element the element to insert.\r\n     * @return {boolean} true if this tree did not already contain the specified element.\r\n     */\r\n    add(element: T): boolean {\r\n        if (isUndefined(element)) {\r\n            return false;\r\n        }\r\n\r\n        if (this.insertNode(this.createNode(element)) !== null) {\r\n            this.nElements++;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Removes all of the elements from this tree.\r\n     */\r\n    clear(): void {\r\n        this.root = null;\r\n        this.nElements = 0;\r\n    }\r\n\r\n    /**\r\n     * Returns true if this tree contains no elements.\r\n     * @return {boolean} true if this tree contains no elements.\r\n     */\r\n    isEmpty(): boolean {\r\n        return this.nElements === 0;\r\n    }\r\n\r\n    /**\r\n     * Returns the number of elements in this tree.\r\n     * @return {number} the number of elements in this tree.\r\n     */\r\n    size(): number {\r\n        return this.nElements;\r\n    }\r\n\r\n    /**\r\n     * Returns true if this tree contains the specified element.\r\n     * @param {Object} element element to search for.\r\n     * @return {boolean} true if this tree contains the specified element,\r\n     * false otherwise.\r\n     */\r\n    contains(element: T): boolean {\r\n        if (isUndefined(element)) {\r\n            return false;\r\n        }\r\n        return this.searchNode(this.root, element) !== null;\r\n    }\r\n\r\n    /**\r\n     * Removes the specified element from this tree if it is present.\r\n     * @return {boolean} true if this tree contained the specified element.\r\n     */\r\n    remove(element: T): boolean {\r\n        var node = this.searchNode(this.root, element);\r\n        if (node === null) {\r\n            return false;\r\n        }\r\n        this.removeNode(node);\r\n        this.nElements--;\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Executes the provided function once for each element present in this tree in\r\n     * in-order.\r\n     * @param {function(Object):*} callback function to execute, it is invoked with one\r\n     * argument: the element value, to break the iteration you can optionally return false.\r\n     */\r\n    inorderTraversal(callback: ILoopFunction<T>): void {\r\n        this.inorderTraversalAux(this.root, callback, {\r\n            stop: false\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Executes the provided function once for each element present in this tree in pre-order.\r\n     * @param {function(Object):*} callback function to execute, it is invoked with one\r\n     * argument: the element value, to break the iteration you can optionally return false.\r\n     */\r\n    preorderTraversal(callback: ILoopFunction<T>): void {\r\n        this.preorderTraversalAux(this.root, callback, {\r\n            stop: false\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Executes the provided function once for each element present in this tree in post-order.\r\n     * @param {function(Object):*} callback function to execute, it is invoked with one\r\n     * argument: the element value, to break the iteration you can optionally return false.\r\n     */\r\n    postorderTraversal(callback: ILoopFunction<T>): void {\r\n        this.postorderTraversalAux(this.root, callback, {\r\n            stop: false\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Executes the provided function once for each element present in this tree in\r\n     * level-order.\r\n     * @param {function(Object):*} callback function to execute, it is invoked with one\r\n     * argument: the element value, to break the iteration you can optionally return false.\r\n     */\r\n    levelTraversal(callback: ILoopFunction<T>): void {\r\n        this.levelTraversalAux(this.root, callback);\r\n    }\r\n\r\n    /**\r\n     * Returns the minimum element of this tree.\r\n     * @return {*} the minimum element of this tree or undefined if this tree is\r\n     * is empty.\r\n     */\r\n    minimum(): T {\r\n        if (this.isEmpty()) {\r\n            return undefined;\r\n        }\r\n        return this.minimumAux(this.root).element;\r\n    }\r\n\r\n    /**\r\n     * Returns the maximum element of this tree.\r\n     * @return {*} the maximum element of this tree or undefined if this tree is\r\n     * is empty.\r\n     */\r\n    maximum(): T {\r\n        if (this.isEmpty()) {\r\n            return undefined;\r\n        }\r\n        return this.maximumAux(this.root).element;\r\n    }\r\n\r\n    /**\r\n     * Executes the provided function once for each element present in this tree in inorder.\r\n     * Equivalent to inorderTraversal.\r\n     * @param {function(Object):*} callback function to execute, it is\r\n     * invoked with one argument: the element value, to break the iteration you can\r\n     * optionally return false.\r\n     */\r\n    forEach(callback: ILoopFunction<T>): void {\r\n        this.inorderTraversal(callback);\r\n    }\r\n\r\n    /**\r\n     * Returns an array containing all of the elements in this tree in in-order.\r\n     * @return {Array} an array containing all of the elements in this tree in in-order.\r\n     */\r\n    toArray(): T[] {\r\n        var array: Array<T> = [];\r\n        this.inorderTraversal(function(element: T): boolean {\r\n            array.push(element);\r\n            return true;\r\n        });\r\n        return array;\r\n    }\r\n\r\n    /**\r\n     * Returns the height of this tree.\r\n     * @return {number} the height of this tree or -1 if is empty.\r\n     */\r\n    height(): number {\r\n        return this.heightAux(this.root);\r\n    }\r\n\r\n    /**\r\n    * @private\r\n    */\r\n    private searchNode(node: BSTreeNode<T>, element: T): BSTreeNode<T> {\r\n        var cmp: number = null;\r\n        while (node !== null && cmp !== 0) {\r\n            cmp = this.compare(element, node.element);\r\n            if (cmp < 0) {\r\n                node = node.leftCh;\r\n            } else if (cmp > 0) {\r\n                node = node.rightCh;\r\n            }\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /**\r\n    * @private\r\n    */\r\n    private transplant(n1: BSTreeNode<T>, n2: BSTreeNode<T>): void {\r\n        if (n1.parent === null) {\r\n            this.root = n2;\r\n        } else if (n1 === n1.parent.leftCh) {\r\n            n1.parent.leftCh = n2;\r\n        } else {\r\n            n1.parent.rightCh = n2;\r\n        }\r\n        if (n2 !== null) {\r\n            n2.parent = n1.parent;\r\n        }\r\n    }\r\n\r\n    /**\r\n    * @private\r\n    */\r\n    private removeNode(node: BSTreeNode<T>): void {\r\n        if (node.leftCh === null) {\r\n            this.transplant(node, node.rightCh);\r\n        } else if (node.rightCh === null) {\r\n            this.transplant(node, node.leftCh);\r\n        } else {\r\n            var y = this.minimumAux(node.rightCh);\r\n            if (y.parent !== node) {\r\n                this.transplant(y, y.rightCh);\r\n                y.rightCh = node.rightCh;\r\n                y.rightCh.parent = y;\r\n            }\r\n            this.transplant(node, y);\r\n            y.leftCh = node.leftCh;\r\n            y.leftCh.parent = y;\r\n        }\r\n    }\r\n\r\n    /**\r\n    * @private\r\n    */\r\n    private inorderTraversalAux(node: BSTreeNode<T>, callback: ILoopFunction<T>, signal: { stop: boolean; }): void {\r\n        if (node === null || signal.stop) {\r\n            return;\r\n        }\r\n        this.inorderTraversalAux(node.leftCh, callback, signal);\r\n        if (signal.stop) {\r\n            return;\r\n        }\r\n        signal.stop = callback(node.element) === false;\r\n        if (signal.stop) {\r\n            return;\r\n        }\r\n        this.inorderTraversalAux(node.rightCh, callback, signal);\r\n    }\r\n\r\n    /**\r\n    * @private\r\n    */\r\n    private levelTraversalAux(node: BSTreeNode<T>, callback: ILoopFunction<T>) {\r\n        var queue = new Queue<BSTreeNode<T>>();\r\n        if (node !== null) {\r\n            queue.enqueue(node);\r\n        }\r\n        while (!queue.isEmpty()) {\r\n            node = queue.dequeue();\r\n            if (callback(node.element) === false) {\r\n                return;\r\n            }\r\n            if (node.leftCh !== null) {\r\n                queue.enqueue(node.leftCh);\r\n            }\r\n            if (node.rightCh !== null) {\r\n                queue.enqueue(node.rightCh);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n    * @private\r\n    */\r\n    private preorderTraversalAux(node: BSTreeNode<T>, callback: ILoopFunction<T>, signal: { stop: boolean; }) {\r\n        if (node === null || signal.stop) {\r\n            return;\r\n        }\r\n        signal.stop = callback(node.element) === false;\r\n        if (signal.stop) {\r\n            return;\r\n        }\r\n        this.preorderTraversalAux(node.leftCh, callback, signal);\r\n        if (signal.stop) {\r\n            return;\r\n        }\r\n        this.preorderTraversalAux(node.rightCh, callback, signal);\r\n    }\r\n    /**\r\n    * @private\r\n    */\r\n    private postorderTraversalAux(node: BSTreeNode<T>, callback: ILoopFunction<T>, signal: { stop: boolean; }) {\r\n        if (node === null || signal.stop) {\r\n            return;\r\n        }\r\n        this.postorderTraversalAux(node.leftCh, callback, signal);\r\n        if (signal.stop) {\r\n            return;\r\n        }\r\n        this.postorderTraversalAux(node.rightCh, callback, signal);\r\n        if (signal.stop) {\r\n            return;\r\n        }\r\n        signal.stop = callback(node.element) === false;\r\n    }\r\n\r\n    /**\r\n    * @private\r\n    */\r\n    private minimumAux(node: BSTreeNode<T>): BSTreeNode<T> {\r\n        while (node.leftCh !== null) {\r\n            node = node.leftCh;\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /**\r\n    * @private\r\n    */\r\n    private maximumAux(node: BSTreeNode<T>): BSTreeNode<T> {\r\n        while (node.rightCh !== null) {\r\n            node = node.rightCh;\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /**\r\n      * @private\r\n      */\r\n    private heightAux(node: BSTreeNode<T>): number {\r\n        if (node === null) {\r\n            return -1;\r\n        }\r\n        return Math.max(this.heightAux(node.leftCh), this.heightAux(node.rightCh)) + 1;\r\n    }\r\n\r\n    /*\r\n    * @private\r\n    */\r\n    private insertNode(node: BSTreeNode<T>): BSTreeNode<T> {\r\n\r\n        var parent: any = null;\r\n        var position = this.root;\r\n        var cmp: number = null;\r\n        while (position !== null) {\r\n            cmp = this.compare(node.element, position.element);\r\n            if (cmp === 0) {\r\n                return null;\r\n            } else if (cmp < 0) {\r\n                parent = position;\r\n                position = position.leftCh;\r\n            } else {\r\n                parent = position;\r\n                position = position.rightCh;\r\n            }\r\n        }\r\n        node.parent = parent;\r\n        if (parent === null) {\r\n            // tree is empty\r\n            this.root = node;\r\n        } else if (this.compare(node.element, parent.element) < 0) {\r\n            parent.leftCh = node;\r\n        } else {\r\n            parent.rightCh = node;\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /**\r\n    * @private\r\n    */\r\n    private createNode(element: T): BSTreeNode<T> {\r\n        return {\r\n            element: element,\r\n            leftCh: null,\r\n            rightCh: null,\r\n            parent: null\r\n        };\r\n    }\r\n\r\n} // end of BSTree\r\n","\n\nexport function hasFromObject<TFunction extends Function>(target: TFunction) :  void{\n\n}\n","\r\n\r\n\r\n/**\r\n * mapping of special keycodes to their corresponding keys\r\n *\r\n * everything in this dictionary cannot use keypress events\r\n * so it has to be here to map to the correct keycodes for\r\n * keyup/keydown events\r\n *\r\n * @type {Object}\r\n */\r\nvar _MAP = {\r\n    8: 'backspace',\r\n    9: 'tab',\r\n    13: 'enter',\r\n    16: 'shift',\r\n    17: 'ctrl',\r\n    18: 'alt',\r\n    20: 'capslock',\r\n    27: 'esc',\r\n    32: 'space',\r\n    33: 'pageup',\r\n    34: 'pagedown',\r\n    35: 'end',\r\n    36: 'home',\r\n    37: 'left',\r\n    38: 'up',\r\n    39: 'right',\r\n    40: 'down',\r\n    45: 'ins',\r\n    46: 'del',\r\n    91: 'meta',\r\n    93: 'meta',\r\n    224: 'meta'\r\n};\r\n\r\n/**\r\n * mapping for special characters so they can support\r\n *\r\n * this dictionary is only used incase you want to bind a\r\n * keyup or keydown event to one of these keys\r\n *\r\n * @type {Object}\r\n */\r\nvar _KEYCODE_MAP = {\r\n    106: '*',\r\n    107: '+',\r\n    109: '-',\r\n    110: '.',\r\n    111: '/',\r\n    186: ';',\r\n    187: '=',\r\n    188: ',',\r\n    189: '-',\r\n    190: '.',\r\n    191: '/',\r\n    192: '`',\r\n    219: '[',\r\n    220: '\\\\',\r\n    221: ']',\r\n    222: '\\''\r\n};\r\n\r\n/**\r\n * this is a mapping of keys that require shift on a US keypad\r\n * back to the non shift equivelents\r\n *\r\n * this is so you can use keyup events with these keys\r\n *\r\n * note that this will only work reliably on US keyboards\r\n *\r\n * @type {Object}\r\n */\r\nvar _SHIFT_MAP = {\r\n    '~': '`',\r\n    '!': '1',\r\n    '@': '2',\r\n    '#': '3',\r\n    '$': '4',\r\n    '%': '5',\r\n    '^': '6',\r\n    '&': '7',\r\n    '*': '8',\r\n    '(': '9',\r\n    ')': '0',\r\n    '_': '-',\r\n    '+': '=',\r\n    ':': ';',\r\n    '\\\"': '\\'',\r\n    '<': ',',\r\n    '>': '.',\r\n    '?': '/',\r\n    '|': '\\\\'\r\n};\r\n\r\n/**\r\n * this is a list of special strings you can use to map\r\n * to modifier keys when you specify your keyboard shortcuts\r\n *\r\n * @type {Object}\r\n */\r\nvar _SPECIAL_ALIASES = {\r\n    'option': 'alt',\r\n    'command': 'meta',\r\n    'return': 'enter',\r\n    'escape': 'esc',\r\n    'plus': '+',\r\n    'mod': /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? 'meta' : 'ctrl'\r\n};\r\n\r\n/**\r\n * variable to store the flipped version of _MAP from above\r\n * needed to check if we should use keypress or not when no action\r\n * is specified\r\n *\r\n * @type {Object|undefined}\r\n */\r\nvar _REVERSE_MAP;\r\n\r\n/**\r\n * loop through the f keys, f1 to f19 and add them to the map\r\n * programatically\r\n */\r\nfor (var i = 1; i < 20; ++i) {\r\n    _MAP[111 + i] = 'f' + i;\r\n}\r\n\r\n/**\r\n * loop through to map numbers on the numeric keypad\r\n */\r\nfor (i = 0; i <= 9; ++i) {\r\n    _MAP[i + 96] = i;\r\n}\r\n\r\n/**\r\n * cross browser add event method\r\n *\r\n * @param {Element|HTMLDocument} object\r\n * @param {string} type\r\n * @param {Function} callback\r\n * @returns void\r\n */\r\nfunction _addEvent(object, type, callback) {\r\n    if (object.addEventListener) {\r\n        object.addEventListener(type, callback, false);\r\n        return;\r\n    }\r\n\r\n    object.attachEvent('on' + type, callback);\r\n}\r\n\r\n/**\r\n * takes the event and returns the key character\r\n *\r\n * @param {Event} e\r\n * @return {string}\r\n */\r\nfunction _characterFromEvent(e) {\r\n\r\n    // for keypress events we should return the character as is\r\n    if (e.type == 'keypress') {\r\n        var character = String.fromCharCode(e.which);\r\n\r\n        // if the shift key is not pressed then it is safe to assume\r\n        // that we want the character to be lowercase.  this means if\r\n        // you accidentally have caps lock on then your key bindings\r\n        // will continue to work\r\n        //\r\n        // the only side effect that might not be desired is if you\r\n        // bind something like 'A' cause you want to trigger an\r\n        // event when capital A is pressed caps lock will no longer\r\n        // trigger the event.  shift+a will though.\r\n        if (!e.shiftKey) {\r\n            character = character.toLowerCase();\r\n        }\r\n\r\n        return character;\r\n    }\r\n\r\n    // for non keypress events the special maps are needed\r\n    if (_MAP[e.which]) {\r\n        return _MAP[e.which];\r\n    }\r\n\r\n    if (_KEYCODE_MAP[e.which]) {\r\n        return _KEYCODE_MAP[e.which];\r\n    }\r\n\r\n    // if it is not in the special map\r\n\r\n    // with keydown and keyup events the character seems to always\r\n    // come in as an uppercase character whether you are pressing shift\r\n    // or not.  we should make sure it is always lowercase for comparisons\r\n    return String.fromCharCode(e.which).toLowerCase();\r\n}\r\n\r\n/**\r\n * checks if two arrays are equal\r\n *\r\n * @param {Array} modifiers1\r\n * @param {Array} modifiers2\r\n * @returns {boolean}\r\n */\r\nfunction _modifiersMatch(modifiers1, modifiers2) {\r\n    return modifiers1.sort().join(',') === modifiers2.sort().join(',');\r\n}\r\n\r\n/**\r\n * takes a key event and figures out what the modifiers are\r\n *\r\n * @param {Event} e\r\n * @returns {Array}\r\n */\r\nfunction _eventModifiers(e) {\r\n    var modifiers = [];\r\n\r\n    if (e.shiftKey) {\r\n        modifiers.push('shift');\r\n    }\r\n\r\n    if (e.altKey) {\r\n        modifiers.push('alt');\r\n    }\r\n\r\n    if (e.ctrlKey) {\r\n        modifiers.push('ctrl');\r\n    }\r\n\r\n    if (e.metaKey) {\r\n        modifiers.push('meta');\r\n    }\r\n\r\n    return modifiers;\r\n}\r\n\r\n/**\r\n * prevents default for this event\r\n *\r\n * @param {Event} e\r\n * @returns void\r\n */\r\nfunction _preventDefault(e) {\r\n    if (e.preventDefault) {\r\n        e.preventDefault();\r\n        return;\r\n    }\r\n\r\n    e.returnValue = false;\r\n}\r\n\r\n/**\r\n * stops propogation for this event\r\n *\r\n * @param {Event} e\r\n * @returns void\r\n */\r\nfunction _stopPropagation(e) {\r\n    if (e.stopPropagation) {\r\n        e.stopPropagation();\r\n        return;\r\n    }\r\n\r\n    e.cancelBubble = true;\r\n}\r\n\r\n/**\r\n * determines if the keycode specified is a modifier key or not\r\n *\r\n * @param {string} key\r\n * @returns {boolean}\r\n */\r\nfunction _isModifier(key) {\r\n    return key == 'shift' || key == 'ctrl' || key == 'alt' || key == 'meta';\r\n}\r\n\r\n/**\r\n * reverses the map lookup so that we can look for specific keys\r\n * to see what can and can't use keypress\r\n *\r\n * @return {Object}\r\n */\r\nfunction _getReverseMap() {\r\n    if (!_REVERSE_MAP) {\r\n        _REVERSE_MAP = {};\r\n        for (var key in _MAP) {\r\n\r\n            // pull out the numeric keypad from here cause keypress should\r\n            // be able to detect the keys from the character\r\n            if (key > 95 && key < 112) {\r\n                continue;\r\n            }\r\n\r\n            if (_MAP.hasOwnProperty(key)) {\r\n                _REVERSE_MAP[_MAP[key]] = key;\r\n            }\r\n        }\r\n    }\r\n    return _REVERSE_MAP;\r\n}\r\n\r\n/**\r\n * picks the best action based on the key combination\r\n *\r\n * @param {string} key - character for key\r\n * @param {Array} modifiers\r\n * @param {string=} action passed in\r\n */\r\nfunction _pickBestAction(key, modifiers, action) {\r\n\r\n    // if no action was picked in we should try to pick the one\r\n    // that we think would work best for this key\r\n    if (!action) {\r\n        action = _getReverseMap()[key] ? 'keydown' : 'keypress';\r\n    }\r\n\r\n    // modifier keys don't work as expected with keypress,\r\n    // switch to keydown\r\n    if (action == 'keypress' && modifiers.length) {\r\n        action = 'keydown';\r\n    }\r\n\r\n    return action;\r\n}\r\n\r\n/**\r\n * Converts from a string key combination to an array\r\n *\r\n * @param  {string} combination like \"command+shift+l\"\r\n * @return {Array}\r\n */\r\nfunction _keysFromString(combination) {\r\n    if (combination === '+') {\r\n        return ['+'];\r\n    }\r\n\r\n    combination = combination.replace(/\\+{2}/g, '+plus');\r\n    return combination.split('+');\r\n}\r\n\r\n/**\r\n * Gets info for a specific key combination\r\n *\r\n * @param  {string} combination key combination (\"command+s\" or \"a\" or \"*\")\r\n * @param  {string=} action\r\n * @returns {Object}\r\n */\r\nfunction _getKeyInfo(combination, action?) {\r\n    var keys;\r\n    var key;\r\n    var i;\r\n    var modifiers = [];\r\n\r\n    // take the keys from this pattern and figure out what the actual\r\n    // pattern is all about\r\n    keys = _keysFromString(combination);\r\n\r\n    for (i = 0; i < keys.length; ++i) {\r\n        key = keys[i];\r\n\r\n        // normalize key names\r\n        if (_SPECIAL_ALIASES[key]) {\r\n            key = _SPECIAL_ALIASES[key];\r\n        }\r\n\r\n        // if this is not a keypress event then we should\r\n        // be smart about using shift keys\r\n        // this will only work for US keyboards however\r\n        if (action && action != 'keypress' && _SHIFT_MAP[key]) {\r\n            key = _SHIFT_MAP[key];\r\n            modifiers.push('shift');\r\n        }\r\n\r\n        // if this key is a modifier then add it to the list of modifiers\r\n        if (_isModifier(key)) {\r\n            modifiers.push(key);\r\n        }\r\n    }\r\n\r\n    // depending on what the key combination is\r\n    // we will try to pick the best event for it\r\n    action = _pickBestAction(key, modifiers, action);\r\n\r\n    return {\r\n        key: key,\r\n        modifiers: modifiers,\r\n        action: action\r\n    };\r\n}\r\n\r\nfunction _belongsTo(element, ancestor) {\r\n    if (element === document) {\r\n        return false;\r\n    }\r\n\r\n    if (element === ancestor) {\r\n        return true;\r\n    }\r\n\r\n    return _belongsTo(element.parentNode, ancestor);\r\n}\r\n\r\n\r\nexport class KeyManager {\r\n    private _callbacks: any = {};\r\n    private _directMap = {};\r\n    private _sequenceLevels = {};\r\n    private _resetTimer: number;\r\n    private _ignoreNextKeyup: boolean = false;\r\n    private _ignoreNextKeypress: boolean = false;\r\n    private _nextExpectedAction: boolean|string = false;\r\n\r\n    constructor(public target: HTMLElement = document.body) {\r\n        if (target.tagName = 'div') {\r\n            //http://stackoverflow.com/a/148444/358661\r\n            target.tabIndex = 0;\r\n        }\r\n\r\n        _addEvent(this.target, 'keypress', (e) => this._handleKeyEvent(e));\r\n        _addEvent(this.target, 'keydown', (e) => this._handleKeyEvent(e));\r\n        _addEvent(this.target, 'keyup', (e) => this._handleKeyEvent(e));\r\n    }\r\n\r\n\r\n    private _resetSequences(doNotReset) {\r\n        doNotReset = doNotReset || {};\r\n\r\n        var activeSequences = false;\r\n        var key;\r\n\r\n        for (key in this._sequenceLevels) {\r\n            if (doNotReset[key]) {\r\n                activeSequences = true;\r\n                continue;\r\n            }\r\n            this._sequenceLevels[key] = 0;\r\n        }\r\n\r\n        if (!activeSequences)\r\n            this._nextExpectedAction = false;\r\n\r\n    }\r\n\r\n\r\n    private _getMatches(character, modifiers, e, sequenceName?, combination?, level?) {\r\n        var i;\r\n        var callback;\r\n        var matches = [];\r\n        var action = e.type;\r\n\r\n        // if there are no events related to this keycode\r\n        if (!this._callbacks[character]) {\r\n            return [];\r\n        }\r\n\r\n        // if a modifier key is coming up on its own we should allow it\r\n        if (action == 'keyup' && _isModifier(character)) {\r\n            modifiers = [character];\r\n        }\r\n\r\n        // loop through all callbacks for the key that was pressed\r\n        // and see if any of them match\r\n        for (i = 0; i < this._callbacks[character].length; ++i) {\r\n            callback = this._callbacks[character][i];\r\n\r\n            // if a sequence name is not specified, but this is a sequence at\r\n            // the wrong level then move onto the next match\r\n            if (!sequenceName && callback.seq && this._sequenceLevels[callback.seq] != callback.level) {\r\n                continue;\r\n            }\r\n\r\n            // if the action we are looking for doesn't match the action we got\r\n            // then we should keep going\r\n            if (action != callback.action) {\r\n                continue;\r\n            }\r\n\r\n            // if this is a keypress event and the meta key and control key\r\n            // are not pressed that means that we need to only look at the\r\n            // character, otherwise check the modifiers as well\r\n            //\r\n            // chrome will not fire a keypress if meta or control is down\r\n            // safari will fire a keypress if meta or meta+shift is down\r\n            // firefox will fire a keypress if meta or control is down\r\n            if ((action == 'keypress' && !e.metaKey && !e.ctrlKey) || _modifiersMatch(modifiers, callback.modifiers)) {\r\n\r\n                // when you bind a combination or sequence a second time it\r\n                // should overwrite the first one.  if a sequenceName or\r\n                // combination is specified in this call it does just that\r\n                //\r\n                // @todo make deleting its own method?\r\n                var deleteCombo = !sequenceName && callback.combo == combination;\r\n                var deleteSequence = sequenceName && callback.seq == sequenceName && callback.level == level;\r\n                if (deleteCombo || deleteSequence) {\r\n                    this._callbacks[character].splice(i, 1);\r\n                }\r\n\r\n                matches.push(callback);\r\n            }\r\n        }\r\n\r\n        return matches;\r\n    }\r\n\r\n    private _fireCallback(callback, e, combo, sequence?) {\r\n\r\n        // if this event should not happen stop here\r\n        if (this.stopCallback(e, e.target || e.srcElement)) {\r\n            return;\r\n        }\r\n\r\n        if (callback(e, combo) === false) {\r\n            _preventDefault(e);\r\n            _stopPropagation(e);\r\n        }\r\n    }\r\n\r\n    private _handleKey(character, modifiers, e) {\r\n        var callbacks = this._getMatches(character, modifiers, e);\r\n        var i;\r\n        var doNotReset = {};\r\n        var maxLevel = 0;\r\n        var processedSequenceCallback = false;\r\n\r\n        // Calculate the maxLevel for sequences so we can only execute the longest callback sequence\r\n        for (i = 0; i < callbacks.length; ++i) {\r\n            if (callbacks[i].seq) {\r\n                maxLevel = Math.max(maxLevel, callbacks[i].level);\r\n            }\r\n        }\r\n\r\n        // loop through matching callbacks for this key event\r\n        for (i = 0; i < callbacks.length; ++i) {\r\n\r\n            // fire for all sequence callbacks\r\n            // this is because if for example you have multiple sequences\r\n            // bound such as \"g i\" and \"g t\" they both need to fire the\r\n            // callback for matching g cause otherwise you can only ever\r\n            // match the first one\r\n            if (callbacks[i].seq) {\r\n\r\n                // only fire callbacks for the maxLevel to prevent\r\n                // subsequences from also firing\r\n                //\r\n                // for example 'a option b' should not cause 'option b' to fire\r\n                // even though 'option b' is part of the other sequence\r\n                //\r\n                // any sequences that do not match here will be discarded\r\n                // below by the _resetSequences call\r\n                if (callbacks[i].level != maxLevel) {\r\n                    continue;\r\n                }\r\n\r\n                processedSequenceCallback = true;\r\n\r\n                // keep a list of which sequences were matches for later\r\n                doNotReset[callbacks[i].seq] = 1;\r\n                this._fireCallback(callbacks[i].callback, e, callbacks[i].combo, callbacks[i].seq);\r\n                continue;\r\n            }\r\n\r\n            // if there were no sequence matches but we are still here\r\n            // that means this is a regular match so we should fire that\r\n            if (!processedSequenceCallback) {\r\n                this._fireCallback(callbacks[i].callback, e, callbacks[i].combo);\r\n            }\r\n        }\r\n\r\n        // if the key you pressed matches the type of sequence without\r\n        // being a modifier (ie \"keyup\" or \"keypress\") then we should\r\n        // reset all sequences that were not matched by this event\r\n        //\r\n        // this is so, for example, if you have the sequence \"h a t\" and you\r\n        // type \"h e a r t\" it does not match.  in this case the \"e\" will\r\n        // cause the sequence to reset\r\n        //\r\n        // modifier keys are ignored because you can have a sequence\r\n        // that contains modifiers such as \"enter ctrl+space\" and in most\r\n        // cases the modifier key will be pressed before the next key\r\n        //\r\n        // also if you have a sequence such as \"ctrl+b a\" then pressing the\r\n        // \"b\" key will trigger a \"keypress\" and a \"keydown\"\r\n        //\r\n        // the \"keydown\" is expected when there is a modifier, but the\r\n        // \"keypress\" ends up matching the _nextExpectedAction since it occurs\r\n        // after and that causes the sequence to reset\r\n        //\r\n        // we ignore keypresses in a sequence that directly follow a keydown\r\n        // for the same character\r\n        var ignoreThisKeypress = e.type == 'keypress' && this._ignoreNextKeypress;\r\n        if (e.type == this._nextExpectedAction && !_isModifier(character) && !ignoreThisKeypress) {\r\n            this._resetSequences(doNotReset);\r\n        }\r\n\r\n        this._ignoreNextKeypress = processedSequenceCallback && e.type == 'keydown';\r\n    }\r\n\r\n    private _handleKeyEvent(e) {\r\n        // normalize e.which for key events\r\n        // @see http://stackoverflow.com/questions/4285627/javascript-keycode-vs-charcode-utter-confusion\r\n        if (typeof e.which !== 'number') {\r\n            e.which = e.keyCode;\r\n        }\r\n\r\n        var character = _characterFromEvent(e);\r\n\r\n        // no character found then stop\r\n        if (!character) {\r\n            return;\r\n        }\r\n\r\n        // need to use === for the character check because the character can be 0\r\n        if (e.type == 'keyup' && this._ignoreNextKeyup === character) {\r\n            this._ignoreNextKeyup = false;\r\n            return;\r\n        }\r\n\r\n        this.handleKey(character, _eventModifiers(e), e);\r\n    }\r\n\r\n\r\n    private _resetSequenceTimer() {\r\n        clearTimeout(this._resetTimer);\r\n        this._resetTimer = setTimeout(() => this._resetSequences, 1000);\r\n    }\r\n\r\n    private _bindSequence(combo, keys, callback, action) {\r\n\r\n        // start off by adding a sequence level record for this combination\r\n        // and setting the level to 0\r\n        this._sequenceLevels[combo] = 0;\r\n\r\n        /**\r\n         * callback to increase the sequence level for this sequence and reset\r\n         * all other sequences that were active\r\n         *\r\n         * @param {string} nextAction\r\n         * @returns {Function}\r\n         */\r\n        var _increaseSequence = (nextAction) => {\r\n            return function() {\r\n                this._nextExpectedAction = nextAction;\r\n                ++this._sequenceLevels[combo];\r\n                this._resetSequenceTimer();\r\n            };\r\n        }\r\n\r\n        /**\r\n         * wraps the specified callback inside of another function in order\r\n         * to reset all sequence counters as soon as this sequence is done\r\n         *\r\n         * @param {Event} e\r\n         * @returns void\r\n         */\r\n        var _callbackAndReset = (e) => {\r\n            this._fireCallback(callback, e, combo);\r\n\r\n            // we should ignore the next key up if the action is key down\r\n            // or keypress.  this is so if you finish a sequence and\r\n            // release the key the final key will not trigger a keyup\r\n            if (action !== 'keyup') {\r\n                this._ignoreNextKeyup = _characterFromEvent(e);\r\n            }\r\n\r\n            // weird race condition if a sequence ends with the key\r\n            // another sequence begins with\r\n            setTimeout(() => this._resetSequences, 10);\r\n        }\r\n\r\n        // loop through keys one at a time and bind the appropriate callback\r\n        // function.  for any key leading up to the final one it should\r\n        // increase the sequence. after the final, it should reset all sequences\r\n        //\r\n        // if an action is specified in the original bind call then that will\r\n        // be used throughout.  otherwise we will pass the action that the\r\n        // next key in the sequence should match.  this allows a sequence\r\n        // to mix and match keypress and keydown events depending on which\r\n        // ones are better suited to the key provided\r\n        for (var i = 0; i < keys.length; ++i) {\r\n            var isFinal = i + 1 === keys.length;\r\n            var wrappedCallback = isFinal ? _callbackAndReset : _increaseSequence(action || _getKeyInfo(keys[i + 1]).action);\r\n            this._bindSingle(keys[i], wrappedCallback, action, combo, i);\r\n        }\r\n    }\r\n\r\n    private _bindSingle(combination, callback, action, sequenceName?, level?) {\r\n\r\n        // store a direct mapped reference for use with Mousetrap.trigger\r\n        this._directMap[combination + ':' + action] = callback;\r\n\r\n        // make sure multiple spaces in a row become a single space\r\n        combination = combination.replace(/\\s+/g, ' ');\r\n\r\n        var sequence = combination.split(' ');\r\n        var info;\r\n\r\n        // if this pattern is a sequence of keys then run through this method\r\n        // to reprocess each pattern one key at a time\r\n        if (sequence.length > 1) {\r\n            this._bindSequence(combination, sequence, callback, action);\r\n            return;\r\n        }\r\n\r\n        info = _getKeyInfo(combination, action);\r\n\r\n        // make sure to initialize array if this is the first time\r\n        // a callback is added for this key\r\n        this._callbacks[info.key] = this._callbacks[info.key] || [];\r\n\r\n        // remove an existing match if there is one\r\n        this._getMatches(info.key, info.modifiers, { type: info.action }, sequenceName, combination, level);\r\n\r\n        // add this call back to the array\r\n        // if it is a sequence put it at the beginning\r\n        // if not put it at the end\r\n        //\r\n        // this is important because the way these are processed expects\r\n        // the sequence ones to come first\r\n        this._callbacks[info.key][sequenceName ? 'unshift' : 'push']({\r\n            callback: callback,\r\n            modifiers: info.modifiers,\r\n            action: info.action,\r\n            seq: sequenceName,\r\n            level: level,\r\n            combo: combination\r\n        });\r\n    }\r\n\r\n    private _bindMultiple(combinations, callback, action) {\r\n        for (var i = 0; i < combinations.length; ++i) {\r\n            this._bindSingle(combinations[i], callback, action);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * binds an event to mousetrap\r\n     *\r\n     * can be a single key, a combination of keys separated with +,\r\n     * an array of keys, or a sequence of keys separated by spaces\r\n     *\r\n     * be sure to list the modifier keys first to make sure that the\r\n     * correct key ends up getting bound (the last key in the pattern)\r\n     *\r\n     * @param {string|Array} keys\r\n     * @param {Function} callback\r\n     * @param {string=} action - 'keypress', 'keydown', or 'keyup'\r\n     * @returns void\r\n     */\r\n    public bind(keys, callback: (e: KeyboardEvent) => void, action?) {\r\n        var self = this;\r\n        keys = keys instanceof Array ? keys : [keys];\r\n        self._bindMultiple.call(self, keys, callback, action);\r\n        return self;\r\n    }\r\n\r\n    /**\r\n     * unbinds an event to mousetrap\r\n     *\r\n     * the unbinding sets the callback function of the specified key combo\r\n     * to an empty function and deletes the corresponding key in the\r\n     * _directMap dict.\r\n     *\r\n     * TODO: actually remove this from the _callbacks dictionary instead\r\n     * of binding an empty function\r\n     *\r\n     * the keycombo+action has to be exactly the same as\r\n     * it was defined in the bind method\r\n     *\r\n     * @param {string|Array} keys\r\n     * @param {string} action\r\n     * @returns void\r\n     */\r\n    public unbind(keys, action) {\r\n        var self = this;\r\n        return self.bind.call(self, keys, function() { }, action);\r\n    }\r\n    /**\r\n     * triggers an event that has already been bound\r\n     *\r\n     * @param {string} keys\r\n     * @param {string=} action\r\n     * @returns void\r\n     */\r\n    public trigger(keys, action) {\r\n        var self = this;\r\n        if (self._directMap[keys + ':' + action]) {\r\n            self._directMap[keys + ':' + action]({}, keys);\r\n        }\r\n        return self;\r\n    }\r\n\r\n\r\n    /**\r\n     * resets the library back to its initial state.  this is useful\r\n     * if you want to clear out the current keyboard shortcuts and bind\r\n     * new ones - for example if you switch to another page\r\n     *\r\n     * @returns void\r\n     */\r\n    public reset() {\r\n        var self = this;\r\n        self._callbacks = {};\r\n        self._directMap = {};\r\n        return self;\r\n    }\r\n\r\n    /**\r\n     * should we stop this event before firing off callbacks\r\n     *\r\n     * @param {Event} e\r\n     * @param {Element} element\r\n     * @return {boolean}\r\n     */\r\n    public stopCallback(e, element, combo?, sequence?) {\r\n        var self = this;\r\n\r\n        if (self.paused) {\r\n            return true;\r\n        }\r\n\r\n        if (this._globalCallbacks[combo] || this._globalCallbacks[sequence]) {\r\n            return false;\r\n        }\r\n\r\n\r\n        // if the element has the class \"mousetrap\" then no need to stop\r\n        if ((' ' + element.className + ' ').indexOf(' mousetrap ') > -1) {\r\n            return false;\r\n        }\r\n\r\n        if (_belongsTo(element, self.target)) {\r\n            return false;\r\n        }\r\n\r\n        // stop for input, select, and textarea\r\n        return element.tagName == 'INPUT' || element.tagName == 'SELECT' || element.tagName == 'TEXTAREA' || element.isContentEditable;\r\n    }\r\n\r\n    public bindGlobal(keys, callback, action) {\r\n        this.bind(keys, callback, action);\r\n\r\n        if (keys instanceof Array) {\r\n            for (var i = 0; i < keys.length; i++) {\r\n                this._globalCallbacks[keys[i]] = true;\r\n            }\r\n            return;\r\n        }\r\n\r\n        this._globalCallbacks[keys] = true;\r\n    }\r\n\r\n    public handleKey(character, modifiers, e) {\r\n        return this._handleKey.apply(this, arguments);\r\n    }\r\n\r\n    public dispose() {\r\n        this.reset();\r\n    }\r\n\r\n    public pause() {\r\n        this.paused = true;\r\n    }\r\n\r\n    public unpause() {\r\n        this.paused = false;\r\n    }\r\n\r\n    private _globalCallbacks = {};\r\n\r\n    private paused: boolean = false;\r\n}\r\n","\r\nexport class SimpleEvent implements ISimpleEventBase {\r\n    private _idx: number = 0;\r\n\r\n\r\n    private _key: string = Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n\r\n\r\n    private subscribers: Function[] = [];\r\n\r\n\r\n\r\n    /** function that gets called in the event that an error is thrown\r\n     * return true to stop calling other subscribers\r\n     */\r\n    public onError: (e) => boolean = () => false;\r\n\r\n    /** adds new subscriber\r\n     *  @returns refrence number used to remove subscriber */\r\n    on(fn: Function): number {\r\n        fn[this._key] = ++this._idx;\r\n        this.subscribers.push(fn);\r\n        return fn[this._key];\r\n    }\r\n\r\n    /** Triggers the event */\r\n    trigger(): SimpleEvent;\r\n    trigger(...args: any[]): SimpleEvent;\r\n    trigger(...args: any[]): SimpleEvent {\r\n        for (var f of this.subscribers) {\r\n            try {\r\n                f.apply({}, args);\r\n            }\r\n            catch (e) {\r\n                if (this.onError(e))\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    clear(): SimpleEvent {\r\n        this.subscribers = [];\r\n        return this;\r\n    }\r\n\r\n\r\n    off(id: number);\r\n    off(fn: Function);\r\n    off(arg) {\r\n        var id = 0;\r\n\r\n        if (typeof arg === 'number') {\r\n            id = arg;\r\n        } else if (typeof arg === 'Function') {\r\n            id = arg[this._key];\r\n        } else {\r\n            throw \"SimpleEvent.off: Function Identifier not found\";\r\n        }\r\n\r\n        this.subscribers = this.subscribers.filter(fn=> fn[this._key] !== id);\r\n\r\n    }\r\n\r\n\r\n\r\n    count(): number {\r\n        return this.subscribers.length;\r\n    }\r\n\r\n\r\n    dispose() { this.clear(); }\r\n\r\n\r\n    static New(): SimpleEvent;\r\n    static New<T>(): ISimpleEvent1<T>;\r\n    static New<T1, T2>(): ISimpleEvent2<T1, T2>;\r\n    static New<T1, T2, T3>(): ISimpleEvent3<T1, T2, T3>;\r\n    static New() { return new SimpleEvent(); }\r\n}\r\n\r\nexport interface ISimpleEventBase {\r\n\r\n    off(id: number);\r\n    off(fn: Function);\r\n\r\n    count(): number;\r\n    trigger(): SimpleEvent;\r\n    dispose();\r\n    clear();\r\n}\r\n\r\nexport interface ISimpleEvent1<T> extends ISimpleEventBase {\r\n    on(fn: (e: T) => void): number;\r\n    trigger(): SimpleEvent;\r\n    trigger(data: T): SimpleEvent;\r\n}\r\n\r\nexport interface ISimpleEvent2<T1, T2> extends ISimpleEventBase {\r\n    on(fn: (e: T1, e2: T2) => void): number;\r\n    trigger(): SimpleEvent;\r\n    trigger(data: T1, a2: T2): SimpleEvent;\r\n}\r\n\r\nexport interface ISimpleEvent3<T1, T2, T3> extends ISimpleEventBase {\r\n    on(fn: (e: T1, e2: T2, e3: T3) => void): number;\r\n    trigger(): SimpleEvent;\r\n    trigger(data: T1, a2: T2, a3: T3): SimpleEvent;\r\n}\r\n","import {Guitar} from './Guitar';\r\nimport {GuitarStrum} from './GuitarStrum';\r\n\r\nexport module WellKnownChords {\r\n\r\n    let standardGuitar = Guitar.GetNormalGuitar();\r\n\r\n\r\n    let s = (y) =>  standardGuitar.getStrum(y);\r\n    let x = undefined;\r\n\r\n    export var D = s([2, 3, 2, 0, x, x]);\r\n    export var A = s([0, 2, 2, 2, 0, x]);\r\n    export var C = s([0, 1, 0, 2, 3, x]);\r\n    export var E = s([0, 0, 1, 2, 2, 0]);\r\n}\r\n"],"sourceRoot":"/source/"}